!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon4
ALT	kern/console.c	223;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
C	kern/console.c	290;"	d	file:
CAPSLOCK	kern/console.c	225;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	14;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COLOR_BLK	kern/monitor.c	16;"	d	file:
COLOR_BLU	kern/monitor.c	17;"	d	file:
COLOR_CYN	kern/monitor.c	24;"	d	file:
COLOR_GRN	kern/monitor.c	18;"	d	file:
COLOR_GRY	kern/monitor.c	20;"	d	file:
COLOR_ORG	kern/monitor.c	22;"	d	file:
COLOR_PUR	kern/monitor.c	23;"	d	file:
COLOR_RED	kern/monitor.c	19;"	d	file:
COLOR_WHT	kern/monitor.c	15;"	d	file:
COLOR_YLW	kern/monitor.c	21;"	d	file:
COM1	kern/console.c	26;"	d	file:
COM_DLL	kern/console.c	30;"	d	file:
COM_DLM	kern/console.c	31;"	d	file:
COM_FCR	kern/console.c	35;"	d	file:
COM_IER	kern/console.c	32;"	d	file:
COM_IER_RDI	kern/console.c	33;"	d	file:
COM_IIR	kern/console.c	34;"	d	file:
COM_LCR	kern/console.c	36;"	d	file:
COM_LCR_DLAB	kern/console.c	37;"	d	file:
COM_LCR_WLEN8	kern/console.c	38;"	d	file:
COM_LSR	kern/console.c	43;"	d	file:
COM_LSR_DATA	kern/console.c	44;"	d	file:
COM_LSR_TSRE	kern/console.c	46;"	d	file:
COM_LSR_TXRDY	kern/console.c	45;"	d	file:
COM_MCR	kern/console.c	39;"	d	file:
COM_MCR_DTR	kern/console.c	41;"	d	file:
COM_MCR_OUT2	kern/console.c	42;"	d	file:
COM_MCR_RTS	kern/console.c	40;"	d	file:
COM_RX	kern/console.c	28;"	d	file:
COM_TX	kern/console.c	29;"	d	file:
CONSBUFSIZE	kern/console.c	386;"	d	file:
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	222;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	229;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c	inherits:object
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_RTC	kern/kclock.h	9;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	37;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=2$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	154;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	39;"	d	file:
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	219;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	226;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OptionParser	gradelib.py	/^from optparse import OptionParser$/;"	i
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Fri Sep 14 16:34:02 EDT 2012$/;"	m
PADDR	kern/pmap.h	25;"	d
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
PageInfo::pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
PageInfo::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
Popen	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c	inherits:object
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c	inherits:
SCROLLLOCK	kern/console.c	227;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	221;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TESTS	gradelib.py	/^TESTS = []$/;"	v
TOP	GNUmakefile	/^TOP = .$/;"	m
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c	inherits:Exception
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
V	conf/env.mk	/^V = @$/;"	m
WHITESPACE	kern/monitor.c	153;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon3::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon3	file:	access:public
__anon3::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon3	file:	access:public
__anon3::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon3	file:	access:public
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner	access:public
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU	access:public
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient	access:public
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:	access:private
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:	access:private
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:	access:private
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:	access:private
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f	access:public
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f	access:public
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	access:public
attribute_color	kern/console.h	/^static uint16_t attribute_color = 0x0700;$/;"	v
attribute_color	obj/kern/kernel.asm	/^	attribute_color = (back << 12) | (fore << 8);$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:	signature:(uint32_t n)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^static void boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient	access:public
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon3	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = c + attribute_color;$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f	access:public
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_call	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^static void check_kern_pgdir(void);$/;"	p	file:	signature:(void)
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:	signature:(void)
check_page	kern/pmap.c	/^static void check_page(void);$/;"	p	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^static void check_page_alloc(void);$/;"	p	file:	signature:(void)
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:	signature:(bool only_low_memory)
check_page_free_list	kern/pmap.c	/^static void check_page_free_list(bool only_low_memory);$/;"	p	file:	signature:(bool only_low_memory)
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:	signature:(void)
check_page_installed_pgdir	kern/pmap.c	/^static void check_page_installed_pgdir(void);$/;"	p	file:	signature:(void)
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va)
check_va2pa	kern/pmap.c	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va)
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f	access:public
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon3	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient	access:public
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t*) read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eip	obj/kern/kernel.asm	/^	eip = (uint32_t*) ebp[1];$/;"	d
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
errno	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 10 11 00       	mov    $0x111000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 10 11 f0       	mov    $0xf0111000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <i386_init>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100046	obj/kern/kernel.asm	/^f0100046:	b8 70 39 11 f0       	mov    $0xf0113970,%eax$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	2d 20 33 11 f0       	sub    $0xf0113320,%eax$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	00 $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	c7 04 24 20 33 11 f0 	movl   $0xf0113320,(%esp)$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	e8 09 19 00 00       	call   f0101971 <memset>$/;"	l
f0100068	obj/kern/kernel.asm	/^f0100068:	e8 97 04 00 00       	call   f0100504 <cons_init>$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100074	obj/kern/kernel.asm	/^f0100074:	00 $/;"	l
f0100075	obj/kern/kernel.asm	/^f0100075:	c7 04 24 80 1e 10 f0 	movl   $0xf0101e80,(%esp)$/;"	l
f010007c	obj/kern/kernel.asm	/^f010007c:	e8 39 0d 00 00       	call   f0100dba <cprintf>$/;"	l
f0100081	obj/kern/kernel.asm	/^f0100081:	e8 81 0b 00 00       	call   f0100c07 <mem_init>$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010008d	obj/kern/kernel.asm	/^f010008d:	e8 10 0a 00 00       	call   f0100aa2 <monitor>$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	eb f2                	jmp    f0100086 <i386_init+0x46>$/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094 <_panic>:$/;"	l
f0100094	obj/kern/kernel.asm	/^f0100094:	55                   	push   %ebp$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	89 e5                	mov    %esp,%ebp$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	56                   	push   %esi$/;"	l
f0100098	obj/kern/kernel.asm	/^f0100098:	53                   	push   %ebx$/;"	l
f0100099	obj/kern/kernel.asm	/^f0100099:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010009c	obj/kern/kernel.asm	/^f010009c:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	83 3d 60 39 11 f0 00 	cmpl   $0x0,0xf0113960$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	75 3d                	jne    f01000e5 <_panic+0x51>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	89 35 60 39 11 f0    	mov    %esi,0xf0113960$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	fa                   	cli    $/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	fc                   	cld    $/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01000b6	obj/kern/kernel.asm	/^f01000b6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000c1	obj/kern/kernel.asm	/^f01000c1:	c7 04 24 9b 1e 10 f0 	movl   $0xf0101e9b,(%esp)$/;"	l
f01000c8	obj/kern/kernel.asm	/^f01000c8:	e8 ed 0c 00 00       	call   f0100dba <cprintf>$/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01000d4	obj/kern/kernel.asm	/^f01000d4:	e8 ae 0c 00 00       	call   f0100d87 <vcprintf>$/;"	l
f01000d9	obj/kern/kernel.asm	/^f01000d9:	c7 04 24 d7 1e 10 f0 	movl   $0xf0101ed7,(%esp)$/;"	l
f01000e0	obj/kern/kernel.asm	/^f01000e0:	e8 d5 0c 00 00       	call   f0100dba <cprintf>$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000ec	obj/kern/kernel.asm	/^f01000ec:	e8 b1 09 00 00       	call   f0100aa2 <monitor>$/;"	l
f01000f1	obj/kern/kernel.asm	/^f01000f1:	eb f2                	jmp    f01000e5 <_panic+0x51>$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3 <_warn>:$/;"	l
f01000f3	obj/kern/kernel.asm	/^f01000f3:	55                   	push   %ebp$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	89 e5                	mov    %esp,%ebp$/;"	l
f01000f6	obj/kern/kernel.asm	/^f01000f6:	53                   	push   %ebx$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100104	obj/kern/kernel.asm	/^f0100104:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100107	obj/kern/kernel.asm	/^f0100107:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	c7 04 24 b3 1e 10 f0 	movl   $0xf0101eb3,(%esp)$/;"	l
f0100112	obj/kern/kernel.asm	/^f0100112:	e8 a3 0c 00 00       	call   f0100dba <cprintf>$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010011b	obj/kern/kernel.asm	/^f010011b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010011e	obj/kern/kernel.asm	/^f010011e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	e8 61 0c 00 00       	call   f0100d87 <vcprintf>$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	c7 04 24 d7 1e 10 f0 	movl   $0xf0101ed7,(%esp)$/;"	l
f010012d	obj/kern/kernel.asm	/^f010012d:	e8 88 0c 00 00       	call   f0100dba <cprintf>$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	5b                   	pop    %ebx$/;"	l
f0100136	obj/kern/kernel.asm	/^f0100136:	5d                   	pop    %ebp$/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	c3                   	ret    $/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140 <delay>:$/;"	l
f0100140	obj/kern/kernel.asm	/^f0100140:	55                   	push   %ebp$/;"	l
f0100141	obj/kern/kernel.asm	/^f0100141:	89 e5                	mov    %esp,%ebp$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	ec                   	in     (%dx),%al$/;"	l
f0100149	obj/kern/kernel.asm	/^f0100149:	ec                   	in     (%dx),%al$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	ec                   	in     (%dx),%al$/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	ec                   	in     (%dx),%al$/;"	l
f010014c	obj/kern/kernel.asm	/^f010014c:	5d                   	pop    %ebp$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	c3                   	ret    $/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e <serial_proc_data>:$/;"	l
f010014e	obj/kern/kernel.asm	/^f010014e:	55                   	push   %ebp$/;"	l
f010014f	obj/kern/kernel.asm	/^f010014f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100156	obj/kern/kernel.asm	/^f0100156:	ec                   	in     (%dx),%al$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	a8 01                	test   $0x1,%al$/;"	l
f010015e	obj/kern/kernel.asm	/^f010015e:	74 06                	je     f0100166 <serial_proc_data+0x18>$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	b2 f8                	mov    $0xf8,%dl$/;"	l
f0100162	obj/kern/kernel.asm	/^f0100162:	ec                   	in     (%dx),%al$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	89 c8                	mov    %ecx,%eax$/;"	l
f0100168	obj/kern/kernel.asm	/^f0100168:	5d                   	pop    %ebp$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	c3                   	ret    $/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a <cons_intr>:$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	55                   	push   %ebp$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	89 e5                	mov    %esp,%ebp$/;"	l
f010016d	obj/kern/kernel.asm	/^f010016d:	53                   	push   %ebx$/;"	l
f010016e	obj/kern/kernel.asm	/^f010016e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100171	obj/kern/kernel.asm	/^f0100171:	89 c3                	mov    %eax,%ebx$/;"	l
f0100173	obj/kern/kernel.asm	/^f0100173:	eb 25                	jmp    f010019a <cons_intr+0x30>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	85 c0                	test   %eax,%eax$/;"	l
f0100177	obj/kern/kernel.asm	/^f0100177:	74 21                	je     f010019a <cons_intr+0x30>$/;"	l
f0100179	obj/kern/kernel.asm	/^f0100179:	8b 15 44 35 11 f0    	mov    0xf0113544,%edx$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	88 82 40 33 11 f0    	mov    %al,-0xfeeccc0(%edx)$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0100188	obj/kern/kernel.asm	/^f0100188:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100195	obj/kern/kernel.asm	/^f0100195:	a3 44 35 11 f0       	mov    %eax,0xf0113544$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	ff d3                	call   *%ebx$/;"	l
f010019c	obj/kern/kernel.asm	/^f010019c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010019f	obj/kern/kernel.asm	/^f010019f:	75 d4                	jne    f0100175 <cons_intr+0xb>$/;"	l
f01001a1	obj/kern/kernel.asm	/^f01001a1:	83 c4 04             	add    $0x4,%esp$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	5b                   	pop    %ebx$/;"	l
f01001a5	obj/kern/kernel.asm	/^f01001a5:	5d                   	pop    %ebp$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	c3                   	ret    $/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7 <cons_putc>:$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	55                   	push   %ebp$/;"	l
f01001a8	obj/kern/kernel.asm	/^f01001a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01001aa	obj/kern/kernel.asm	/^f01001aa:	57                   	push   %edi$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	56                   	push   %esi$/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	53                   	push   %ebx$/;"	l
f01001ad	obj/kern/kernel.asm	/^f01001ad:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01001b0	obj/kern/kernel.asm	/^f01001b0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01001b8	obj/kern/kernel.asm	/^f01001b8:	ec                   	in     (%dx),%al$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	a8 20                	test   $0x20,%al$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	75 1b                	jne    f01001d8 <cons_putc+0x31>$/;"	l
f01001bd	obj/kern/kernel.asm	/^f01001bd:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f01001c2	obj/kern/kernel.asm	/^f01001c2:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f01001c7	obj/kern/kernel.asm	/^f01001c7:	e8 74 ff ff ff       	call   f0100140 <delay>$/;"	l
f01001cc	obj/kern/kernel.asm	/^f01001cc:	89 f2                	mov    %esi,%edx$/;"	l
f01001ce	obj/kern/kernel.asm	/^f01001ce:	ec                   	in     (%dx),%al$/;"	l
f01001cf	obj/kern/kernel.asm	/^f01001cf:	a8 20                	test   $0x20,%al$/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	75 05                	jne    f01001d8 <cons_putc+0x31>$/;"	l
f01001d3	obj/kern/kernel.asm	/^f01001d3:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	75 ef                	jne    f01001c7 <cons_putc+0x20>$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	0f b6 7d e4          	movzbl -0x1c(%ebp),%edi$/;"	l
f01001dc	obj/kern/kernel.asm	/^f01001dc:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f01001e1	obj/kern/kernel.asm	/^f01001e1:	89 f8                	mov    %edi,%eax$/;"	l
f01001e3	obj/kern/kernel.asm	/^f01001e3:	ee                   	out    %al,(%dx)$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	b2 79                	mov    $0x79,%dl$/;"	l
f01001e6	obj/kern/kernel.asm	/^f01001e6:	ec                   	in     (%dx),%al$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	84 c0                	test   %al,%al$/;"	l
f01001e9	obj/kern/kernel.asm	/^f01001e9:	78 1b                	js     f0100206 <cons_putc+0x5f>$/;"	l
f01001eb	obj/kern/kernel.asm	/^f01001eb:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	e8 46 ff ff ff       	call   f0100140 <delay>$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	89 f2                	mov    %esi,%edx$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	ec                   	in     (%dx),%al$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	84 c0                	test   %al,%al$/;"	l
f01001ff	obj/kern/kernel.asm	/^f01001ff:	78 05                	js     f0100206 <cons_putc+0x5f>$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100204	obj/kern/kernel.asm	/^f0100204:	75 ef                	jne    f01001f5 <cons_putc+0x4e>$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	89 f8                	mov    %edi,%eax$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	ee                   	out    %al,(%dx)$/;"	l
f010020e	obj/kern/kernel.asm	/^f010020e:	b2 7a                	mov    $0x7a,%dl$/;"	l
f0100210	obj/kern/kernel.asm	/^f0100210:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	ee                   	out    %al,(%dx)$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f010021b	obj/kern/kernel.asm	/^f010021b:	ee                   	out    %al,(%dx)$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	0f b7 15 00 30 11 f0 	movzwl 0xf0113000,%edx$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	03 55 e4             	add    -0x1c(%ebp),%edx$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	74 77                	je     f01002a5 <cons_putc+0xfe>$/;"	l
f010022e	obj/kern/kernel.asm	/^f010022e:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	7f 0f                	jg     f0100242 <cons_putc+0x9b>$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	0f 85 9d 00 00 00    	jne    f01002d9 <cons_putc+0x132>$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0100240	obj/kern/kernel.asm	/^f0100240:	eb 10                	jmp    f0100252 <cons_putc+0xab>$/;"	l
f0100242	obj/kern/kernel.asm	/^f0100242:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	74 38                	je     f010027f <cons_putc+0xd8>$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	0f 85 89 00 00 00    	jne    f01002d9 <cons_putc+0x132>$/;"	l
f0100250	obj/kern/kernel.asm	/^f0100250:	eb 35                	jmp    f0100287 <cons_putc+0xe0>$/;"	l
f0100252	obj/kern/kernel.asm	/^f0100252:	0f b7 05 54 35 11 f0 	movzwl 0xf0113554,%eax$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	66 85 c0             	test   %ax,%ax$/;"	l
f010025c	obj/kern/kernel.asm	/^f010025c:	0f 84 e1 00 00 00    	je     f0100343 <cons_putc+0x19c>$/;"	l
f0100262	obj/kern/kernel.asm	/^f0100262:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100265	obj/kern/kernel.asm	/^f0100265:	66 a3 54 35 11 f0    	mov    %ax,0xf0113554$/;"	l
f010026b	obj/kern/kernel.asm	/^f010026b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	b2 00                	mov    $0x0,%dl$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	83 ca 20             	or     $0x20,%edx$/;"	l
f0100273	obj/kern/kernel.asm	/^f0100273:	8b 0d 50 35 11 f0    	mov    0xf0113550,%ecx$/;"	l
f0100279	obj/kern/kernel.asm	/^f0100279:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)$/;"	l
f010027d	obj/kern/kernel.asm	/^f010027d:	eb 77                	jmp    f01002f6 <cons_putc+0x14f>$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	66 83 05 54 35 11 f0 	addw   $0x50,0xf0113554$/;"	l
f0100286	obj/kern/kernel.asm	/^f0100286:	50 $/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	0f b7 05 54 35 11 f0 	movzwl 0xf0113554,%eax$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010029a	obj/kern/kernel.asm	/^f010029a:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010029d	obj/kern/kernel.asm	/^f010029d:	66 a3 54 35 11 f0    	mov    %ax,0xf0113554$/;"	l
f01002a3	obj/kern/kernel.asm	/^f01002a3:	eb 51                	jmp    f01002f6 <cons_putc+0x14f>$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002aa	obj/kern/kernel.asm	/^f01002aa:	e8 f8 fe ff ff       	call   f01001a7 <cons_putc>$/;"	l
f01002af	obj/kern/kernel.asm	/^f01002af:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	e8 ee fe ff ff       	call   f01001a7 <cons_putc>$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002be	obj/kern/kernel.asm	/^f01002be:	e8 e4 fe ff ff       	call   f01001a7 <cons_putc>$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	e8 da fe ff ff       	call   f01001a7 <cons_putc>$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01002d2	obj/kern/kernel.asm	/^f01002d2:	e8 d0 fe ff ff       	call   f01001a7 <cons_putc>$/;"	l
f01002d7	obj/kern/kernel.asm	/^f01002d7:	eb 1d                	jmp    f01002f6 <cons_putc+0x14f>$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	0f b7 05 54 35 11 f0 	movzwl 0xf0113554,%eax$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	0f b7 d8             	movzwl %ax,%ebx$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	8b 0d 50 35 11 f0    	mov    0xf0113550,%ecx$/;"	l
f01002e9	obj/kern/kernel.asm	/^f01002e9:	66 89 14 59          	mov    %dx,(%ecx,%ebx,2)$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	83 c0 01             	add    $0x1,%eax$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	66 a3 54 35 11 f0    	mov    %ax,0xf0113554$/;"	l
f01002f6	obj/kern/kernel.asm	/^f01002f6:	66 81 3d 54 35 11 f0 	cmpw   $0x7cf,0xf0113554$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	cf 07 $/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	76 42                	jbe    f0100343 <cons_putc+0x19c>$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	a1 50 35 11 f0       	mov    0xf0113550,%eax$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	00 $/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f0100314	obj/kern/kernel.asm	/^f0100314:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	e8 ac 16 00 00       	call   f01019cc <memmove>$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	8b 15 50 35 11 f0    	mov    0xf0113550,%edx$/;"	l
f0100326	obj/kern/kernel.asm	/^f0100326:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f010032b	obj/kern/kernel.asm	/^f010032b:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	75 f0                	jne    f010032b <cons_putc+0x184>$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	66 83 2d 54 35 11 f0 	subw   $0x50,0xf0113554$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	50 $/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	8b 0d 4c 35 11 f0    	mov    0xf011354c,%ecx$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	89 ca                	mov    %ecx,%edx$/;"	l
f0100350	obj/kern/kernel.asm	/^f0100350:	ee                   	out    %al,(%dx)$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	0f b7 35 54 35 11 f0 	movzwl 0xf0113554,%esi$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f010035b	obj/kern/kernel.asm	/^f010035b:	89 f0                	mov    %esi,%eax$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	89 da                	mov    %ebx,%edx$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	ee                   	out    %al,(%dx)$/;"	l
f0100364	obj/kern/kernel.asm	/^f0100364:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	89 ca                	mov    %ecx,%edx$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	ee                   	out    %al,(%dx)$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	89 f0                	mov    %esi,%eax$/;"	l
f010036e	obj/kern/kernel.asm	/^f010036e:	89 da                	mov    %ebx,%edx$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	ee                   	out    %al,(%dx)$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	5b                   	pop    %ebx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	5e                   	pop    %esi$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	5f                   	pop    %edi$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	5d                   	pop    %ebp$/;"	l
f0100378	obj/kern/kernel.asm	/^f0100378:	c3                   	ret    $/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379 <kbd_proc_data>:$/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379:	55                   	push   %ebp$/;"	l
f010037a	obj/kern/kernel.asm	/^f010037a:	89 e5                	mov    %esp,%ebp$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	53                   	push   %ebx$/;"	l
f010037d	obj/kern/kernel.asm	/^f010037d:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	ec                   	in     (%dx),%al$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f010038b	obj/kern/kernel.asm	/^f010038b:	a8 01                	test   $0x1,%al$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	0f 84 de 00 00 00    	je     f0100471 <kbd_proc_data+0xf8>$/;"	l
f0100393	obj/kern/kernel.asm	/^f0100393:	b2 60                	mov    $0x60,%dl$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	ec                   	in     (%dx),%al$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	89 c2                	mov    %eax,%edx$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	3c e0                	cmp    $0xe0,%al$/;"	l
f010039a	obj/kern/kernel.asm	/^f010039a:	75 11                	jne    f01003ad <kbd_proc_data+0x34>$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	83 0d 48 35 11 f0 40 	orl    $0x40,0xf0113548$/;"	l
f01003a3	obj/kern/kernel.asm	/^f01003a3:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	e9 c4 00 00 00       	jmp    f0100471 <kbd_proc_data+0xf8>$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	84 c0                	test   %al,%al$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	79 37                	jns    f01003e8 <kbd_proc_data+0x6f>$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	8b 0d 48 35 11 f0    	mov    0xf0113548,%ecx$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	89 cb                	mov    %ecx,%ebx$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	83 e3 40             	and    $0x40,%ebx$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	85 db                	test   %ebx,%ebx$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f01003c4	obj/kern/kernel.asm	/^f01003c4:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003c7	obj/kern/kernel.asm	/^f01003c7:	0f b6 82 00 1f 10 f0 	movzbl -0xfefe100(%edx),%eax$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	83 c8 40             	or     $0x40,%eax$/;"	l
f01003d1	obj/kern/kernel.asm	/^f01003d1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003d4	obj/kern/kernel.asm	/^f01003d4:	f7 d0                	not    %eax$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	21 c1                	and    %eax,%ecx$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	89 0d 48 35 11 f0    	mov    %ecx,0xf0113548$/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	e9 89 00 00 00       	jmp    f0100471 <kbd_proc_data+0xf8>$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	8b 0d 48 35 11 f0    	mov    0xf0113548,%ecx$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	74 0e                	je     f0100401 <kbd_proc_data+0x88>$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	89 c2                	mov    %eax,%edx$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	89 0d 48 35 11 f0    	mov    %ecx,0xf0113548$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100404	obj/kern/kernel.asm	/^f0100404:	0f b6 82 00 1f 10 f0 	movzbl -0xfefe100(%edx),%eax$/;"	l
f010040b	obj/kern/kernel.asm	/^f010040b:	0b 05 48 35 11 f0    	or     0xf0113548,%eax$/;"	l
f0100411	obj/kern/kernel.asm	/^f0100411:	0f b6 8a 00 20 10 f0 	movzbl -0xfefe000(%edx),%ecx$/;"	l
f0100418	obj/kern/kernel.asm	/^f0100418:	31 c8                	xor    %ecx,%eax$/;"	l
f010041a	obj/kern/kernel.asm	/^f010041a:	a3 48 35 11 f0       	mov    %eax,0xf0113548$/;"	l
f010041f	obj/kern/kernel.asm	/^f010041f:	89 c1                	mov    %eax,%ecx$/;"	l
f0100421	obj/kern/kernel.asm	/^f0100421:	83 e1 03             	and    $0x3,%ecx$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	8b 0c 8d 00 21 10 f0 	mov    -0xfefdf00(,%ecx,4),%ecx$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	a8 08                	test   $0x8,%al$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	74 19                	je     f010044c <kbd_proc_data+0xd3>$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	77 05                	ja     f0100440 <kbd_proc_data+0xc7>$/;"	l
f010043b	obj/kern/kernel.asm	/^f010043b:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	eb 0c                	jmp    f010044c <kbd_proc_data+0xd3>$/;"	l
f0100440	obj/kern/kernel.asm	/^f0100440:	8d 4b bf             	lea    -0x41(%ebx),%ecx$/;"	l
f0100443	obj/kern/kernel.asm	/^f0100443:	8d 53 20             	lea    0x20(%ebx),%edx$/;"	l
f0100446	obj/kern/kernel.asm	/^f0100446:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	0f 46 da             	cmovbe %edx,%ebx$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	f7 d0                	not    %eax$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	a8 06                	test   $0x6,%al$/;"	l
f0100450	obj/kern/kernel.asm	/^f0100450:	75 1f                	jne    f0100471 <kbd_proc_data+0xf8>$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	75 17                	jne    f0100471 <kbd_proc_data+0xf8>$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	c7 04 24 cd 1e 10 f0 	movl   $0xf0101ecd,(%esp)$/;"	l
f0100461	obj/kern/kernel.asm	/^f0100461:	e8 54 09 00 00       	call   f0100dba <cprintf>$/;"	l
f0100466	obj/kern/kernel.asm	/^f0100466:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f010046b	obj/kern/kernel.asm	/^f010046b:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	ee                   	out    %al,(%dx)$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	89 d8                	mov    %ebx,%eax$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100476	obj/kern/kernel.asm	/^f0100476:	5b                   	pop    %ebx$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	5d                   	pop    %ebp$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	c3                   	ret    $/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479 <set_attribute_color>:$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	55                   	push   %ebp$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	89 e5                	mov    %esp,%ebp$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	0f b7 55 0c          	movzwl 0xc(%ebp),%edx$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	c1 e2 08             	shl    $0x8,%edx$/;"	l
f0100483	obj/kern/kernel.asm	/^f0100483:	0f b7 45 08          	movzwl 0x8(%ebp),%eax$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	09 d0                	or     %edx,%eax$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	66 a3 00 30 11 f0    	mov    %ax,0xf0113000$/;"	l
f0100492	obj/kern/kernel.asm	/^f0100492:	5d                   	pop    %ebp$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	c3                   	ret    $/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494 <serial_intr>:$/;"	l
f0100494	obj/kern/kernel.asm	/^f0100494:	55                   	push   %ebp$/;"	l
f0100495	obj/kern/kernel.asm	/^f0100495:	89 e5                	mov    %esp,%ebp$/;"	l
f0100497	obj/kern/kernel.asm	/^f0100497:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010049a	obj/kern/kernel.asm	/^f010049a:	80 3d 20 33 11 f0 00 	cmpb   $0x0,0xf0113320$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	74 0a                	je     f01004ad <serial_intr+0x19>$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	b8 4e 01 10 f0       	mov    $0xf010014e,%eax$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	e8 bd fc ff ff       	call   f010016a <cons_intr>$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	c9                   	leave  $/;"	l
f01004ae	obj/kern/kernel.asm	/^f01004ae:	c3                   	ret    $/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af <kbd_intr>:$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	55                   	push   %ebp$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004b5	obj/kern/kernel.asm	/^f01004b5:	b8 79 03 10 f0       	mov    $0xf0100379,%eax$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	e8 ab fc ff ff       	call   f010016a <cons_intr>$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	c9                   	leave  $/;"	l
f01004c0	obj/kern/kernel.asm	/^f01004c0:	c3                   	ret    $/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1 <cons_getc>:$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	55                   	push   %ebp$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	e8 c8 ff ff ff       	call   f0100494 <serial_intr>$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	e8 de ff ff ff       	call   f01004af <kbd_intr>$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	8b 15 40 35 11 f0    	mov    0xf0113540,%edx$/;"	l
f01004d7	obj/kern/kernel.asm	/^f01004d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01004dc	obj/kern/kernel.asm	/^f01004dc:	3b 15 44 35 11 f0    	cmp    0xf0113544,%edx$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	74 1e                	je     f0100502 <cons_getc+0x41>$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	0f b6 82 40 33 11 f0 	movzbl -0xfeeccc0(%edx),%eax$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	83 c2 01             	add    $0x1,%edx$/;"	l
f01004ee	obj/kern/kernel.asm	/^f01004ee:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	0f 44 d1             	cmove  %ecx,%edx$/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	89 15 40 35 11 f0    	mov    %edx,0xf0113540$/;"	l
f0100502	obj/kern/kernel.asm	/^f0100502:	c9                   	leave  $/;"	l
f0100503	obj/kern/kernel.asm	/^f0100503:	c3                   	ret    $/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504 <cons_init>:$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	55                   	push   %ebp$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	89 e5                	mov    %esp,%ebp$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	57                   	push   %edi$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	56                   	push   %esi$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	53                   	push   %ebx$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f0100514	obj/kern/kernel.asm	/^f0100514:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	5a a5 $/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100528	obj/kern/kernel.asm	/^f0100528:	74 11                	je     f010053b <cons_init+0x37>$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	c7 05 4c 35 11 f0 b4 	movl   $0x3b4,0xf011354c$/;"	l
f0100531	obj/kern/kernel.asm	/^f0100531:	03 00 00 $/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f0100539	obj/kern/kernel.asm	/^f0100539:	eb 16                	jmp    f0100551 <cons_init+0x4d>$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	c7 05 4c 35 11 f0 d4 	movl   $0x3d4,0xf011354c$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	03 00 00 $/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	8b 0d 4c 35 11 f0    	mov    0xf011354c,%ecx$/;"	l
f0100557	obj/kern/kernel.asm	/^f0100557:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010055c	obj/kern/kernel.asm	/^f010055c:	89 ca                	mov    %ecx,%edx$/;"	l
f010055e	obj/kern/kernel.asm	/^f010055e:	ee                   	out    %al,(%dx)$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100562	obj/kern/kernel.asm	/^f0100562:	89 da                	mov    %ebx,%edx$/;"	l
f0100564	obj/kern/kernel.asm	/^f0100564:	ec                   	in     (%dx),%al$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	0f b6 f8             	movzbl %al,%edi$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f010056b	obj/kern/kernel.asm	/^f010056b:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100570	obj/kern/kernel.asm	/^f0100570:	89 ca                	mov    %ecx,%edx$/;"	l
f0100572	obj/kern/kernel.asm	/^f0100572:	ee                   	out    %al,(%dx)$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	89 da                	mov    %ebx,%edx$/;"	l
f0100575	obj/kern/kernel.asm	/^f0100575:	ec                   	in     (%dx),%al$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	89 35 50 35 11 f0    	mov    %esi,0xf0113550$/;"	l
f010057c	obj/kern/kernel.asm	/^f010057c:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	09 df                	or     %ebx,%edi$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	66 89 3d 54 35 11 f0 	mov    %di,0xf0113554$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f010058d	obj/kern/kernel.asm	/^f010058d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100592	obj/kern/kernel.asm	/^f0100592:	89 da                	mov    %ebx,%edx$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	ee                   	out    %al,(%dx)$/;"	l
f0100595	obj/kern/kernel.asm	/^f0100595:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100597	obj/kern/kernel.asm	/^f0100597:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f010059c	obj/kern/kernel.asm	/^f010059c:	ee                   	out    %al,(%dx)$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	89 ca                	mov    %ecx,%edx$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	ee                   	out    %al,(%dx)$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	ee                   	out    %al,(%dx)$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	b2 fb                	mov    $0xfb,%dl$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	ee                   	out    %al,(%dx)$/;"	l
f01005ba	obj/kern/kernel.asm	/^f01005ba:	b2 fc                	mov    $0xfc,%dl$/;"	l
f01005bc	obj/kern/kernel.asm	/^f01005bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	ee                   	out    %al,(%dx)$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	b2 f9                	mov    $0xf9,%dl$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	ee                   	out    %al,(%dx)$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	b2 fd                	mov    $0xfd,%dl$/;"	l
f01005cc	obj/kern/kernel.asm	/^f01005cc:	ec                   	in     (%dx),%al$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	3c ff                	cmp    $0xff,%al$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	0f 95 c0             	setne  %al$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	89 c6                	mov    %eax,%esi$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	a2 20 33 11 f0       	mov    %al,0xf0113320$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	89 da                	mov    %ebx,%edx$/;"	l
f01005db	obj/kern/kernel.asm	/^f01005db:	ec                   	in     (%dx),%al$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	89 ca                	mov    %ecx,%edx$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	ec                   	in     (%dx),%al$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	89 f0                	mov    %esi,%eax$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	84 c0                	test   %al,%al$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	75 0c                	jne    f01005f1 <cons_init+0xed>$/;"	l
f01005e5	obj/kern/kernel.asm	/^f01005e5:	c7 04 24 d9 1e 10 f0 	movl   $0xf0101ed9,(%esp)$/;"	l
f01005ec	obj/kern/kernel.asm	/^f01005ec:	e8 c9 07 00 00       	call   f0100dba <cprintf>$/;"	l
f01005f1	obj/kern/kernel.asm	/^f01005f1:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01005f4	obj/kern/kernel.asm	/^f01005f4:	5b                   	pop    %ebx$/;"	l
f01005f5	obj/kern/kernel.asm	/^f01005f5:	5e                   	pop    %esi$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	5f                   	pop    %edi$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	5d                   	pop    %ebp$/;"	l
f01005f8	obj/kern/kernel.asm	/^f01005f8:	c3                   	ret    $/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9 <cputchar>:$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	55                   	push   %ebp$/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	89 e5                	mov    %esp,%ebp$/;"	l
f01005fc	obj/kern/kernel.asm	/^f01005fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	e8 a0 fb ff ff       	call   f01001a7 <cons_putc>$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	c9                   	leave  $/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	c3                   	ret    $/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609 <getchar>:$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	55                   	push   %ebp$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	89 e5                	mov    %esp,%ebp$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	e8 ad fe ff ff       	call   f01004c1 <cons_getc>$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	85 c0                	test   %eax,%eax$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	74 f7                	je     f010060f <getchar+0x6>$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	c9                   	leave  $/;"	l
f0100619	obj/kern/kernel.asm	/^f0100619:	c3                   	ret    $/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a <iscons>:$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	55                   	push   %ebp$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	89 e5                	mov    %esp,%ebp$/;"	l
f010061d	obj/kern/kernel.asm	/^f010061d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	5d                   	pop    %ebp$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	c3                   	ret    $/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630 <mon_kerninfo>:$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	55                   	push   %ebp$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	89 e5                	mov    %esp,%ebp$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	c7 04 24 10 21 10 f0 	movl   $0xf0102110,(%esp)$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	e8 78 07 00 00       	call   f0100dba <cprintf>$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f0100649	obj/kern/kernel.asm	/^f0100649:	00 $/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	c7 04 24 14 22 10 f0 	movl   $0xf0102214,(%esp)$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	e8 64 07 00 00       	call   f0100dba <cprintf>$/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	00 $/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665:	f0 $/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	c7 04 24 3c 22 10 f0 	movl   $0xf010223c,(%esp)$/;"	l
f010066d	obj/kern/kernel.asm	/^f010066d:	e8 48 07 00 00       	call   f0100dba <cprintf>$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	c7 44 24 08 65 1e 10 	movl   $0x101e65,0x8(%esp)$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	00 $/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	c7 44 24 04 65 1e 10 	movl   $0xf0101e65,0x4(%esp)$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	f0 $/;"	l
f0100682	obj/kern/kernel.asm	/^f0100682:	c7 04 24 60 22 10 f0 	movl   $0xf0102260,(%esp)$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	e8 2c 07 00 00       	call   f0100dba <cprintf>$/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	c7 44 24 08 20 33 11 	movl   $0x113320,0x8(%esp)$/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	00 $/;"	l
f0100696	obj/kern/kernel.asm	/^f0100696:	c7 44 24 04 20 33 11 	movl   $0xf0113320,0x4(%esp)$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	f0 $/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	c7 04 24 84 22 10 f0 	movl   $0xf0102284,(%esp)$/;"	l
f01006a5	obj/kern/kernel.asm	/^f01006a5:	e8 10 07 00 00       	call   f0100dba <cprintf>$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	c7 44 24 08 70 39 11 	movl   $0x113970,0x8(%esp)$/;"	l
f01006b1	obj/kern/kernel.asm	/^f01006b1:	00 $/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	c7 44 24 04 70 39 11 	movl   $0xf0113970,0x4(%esp)$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	f0 $/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	c7 04 24 a8 22 10 f0 	movl   $0xf01022a8,(%esp)$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	e8 f4 06 00 00       	call   f0100dba <cprintf>$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	b8 6f 3d 11 f0       	mov    $0xf0113d6f,%eax$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01006d0	obj/kern/kernel.asm	/^f01006d0:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01006d5	obj/kern/kernel.asm	/^f01006d5:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	85 c0                	test   %eax,%eax$/;"	l
f01006dd	obj/kern/kernel.asm	/^f01006dd:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01006e0	obj/kern/kernel.asm	/^f01006e0:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f01006e3	obj/kern/kernel.asm	/^f01006e3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	c7 04 24 cc 22 10 f0 	movl   $0xf01022cc,(%esp)$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	e8 c7 06 00 00       	call   f0100dba <cprintf>$/;"	l
f01006f3	obj/kern/kernel.asm	/^f01006f3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	c9                   	leave  $/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	c3                   	ret    $/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa <mon_help>:$/;"	l
f01006fa	obj/kern/kernel.asm	/^f01006fa:	55                   	push   %ebp$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	53                   	push   %ebx$/;"	l
f01006fe	obj/kern/kernel.asm	/^f01006fe:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	8b 83 04 24 10 f0    	mov    -0xfefdbfc(%ebx),%eax$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	8b 83 00 24 10 f0    	mov    -0xfefdc00(%ebx),%eax$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010071a	obj/kern/kernel.asm	/^f010071a:	c7 04 24 29 21 10 f0 	movl   $0xf0102129,(%esp)$/;"	l
f0100721	obj/kern/kernel.asm	/^f0100721:	e8 94 06 00 00       	call   f0100dba <cprintf>$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	83 fb 30             	cmp    $0x30,%ebx$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	75 d8                	jne    f0100706 <mon_help+0xc>$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	5b                   	pop    %ebx$/;"	l
f0100737	obj/kern/kernel.asm	/^f0100737:	5d                   	pop    %ebp$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	c3                   	ret    $/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739 <mon_backtrace>:$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	55                   	push   %ebp$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	89 e5                	mov    %esp,%ebp$/;"	l
f010073c	obj/kern/kernel.asm	/^f010073c:	57                   	push   %edi$/;"	l
f010073d	obj/kern/kernel.asm	/^f010073d:	56                   	push   %esi$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	53                   	push   %ebx$/;"	l
f010073f	obj/kern/kernel.asm	/^f010073f:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	89 eb                	mov    %ebp,%ebx$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	89 de                	mov    %ebx,%esi$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	8b 7b 04             	mov    0x4(%ebx),%edi$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	c7 04 24 32 21 10 f0 	movl   $0xf0102132,(%esp)$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	e8 65 06 00 00       	call   f0100dba <cprintf>$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	85 db                	test   %ebx,%ebx$/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757:	0f 84 aa 00 00 00    	je     f0100807 <mon_backtrace+0xce>$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	8b 46 0c             	mov    0xc(%esi),%eax$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	c7 04 24 f8 22 10 f0 	movl   $0xf01022f8,(%esp)$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	e8 26 06 00 00       	call   f0100dba <cprintf>$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	e8 11 07 00 00       	call   f0100eb4 <debuginfo_eip>$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01007a6	obj/kern/kernel.asm	/^f01007a6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01007ad	obj/kern/kernel.asm	/^f01007ad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	c7 04 24 43 21 10 f0 	movl   $0xf0102143,(%esp)$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	e8 fd 05 00 00       	call   f0100dba <cprintf>$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	74 24                	je     f01007e7 <mon_backtrace+0xae>$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	0f be 04 18          	movsbl (%eax,%ebx,1),%eax$/;"	l
f01007cf	obj/kern/kernel.asm	/^f01007cf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	c7 04 24 52 21 10 f0 	movl   $0xf0102152,(%esp)$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	e8 db 05 00 00       	call   f0100dba <cprintf>$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	39 5d dc             	cmp    %ebx,-0x24(%ebp)$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	77 e1                	ja     f01007c8 <mon_backtrace+0x8f>$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	2b 7d e0             	sub    -0x20(%ebp),%edi$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01007ee	obj/kern/kernel.asm	/^f01007ee:	c7 04 24 55 21 10 f0 	movl   $0xf0102155,(%esp)$/;"	l
f01007f5	obj/kern/kernel.asm	/^f01007f5:	e8 c0 05 00 00       	call   f0100dba <cprintf>$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	8b 36                	mov    (%esi),%esi$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	8b 7e 04             	mov    0x4(%esi),%edi$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	85 f6                	test   %esi,%esi$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	0f 85 56 ff ff ff    	jne    f010075d <mon_backtrace+0x24>$/;"	l
f0100807	obj/kern/kernel.asm	/^f0100807:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010080f	obj/kern/kernel.asm	/^f010080f:	5b                   	pop    %ebx$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	5e                   	pop    %esi$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	5f                   	pop    %edi$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	5d                   	pop    %ebp$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	c3                   	ret    $/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814 <mon_setcolor>:$/;"	l
f0100814	obj/kern/kernel.asm	/^f0100814:	55                   	push   %ebp$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	89 e5                	mov    %esp,%ebp$/;"	l
f0100817	obj/kern/kernel.asm	/^f0100817:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0100823	obj/kern/kernel.asm	/^f0100823:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100826	obj/kern/kernel.asm	/^f0100826:	c7 44 24 04 5a 21 10 	movl   $0xf010215a,0x4(%esp)$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	f0 $/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	e8 62 10 00 00       	call   f010189b <strcmp>$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	85 c0                	test   %eax,%eax$/;"	l
f0100840	obj/kern/kernel.asm	/^f0100840:	0f 84 0e 01 00 00    	je     f0100954 <mon_setcolor+0x140>$/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	c7 44 24 04 5e 21 10 	movl   $0xf010215e,0x4(%esp)$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	f0 $/;"	l
f010084e	obj/kern/kernel.asm	/^f010084e:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	e8 42 10 00 00       	call   f010189b <strcmp>$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	85 c0                	test   %eax,%eax$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	0f 84 ee 00 00 00    	je     f0100954 <mon_setcolor+0x140>$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	c7 44 24 04 62 21 10 	movl   $0xf0102162,0x4(%esp)$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	f0 $/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100874	obj/kern/kernel.asm	/^f0100874:	e8 22 10 00 00       	call   f010189b <strcmp>$/;"	l
f0100879	obj/kern/kernel.asm	/^f0100879:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	85 c0                	test   %eax,%eax$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	0f 84 ce 00 00 00    	je     f0100954 <mon_setcolor+0x140>$/;"	l
f0100886	obj/kern/kernel.asm	/^f0100886:	c7 44 24 04 66 21 10 	movl   $0xf0102166,0x4(%esp)$/;"	l
f010088d	obj/kern/kernel.asm	/^f010088d:	f0 $/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100894	obj/kern/kernel.asm	/^f0100894:	e8 02 10 00 00       	call   f010189b <strcmp>$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	85 c0                	test   %eax,%eax$/;"	l
f01008a0	obj/kern/kernel.asm	/^f01008a0:	0f 84 ae 00 00 00    	je     f0100954 <mon_setcolor+0x140>$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	c7 44 24 04 6a 21 10 	movl   $0xf010216a,0x4(%esp)$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	f0 $/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01008b1	obj/kern/kernel.asm	/^f01008b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	e8 e2 0f 00 00       	call   f010189b <strcmp>$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	85 c0                	test   %eax,%eax$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	0f 84 8e 00 00 00    	je     f0100954 <mon_setcolor+0x140>$/;"	l
f01008c6	obj/kern/kernel.asm	/^f01008c6:	c7 44 24 04 6e 21 10 	movl   $0xf010216e,0x4(%esp)$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	f0 $/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	e8 c2 0f 00 00       	call   f010189b <strcmp>$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	85 c0                	test   %eax,%eax$/;"	l
f01008e0	obj/kern/kernel.asm	/^f01008e0:	74 72                	je     f0100954 <mon_setcolor+0x140>$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	c7 44 24 04 72 21 10 	movl   $0xf0102172,0x4(%esp)$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	f0 $/;"	l
f01008ea	obj/kern/kernel.asm	/^f01008ea:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01008ed	obj/kern/kernel.asm	/^f01008ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01008f0	obj/kern/kernel.asm	/^f01008f0:	e8 a6 0f 00 00       	call   f010189b <strcmp>$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	bf 0f 00 00 00       	mov    $0xf,%edi$/;"	l
f01008fa	obj/kern/kernel.asm	/^f01008fa:	85 c0                	test   %eax,%eax$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	74 56                	je     f0100954 <mon_setcolor+0x140>$/;"	l
f01008fe	obj/kern/kernel.asm	/^f01008fe:	c7 44 24 04 76 21 10 	movl   $0xf0102176,0x4(%esp)$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	f0 $/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	e8 8a 0f 00 00       	call   f010189b <strcmp>$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	bf 0c 00 00 00       	mov    $0xc,%edi$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	85 c0                	test   %eax,%eax$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	74 3a                	je     f0100954 <mon_setcolor+0x140>$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	c7 44 24 04 7a 21 10 	movl   $0xf010217a,0x4(%esp)$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	f0 $/;"	l
f0100922	obj/kern/kernel.asm	/^f0100922:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	e8 6e 0f 00 00       	call   f010189b <strcmp>$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	bf 06 00 00 00       	mov    $0x6,%edi$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	85 c0                	test   %eax,%eax$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	74 1e                	je     f0100954 <mon_setcolor+0x140>$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	c7 44 24 04 7e 21 10 	movl   $0xf010217e,0x4(%esp)$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	f0 $/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100944	obj/kern/kernel.asm	/^f0100944:	e8 52 0f 00 00       	call   f010189b <strcmp>$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	19 ff                	sbb    %edi,%edi$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	83 e7 04             	and    $0x4,%edi$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	83 c7 07             	add    $0x7,%edi$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	c7 44 24 04 5a 21 10 	movl   $0xf010215a,0x4(%esp)$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	f0 $/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	e8 34 0f 00 00       	call   f010189b <strcmp>$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010096c	obj/kern/kernel.asm	/^f010096c:	85 c0                	test   %eax,%eax$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	0f 84 f6 00 00 00    	je     f0100a6a <mon_setcolor+0x256>$/;"	l
f0100974	obj/kern/kernel.asm	/^f0100974:	c7 44 24 04 5e 21 10 	movl   $0xf010215e,0x4(%esp)$/;"	l
f010097b	obj/kern/kernel.asm	/^f010097b:	f0 $/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	e8 14 0f 00 00       	call   f010189b <strcmp>$/;"	l
f0100987	obj/kern/kernel.asm	/^f0100987:	b3 07                	mov    $0x7,%bl$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	85 c0                	test   %eax,%eax$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	0f 84 d9 00 00 00    	je     f0100a6a <mon_setcolor+0x256>$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	c7 44 24 04 62 21 10 	movl   $0xf0102162,0x4(%esp)$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	f0 $/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	e8 f7 0e 00 00       	call   f010189b <strcmp>$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	b3 01                	mov    $0x1,%bl$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	85 c0                	test   %eax,%eax$/;"	l
f01009a8	obj/kern/kernel.asm	/^f01009a8:	0f 84 bc 00 00 00    	je     f0100a6a <mon_setcolor+0x256>$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	c7 44 24 04 66 21 10 	movl   $0xf0102166,0x4(%esp)$/;"	l
f01009b5	obj/kern/kernel.asm	/^f01009b5:	f0 $/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	e8 da 0e 00 00       	call   f010189b <strcmp>$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	b3 02                	mov    $0x2,%bl$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	85 c0                	test   %eax,%eax$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	0f 84 9f 00 00 00    	je     f0100a6a <mon_setcolor+0x256>$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	c7 44 24 04 6a 21 10 	movl   $0xf010216a,0x4(%esp)$/;"	l
f01009d2	obj/kern/kernel.asm	/^f01009d2:	f0 $/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	e8 bd 0e 00 00       	call   f010189b <strcmp>$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	b3 04                	mov    $0x4,%bl$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	85 c0                	test   %eax,%eax$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	0f 84 82 00 00 00    	je     f0100a6a <mon_setcolor+0x256>$/;"	l
f01009e8	obj/kern/kernel.asm	/^f01009e8:	c7 44 24 04 6e 21 10 	movl   $0xf010216e,0x4(%esp)$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	f0 $/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009f6	obj/kern/kernel.asm	/^f01009f6:	e8 a0 0e 00 00       	call   f010189b <strcmp>$/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	b3 08                	mov    $0x8,%bl$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	85 c0                	test   %eax,%eax$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	74 69                	je     f0100a6a <mon_setcolor+0x256>$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	c7 44 24 04 72 21 10 	movl   $0xf0102172,0x4(%esp)$/;"	l
f0100a08	obj/kern/kernel.asm	/^f0100a08:	f0 $/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	e8 87 0e 00 00       	call   f010189b <strcmp>$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	b3 0f                	mov    $0xf,%bl$/;"	l
f0100a16	obj/kern/kernel.asm	/^f0100a16:	85 c0                	test   %eax,%eax$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	74 50                	je     f0100a6a <mon_setcolor+0x256>$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	c7 44 24 04 76 21 10 	movl   $0xf0102176,0x4(%esp)$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	f0 $/;"	l
f0100a22	obj/kern/kernel.asm	/^f0100a22:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a28	obj/kern/kernel.asm	/^f0100a28:	e8 6e 0e 00 00       	call   f010189b <strcmp>$/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	b3 0c                	mov    $0xc,%bl$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	85 c0                	test   %eax,%eax$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	74 37                	je     f0100a6a <mon_setcolor+0x256>$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	c7 44 24 04 7a 21 10 	movl   $0xf010217a,0x4(%esp)$/;"	l
f0100a3a	obj/kern/kernel.asm	/^f0100a3a:	f0 $/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100a3e	obj/kern/kernel.asm	/^f0100a3e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	e8 55 0e 00 00       	call   f010189b <strcmp>$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	b3 06                	mov    $0x6,%bl$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	85 c0                	test   %eax,%eax$/;"	l
f0100a4a	obj/kern/kernel.asm	/^f0100a4a:	74 1e                	je     f0100a6a <mon_setcolor+0x256>$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	c7 44 24 04 7e 21 10 	movl   $0xf010217e,0x4(%esp)$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	f0 $/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a5a	obj/kern/kernel.asm	/^f0100a5a:	e8 3c 0e 00 00       	call   f010189b <strcmp>$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	19 db                	sbb    %ebx,%ebx$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	83 e3 04             	and    $0x4,%ebx$/;"	l
f0100a67	obj/kern/kernel.asm	/^f0100a67:	83 c3 07             	add    $0x7,%ebx$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	0f b7 f7             	movzwl %di,%esi$/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	0f b7 db             	movzwl %bx,%ebx$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100a77	obj/kern/kernel.asm	/^f0100a77:	e8 fd f9 ff ff       	call   f0100479 <set_attribute_color>$/;"	l
f0100a7c	obj/kern/kernel.asm	/^f0100a7c:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100a84	obj/kern/kernel.asm	/^f0100a84:	c7 04 24 2c 23 10 f0 	movl   $0xf010232c,(%esp)$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	e8 2a 03 00 00       	call   f0100dba <cprintf>$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a95	obj/kern/kernel.asm	/^f0100a95:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0100a9e	obj/kern/kernel.asm	/^f0100a9e:	89 ec                	mov    %ebp,%esp$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	5d                   	pop    %ebp$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	c3                   	ret    $/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2 <monitor>:$/;"	l
f0100aa2	obj/kern/kernel.asm	/^f0100aa2:	55                   	push   %ebp$/;"	l
f0100aa3	obj/kern/kernel.asm	/^f0100aa3:	89 e5                	mov    %esp,%ebp$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	57                   	push   %edi$/;"	l
f0100aa6	obj/kern/kernel.asm	/^f0100aa6:	56                   	push   %esi$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	53                   	push   %ebx$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	c7 04 24 60 23 10 f0 	movl   $0xf0102360,(%esp)$/;"	l
f0100ab2	obj/kern/kernel.asm	/^f0100ab2:	e8 03 03 00 00       	call   f0100dba <cprintf>$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	c7 04 24 84 23 10 f0 	movl   $0xf0102384,(%esp)$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	e8 f7 02 00 00       	call   f0100dba <cprintf>$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	c7 04 24 82 21 10 f0 	movl   $0xf0102182,(%esp)$/;"	l
f0100aca	obj/kern/kernel.asm	/^f0100aca:	e8 f1 0b 00 00       	call   f01016c0 <readline>$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	89 c3                	mov    %eax,%ebx$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	85 c0                	test   %eax,%eax$/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	74 ee                	je     f0100ac3 <monitor+0x21>$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	eb 06                	jmp    f0100ae9 <monitor+0x47>$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100ae9	obj/kern/kernel.asm	/^f0100ae9:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	84 c0                	test   %al,%al$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	74 6b                	je     f0100b5b <monitor+0xb9>$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	0f be c0             	movsbl %al,%eax$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	c7 04 24 86 21 10 f0 	movl   $0xf0102186,(%esp)$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	e8 13 0e 00 00       	call   f0101916 <strchr>$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	85 c0                	test   %eax,%eax$/;"	l
f0100b05	obj/kern/kernel.asm	/^f0100b05:	75 dc                	jne    f0100ae3 <monitor+0x41>$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	74 4f                	je     f0100b5b <monitor+0xb9>$/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	90                   	nop$/;"	l
f0100b10	obj/kern/kernel.asm	/^f0100b10:	75 16                	jne    f0100b28 <monitor+0x86>$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	00 $/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	c7 04 24 8b 21 10 f0 	movl   $0xf010218b,(%esp)$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	e8 94 02 00 00       	call   f0100dba <cprintf>$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	eb 9b                	jmp    f0100ac3 <monitor+0x21>$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100b2c	obj/kern/kernel.asm	/^f0100b2c:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	84 c0                	test   %al,%al$/;"	l
f0100b34	obj/kern/kernel.asm	/^f0100b34:	75 0c                	jne    f0100b42 <monitor+0xa0>$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	eb b1                	jmp    f0100ae9 <monitor+0x47>$/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	84 c0                	test   %al,%al$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	74 a7                	je     f0100ae9 <monitor+0x47>$/;"	l
f0100b42	obj/kern/kernel.asm	/^f0100b42:	0f be c0             	movsbl %al,%eax$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b49	obj/kern/kernel.asm	/^f0100b49:	c7 04 24 86 21 10 f0 	movl   $0xf0102186,(%esp)$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	e8 c1 0d 00 00       	call   f0101916 <strchr>$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	85 c0                	test   %eax,%eax$/;"	l
f0100b57	obj/kern/kernel.asm	/^f0100b57:	74 df                	je     f0100b38 <monitor+0x96>$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	eb 8e                	jmp    f0100ae9 <monitor+0x47>$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	00 $/;"	l
f0100b63	obj/kern/kernel.asm	/^f0100b63:	85 f6                	test   %esi,%esi$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	0f 84 58 ff ff ff    	je     f0100ac3 <monitor+0x21>$/;"	l
f0100b6b	obj/kern/kernel.asm	/^f0100b6b:	bb 00 24 10 f0       	mov    $0xf0102400,%ebx$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100b77	obj/kern/kernel.asm	/^f0100b77:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	e8 15 0d 00 00       	call   f010189b <strcmp>$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	85 c0                	test   %eax,%eax$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	75 24                	jne    f0100bae <monitor+0x10c>$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	ff 14 85 08 24 10 f0 	call   *-0xfefdbf8(,%eax,4)$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	85 c0                	test   %eax,%eax$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	78 28                	js     f0100bd1 <monitor+0x12f>$/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	e9 15 ff ff ff       	jmp    f0100ac3 <monitor+0x21>$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	83 c7 01             	add    $0x1,%edi$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100bb4	obj/kern/kernel.asm	/^f0100bb4:	83 ff 04             	cmp    $0x4,%edi$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	75 bc                	jne    f0100b75 <monitor+0xd3>$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	c7 04 24 a8 21 10 f0 	movl   $0xf01021a8,(%esp)$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	e8 ee 01 00 00       	call   f0100dba <cprintf>$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	e9 f2 fe ff ff       	jmp    f0100ac3 <monitor+0x21>$/;"	l
f0100bd1	obj/kern/kernel.asm	/^f0100bd1:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	5b                   	pop    %ebx$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	5e                   	pop    %esi$/;"	l
f0100bd6	obj/kern/kernel.asm	/^f0100bd6:	5f                   	pop    %edi$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	5d                   	pop    %ebp$/;"	l
f0100bd8	obj/kern/kernel.asm	/^f0100bd8:	c3                   	ret    $/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	00 00                	add    %al,(%eax)$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc <nvram_read>:$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	55                   	push   %ebp$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bdf	obj/kern/kernel.asm	/^f0100bdf:	56                   	push   %esi$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	53                   	push   %ebx$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100be4	obj/kern/kernel.asm	/^f0100be4:	89 c3                	mov    %eax,%ebx$/;"	l
f0100be6	obj/kern/kernel.asm	/^f0100be6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	e8 5e 01 00 00       	call   f0100d4c <mc146818_read>$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	89 c6                	mov    %eax,%esi$/;"	l
f0100bf0	obj/kern/kernel.asm	/^f0100bf0:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	e8 51 01 00 00       	call   f0100d4c <mc146818_read>$/;"	l
f0100bfb	obj/kern/kernel.asm	/^f0100bfb:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	09 f0                	or     %esi,%eax$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	5b                   	pop    %ebx$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	5e                   	pop    %esi$/;"	l
f0100c05	obj/kern/kernel.asm	/^f0100c05:	5d                   	pop    %ebp$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	c3                   	ret    $/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07 <mem_init>:$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	55                   	push   %ebp$/;"	l
f0100c08	obj/kern/kernel.asm	/^f0100c08:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	e8 c5 ff ff ff       	call   f0100bdc <nvram_read>$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	85 c0                	test   %eax,%eax$/;"	l
f0100c22	obj/kern/kernel.asm	/^f0100c22:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	a3 58 35 11 f0       	mov    %eax,0xf0113558$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	e8 a5 ff ff ff       	call   f0100bdc <nvram_read>$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	85 c0                	test   %eax,%eax$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0100c48	obj/kern/kernel.asm	/^f0100c48:	85 c0                	test   %eax,%eax$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	74 0e                	je     f0100c5a <mem_init+0x53>$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	89 15 64 39 11 f0    	mov    %edx,0xf0113964$/;"	l
f0100c58	obj/kern/kernel.asm	/^f0100c58:	eb 0c                	jmp    f0100c66 <mem_init+0x5f>$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	8b 15 58 35 11 f0    	mov    0xf0113558,%edx$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	89 15 64 39 11 f0    	mov    %edx,0xf0113964$/;"	l
f0100c66	obj/kern/kernel.asm	/^f0100c66:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0100c6c	obj/kern/kernel.asm	/^f0100c6c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	a1 58 35 11 f0       	mov    0xf0113558,%eax$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0100c7b	obj/kern/kernel.asm	/^f0100c7b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	a1 64 39 11 f0       	mov    0xf0113964,%eax$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	c7 04 24 30 24 10 f0 	movl   $0xf0102430,(%esp)$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	e8 20 01 00 00       	call   f0100dba <cprintf>$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	c7 44 24 08 6c 24 10 	movl   $0xf010246c,0x8(%esp)$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	f0 $/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	c7 44 24 04 7c 00 00 	movl   $0x7c,0x4(%esp)$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	00 $/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	c7 04 24 98 24 10 f0 	movl   $0xf0102498,(%esp)$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	e8 de f3 ff ff       	call   f0100094 <_panic>$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6 <page_init>:$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	55                   	push   %ebp$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	89 e5                	mov    %esp,%ebp$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	53                   	push   %ebx$/;"	l
f0100cba	obj/kern/kernel.asm	/^f0100cba:	83 3d 64 39 11 f0 00 	cmpl   $0x0,0xf0113964$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	74 3b                	je     f0100cfe <page_init+0x48>$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	8b 1d 5c 35 11 f0    	mov    0xf011355c,%ebx$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100cce	obj/kern/kernel.asm	/^f0100cce:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0100cd5	obj/kern/kernel.asm	/^f0100cd5:	89 d1                	mov    %edx,%ecx$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	03 0d 6c 39 11 f0    	add    0xf011396c,%ecx$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	89 19                	mov    %ebx,(%ecx)$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	89 d3                	mov    %edx,%ebx$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	03 1d 6c 39 11 f0    	add    0xf011396c,%ebx$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100cf0	obj/kern/kernel.asm	/^f0100cf0:	39 05 64 39 11 f0    	cmp    %eax,0xf0113964$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	77 d6                	ja     f0100cce <page_init+0x18>$/;"	l
f0100cf8	obj/kern/kernel.asm	/^f0100cf8:	89 1d 5c 35 11 f0    	mov    %ebx,0xf011355c$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	5b                   	pop    %ebx$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	5d                   	pop    %ebp$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	c3                   	ret    $/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01 <page_alloc>:$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	55                   	push   %ebp$/;"	l
f0100d02	obj/kern/kernel.asm	/^f0100d02:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d09	obj/kern/kernel.asm	/^f0100d09:	5d                   	pop    %ebp$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	c3                   	ret    $/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b <page_free>:$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	55                   	push   %ebp$/;"	l
f0100d0c	obj/kern/kernel.asm	/^f0100d0c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	5d                   	pop    %ebp$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	c3                   	ret    $/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10 <page_decref>:$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	55                   	push   %ebp$/;"	l
f0100d11	obj/kern/kernel.asm	/^f0100d11:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	66 83 68 04 01       	subw   $0x1,0x4(%eax)$/;"	l
f0100d1b	obj/kern/kernel.asm	/^f0100d1b:	5d                   	pop    %ebp$/;"	l
f0100d1c	obj/kern/kernel.asm	/^f0100d1c:	c3                   	ret    $/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d <pgdir_walk>:$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	55                   	push   %ebp$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	5d                   	pop    %ebp$/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	c3                   	ret    $/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27 <page_insert>:$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	55                   	push   %ebp$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d2f	obj/kern/kernel.asm	/^f0100d2f:	5d                   	pop    %ebp$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	c3                   	ret    $/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31 <page_lookup>:$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	55                   	push   %ebp$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	5d                   	pop    %ebp$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	c3                   	ret    $/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b <page_remove>:$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	55                   	push   %ebp$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	5d                   	pop    %ebp$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	c3                   	ret    $/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40 <tlb_invalidate>:$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	55                   	push   %ebp$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	0f 01 38             	invlpg (%eax)$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	5d                   	pop    %ebp$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	c3                   	ret    $/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c <mc146818_read>:$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	55                   	push   %ebp$/;"	l
f0100d4d	obj/kern/kernel.asm	/^f0100d4d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	ee                   	out    %al,(%dx)$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	b2 71                	mov    $0x71,%dl$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	ec                   	in     (%dx),%al$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	5d                   	pop    %ebp$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	c3                   	ret    $/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60 <mc146818_write>:$/;"	l
f0100d60	obj/kern/kernel.asm	/^f0100d60:	55                   	push   %ebp$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d6b	obj/kern/kernel.asm	/^f0100d6b:	ee                   	out    %al,(%dx)$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	b2 71                	mov    $0x71,%dl$/;"	l
f0100d6e	obj/kern/kernel.asm	/^f0100d6e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	ee                   	out    %al,(%dx)$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	5d                   	pop    %ebp$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	c3                   	ret    $/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74 <putch>:$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	55                   	push   %ebp$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d77	obj/kern/kernel.asm	/^f0100d77:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d7d	obj/kern/kernel.asm	/^f0100d7d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	e8 74 f8 ff ff       	call   f01005f9 <cputchar>$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	c9                   	leave  $/;"	l
f0100d86	obj/kern/kernel.asm	/^f0100d86:	c3                   	ret    $/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87 <vcprintf>:$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	55                   	push   %ebp$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100d9b	obj/kern/kernel.asm	/^f0100d9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100da2	obj/kern/kernel.asm	/^f0100da2:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100da9	obj/kern/kernel.asm	/^f0100da9:	c7 04 24 74 0d 10 f0 	movl   $0xf0100d74,(%esp)$/;"	l
f0100db0	obj/kern/kernel.asm	/^f0100db0:	e8 b5 04 00 00       	call   f010126a <vprintfmt>$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	c9                   	leave  $/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	c3                   	ret    $/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba <cprintf>:$/;"	l
f0100dba	obj/kern/kernel.asm	/^f0100dba:	55                   	push   %ebp$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	e8 b5 ff ff ff       	call   f0100d87 <vcprintf>$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	c9                   	leave  $/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	c3                   	ret    $/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4 <stab_binsearch>:$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	55                   	push   %ebp$/;"	l
f0100dd5	obj/kern/kernel.asm	/^f0100dd5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100dd7	obj/kern/kernel.asm	/^f0100dd7:	57                   	push   %edi$/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	56                   	push   %esi$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	53                   	push   %ebx$/;"	l
f0100dda	obj/kern/kernel.asm	/^f0100dda:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	89 c3                	mov    %eax,%ebx$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	8b 00                	mov    (%eax),%eax$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	eb 77                	jmp    f0100e72 <stab_binsearch+0x9e>$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	01 c8                	add    %ecx,%eax$/;"	l
f0100e00	obj/kern/kernel.asm	/^f0100e00:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	99                   	cltd   $/;"	l
f0100e06	obj/kern/kernel.asm	/^f0100e06:	f7 ff                	idiv   %edi$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	89 c2                	mov    %eax,%edx$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	eb 01                	jmp    f0100e0d <stab_binsearch+0x39>$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	4a                   	dec    %edx$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	39 ca                	cmp    %ecx,%edx$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	7c 1d                	jl     f0100e2e <stab_binsearch+0x5a>$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	6b fa 0c             	imul   $0xc,%edx,%edi$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	0f b6 7c 3b 04       	movzbl 0x4(%ebx,%edi,1),%edi$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	39 f7                	cmp    %esi,%edi$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	75 ef                	jne    f0100e0c <stab_binsearch+0x38>$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	6b fa 0c             	imul   $0xc,%edx,%edi$/;"	l
f0100e23	obj/kern/kernel.asm	/^f0100e23:	8b 7c 3b 08          	mov    0x8(%ebx,%edi,1),%edi$/;"	l
f0100e27	obj/kern/kernel.asm	/^f0100e27:	3b 7d 0c             	cmp    0xc(%ebp),%edi$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	73 18                	jae    f0100e44 <stab_binsearch+0x70>$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	eb 05                	jmp    f0100e33 <stab_binsearch+0x5f>$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100e31	obj/kern/kernel.asm	/^f0100e31:	eb 3f                	jmp    f0100e72 <stab_binsearch+0x9e>$/;"	l
f0100e33	obj/kern/kernel.asm	/^f0100e33:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	89 11                	mov    %edx,(%ecx)$/;"	l
f0100e38	obj/kern/kernel.asm	/^f0100e38:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	eb 2e                	jmp    f0100e72 <stab_binsearch+0x9e>$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	3b 7d 0c             	cmp    0xc(%ebp),%edi$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	76 15                	jbe    f0100e5e <stab_binsearch+0x8a>$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	4f                   	dec    %edi$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	89 7d f0             	mov    %edi,-0x10(%ebp)$/;"	l
f0100e50	obj/kern/kernel.asm	/^f0100e50:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100e53	obj/kern/kernel.asm	/^f0100e53:	89 38                	mov    %edi,(%eax)$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	eb 14                	jmp    f0100e72 <stab_binsearch+0x9e>$/;"	l
f0100e5e	obj/kern/kernel.asm	/^f0100e5e:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	89 39                	mov    %edi,(%ecx)$/;"	l
f0100e66	obj/kern/kernel.asm	/^f0100e66:	ff 45 0c             	incl   0xc(%ebp)$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	89 d1                	mov    %edx,%ecx$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	3b 4d f0             	cmp    -0x10(%ebp),%ecx$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	7e 84                	jle    f0100dfb <stab_binsearch+0x27>$/;"	l
f0100e77	obj/kern/kernel.asm	/^f0100e77:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	75 0d                	jne    f0100e8a <stab_binsearch+0xb6>$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0100e80	obj/kern/kernel.asm	/^f0100e80:	8b 02                	mov    (%edx),%eax$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	48                   	dec    %eax$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0100e86	obj/kern/kernel.asm	/^f0100e86:	89 01                	mov    %eax,(%ecx)$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	eb 22                	jmp    f0100eac <stab_binsearch+0xd8>$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	8b 01                	mov    (%ecx),%eax$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0100e94	obj/kern/kernel.asm	/^f0100e94:	eb 01                	jmp    f0100e97 <stab_binsearch+0xc3>$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	48                   	dec    %eax$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	39 c1                	cmp    %eax,%ecx$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	7d 0c                	jge    f0100ea7 <stab_binsearch+0xd3>$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	6b d0 0c             	imul   $0xc,%eax,%edx$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	0f b6 54 13 04       	movzbl 0x4(%ebx,%edx,1),%edx$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	39 f2                	cmp    %esi,%edx$/;"	l
f0100ea5	obj/kern/kernel.asm	/^f0100ea5:	75 ef                	jne    f0100e96 <stab_binsearch+0xc2>$/;"	l
f0100ea7	obj/kern/kernel.asm	/^f0100ea7:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0100eaa	obj/kern/kernel.asm	/^f0100eaa:	89 02                	mov    %eax,(%edx)$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100eaf	obj/kern/kernel.asm	/^f0100eaf:	5b                   	pop    %ebx$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	5e                   	pop    %esi$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	5f                   	pop    %edi$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	5d                   	pop    %ebp$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	c3                   	ret    $/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4 <debuginfo_eip>:$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	55                   	push   %ebp$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	83 ec 58             	sub    $0x58,%esp$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0100ec3	obj/kern/kernel.asm	/^f0100ec3:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	c7 03 a4 24 10 f0    	movl   $0xf01024a4,(%ebx)$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	c7 43 08 a4 24 10 f0 	movl   $0xf01024a4,0x8(%ebx)$/;"	l
f0100edd	obj/kern/kernel.asm	/^f0100edd:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0100ef4	obj/kern/kernel.asm	/^f0100ef4:	76 12                	jbe    f0100f08 <debuginfo_eip+0x54>$/;"	l
f0100ef6	obj/kern/kernel.asm	/^f0100ef6:	b8 24 8b 10 f0       	mov    $0xf0108b24,%eax$/;"	l
f0100efb	obj/kern/kernel.asm	/^f0100efb:	3d 89 6e 10 f0       	cmp    $0xf0106e89,%eax$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	0f 86 f1 01 00 00    	jbe    f01010f7 <debuginfo_eip+0x243>$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	eb 1c                	jmp    f0100f24 <debuginfo_eip+0x70>$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	c7 44 24 08 ae 24 10 	movl   $0xf01024ae,0x8(%esp)$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	f0 $/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	c7 44 24 04 7f 00 00 	movl   $0x7f,0x4(%esp)$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	00 $/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	c7 04 24 bb 24 10 f0 	movl   $0xf01024bb,(%esp)$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	e8 70 f1 ff ff       	call   f0100094 <_panic>$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	80 3d 23 8b 10 f0 00 	cmpb   $0x0,0xf0108b23$/;"	l
f0100f30	obj/kern/kernel.asm	/^f0100f30:	0f 85 cd 01 00 00    	jne    f0101103 <debuginfo_eip+0x24f>$/;"	l
f0100f36	obj/kern/kernel.asm	/^f0100f36:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	b8 88 6e 10 f0       	mov    $0xf0106e88,%eax$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	2d dc 26 10 f0       	sub    $0xf01026dc,%eax$/;"	l
f0100f47	obj/kern/kernel.asm	/^f0100f47:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0100f64	obj/kern/kernel.asm	/^f0100f64:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100f67	obj/kern/kernel.asm	/^f0100f67:	b8 dc 26 10 f0       	mov    $0xf01026dc,%eax$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	e8 63 fe ff ff       	call   f0100dd4 <stab_binsearch>$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	85 d2                	test   %edx,%edx$/;"	l
f0100f7b	obj/kern/kernel.asm	/^f0100f7b:	0f 84 82 01 00 00    	je     f0101103 <debuginfo_eip+0x24f>$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100f8e	obj/kern/kernel.asm	/^f0100f8e:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0100f98	obj/kern/kernel.asm	/^f0100f98:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0100f9b	obj/kern/kernel.asm	/^f0100f9b:	b8 dc 26 10 f0       	mov    $0xf01026dc,%eax$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	e8 2f fe ff ff       	call   f0100dd4 <stab_binsearch>$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	39 d0                	cmp    %edx,%eax$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	7f 3d                	jg     f0100fec <debuginfo_eip+0x138>$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	6b c8 0c             	imul   $0xc,%eax,%ecx$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	8d b9 dc 26 10 f0    	lea    -0xfefd924(%ecx),%edi$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	89 7d c0             	mov    %edi,-0x40(%ebp)$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	8b 89 dc 26 10 f0    	mov    -0xfefd924(%ecx),%ecx$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	bf 24 8b 10 f0       	mov    $0xf0108b24,%edi$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	81 ef 89 6e 10 f0    	sub    $0xf0106e89,%edi$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	39 f9                	cmp    %edi,%ecx$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	73 09                	jae    f0100fd9 <debuginfo_eip+0x125>$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	81 c1 89 6e 10 f0    	add    $0xf0106e89,%ecx$/;"	l
f0100fd6	obj/kern/kernel.asm	/^f0100fd6:	89 4b 08             	mov    %ecx,0x8(%ebx)$/;"	l
f0100fd9	obj/kern/kernel.asm	/^f0100fd9:	8b 7d c0             	mov    -0x40(%ebp),%edi$/;"	l
f0100fdc	obj/kern/kernel.asm	/^f0100fdc:	8b 4f 08             	mov    0x8(%edi),%ecx$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	29 ce                	sub    %ecx,%esi$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0100fea	obj/kern/kernel.asm	/^f0100fea:	eb 0f                	jmp    f0100ffb <debuginfo_eip+0x147>$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0100ff5	obj/kern/kernel.asm	/^f0100ff5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	00 $/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	e8 3c 09 00 00       	call   f010194a <strfind>$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f010101f	obj/kern/kernel.asm	/^f010101f:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	b8 dc 26 10 f0       	mov    $0xf01026dc,%eax$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	e8 a5 fd ff ff       	call   f0100dd4 <stab_binsearch>$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	7f 0f                	jg     f0101046 <debuginfo_eip+0x192>$/;"	l
f0101037	obj/kern/kernel.asm	/^f0101037:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	0f b7 80 e2 26 10 f0 	movzwl -0xfefd91e(%eax),%eax$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	eb 07                	jmp    f010104d <debuginfo_eip+0x199>$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	c7 43 04 ff ff ff ff 	movl   $0xffffffff,0x4(%ebx)$/;"	l
f010104d	obj/kern/kernel.asm	/^f010104d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101050	obj/kern/kernel.asm	/^f0101050:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0101053	obj/kern/kernel.asm	/^f0101053:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	7c 5f                	jl     f01010b6 <debuginfo_eip+0x202>$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	89 c2                	mov    %eax,%edx$/;"	l
f0101059	obj/kern/kernel.asm	/^f0101059:	6b f0 0c             	imul   $0xc,%eax,%esi$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	80 be e0 26 10 f0 84 	cmpb   $0x84,-0xfefd920(%esi)$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	75 18                	jne    f010107d <debuginfo_eip+0x1c9>$/;"	l
f0101065	obj/kern/kernel.asm	/^f0101065:	eb 30                	jmp    f0101097 <debuginfo_eip+0x1e3>$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	39 c1                	cmp    %eax,%ecx$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	7f 48                	jg     f01010b6 <debuginfo_eip+0x202>$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	89 c2                	mov    %eax,%edx$/;"	l
f0101070	obj/kern/kernel.asm	/^f0101070:	8d 34 40             	lea    (%eax,%eax,2),%esi$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	80 3c b5 e0 26 10 f0 	cmpb   $0x84,-0xfefd920(,%esi,4)$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	84 $/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	74 1a                	je     f0101097 <debuginfo_eip+0x1e3>$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	8d 14 95 dc 26 10 f0 	lea    -0xfefd924(,%edx,4),%edx$/;"	l
f0101087	obj/kern/kernel.asm	/^f0101087:	80 7a 04 64          	cmpb   $0x64,0x4(%edx)$/;"	l
f010108b	obj/kern/kernel.asm	/^f010108b:	75 da                	jne    f0101067 <debuginfo_eip+0x1b3>$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	74 d4                	je     f0101067 <debuginfo_eip+0x1b3>$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	7c 1f                	jl     f01010b6 <debuginfo_eip+0x202>$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	6b c0 0c             	imul   $0xc,%eax,%eax$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	8b 80 dc 26 10 f0    	mov    -0xfefd924(%eax),%eax$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	ba 24 8b 10 f0       	mov    $0xf0108b24,%edx$/;"	l
f01010a5	obj/kern/kernel.asm	/^f01010a5:	81 ea 89 6e 10 f0    	sub    $0xf0106e89,%edx$/;"	l
f01010ab	obj/kern/kernel.asm	/^f01010ab:	39 d0                	cmp    %edx,%eax$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	73 07                	jae    f01010b6 <debuginfo_eip+0x202>$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	05 89 6e 10 f0       	add    $0xf0106e89,%eax$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	89 03                	mov    %eax,(%ebx)$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	39 ca                	cmp    %ecx,%edx$/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	7d 3e                	jge    f0101103 <debuginfo_eip+0x24f>$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	83 c2 01             	add    $0x1,%edx$/;"	l
f01010c8	obj/kern/kernel.asm	/^f01010c8:	39 d1                	cmp    %edx,%ecx$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	7e 37                	jle    f0101103 <debuginfo_eip+0x24f>$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	6b f2 0c             	imul   $0xc,%edx,%esi$/;"	l
f01010cf	obj/kern/kernel.asm	/^f01010cf:	80 be e0 26 10 f0 a0 	cmpb   $0xa0,-0xfefd920(%esi)$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	75 2b                	jne    f0101103 <debuginfo_eip+0x24f>$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	83 c2 01             	add    $0x1,%edx$/;"	l
f01010df	obj/kern/kernel.asm	/^f01010df:	39 d1                	cmp    %edx,%ecx$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	7e 1b                	jle    f01010fe <debuginfo_eip+0x24a>$/;"	l
f01010e3	obj/kern/kernel.asm	/^f01010e3:	8d 04 52             	lea    (%edx,%edx,2),%eax$/;"	l
f01010e6	obj/kern/kernel.asm	/^f01010e6:	80 3c 85 e0 26 10 f0 	cmpb   $0xa0,-0xfefd920(,%eax,4)$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	a0 $/;"	l
f01010ee	obj/kern/kernel.asm	/^f01010ee:	74 e8                	je     f01010d8 <debuginfo_eip+0x224>$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	eb 0c                	jmp    f0101103 <debuginfo_eip+0x24f>$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	eb 05                	jmp    f0101103 <debuginfo_eip+0x24f>$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0101109	obj/kern/kernel.asm	/^f0101109:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	89 ec                	mov    %ebp,%esp$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	5d                   	pop    %ebp$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	c3                   	ret    $/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110 <printnum>:$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	55                   	push   %ebp$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	89 e5                	mov    %esp,%ebp$/;"	l
f0101113	obj/kern/kernel.asm	/^f0101113:	57                   	push   %edi$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	56                   	push   %esi$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	53                   	push   %ebx$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	89 d7                	mov    %edx,%edi$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0101138	obj/kern/kernel.asm	/^f0101138:	72 11                	jb     f010114b <printnum+0x3b>$/;"	l
f010113a	obj/kern/kernel.asm	/^f010113a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010113d	obj/kern/kernel.asm	/^f010113d:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0101140	obj/kern/kernel.asm	/^f0101140:	76 09                	jbe    f010114b <printnum+0x3b>$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	85 db                	test   %ebx,%ebx$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	7f 51                	jg     f010119a <printnum+0x8a>$/;"	l
f0101149	obj/kern/kernel.asm	/^f0101149:	eb 5e                	jmp    f01011a9 <printnum+0x99>$/;"	l
f010114b	obj/kern/kernel.asm	/^f010114b:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101152	obj/kern/kernel.asm	/^f0101152:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	8b 5c 24 08          	mov    0x8(%esp),%ebx$/;"	l
f0101161	obj/kern/kernel.asm	/^f0101161:	8b 74 24 0c          	mov    0xc(%esp),%esi$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	00 $/;"	l
f010116d	obj/kern/kernel.asm	/^f010116d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101170	obj/kern/kernel.asm	/^f0101170:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101173	obj/kern/kernel.asm	/^f0101173:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010117a	obj/kern/kernel.asm	/^f010117a:	e8 41 0a 00 00       	call   f0101bc0 <__udivdi3>$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	89 fa                	mov    %edi,%edx$/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	e8 78 ff ff ff       	call   f0101110 <printnum>$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	eb 0f                	jmp    f01011a9 <printnum+0x99>$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01011a1	obj/kern/kernel.asm	/^f01011a1:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f01011a4	obj/kern/kernel.asm	/^f01011a4:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	75 f1                	jne    f010119a <printnum+0x8a>$/;"	l
f01011a9	obj/kern/kernel.asm	/^f01011a9:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01011ad	obj/kern/kernel.asm	/^f01011ad:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01011b4	obj/kern/kernel.asm	/^f01011b4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	00 $/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01011c3	obj/kern/kernel.asm	/^f01011c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011c6	obj/kern/kernel.asm	/^f01011c6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01011c9	obj/kern/kernel.asm	/^f01011c9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	e8 1e 0b 00 00       	call   f0101cf0 <__umoddi3>$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01011d6	obj/kern/kernel.asm	/^f01011d6:	0f be 80 c9 24 10 f0 	movsbl -0xfefdb37(%eax),%eax$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01011e6	obj/kern/kernel.asm	/^f01011e6:	5b                   	pop    %ebx$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	5e                   	pop    %esi$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	5f                   	pop    %edi$/;"	l
f01011e9	obj/kern/kernel.asm	/^f01011e9:	5d                   	pop    %ebp$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	c3                   	ret    $/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb <getuint>:$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	55                   	push   %ebp$/;"	l
f01011ec	obj/kern/kernel.asm	/^f01011ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	7e 0e                	jle    f0101201 <getuint+0x16>$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	8b 10                	mov    (%eax),%edx$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	89 08                	mov    %ecx,(%eax)$/;"	l
f01011fa	obj/kern/kernel.asm	/^f01011fa:	8b 02                	mov    (%edx),%eax$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	eb 22                	jmp    f0101223 <getuint+0x38>$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	85 d2                	test   %edx,%edx$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	74 10                	je     f0101215 <getuint+0x2a>$/;"	l
f0101205	obj/kern/kernel.asm	/^f0101205:	8b 10                	mov    (%eax),%edx$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	89 08                	mov    %ecx,(%eax)$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	8b 02                	mov    (%edx),%eax$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	eb 0e                	jmp    f0101223 <getuint+0x38>$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	8b 10                	mov    (%eax),%edx$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	89 08                	mov    %ecx,(%eax)$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	8b 02                	mov    (%edx),%eax$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	5d                   	pop    %ebp$/;"	l
f0101224	obj/kern/kernel.asm	/^f0101224:	c3                   	ret    $/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225 <sprintputch>:$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	55                   	push   %ebp$/;"	l
f0101226	obj/kern/kernel.asm	/^f0101226:	89 e5                	mov    %esp,%ebp$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010122b	obj/kern/kernel.asm	/^f010122b:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	8b 10                	mov    (%eax),%edx$/;"	l
f0101231	obj/kern/kernel.asm	/^f0101231:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	73 0a                	jae    f0101240 <sprintputch+0x1b>$/;"	l
f0101236	obj/kern/kernel.asm	/^f0101236:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	88 0a                	mov    %cl,(%edx)$/;"	l
f010123b	obj/kern/kernel.asm	/^f010123b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	89 10                	mov    %edx,(%eax)$/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	5d                   	pop    %ebp$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	c3                   	ret    $/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242 <printfmt>:$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	55                   	push   %ebp$/;"	l
f0101243	obj/kern/kernel.asm	/^f0101243:	89 e5                	mov    %esp,%ebp$/;"	l
f0101245	obj/kern/kernel.asm	/^f0101245:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101252	obj/kern/kernel.asm	/^f0101252:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	e8 02 00 00 00       	call   f010126a <vprintfmt>$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	c9                   	leave  $/;"	l
f0101269	obj/kern/kernel.asm	/^f0101269:	c3                   	ret    $/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a <vprintfmt>:$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	55                   	push   %ebp$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	89 e5                	mov    %esp,%ebp$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	57                   	push   %edi$/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	56                   	push   %esi$/;"	l
f010126f	obj/kern/kernel.asm	/^f010126f:	53                   	push   %ebx$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0101273	obj/kern/kernel.asm	/^f0101273:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0101279	obj/kern/kernel.asm	/^f0101279:	eb 12                	jmp    f010128d <vprintfmt+0x23>$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	85 c0                	test   %eax,%eax$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	0f 84 a9 03 00 00    	je     f010162c <vprintfmt+0x3c2>$/;"	l
f0101283	obj/kern/kernel.asm	/^f0101283:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010128a	obj/kern/kernel.asm	/^f010128a:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	75 e3                	jne    f010127b <vprintfmt+0x11>$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f010129c	obj/kern/kernel.asm	/^f010129c:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f01012af	obj/kern/kernel.asm	/^f01012af:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	eb 2b                	jmp    f01012e4 <vprintfmt+0x7a>$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f01012c0	obj/kern/kernel.asm	/^f01012c0:	eb 22                	jmp    f01012e4 <vprintfmt+0x7a>$/;"	l
f01012c2	obj/kern/kernel.asm	/^f01012c2:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	eb 19                	jmp    f01012e4 <vprintfmt+0x7a>$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	eb 0d                	jmp    f01012e4 <vprintfmt+0x7a>$/;"	l
f01012d7	obj/kern/kernel.asm	/^f01012d7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	89 7d e0             	mov    %edi,-0x20(%ebp)$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	83 e8 23             	sub    $0x23,%eax$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	3c 55                	cmp    $0x55,%al$/;"	l
f01012f5	obj/kern/kernel.asm	/^f01012f5:	0f 87 0b 03 00 00    	ja     f0101606 <vprintfmt+0x39c>$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	ff 24 85 58 25 10 f0 	jmp    *-0xfefdaa8(,%eax,4)$/;"	l
f0101305	obj/kern/kernel.asm	/^f0101305:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f010130b	obj/kern/kernel.asm	/^f010130b:	0f be 46 01          	movsbl 0x1(%esi),%eax$/;"	l
f010130f	obj/kern/kernel.asm	/^f010130f:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101315	obj/kern/kernel.asm	/^f0101315:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	77 4a                	ja     f0101364 <vprintfmt+0xfa>$/;"	l
f010131a	obj/kern/kernel.asm	/^f010131a:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f010131d	obj/kern/kernel.asm	/^f010131d:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	8d 14 bf             	lea    (%edi,%edi,4),%edx$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	8d 7c 50 d0          	lea    -0x30(%eax,%edx,2),%edi$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	0f be 06             	movsbl (%esi),%eax$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	76 eb                	jbe    f010131d <vprintfmt+0xb3>$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	eb 2d                	jmp    f0101364 <vprintfmt+0xfa>$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010133d	obj/kern/kernel.asm	/^f010133d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	8b 00                	mov    (%eax),%eax$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101348	obj/kern/kernel.asm	/^f0101348:	eb 1a                	jmp    f0101364 <vprintfmt+0xfa>$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	79 91                	jns    f01012e4 <vprintfmt+0x7a>$/;"	l
f0101353	obj/kern/kernel.asm	/^f0101353:	e9 73 ff ff ff       	jmp    f01012cb <vprintfmt+0x61>$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010135b	obj/kern/kernel.asm	/^f010135b:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	eb 80                	jmp    f01012e4 <vprintfmt+0x7a>$/;"	l
f0101364	obj/kern/kernel.asm	/^f0101364:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0101368	obj/kern/kernel.asm	/^f0101368:	0f 89 76 ff ff ff    	jns    f01012e4 <vprintfmt+0x7a>$/;"	l
f010136e	obj/kern/kernel.asm	/^f010136e:	e9 64 ff ff ff       	jmp    f01012d7 <vprintfmt+0x6d>$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	e9 66 ff ff ff       	jmp    f01012e4 <vprintfmt+0x7a>$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101384	obj/kern/kernel.asm	/^f0101384:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010138b	obj/kern/kernel.asm	/^f010138b:	8b 00                	mov    (%eax),%eax$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	e9 f2 fe ff ff       	jmp    f010128d <vprintfmt+0x23>$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010139e	obj/kern/kernel.asm	/^f010139e:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	8b 00                	mov    (%eax),%eax$/;"	l
f01013a6	obj/kern/kernel.asm	/^f01013a6:	89 c2                	mov    %eax,%edx$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	31 d0                	xor    %edx,%eax$/;"	l
f01013ad	obj/kern/kernel.asm	/^f01013ad:	29 d0                	sub    %edx,%eax$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	7f 0b                	jg     f01013bf <vprintfmt+0x155>$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	8b 14 85 b0 26 10 f0 	mov    -0xfefd950(,%eax,4),%edx$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	85 d2                	test   %edx,%edx$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	75 23                	jne    f01013e2 <vprintfmt+0x178>$/;"	l
f01013bf	obj/kern/kernel.asm	/^f01013bf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	c7 44 24 08 e1 24 10 	movl   $0xf01024e1,0x8(%esp)$/;"	l
f01013ca	obj/kern/kernel.asm	/^f01013ca:	f0 $/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01013cf	obj/kern/kernel.asm	/^f01013cf:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01013d2	obj/kern/kernel.asm	/^f01013d2:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	e8 68 fe ff ff       	call   f0101242 <printfmt>$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	e9 ab fe ff ff       	jmp    f010128d <vprintfmt+0x23>$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	c7 44 24 08 ea 24 10 	movl   $0xf01024ea,0x8(%esp)$/;"	l
f01013ed	obj/kern/kernel.asm	/^f01013ed:	f0 $/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01013f5	obj/kern/kernel.asm	/^f01013f5:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01013f8	obj/kern/kernel.asm	/^f01013f8:	e8 45 fe ff ff       	call   f0101242 <printfmt>$/;"	l
f01013fd	obj/kern/kernel.asm	/^f01013fd:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101400	obj/kern/kernel.asm	/^f0101400:	e9 88 fe ff ff       	jmp    f010128d <vprintfmt+0x23>$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101411	obj/kern/kernel.asm	/^f0101411:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101414	obj/kern/kernel.asm	/^f0101414:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	8b 30                	mov    (%eax),%esi$/;"	l
f0101419	obj/kern/kernel.asm	/^f0101419:	85 f6                	test   %esi,%esi$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	ba da 24 10 f0       	mov    $0xf01024da,%edx$/;"	l
f0101420	obj/kern/kernel.asm	/^f0101420:	0f 44 f2             	cmove  %edx,%esi$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	7e 06                	jle    f010142f <vprintfmt+0x1c5>$/;"	l
f0101429	obj/kern/kernel.asm	/^f0101429:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f010142d	obj/kern/kernel.asm	/^f010142d:	75 10                	jne    f010143f <vprintfmt+0x1d5>$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	85 c0                	test   %eax,%eax$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	0f 85 86 00 00 00    	jne    f01014c3 <vprintfmt+0x259>$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	eb 76                	jmp    f01014b5 <vprintfmt+0x24b>$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	e8 60 03 00 00       	call   f01017ab <strnlen>$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	29 c2                	sub    %eax,%edx$/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	85 d2                	test   %edx,%edx$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	7e d8                	jle    f010142f <vprintfmt+0x1c5>$/;"	l
f0101457	obj/kern/kernel.asm	/^f0101457:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	89 d6                	mov    %edx,%esi$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	89 c7                	mov    %eax,%edi$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101469	obj/kern/kernel.asm	/^f0101469:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010146c	obj/kern/kernel.asm	/^f010146c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0101472	obj/kern/kernel.asm	/^f0101472:	75 f1                	jne    f0101465 <vprintfmt+0x1fb>$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f010147a	obj/kern/kernel.asm	/^f010147a:	8b 7d d0             	mov    -0x30(%ebp),%edi$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	eb b0                	jmp    f010142f <vprintfmt+0x1c5>$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	74 18                	je     f010149d <vprintfmt+0x233>$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	76 10                	jbe    f010149d <vprintfmt+0x233>$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	eb 0a                	jmp    f01014a7 <vprintfmt+0x23d>$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	0f be 06             	movsbl (%esi),%eax$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	83 c6 01             	add    $0x1,%esi$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	85 c0                	test   %eax,%eax$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	75 0e                	jne    f01014c3 <vprintfmt+0x259>$/;"	l
f01014b5	obj/kern/kernel.asm	/^f01014b5:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01014b8	obj/kern/kernel.asm	/^f01014b8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	7f 16                	jg     f01014d4 <vprintfmt+0x26a>$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	e9 ca fd ff ff       	jmp    f010128d <vprintfmt+0x23>$/;"	l
f01014c3	obj/kern/kernel.asm	/^f01014c3:	85 ff                	test   %edi,%edi$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	78 b8                	js     f010147f <vprintfmt+0x215>$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01014d0	obj/kern/kernel.asm	/^f01014d0:	79 ad                	jns    f010147f <vprintfmt+0x215>$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	eb e1                	jmp    f01014b5 <vprintfmt+0x24b>$/;"	l
f01014d4	obj/kern/kernel.asm	/^f01014d4:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f01014e5	obj/kern/kernel.asm	/^f01014e5:	ff d7                	call   *%edi$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	75 ee                	jne    f01014da <vprintfmt+0x270>$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	e9 99 fd ff ff       	jmp    f010128d <vprintfmt+0x23>$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	7e 10                	jle    f0101509 <vprintfmt+0x29f>$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01014fc	obj/kern/kernel.asm	/^f01014fc:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f01014ff	obj/kern/kernel.asm	/^f01014ff:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	8b 30                	mov    (%eax),%esi$/;"	l
f0101504	obj/kern/kernel.asm	/^f0101504:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	eb 26                	jmp    f010152f <vprintfmt+0x2c5>$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	85 c9                	test   %ecx,%ecx$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	74 12                	je     f010151f <vprintfmt+0x2b5>$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101510	obj/kern/kernel.asm	/^f0101510:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	8b 30                	mov    (%eax),%esi$/;"	l
f0101518	obj/kern/kernel.asm	/^f0101518:	89 f7                	mov    %esi,%edi$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	eb 10                	jmp    f010152f <vprintfmt+0x2c5>$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0101525	obj/kern/kernel.asm	/^f0101525:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	8b 30                	mov    (%eax),%esi$/;"	l
f010152a	obj/kern/kernel.asm	/^f010152a:	89 f7                	mov    %esi,%edi$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	85 ff                	test   %edi,%edi$/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	0f 89 8c 00 00 00    	jns    f01015c8 <vprintfmt+0x35e>$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010154a	obj/kern/kernel.asm	/^f010154a:	f7 de                	neg    %esi$/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	83 d7 00             	adc    $0x0,%edi$/;"	l
f010154f	obj/kern/kernel.asm	/^f010154f:	f7 df                	neg    %edi$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0101556	obj/kern/kernel.asm	/^f0101556:	eb 70                	jmp    f01015c8 <vprintfmt+0x35e>$/;"	l
f0101558	obj/kern/kernel.asm	/^f0101558:	89 ca                	mov    %ecx,%edx$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010155d	obj/kern/kernel.asm	/^f010155d:	e8 89 fc ff ff       	call   f01011eb <getuint>$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	89 c6                	mov    %eax,%esi$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	89 d7                	mov    %edx,%edi$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	eb 5b                	jmp    f01015c8 <vprintfmt+0x35e>$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	89 ca                	mov    %ecx,%edx$/;"	l
f010156f	obj/kern/kernel.asm	/^f010156f:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	e8 74 fc ff ff       	call   f01011eb <getuint>$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	89 c6                	mov    %eax,%esi$/;"	l
f0101579	obj/kern/kernel.asm	/^f0101579:	89 d7                	mov    %edx,%edi$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	eb 46                	jmp    f01015c8 <vprintfmt+0x35e>$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101594	obj/kern/kernel.asm	/^f0101594:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010159e	obj/kern/kernel.asm	/^f010159e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01015a4	obj/kern/kernel.asm	/^f01015a4:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	8b 30                	mov    (%eax),%esi$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	eb 13                	jmp    f01015c8 <vprintfmt+0x35e>$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	89 ca                	mov    %ecx,%edx$/;"	l
f01015b7	obj/kern/kernel.asm	/^f01015b7:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	e8 2c fc ff ff       	call   f01011eb <getuint>$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	89 c6                	mov    %eax,%esi$/;"	l
f01015c1	obj/kern/kernel.asm	/^f01015c1:	89 d7                	mov    %edx,%edi$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01015c8	obj/kern/kernel.asm	/^f01015c8:	0f be 55 d8          	movsbl -0x28(%ebp),%edx$/;"	l
f01015cc	obj/kern/kernel.asm	/^f01015cc:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01015db	obj/kern/kernel.asm	/^f01015db:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01015de	obj/kern/kernel.asm	/^f01015de:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	89 da                	mov    %ebx,%edx$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	e8 24 fb ff ff       	call   f0101110 <printnum>$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	e9 99 fc ff ff       	jmp    f010128d <vprintfmt+0x23>$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	e9 87 fc ff ff       	jmp    f010128d <vprintfmt+0x23>$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	0f 84 6f fc ff ff    	je     f010128d <vprintfmt+0x23>$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	75 f7                	jne    f010161e <vprintfmt+0x3b4>$/;"	l
f0101627	obj/kern/kernel.asm	/^f0101627:	e9 61 fc ff ff       	jmp    f010128d <vprintfmt+0x23>$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	5b                   	pop    %ebx$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	5e                   	pop    %esi$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	5f                   	pop    %edi$/;"	l
f0101632	obj/kern/kernel.asm	/^f0101632:	5d                   	pop    %ebp$/;"	l
f0101633	obj/kern/kernel.asm	/^f0101633:	c3                   	ret    $/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634 <vsnprintf>:$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	55                   	push   %ebp$/;"	l
f0101635	obj/kern/kernel.asm	/^f0101635:	89 e5                	mov    %esp,%ebp$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010163d	obj/kern/kernel.asm	/^f010163d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101643	obj/kern/kernel.asm	/^f0101643:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	85 c0                	test   %eax,%eax$/;"	l
f0101653	obj/kern/kernel.asm	/^f0101653:	74 30                	je     f0101685 <vsnprintf+0x51>$/;"	l
f0101655	obj/kern/kernel.asm	/^f0101655:	85 d2                	test   %edx,%edx$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	7e 2c                	jle    f0101685 <vsnprintf+0x51>$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101667	obj/kern/kernel.asm	/^f0101667:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f010166a	obj/kern/kernel.asm	/^f010166a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	c7 04 24 25 12 10 f0 	movl   $0xf0101225,(%esp)$/;"	l
f0101675	obj/kern/kernel.asm	/^f0101675:	e8 f0 fb ff ff       	call   f010126a <vprintfmt>$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010167d	obj/kern/kernel.asm	/^f010167d:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101683	obj/kern/kernel.asm	/^f0101683:	eb 05                	jmp    f010168a <vsnprintf+0x56>$/;"	l
f0101685	obj/kern/kernel.asm	/^f0101685:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010168a	obj/kern/kernel.asm	/^f010168a:	c9                   	leave  $/;"	l
f010168b	obj/kern/kernel.asm	/^f010168b:	c3                   	ret    $/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c <snprintf>:$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	55                   	push   %ebp$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	89 e5                	mov    %esp,%ebp$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101692	obj/kern/kernel.asm	/^f0101692:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01016a7	obj/kern/kernel.asm	/^f01016a7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01016ad	obj/kern/kernel.asm	/^f01016ad:	e8 82 ff ff ff       	call   f0101634 <vsnprintf>$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	c9                   	leave  $/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	c3                   	ret    $/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0 <readline>:$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	55                   	push   %ebp$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	57                   	push   %edi$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	56                   	push   %esi$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	53                   	push   %ebx$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01016cc	obj/kern/kernel.asm	/^f01016cc:	85 c0                	test   %eax,%eax$/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	74 10                	je     f01016e0 <readline+0x20>$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01016d4	obj/kern/kernel.asm	/^f01016d4:	c7 04 24 ea 24 10 f0 	movl   $0xf01024ea,(%esp)$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	e8 da f6 ff ff       	call   f0100dba <cprintf>$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01016e7	obj/kern/kernel.asm	/^f01016e7:	e8 2e ef ff ff       	call   f010061a <iscons>$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	89 c7                	mov    %eax,%edi$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	e8 11 ef ff ff       	call   f0100609 <getchar>$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	89 c3                	mov    %eax,%ebx$/;"	l
f01016fa	obj/kern/kernel.asm	/^f01016fa:	85 c0                	test   %eax,%eax$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	79 17                	jns    f0101715 <readline+0x55>$/;"	l
f01016fe	obj/kern/kernel.asm	/^f01016fe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	c7 04 24 cc 26 10 f0 	movl   $0xf01026cc,(%esp)$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	e8 ac f6 ff ff       	call   f0100dba <cprintf>$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	eb 6d                	jmp    f0101782 <readline+0xc2>$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	74 05                	je     f010171f <readline+0x5f>$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	75 19                	jne    f0101738 <readline+0x78>$/;"	l
f010171f	obj/kern/kernel.asm	/^f010171f:	85 f6                	test   %esi,%esi$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	7e 15                	jle    f0101738 <readline+0x78>$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	85 ff                	test   %edi,%edi$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	74 0c                	je     f0101733 <readline+0x73>$/;"	l
f0101727	obj/kern/kernel.asm	/^f0101727:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f010172e	obj/kern/kernel.asm	/^f010172e:	e8 c6 ee ff ff       	call   f01005f9 <cputchar>$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	eb bb                	jmp    f01016f3 <readline+0x33>$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	7e 1f                	jle    f010175c <readline+0x9c>$/;"	l
f010173d	obj/kern/kernel.asm	/^f010173d:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	7f 17                	jg     f010175c <readline+0x9c>$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	85 ff                	test   %edi,%edi$/;"	l
f0101747	obj/kern/kernel.asm	/^f0101747:	74 08                	je     f0101751 <readline+0x91>$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	e8 a8 ee ff ff       	call   f01005f9 <cputchar>$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	88 9e 60 35 11 f0    	mov    %bl,-0xfeecaa0(%esi)$/;"	l
f0101757	obj/kern/kernel.asm	/^f0101757:	83 c6 01             	add    $0x1,%esi$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	eb 97                	jmp    f01016f3 <readline+0x33>$/;"	l
f010175c	obj/kern/kernel.asm	/^f010175c:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	74 05                	je     f0101766 <readline+0xa6>$/;"	l
f0101761	obj/kern/kernel.asm	/^f0101761:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0101764	obj/kern/kernel.asm	/^f0101764:	75 8d                	jne    f01016f3 <readline+0x33>$/;"	l
f0101766	obj/kern/kernel.asm	/^f0101766:	85 ff                	test   %edi,%edi$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	74 0c                	je     f0101776 <readline+0xb6>$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0101771	obj/kern/kernel.asm	/^f0101771:	e8 83 ee ff ff       	call   f01005f9 <cputchar>$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	c6 86 60 35 11 f0 00 	movb   $0x0,-0xfeecaa0(%esi)$/;"	l
f010177d	obj/kern/kernel.asm	/^f010177d:	b8 60 35 11 f0       	mov    $0xf0113560,%eax$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	5b                   	pop    %ebx$/;"	l
f0101786	obj/kern/kernel.asm	/^f0101786:	5e                   	pop    %esi$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	5f                   	pop    %edi$/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	5d                   	pop    %ebp$/;"	l
f0101789	obj/kern/kernel.asm	/^f0101789:	c3                   	ret    $/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	00 00                	add    %al,(%eax)$/;"	l
f010178c	obj/kern/kernel.asm	/^f010178c:	00 00                	add    %al,(%eax)$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790 <strlen>:$/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	55                   	push   %ebp$/;"	l
f0101791	obj/kern/kernel.asm	/^f0101791:	89 e5                	mov    %esp,%ebp$/;"	l
f0101793	obj/kern/kernel.asm	/^f0101793:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f010179e	obj/kern/kernel.asm	/^f010179e:	74 09                	je     f01017a9 <strlen+0x19>$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	75 f7                	jne    f01017a0 <strlen+0x10>$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	5d                   	pop    %ebp$/;"	l
f01017aa	obj/kern/kernel.asm	/^f01017aa:	c3                   	ret    $/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab <strnlen>:$/;"	l
f01017ab	obj/kern/kernel.asm	/^f01017ab:	55                   	push   %ebp$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	89 e5                	mov    %esp,%ebp$/;"	l
f01017ae	obj/kern/kernel.asm	/^f01017ae:	53                   	push   %ebx$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f01017b5	obj/kern/kernel.asm	/^f01017b5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	85 c9                	test   %ecx,%ecx$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	74 1a                	je     f01017d8 <strnlen+0x2d>$/;"	l
f01017be	obj/kern/kernel.asm	/^f01017be:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f01017c1	obj/kern/kernel.asm	/^f01017c1:	74 15                	je     f01017d8 <strnlen+0x2d>$/;"	l
f01017c3	obj/kern/kernel.asm	/^f01017c3:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	89 d0                	mov    %edx,%eax$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	39 ca                	cmp    %ecx,%edx$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	74 0a                	je     f01017d8 <strnlen+0x2d>$/;"	l
f01017ce	obj/kern/kernel.asm	/^f01017ce:	83 c2 01             	add    $0x1,%edx$/;"	l
f01017d1	obj/kern/kernel.asm	/^f01017d1:	80 7c 13 ff 00       	cmpb   $0x0,-0x1(%ebx,%edx,1)$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	75 f0                	jne    f01017c8 <strnlen+0x1d>$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	5b                   	pop    %ebx$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	5d                   	pop    %ebp$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	c3                   	ret    $/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db <strcpy>:$/;"	l
f01017db	obj/kern/kernel.asm	/^f01017db:	55                   	push   %ebp$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	89 e5                	mov    %esp,%ebp$/;"	l
f01017de	obj/kern/kernel.asm	/^f01017de:	53                   	push   %ebx$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01017e5	obj/kern/kernel.asm	/^f01017e5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f01017ee	obj/kern/kernel.asm	/^f01017ee:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	83 c2 01             	add    $0x1,%edx$/;"	l
f01017f4	obj/kern/kernel.asm	/^f01017f4:	84 c9                	test   %cl,%cl$/;"	l
f01017f6	obj/kern/kernel.asm	/^f01017f6:	75 f2                	jne    f01017ea <strcpy+0xf>$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	5b                   	pop    %ebx$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	5d                   	pop    %ebp$/;"	l
f01017fa	obj/kern/kernel.asm	/^f01017fa:	c3                   	ret    $/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb <strcat>:$/;"	l
f01017fb	obj/kern/kernel.asm	/^f01017fb:	55                   	push   %ebp$/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01017fe	obj/kern/kernel.asm	/^f01017fe:	53                   	push   %ebx$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101802	obj/kern/kernel.asm	/^f0101802:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	e8 83 ff ff ff       	call   f0101790 <strlen>$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0101814	obj/kern/kernel.asm	/^f0101814:	01 d8                	add    %ebx,%eax$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	e8 bd ff ff ff       	call   f01017db <strcpy>$/;"	l
f010181e	obj/kern/kernel.asm	/^f010181e:	89 d8                	mov    %ebx,%eax$/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	83 c4 08             	add    $0x8,%esp$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	5b                   	pop    %ebx$/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	5d                   	pop    %ebp$/;"	l
f0101825	obj/kern/kernel.asm	/^f0101825:	c3                   	ret    $/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826 <strncpy>:$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	55                   	push   %ebp$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	89 e5                	mov    %esp,%ebp$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	56                   	push   %esi$/;"	l
f010182a	obj/kern/kernel.asm	/^f010182a:	53                   	push   %ebx$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0101834	obj/kern/kernel.asm	/^f0101834:	85 f6                	test   %esi,%esi$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	74 18                	je     f0101850 <strncpy+0x2a>$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	39 f1                	cmp    %esi,%ecx$/;"	l
f010184e	obj/kern/kernel.asm	/^f010184e:	75 ed                	jne    f010183d <strncpy+0x17>$/;"	l
f0101850	obj/kern/kernel.asm	/^f0101850:	5b                   	pop    %ebx$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	5e                   	pop    %esi$/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	5d                   	pop    %ebp$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	c3                   	ret    $/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854 <strlcpy>:$/;"	l
f0101854	obj/kern/kernel.asm	/^f0101854:	55                   	push   %ebp$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	89 e5                	mov    %esp,%ebp$/;"	l
f0101857	obj/kern/kernel.asm	/^f0101857:	57                   	push   %edi$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	56                   	push   %esi$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	53                   	push   %ebx$/;"	l
f010185a	obj/kern/kernel.asm	/^f010185a:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101860	obj/kern/kernel.asm	/^f0101860:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	89 f8                	mov    %edi,%eax$/;"	l
f0101865	obj/kern/kernel.asm	/^f0101865:	85 f6                	test   %esi,%esi$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	74 2b                	je     f0101894 <strlcpy+0x40>$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	83 fe 01             	cmp    $0x1,%esi$/;"	l
f010186c	obj/kern/kernel.asm	/^f010186c:	74 23                	je     f0101891 <strlcpy+0x3d>$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	0f b6 0b             	movzbl (%ebx),%ecx$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	84 c9                	test   %cl,%cl$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	74 1c                	je     f0101891 <strlcpy+0x3d>$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	83 ee 02             	sub    $0x2,%esi$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	88 08                	mov    %cl,(%eax)$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	39 f2                	cmp    %esi,%edx$/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	74 0b                	je     f0101891 <strlcpy+0x3d>$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	84 c9                	test   %cl,%cl$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	75 ec                	jne    f010187d <strlcpy+0x29>$/;"	l
f0101891	obj/kern/kernel.asm	/^f0101891:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0101894	obj/kern/kernel.asm	/^f0101894:	29 f8                	sub    %edi,%eax$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	5b                   	pop    %ebx$/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	5e                   	pop    %esi$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	5f                   	pop    %edi$/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	5d                   	pop    %ebp$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	c3                   	ret    $/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b <strcmp>:$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	55                   	push   %ebp$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	89 e5                	mov    %esp,%ebp$/;"	l
f010189e	obj/kern/kernel.asm	/^f010189e:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	84 c0                	test   %al,%al$/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	74 16                	je     f01018c1 <strcmp+0x26>$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	3a 02                	cmp    (%edx),%al$/;"	l
f01018ad	obj/kern/kernel.asm	/^f01018ad:	75 12                	jne    f01018c1 <strcmp+0x26>$/;"	l
f01018af	obj/kern/kernel.asm	/^f01018af:	83 c2 01             	add    $0x1,%edx$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	0f b6 41 01          	movzbl 0x1(%ecx),%eax$/;"	l
f01018b6	obj/kern/kernel.asm	/^f01018b6:	84 c0                	test   %al,%al$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	74 07                	je     f01018c1 <strcmp+0x26>$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01018bd	obj/kern/kernel.asm	/^f01018bd:	3a 02                	cmp    (%edx),%al$/;"	l
f01018bf	obj/kern/kernel.asm	/^f01018bf:	74 ee                	je     f01018af <strcmp+0x14>$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01018c4	obj/kern/kernel.asm	/^f01018c4:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	29 d0                	sub    %edx,%eax$/;"	l
f01018c9	obj/kern/kernel.asm	/^f01018c9:	5d                   	pop    %ebp$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	c3                   	ret    $/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb <strncmp>:$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	55                   	push   %ebp$/;"	l
f01018cc	obj/kern/kernel.asm	/^f01018cc:	89 e5                	mov    %esp,%ebp$/;"	l
f01018ce	obj/kern/kernel.asm	/^f01018ce:	53                   	push   %ebx$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01018dd	obj/kern/kernel.asm	/^f01018dd:	85 d2                	test   %edx,%edx$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	74 28                	je     f0101909 <strncmp+0x3e>$/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	84 c0                	test   %al,%al$/;"	l
f01018e6	obj/kern/kernel.asm	/^f01018e6:	74 24                	je     f010190c <strncmp+0x41>$/;"	l
f01018e8	obj/kern/kernel.asm	/^f01018e8:	3a 03                	cmp    (%ebx),%al$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	75 20                	jne    f010190c <strncmp+0x41>$/;"	l
f01018ec	obj/kern/kernel.asm	/^f01018ec:	83 ea 01             	sub    $0x1,%edx$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	74 13                	je     f0101904 <strncmp+0x39>$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	84 c0                	test   %al,%al$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	74 0e                	je     f010190c <strncmp+0x41>$/;"	l
f01018fe	obj/kern/kernel.asm	/^f01018fe:	3a 03                	cmp    (%ebx),%al$/;"	l
f0101900	obj/kern/kernel.asm	/^f0101900:	74 ea                	je     f01018ec <strncmp+0x21>$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	eb 08                	jmp    f010190c <strncmp+0x41>$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	5b                   	pop    %ebx$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	5d                   	pop    %ebp$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	c3                   	ret    $/;"	l
f010190c	obj/kern/kernel.asm	/^f010190c:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	29 d0                	sub    %edx,%eax$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	eb f3                	jmp    f0101909 <strncmp+0x3e>$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916 <strchr>:$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	55                   	push   %ebp$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	89 e5                	mov    %esp,%ebp$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010191c	obj/kern/kernel.asm	/^f010191c:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0101923	obj/kern/kernel.asm	/^f0101923:	84 d2                	test   %dl,%dl$/;"	l
f0101925	obj/kern/kernel.asm	/^f0101925:	74 1c                	je     f0101943 <strchr+0x2d>$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	38 ca                	cmp    %cl,%dl$/;"	l
f0101929	obj/kern/kernel.asm	/^f0101929:	75 09                	jne    f0101934 <strchr+0x1e>$/;"	l
f010192b	obj/kern/kernel.asm	/^f010192b:	eb 1b                	jmp    f0101948 <strchr+0x32>$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	38 ca                	cmp    %cl,%dl$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	74 14                	je     f0101948 <strchr+0x32>$/;"	l
f0101934	obj/kern/kernel.asm	/^f0101934:	0f b6 50 01          	movzbl 0x1(%eax),%edx$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	84 d2                	test   %dl,%dl$/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a:	75 f1                	jne    f010192d <strchr+0x17>$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	eb 05                	jmp    f0101948 <strchr+0x32>$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	5d                   	pop    %ebp$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	c3                   	ret    $/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a <strfind>:$/;"	l
f010194a	obj/kern/kernel.asm	/^f010194a:	55                   	push   %ebp$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	89 e5                	mov    %esp,%ebp$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	84 d2                	test   %dl,%dl$/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	74 14                	je     f010196f <strfind+0x25>$/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	38 ca                	cmp    %cl,%dl$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	75 06                	jne    f0101965 <strfind+0x1b>$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	eb 0e                	jmp    f010196f <strfind+0x25>$/;"	l
f0101961	obj/kern/kernel.asm	/^f0101961:	38 ca                	cmp    %cl,%dl$/;"	l
f0101963	obj/kern/kernel.asm	/^f0101963:	74 0a                	je     f010196f <strfind+0x25>$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010196b	obj/kern/kernel.asm	/^f010196b:	84 d2                	test   %dl,%dl$/;"	l
f010196d	obj/kern/kernel.asm	/^f010196d:	75 f2                	jne    f0101961 <strfind+0x17>$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	5d                   	pop    %ebp$/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	c3                   	ret    $/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971 <memset>:$/;"	l
f0101971	obj/kern/kernel.asm	/^f0101971:	55                   	push   %ebp$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	89 e5                	mov    %esp,%ebp$/;"	l
f0101974	obj/kern/kernel.asm	/^f0101974:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101977	obj/kern/kernel.asm	/^f0101977:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f010197a	obj/kern/kernel.asm	/^f010197a:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0101989	obj/kern/kernel.asm	/^f0101989:	85 c9                	test   %ecx,%ecx$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	74 30                	je     f01019bd <memset+0x4c>$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	75 25                	jne    f01019ba <memset+0x49>$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0101998	obj/kern/kernel.asm	/^f0101998:	75 20                	jne    f01019ba <memset+0x49>$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	89 d3                	mov    %edx,%ebx$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	89 d6                	mov    %edx,%esi$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01019a7	obj/kern/kernel.asm	/^f01019a7:	89 d0                	mov    %edx,%eax$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	09 f0                	or     %esi,%eax$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	09 d0                	or     %edx,%eax$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	09 d8                	or     %ebx,%eax$/;"	l
f01019b2	obj/kern/kernel.asm	/^f01019b2:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	fc                   	cld    $/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	eb 03                	jmp    f01019bd <memset+0x4c>$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	fc                   	cld    $/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01019bd	obj/kern/kernel.asm	/^f01019bd:	89 f8                	mov    %edi,%eax$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01019c8	obj/kern/kernel.asm	/^f01019c8:	89 ec                	mov    %ebp,%esp$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	5d                   	pop    %ebp$/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	c3                   	ret    $/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc <memmove>:$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	55                   	push   %ebp$/;"	l
f01019cd	obj/kern/kernel.asm	/^f01019cd:	89 e5                	mov    %esp,%ebp$/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01019d5	obj/kern/kernel.asm	/^f01019d5:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01019de	obj/kern/kernel.asm	/^f01019de:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	39 c6                	cmp    %eax,%esi$/;"	l
f01019e3	obj/kern/kernel.asm	/^f01019e3:	73 36                	jae    f0101a1b <memmove+0x4f>$/;"	l
f01019e5	obj/kern/kernel.asm	/^f01019e5:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01019e8	obj/kern/kernel.asm	/^f01019e8:	39 d0                	cmp    %edx,%eax$/;"	l
f01019ea	obj/kern/kernel.asm	/^f01019ea:	73 2f                	jae    f0101a1b <memmove+0x4f>$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f01019ef	obj/kern/kernel.asm	/^f01019ef:	f6 c2 03             	test   $0x3,%dl$/;"	l
f01019f2	obj/kern/kernel.asm	/^f01019f2:	75 1b                	jne    f0101a0f <memmove+0x43>$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	75 13                	jne    f0101a0f <memmove+0x43>$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01019ff	obj/kern/kernel.asm	/^f01019ff:	75 0e                	jne    f0101a0f <memmove+0x43>$/;"	l
f0101a01	obj/kern/kernel.asm	/^f0101a01:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0101a04	obj/kern/kernel.asm	/^f0101a04:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0101a07	obj/kern/kernel.asm	/^f0101a07:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101a0a	obj/kern/kernel.asm	/^f0101a0a:	fd                   	std    $/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	eb 09                	jmp    f0101a18 <memmove+0x4c>$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0101a15	obj/kern/kernel.asm	/^f0101a15:	fd                   	std    $/;"	l
f0101a16	obj/kern/kernel.asm	/^f0101a16:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	fc                   	cld    $/;"	l
f0101a19	obj/kern/kernel.asm	/^f0101a19:	eb 20                	jmp    f0101a3b <memmove+0x6f>$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	75 13                	jne    f0101a36 <memmove+0x6a>$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	a8 03                	test   $0x3,%al$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	75 0f                	jne    f0101a36 <memmove+0x6a>$/;"	l
f0101a27	obj/kern/kernel.asm	/^f0101a27:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	75 0a                	jne    f0101a36 <memmove+0x6a>$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	89 c7                	mov    %eax,%edi$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	fc                   	cld    $/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	eb 05                	jmp    f0101a3b <memmove+0x6f>$/;"	l
f0101a36	obj/kern/kernel.asm	/^f0101a36:	89 c7                	mov    %eax,%edi$/;"	l
f0101a38	obj/kern/kernel.asm	/^f0101a38:	fc                   	cld    $/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0101a3b	obj/kern/kernel.asm	/^f0101a3b:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	89 ec                	mov    %ebp,%esp$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	5d                   	pop    %ebp$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	c3                   	ret    $/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45 <memcpy>:$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	55                   	push   %ebp$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101a4b	obj/kern/kernel.asm	/^f0101a4b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101a52	obj/kern/kernel.asm	/^f0101a52:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	e8 68 ff ff ff       	call   f01019cc <memmove>$/;"	l
f0101a64	obj/kern/kernel.asm	/^f0101a64:	c9                   	leave  $/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	c3                   	ret    $/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66 <memcmp>:$/;"	l
f0101a66	obj/kern/kernel.asm	/^f0101a66:	55                   	push   %ebp$/;"	l
f0101a67	obj/kern/kernel.asm	/^f0101a67:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a69	obj/kern/kernel.asm	/^f0101a69:	57                   	push   %edi$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	56                   	push   %esi$/;"	l
f0101a6b	obj/kern/kernel.asm	/^f0101a6b:	53                   	push   %ebx$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101a75	obj/kern/kernel.asm	/^f0101a75:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	85 ff                	test   %edi,%edi$/;"	l
f0101a7c	obj/kern/kernel.asm	/^f0101a7c:	74 37                	je     f0101ab5 <memcmp+0x4f>$/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	0f b6 0e             	movzbl (%esi),%ecx$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0101a87	obj/kern/kernel.asm	/^f0101a87:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	38 c8                	cmp    %cl,%al$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	74 1c                	je     f0101aac <memcmp+0x46>$/;"	l
f0101a90	obj/kern/kernel.asm	/^f0101a90:	eb 10                	jmp    f0101aa2 <memcmp+0x3c>$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	0f b6 44 13 01       	movzbl 0x1(%ebx,%edx,1),%eax$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	38 c8                	cmp    %cl,%al$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	74 0a                	je     f0101aac <memcmp+0x46>$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101aa5	obj/kern/kernel.asm	/^f0101aa5:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	29 c8                	sub    %ecx,%eax$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	eb 09                	jmp    f0101ab5 <memcmp+0x4f>$/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	39 fa                	cmp    %edi,%edx$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	75 e2                	jne    f0101a92 <memcmp+0x2c>$/;"	l
f0101ab0	obj/kern/kernel.asm	/^f0101ab0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101ab5	obj/kern/kernel.asm	/^f0101ab5:	5b                   	pop    %ebx$/;"	l
f0101ab6	obj/kern/kernel.asm	/^f0101ab6:	5e                   	pop    %esi$/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	5f                   	pop    %edi$/;"	l
f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	5d                   	pop    %ebp$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	c3                   	ret    $/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba <memfind>:$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	55                   	push   %ebp$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	89 e5                	mov    %esp,%ebp$/;"	l
f0101abd	obj/kern/kernel.asm	/^f0101abd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	89 c2                	mov    %eax,%edx$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0101ac5	obj/kern/kernel.asm	/^f0101ac5:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	73 19                	jae    f0101ae2 <memfind+0x28>$/;"	l
f0101ac9	obj/kern/kernel.asm	/^f0101ac9:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0101acd	obj/kern/kernel.asm	/^f0101acd:	38 08                	cmp    %cl,(%eax)$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	75 06                	jne    f0101ad7 <memfind+0x1d>$/;"	l
f0101ad1	obj/kern/kernel.asm	/^f0101ad1:	eb 0f                	jmp    f0101ae2 <memfind+0x28>$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	38 08                	cmp    %cl,(%eax)$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	74 0b                	je     f0101ae2 <memfind+0x28>$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101ada	obj/kern/kernel.asm	/^f0101ada:	39 d0                	cmp    %edx,%eax$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101ae0	obj/kern/kernel.asm	/^f0101ae0:	75 f1                	jne    f0101ad3 <memfind+0x19>$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	5d                   	pop    %ebp$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	c3                   	ret    $/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4 <strtol>:$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	55                   	push   %ebp$/;"	l
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	89 e5                	mov    %esp,%ebp$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	57                   	push   %edi$/;"	l
f0101ae8	obj/kern/kernel.asm	/^f0101ae8:	56                   	push   %esi$/;"	l
f0101ae9	obj/kern/kernel.asm	/^f0101ae9:	53                   	push   %ebx$/;"	l
f0101aea	obj/kern/kernel.asm	/^f0101aea:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	3c 20                	cmp    $0x20,%al$/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	74 04                	je     f0101afb <strtol+0x17>$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	3c 09                	cmp    $0x9,%al$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	75 0e                	jne    f0101b09 <strtol+0x25>$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0101b01	obj/kern/kernel.asm	/^f0101b01:	3c 20                	cmp    $0x20,%al$/;"	l
f0101b03	obj/kern/kernel.asm	/^f0101b03:	74 f6                	je     f0101afb <strtol+0x17>$/;"	l
f0101b05	obj/kern/kernel.asm	/^f0101b05:	3c 09                	cmp    $0x9,%al$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	74 f2                	je     f0101afb <strtol+0x17>$/;"	l
f0101b09	obj/kern/kernel.asm	/^f0101b09:	3c 2b                	cmp    $0x2b,%al$/;"	l
f0101b0b	obj/kern/kernel.asm	/^f0101b0b:	75 0a                	jne    f0101b17 <strtol+0x33>$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101b10	obj/kern/kernel.asm	/^f0101b10:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101b15	obj/kern/kernel.asm	/^f0101b15:	eb 10                	jmp    f0101b27 <strtol+0x43>$/;"	l
f0101b17	obj/kern/kernel.asm	/^f0101b17:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	3c 2d                	cmp    $0x2d,%al$/;"	l
f0101b1e	obj/kern/kernel.asm	/^f0101b1e:	75 07                	jne    f0101b27 <strtol+0x43>$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	85 db                	test   %ebx,%ebx$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	0f 94 c0             	sete   %al$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	74 05                	je     f0101b33 <strtol+0x4f>$/;"	l
f0101b2e	obj/kern/kernel.asm	/^f0101b2e:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0101b31	obj/kern/kernel.asm	/^f0101b31:	75 15                	jne    f0101b48 <strtol+0x64>$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	75 10                	jne    f0101b48 <strtol+0x64>$/;"	l
f0101b38	obj/kern/kernel.asm	/^f0101b38:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	75 0a                	jne    f0101b48 <strtol+0x64>$/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	83 c2 02             	add    $0x2,%edx$/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0101b46	obj/kern/kernel.asm	/^f0101b46:	eb 13                	jmp    f0101b5b <strtol+0x77>$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	84 c0                	test   %al,%al$/;"	l
f0101b4a	obj/kern/kernel.asm	/^f0101b4a:	74 0f                	je     f0101b5b <strtol+0x77>$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	75 05                	jne    f0101b5b <strtol+0x77>$/;"	l
f0101b56	obj/kern/kernel.asm	/^f0101b56:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101b59	obj/kern/kernel.asm	/^f0101b59:	b3 08                	mov    $0x8,%bl$/;"	l
f0101b5b	obj/kern/kernel.asm	/^f0101b5b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	89 de                	mov    %ebx,%esi$/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	77 08                	ja     f0101b75 <strtol+0x91>$/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	eb 1e                	jmp    f0101b93 <strtol+0xaf>$/;"	l
f0101b75	obj/kern/kernel.asm	/^f0101b75:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f0101b78	obj/kern/kernel.asm	/^f0101b78:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101b7b	obj/kern/kernel.asm	/^f0101b7b:	77 08                	ja     f0101b85 <strtol+0xa1>$/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0101b80	obj/kern/kernel.asm	/^f0101b80:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0101b83	obj/kern/kernel.asm	/^f0101b83:	eb 0e                	jmp    f0101b93 <strtol+0xaf>$/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f0101b88	obj/kern/kernel.asm	/^f0101b88:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	77 14                	ja     f0101ba1 <strtol+0xbd>$/;"	l
f0101b8d	obj/kern/kernel.asm	/^f0101b8d:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	39 f1                	cmp    %esi,%ecx$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	7d 0e                	jge    f0101ba5 <strtol+0xc1>$/;"	l
f0101b97	obj/kern/kernel.asm	/^f0101b97:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	0f af c6             	imul   %esi,%eax$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	01 c8                	add    %ecx,%eax$/;"	l
f0101b9f	obj/kern/kernel.asm	/^f0101b9f:	eb c1                	jmp    f0101b62 <strtol+0x7e>$/;"	l
f0101ba1	obj/kern/kernel.asm	/^f0101ba1:	89 c1                	mov    %eax,%ecx$/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	eb 02                	jmp    f0101ba7 <strtol+0xc3>$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	89 c1                	mov    %eax,%ecx$/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	74 05                	je     f0101bb2 <strtol+0xce>$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101bb2	obj/kern/kernel.asm	/^f0101bb2:	89 ca                	mov    %ecx,%edx$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	f7 da                	neg    %edx$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	85 ff                	test   %edi,%edi$/;"	l
f0101bb8	obj/kern/kernel.asm	/^f0101bb8:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	5b                   	pop    %ebx$/;"	l
f0101bbc	obj/kern/kernel.asm	/^f0101bbc:	5e                   	pop    %esi$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	5f                   	pop    %edi$/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	5d                   	pop    %ebp$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	c3                   	ret    $/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0 <__udivdi3>:$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101bc3	obj/kern/kernel.asm	/^f0101bc3:	89 7c 24 14          	mov    %edi,0x14(%esp)$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	8b 7c 24 2c          	mov    0x2c(%esp),%edi$/;"	l
f0101bcb	obj/kern/kernel.asm	/^f0101bcb:	8b 44 24 20          	mov    0x20(%esp),%eax$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	8b 74 24 24          	mov    0x24(%esp),%esi$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	85 ff                	test   %edi,%edi$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	89 6c 24 18          	mov    %ebp,0x18(%esp)$/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	89 cd                	mov    %ecx,%ebp$/;"	l
f0101be7	obj/kern/kernel.asm	/^f0101be7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	75 33                	jne    f0101c20 <__udivdi3+0x60>$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	39 f1                	cmp    %esi,%ecx$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	77 57                	ja     f0101c48 <__udivdi3+0x88>$/;"	l
f0101bf1	obj/kern/kernel.asm	/^f0101bf1:	85 c9                	test   %ecx,%ecx$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	75 0b                	jne    f0101c00 <__udivdi3+0x40>$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	31 d2                	xor    %edx,%edx$/;"	l
f0101bfc	obj/kern/kernel.asm	/^f0101bfc:	f7 f1                	div    %ecx$/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	89 c1                	mov    %eax,%ecx$/;"	l
f0101c00	obj/kern/kernel.asm	/^f0101c00:	89 f0                	mov    %esi,%eax$/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	31 d2                	xor    %edx,%edx$/;"	l
f0101c04	obj/kern/kernel.asm	/^f0101c04:	f7 f1                	div    %ecx$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	89 c6                	mov    %eax,%esi$/;"	l
f0101c08	obj/kern/kernel.asm	/^f0101c08:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	f7 f1                	div    %ecx$/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	89 f2                	mov    %esi,%edx$/;"	l
f0101c10	obj/kern/kernel.asm	/^f0101c10:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0101c14	obj/kern/kernel.asm	/^f0101c14:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0101c1c	obj/kern/kernel.asm	/^f0101c1c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	c3                   	ret    $/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	31 d2                	xor    %edx,%edx$/;"	l
f0101c22	obj/kern/kernel.asm	/^f0101c22:	31 c0                	xor    %eax,%eax$/;"	l
f0101c24	obj/kern/kernel.asm	/^f0101c24:	39 f7                	cmp    %esi,%edi$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	77 e8                	ja     f0101c10 <__udivdi3+0x50>$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	0f bd cf             	bsr    %edi,%ecx$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	75 2c                	jne    f0101c60 <__udivdi3+0xa0>$/;"	l
f0101c34	obj/kern/kernel.asm	/^f0101c34:	3b 6c 24 08          	cmp    0x8(%esp),%ebp$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	76 04                	jbe    f0101c3e <__udivdi3+0x7e>$/;"	l
f0101c3a	obj/kern/kernel.asm	/^f0101c3a:	39 f7                	cmp    %esi,%edi$/;"	l
f0101c3c	obj/kern/kernel.asm	/^f0101c3c:	73 d2                	jae    f0101c10 <__udivdi3+0x50>$/;"	l
f0101c3e	obj/kern/kernel.asm	/^f0101c3e:	31 d2                	xor    %edx,%edx$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101c45	obj/kern/kernel.asm	/^f0101c45:	eb c9                	jmp    f0101c10 <__udivdi3+0x50>$/;"	l
f0101c47	obj/kern/kernel.asm	/^f0101c47:	90                   	nop$/;"	l
f0101c48	obj/kern/kernel.asm	/^f0101c48:	89 f2                	mov    %esi,%edx$/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	f7 f1                	div    %ecx$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	31 d2                	xor    %edx,%edx$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0101c56	obj/kern/kernel.asm	/^f0101c56:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	c3                   	ret    $/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	66 90                	xchg   %ax,%ax$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101c65	obj/kern/kernel.asm	/^f0101c65:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a:	89 ea                	mov    %ebp,%edx$/;"	l
f0101c6c	obj/kern/kernel.asm	/^f0101c6c:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	d3 e7                	shl    %cl,%edi$/;"	d
f0101c72	obj/kern/kernel.asm	/^f0101c72:	89 c1                	mov    %eax,%ecx$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	d3 ea                	shr    %cl,%edx$/;"	d
f0101c76	obj/kern/kernel.asm	/^f0101c76:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	09 fa                	or     %edi,%edx$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	89 f7                	mov    %esi,%edi$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	89 f2                	mov    %esi,%edx$/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	d3 e5                	shl    %cl,%ebp$/;"	d
f0101c8b	obj/kern/kernel.asm	/^f0101c8b:	89 c1                	mov    %eax,%ecx$/;"	l
f0101c8d	obj/kern/kernel.asm	/^f0101c8d:	d3 ef                	shr    %cl,%edi$/;"	d
f0101c8f	obj/kern/kernel.asm	/^f0101c8f:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	d3 e2                	shl    %cl,%edx$/;"	d
f0101c96	obj/kern/kernel.asm	/^f0101c96:	89 c1                	mov    %eax,%ecx$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	d3 ee                	shr    %cl,%esi$/;"	d
f0101c9a	obj/kern/kernel.asm	/^f0101c9a:	09 d6                	or     %edx,%esi$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	89 fa                	mov    %edi,%edx$/;"	l
f0101c9e	obj/kern/kernel.asm	/^f0101c9e:	89 f0                	mov    %esi,%eax$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	f7 74 24 0c          	divl   0xc(%esp)$/;"	l
f0101ca4	obj/kern/kernel.asm	/^f0101ca4:	89 d7                	mov    %edx,%edi$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	89 c6                	mov    %eax,%esi$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	f7 e5                	mul    %ebp$/;"	l
f0101caa	obj/kern/kernel.asm	/^f0101caa:	39 d7                	cmp    %edx,%edi$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	72 22                	jb     f0101cd0 <__udivdi3+0x110>$/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	8b 6c 24 08          	mov    0x8(%esp),%ebp$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	d3 e5                	shl    %cl,%ebp$/;"	d
f0101cb9	obj/kern/kernel.asm	/^f0101cb9:	39 c5                	cmp    %eax,%ebp$/;"	l
f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	73 04                	jae    f0101cc1 <__udivdi3+0x101>$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	39 d7                	cmp    %edx,%edi$/;"	l
f0101cbf	obj/kern/kernel.asm	/^f0101cbf:	74 0f                	je     f0101cd0 <__udivdi3+0x110>$/;"	l
f0101cc1	obj/kern/kernel.asm	/^f0101cc1:	89 f0                	mov    %esi,%eax$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	31 d2                	xor    %edx,%edx$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	e9 46 ff ff ff       	jmp    f0101c10 <__udivdi3+0x50>$/;"	l
f0101cca	obj/kern/kernel.asm	/^f0101cca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	8d 46 ff             	lea    -0x1(%esi),%eax$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	31 d2                	xor    %edx,%edx$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0101cd9	obj/kern/kernel.asm	/^f0101cd9:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	c3                   	ret    $/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0 <__umoddi3>:$/;"	l
f0101cf0	obj/kern/kernel.asm	/^f0101cf0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	89 6c 24 18          	mov    %ebp,0x18(%esp)$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp$/;"	l
f0101cfb	obj/kern/kernel.asm	/^f0101cfb:	8b 44 24 20          	mov    0x20(%esp),%eax$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0101d03	obj/kern/kernel.asm	/^f0101d03:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	8b 74 24 24          	mov    0x24(%esp),%esi$/;"	l
f0101d0b	obj/kern/kernel.asm	/^f0101d0b:	85 ed                	test   %ebp,%ebp$/;"	l
f0101d0d	obj/kern/kernel.asm	/^f0101d0d:	89 7c 24 14          	mov    %edi,0x14(%esp)$/;"	l
f0101d11	obj/kern/kernel.asm	/^f0101d11:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	89 cf                	mov    %ecx,%edi$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d1a	obj/kern/kernel.asm	/^f0101d1a:	89 f2                	mov    %esi,%edx$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	75 1a                	jne    f0101d38 <__umoddi3+0x48>$/;"	l
f0101d1e	obj/kern/kernel.asm	/^f0101d1e:	39 f1                	cmp    %esi,%ecx$/;"	l
f0101d20	obj/kern/kernel.asm	/^f0101d20:	76 4e                	jbe    f0101d70 <__umoddi3+0x80>$/;"	l
f0101d22	obj/kern/kernel.asm	/^f0101d22:	f7 f1                	div    %ecx$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	89 d0                	mov    %edx,%eax$/;"	l
f0101d26	obj/kern/kernel.asm	/^f0101d26:	31 d2                	xor    %edx,%edx$/;"	l
f0101d28	obj/kern/kernel.asm	/^f0101d28:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0101d34	obj/kern/kernel.asm	/^f0101d34:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	c3                   	ret    $/;"	l
f0101d38	obj/kern/kernel.asm	/^f0101d38:	39 f5                	cmp    %esi,%ebp$/;"	l
f0101d3a	obj/kern/kernel.asm	/^f0101d3a:	77 54                	ja     f0101d90 <__umoddi3+0xa0>$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	0f bd c5             	bsr    %ebp,%eax$/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f0101d42	obj/kern/kernel.asm	/^f0101d42:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	75 60                	jne    f0101da8 <__umoddi3+0xb8>$/;"	l
f0101d48	obj/kern/kernel.asm	/^f0101d48:	3b 0c 24             	cmp    (%esp),%ecx$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	0f 87 07 01 00 00    	ja     f0101e58 <__umoddi3+0x168>$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	89 f2                	mov    %esi,%edx$/;"	l
f0101d53	obj/kern/kernel.asm	/^f0101d53:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0101d56	obj/kern/kernel.asm	/^f0101d56:	29 ce                	sub    %ecx,%esi$/;"	l
f0101d58	obj/kern/kernel.asm	/^f0101d58:	19 ea                	sbb    %ebp,%edx$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101d5d	obj/kern/kernel.asm	/^f0101d5d:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0101d68	obj/kern/kernel.asm	/^f0101d68:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	c3                   	ret    $/;"	l
f0101d70	obj/kern/kernel.asm	/^f0101d70:	85 c9                	test   %ecx,%ecx$/;"	l
f0101d72	obj/kern/kernel.asm	/^f0101d72:	75 0b                	jne    f0101d7f <__umoddi3+0x8f>$/;"	l
f0101d74	obj/kern/kernel.asm	/^f0101d74:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101d79	obj/kern/kernel.asm	/^f0101d79:	31 d2                	xor    %edx,%edx$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	f7 f1                	div    %ecx$/;"	l
f0101d7d	obj/kern/kernel.asm	/^f0101d7d:	89 c1                	mov    %eax,%ecx$/;"	l
f0101d7f	obj/kern/kernel.asm	/^f0101d7f:	89 f0                	mov    %esi,%eax$/;"	l
f0101d81	obj/kern/kernel.asm	/^f0101d81:	31 d2                	xor    %edx,%edx$/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	f7 f1                	div    %ecx$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	f7 f1                	div    %ecx$/;"	l
f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	eb 98                	jmp    f0101d24 <__umoddi3+0x34>$/;"	l
f0101d8c	obj/kern/kernel.asm	/^f0101d8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	89 f2                	mov    %esi,%edx$/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0101d9a	obj/kern/kernel.asm	/^f0101d9a:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0101d9e	obj/kern/kernel.asm	/^f0101d9e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101da1	obj/kern/kernel.asm	/^f0101da1:	c3                   	ret    $/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0101da8	obj/kern/kernel.asm	/^f0101da8:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101dad	obj/kern/kernel.asm	/^f0101dad:	89 e8                	mov    %ebp,%eax$/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	bd 20 00 00 00       	mov    $0x20,%ebp$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	2b 6c 24 04          	sub    0x4(%esp),%ebp$/;"	l
f0101db8	obj/kern/kernel.asm	/^f0101db8:	89 fa                	mov    %edi,%edx$/;"	l
f0101dba	obj/kern/kernel.asm	/^f0101dba:	d3 e0                	shl    %cl,%eax$/;"	d
f0101dbc	obj/kern/kernel.asm	/^f0101dbc:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101dbe	obj/kern/kernel.asm	/^f0101dbe:	d3 ea                	shr    %cl,%edx$/;"	d
f0101dc0	obj/kern/kernel.asm	/^f0101dc0:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	09 c2                	or     %eax,%edx$/;"	l
f0101dc7	obj/kern/kernel.asm	/^f0101dc7:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0101dcb	obj/kern/kernel.asm	/^f0101dcb:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	89 f2                	mov    %esi,%edx$/;"	l
f0101dd0	obj/kern/kernel.asm	/^f0101dd0:	d3 e7                	shl    %cl,%edi$/;"	d
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101dd4	obj/kern/kernel.asm	/^f0101dd4:	d3 ea                	shr    %cl,%edx$/;"	d
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	d3 e6                	shl    %cl,%esi$/;"	d
f0101de1	obj/kern/kernel.asm	/^f0101de1:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	d3 e8                	shr    %cl,%eax$/;"	d
f0101de5	obj/kern/kernel.asm	/^f0101de5:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	09 f0                	or     %esi,%eax$/;"	l
f0101dec	obj/kern/kernel.asm	/^f0101dec:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	f7 34 24             	divl   (%esp)$/;"	l
f0101df3	obj/kern/kernel.asm	/^f0101df3:	d3 e6                	shl    %cl,%esi$/;"	d
f0101df5	obj/kern/kernel.asm	/^f0101df5:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	89 d6                	mov    %edx,%esi$/;"	l
f0101dfb	obj/kern/kernel.asm	/^f0101dfb:	f7 e7                	mul    %edi$/;"	l
f0101dfd	obj/kern/kernel.asm	/^f0101dfd:	39 d6                	cmp    %edx,%esi$/;"	l
f0101dff	obj/kern/kernel.asm	/^f0101dff:	89 c1                	mov    %eax,%ecx$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	89 d7                	mov    %edx,%edi$/;"	l
f0101e03	obj/kern/kernel.asm	/^f0101e03:	72 3f                	jb     f0101e44 <__umoddi3+0x154>$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f0101e09	obj/kern/kernel.asm	/^f0101e09:	72 35                	jb     f0101e40 <__umoddi3+0x150>$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	29 c8                	sub    %ecx,%eax$/;"	l
f0101e11	obj/kern/kernel.asm	/^f0101e11:	19 fe                	sbb    %edi,%esi$/;"	l
f0101e13	obj/kern/kernel.asm	/^f0101e13:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101e18	obj/kern/kernel.asm	/^f0101e18:	89 f2                	mov    %esi,%edx$/;"	l
f0101e1a	obj/kern/kernel.asm	/^f0101e1a:	d3 e8                	shr    %cl,%eax$/;"	d
f0101e1c	obj/kern/kernel.asm	/^f0101e1c:	89 e9                	mov    %ebp,%ecx$/;"	l
f0101e1e	obj/kern/kernel.asm	/^f0101e1e:	d3 e2                	shl    %cl,%edx$/;"	d
f0101e20	obj/kern/kernel.asm	/^f0101e20:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0101e25	obj/kern/kernel.asm	/^f0101e25:	09 d0                	or     %edx,%eax$/;"	l
f0101e27	obj/kern/kernel.asm	/^f0101e27:	89 f2                	mov    %esi,%edx$/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	d3 ea                	shr    %cl,%edx$/;"	d
f0101e2b	obj/kern/kernel.asm	/^f0101e2b:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0101e33	obj/kern/kernel.asm	/^f0101e33:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0101e37	obj/kern/kernel.asm	/^f0101e37:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	c3                   	ret    $/;"	l
f0101e3b	obj/kern/kernel.asm	/^f0101e3b:	90                   	nop$/;"	l
f0101e3c	obj/kern/kernel.asm	/^f0101e3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101e40	obj/kern/kernel.asm	/^f0101e40:	39 d6                	cmp    %edx,%esi$/;"	l
f0101e42	obj/kern/kernel.asm	/^f0101e42:	75 c7                	jne    f0101e0b <__umoddi3+0x11b>$/;"	l
f0101e44	obj/kern/kernel.asm	/^f0101e44:	89 d7                	mov    %edx,%edi$/;"	l
f0101e46	obj/kern/kernel.asm	/^f0101e46:	89 c1                	mov    %eax,%ecx$/;"	l
f0101e48	obj/kern/kernel.asm	/^f0101e48:	2b 4c 24 0c          	sub    0xc(%esp),%ecx$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	1b 3c 24             	sbb    (%esp),%edi$/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	eb ba                	jmp    f0101e0b <__umoddi3+0x11b>$/;"	l
f0101e51	obj/kern/kernel.asm	/^f0101e51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0101e58	obj/kern/kernel.asm	/^f0101e58:	39 f5                	cmp    %esi,%ebp$/;"	l
f0101e5a	obj/kern/kernel.asm	/^f0101e5a:	0f 82 f1 fe ff ff    	jb     f0101d51 <__umoddi3+0x61>$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	e9 f8 fe ff ff       	jmp    f0101d5d <__umoddi3+0x6d>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
fileno	gradelib.py	/^    def fileno(self):$/;"	f	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient	access:public
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
get_current_test	gradelib.py	/^def get_current_test():$/;"	f	access:public
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f	access:public
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
handle_output	gradelib.py	/^        def handle_output(output, buf=buf):$/;"	f	function:call_on_line.setup_call_on_line	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient	access:public
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:	signature:(void)
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/kern/kernel.asm	/^int mon_setcolor(int argc, char **argv, struct Trapframe *tf) {$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kill	gradelib.py	/^    def kill(self):$/;"	m	class:GDBClient	access:public
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
long	obj/kern/kernel.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
make	gradelib.py	/^def make(*target):$/;"	f	access:public
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner	access:public
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f	access:public
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	signature:(unsigned reg)
mc146818_read	kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	signature:(unsigned reg, unsigned datum)
mc146818_write	kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	signature:(void)
mem_init	kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_setcolor	kern/monitor.c	/^int mon_setcolor(int argc, char **argv, struct Trapframe *tf) {$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_setcolor	kern/monitor.h	/^int mon_setcolor(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:	signature:(int r)
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	71;"	d
os	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_alloc	kern/pmap.h	/^struct PageInfo *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	signature:(struct PageInfo* pp)
page_decref	kern/pmap.h	/^void	page_decref(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_free	kern/pmap.h	/^void	page_free(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	signature:(void)
page_init	kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_insert	kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_lookup	kern/pmap.h	/^struct PageInfo *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
page_remove	kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	signature:(pde_t *pgdir, const void *va, int create)
pgdir_walk	kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f	access:public
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f	access:public
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
print_function	gradelib.py	/^from __future__ import print_function$/;"	i
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
quote	gradelib.py	/^    from pipes import quote$/;"	i
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
re	grade-lab1	/^import re$/;"	i
re	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reset_fs	gradelib.py	/^def reset_fs():$/;"	f	access:public
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon3	file:	access:public
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner	access:public
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu	access:public
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	access:public
run_tests	gradelib.py	/^def run_tests():$/;"	f	access:public
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f	access:public
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	access:public
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
select	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
set_attribute_color	kern/console.c	/^void set_attribute_color(uint16_t back, uint16_t fore) {$/;"	f	signature:(uint16_t back, uint16_t fore)
set_attribute_color	kern/console.h	/^void set_attribute_color(uint16_t back, uint16_t fore);$/;"	p	signature:(uint16_t back, uint16_t fore)
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	access:public
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	access:public
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	access:public
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f	access:public
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	access:public
shutil	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
socket	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	access:public
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f	access:public
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f	access:public
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
subprocess	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sys	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f	access:public
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f	access:public
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f	access:public
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f	access:public
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f	access:public
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f	access:public
test_check_page	grade-lab2	/^def test_check_page():$/;"	f	access:public
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f	access:public
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f	access:public
test_jos	grade-lab1	/^def test_jos():$/;"	f	access:public
test_jos	grade-lab2	/^def test_jos():$/;"	f	access:public
test_printf	grade-lab1	/^def test_printf():$/;"	f	access:public
time	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
tlb_invalidate	kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner	access:public
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void set_attribute_color(uint16_t back, uint16_t fore) {$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
wait	gradelib.py	/^    def wait(self):$/;"	f	access:public
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon3	file:	access:public
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
