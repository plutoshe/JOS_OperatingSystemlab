!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon9
ALT	kern/console.c	227;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
Argstate	inc/args.h	/^struct Argstate {$/;"	s
Argstate::argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate	access:public
Argstate::argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate	access:public
Argstate::argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate	access:public
Argstate::curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate	access:public
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	294;"	d	file:
CAPSLOCK	kern/console.c	229;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	17;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COLOR_BLK	kern/monitor.c	19;"	d	file:
COLOR_BLU	kern/monitor.c	20;"	d	file:
COLOR_CYN	kern/monitor.c	27;"	d	file:
COLOR_GRN	kern/monitor.c	21;"	d	file:
COLOR_GRY	kern/monitor.c	23;"	d	file:
COLOR_ORG	kern/monitor.c	25;"	d	file:
COLOR_PUR	kern/monitor.c	26;"	d	file:
COLOR_RED	kern/monitor.c	22;"	d	file:
COLOR_WHT	kern/monitor.c	18;"	d	file:
COLOR_YLW	kern/monitor.c	24;"	d	file:
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	393;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon10
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon10
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon10
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	226;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
CpuInfo::cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
CpuInfo::cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dev::dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev	access:public
Dev::dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev	access:public
Dev::dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev	access:public
Dev::dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev	access:public
Dev::dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev	access:public
Dev::dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev	access:public
Dev::dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev	access:public
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Dir::ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:	access:public
Dir::f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:	access:public
Dir::n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:	access:public
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f	access:public
E0ESC	kern/console.c	233;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon4
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon4
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon4
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon4
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon4
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	= 12,	\/\/ Bad path$/;"	e	enum:__anon2
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon2
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	= 13,	\/\/ File already exists$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon2
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	= 10,	\/\/ Too many files are open$/;"	e	enum:__anon2
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	= 14,	\/\/ File not a valid executable$/;"	e	enum:__anon2
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	= 11, 	\/\/ File or block not found$/;"	e	enum:__anon2
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	= 15,	\/\/ Operation not supported$/;"	e	enum:__anon2
E_NO_DISK	inc/error.h	/^	E_NO_DISK	= 9,	\/\/ No free space left on disk$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Env	inc/env.h	/^struct Env {$/;"	s
Env::env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
Env::env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
Env::env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
Env::env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
Env::env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
Env::env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
Env::env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
Env::env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
Env::env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
Env::env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
Env::env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
Env::env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
Env::env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
Env::env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
Env::env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
Env::priority	inc/env.h	/^	int priority;$/;"	m	struct:Env	access:public
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FDTABLE	lib/fd.c	8;"	d	file:
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon6
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon6
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon6
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon6
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon6
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon6
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon6
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon6
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
Fd::__anon3::fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon3	typeref:struct:Fd::__anon3::FdFile	access:public
Fd::fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd	access:public
Fd::fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd	access:public
Fd::fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd	access:public
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdFile::id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile	access:public
File	inc/fs.h	/^struct File {$/;"	s
File::f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File	access:public
File::f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File	access:public
File::f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File	access:public
File::f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File	access:public
File::f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File	access:public
File::f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File	access:public
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsipc::Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_flush::req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush	access:public
Fsipc::Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_open::req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open	access:public
Fsipc::Fsreq_open::req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open	access:public
Fsipc::Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_read::req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read	access:public
Fsipc::Fsreq_read::req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read	access:public
Fsipc::Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_remove::req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove	access:public
Fsipc::Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_set_size::req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
Fsipc::Fsreq_set_size::req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
Fsipc::Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_stat::req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat	access:public
Fsipc::Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_write::req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write	access:public
Fsipc::Fsreq_write::req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write	access:public
Fsipc::Fsreq_write::req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write	access:public
Fsipc::Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc	access:public
Fsipc::Fsret_read::ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read	access:public
Fsipc::Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc	access:public
Fsipc::Fsret_stat::ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat	access:public
Fsipc::Fsret_stat::ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat	access:public
Fsipc::Fsret_stat::ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat	access:public
Fsipc::_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc	access:public
Fsipc::flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush	access:public
Fsipc::open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open	access:public
Fsipc::read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read	access:public
Fsipc::readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read	access:public
Fsipc::remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove	access:public
Fsipc::set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size	access:public
Fsipc::stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat	access:public
Fsipc::statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat	access:public
Fsipc::write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write	access:public
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc	access:public
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc	access:public
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc	access:public
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc	access:public
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc	access:public
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc	access:public
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc	access:public
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc	access:public
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc	access:public
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c	inherits:object
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=5$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	324;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXNAMELEN	inc/fs.h	17;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MYHANDLER	kern/trapentry.S	/^#define MYHANDLER(name, num)						\\$/;"	d
MYHANDLER_NOEC	kern/trapentry.S	/^#define MYHANDLER_NOEC(name, num)					\\$/;"	d
MYHANDLER_NULL	kern/trapentry.S	/^#define MYHANDLER_NULL() \\$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	48;"	d	file:
NCOMMANDS	obj/kern/kernel.asm	/^#define NCOMMANDS (sizeof(commands)\/sizeof(commands[0]))$/;"	d
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NHANDLERS	fs/serv.c	235;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	223;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon5
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	230;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	127;"	d
O_CREAT	inc/lib.h	129;"	d
O_EXCL	inc/lib.h	131;"	d
O_MKDIR	inc/lib.h	132;"	d
O_RDONLY	inc/lib.h	124;"	d
O_RDWR	inc/lib.h	126;"	d
O_TRUNC	inc/lib.h	130;"	d
O_WRONLY	inc/lib.h	125;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
OpenFile::o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:	access:public
OpenFile::o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:	access:public
OpenFile::o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:	access:public
OpenFile::o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:	access:public
OptionParser	gradelib.py	/^from optparse import OptionParser$/;"	i
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 31 13:56:32 EDT 2012$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
POINT_SIZE	kern/monitor.c	223;"	d	file:
POINT_SIZE	obj/kern/kernel.asm	/^#define POINT_SIZE 4$/;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	81;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
PageInfo::pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
PageInfo::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Pipe::p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:	access:public
Pipe::p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:	access:public
Pipe::p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:	access:public
Popen	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
PushRegs::reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c	inherits:object
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c	inherits:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	231;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	225;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	185;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon5
SYS_change_priority	inc/syscall.h	/^	SYS_change_priority,$/;"	e	enum:__anon5
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon5
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon5
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon5
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon5
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon5
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon5
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon5
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon5
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon5
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon5
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon5
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon5
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon5
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
Stat	inc/fd.h	/^struct Stat {$/;"	s
Stat::st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev	access:public
Stat::st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat	access:public
Stat::st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat	access:public
Stat::st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat	access:public
Super	inc/fs.h	/^struct Super {$/;"	s
Super::s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super	access:public
Super::s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super	access:public
Super::s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c	inherits:Exception
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
Trapframe::tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
Trapframe::tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USED	inc/lib.h	24;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UTrapframe::utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
UserStabData::stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
UserStabData::stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
WHITESPACE	kern/monitor.c	323;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	184;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon7::msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon7	file:	access:public
__anon7::msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon7	file:	access:public
__anon8::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon8	file:	access:public
__anon8::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon8	file:	access:public
__anon8::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon8	file:	access:public
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner	access:public
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU	access:public
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient	access:public
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:	access:private
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:	access:private
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:	access:private
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:	access:private
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f	signature:(struct spinlock *lk, char *name)
__spin_initlock	kern/spinlock.h	/^void __spin_initlock(struct spinlock *lk, char *name);$/;"	p	signature:(struct spinlock *lk, char *name)
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f	signature:(char *s, char **p1, char **p2)
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc	access:public
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	signature:(const char *file, int line, const char *fmt, ...)
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/hello.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	lib/pgfault.c	/^extern void _pgfault_upcall(void);$/;"	p	file:	signature:(void)
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/hello.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	user/faultnostack.c	/^void _pgfault_upcall();$/;"	p	file:
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:	signature:(struct Fd *fd, struct Pipe *p)
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
add	obj/kern/kernel.asm	/^			add = UXSTACKTOP - sizeof(struct UTrapframe);$/;"	d
add	obj/kern/kernel.asm	/^			add = tf->tf_esp - sizeof(struct UTrapframe) - 4;$/;"	d
addr	obj/fs/fs.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/user/forktree.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/hello.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/pingpong.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/pingpongs.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/primes.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/primespipe.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/sh.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/spin.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/stresssched.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/testfdsharing.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/testpipe.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/testpiperace2.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/testpteshare.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr	obj/user/testshell.asm	/^	addr = ROUNDDOWN (addr, PGSIZE);$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/user/sh.asm	/^again:$/;"	l
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f	signature:(uint32_t bytes)
alloc_block	fs/fs.h	/^int	alloc_block(void);$/;"	p	signature:(void)
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate	access:public
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	inc/args.h	/^int argnext(struct Argstate *);$/;"	p	signature:(struct Argstate *)
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f	signature:(struct Argstate *args)
argnextvalue	inc/args.h	/^char *argnextvalue(struct Argstate *);$/;"	p	signature:(struct Argstate *)
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f	signature:(struct Argstate *args)
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	inc/args.h	/^void argstart(int *argc, char **argv, struct Argstate *args);$/;"	p	signature:(int *argc, char **argv, struct Argstate *args)
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f	signature:(int *argc, char **argv, struct Argstate *args)
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate	access:public
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate	access:public
argvalue	inc/args.h	/^char *argvalue(struct Argstate *);$/;"	p	signature:(struct Argstate *)
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f	signature:(struct Argstate *args)
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f	access:public
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f	access:public
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	access:public
attribute_color	kern/console.h	/^static uint16_t attribute_color = 0x0700;$/;"	v
attribute_color	obj/kern/kernel.asm	/^	attribute_color = (back << 12) | (fore << 8);$/;"	d
backtrace	kern/trap.h	/^void backtrace(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bc_init	fs/bc.c	/^bc_init(void)$/;"	f	signature:(void)
bc_init	fs/fs.h	/^void	bc_init(void);$/;"	p	signature:(void)
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
begin	obj/kern/kernel.asm	/^	begin = ROUNDUP(begin, PGSIZE); $/;"	d
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
block_is_free	fs/fs.h	/^bool	block_is_free(uint32_t blockno);$/;"	p	signature:(uint32_t blockno)
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f	signature:(void *pos)
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
bool	obj/kern/kernel.asm	/^bool pxtoi(uint32_t *va, char *origin) {$/;"	l
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:	signature:(uint32_t n)
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:	signature:(void)
boot_aps	kern/init.c	/^static void boot_aps(void);$/;"	p	file:	signature:(void)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^static void boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient	access:public
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon8	file:	access:public
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = c + attribute_color;$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f	access:public
cat	user/cat.c	/^cat(int f, char *s)$/;"	f	signature:(int f, char *s)
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_call	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^static void check_kern_pgdir(void);$/;"	p	file:	signature:(void)
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:	signature:(void)
check_page	kern/pmap.c	/^static void check_page(void);$/;"	p	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^static void check_page_alloc(void);$/;"	p	file:	signature:(void)
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:	signature:(bool only_low_memory)
check_page_free_list	kern/pmap.c	/^static void check_page_free_list(bool only_low_memory);$/;"	p	file:	signature:(bool only_low_memory)
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:	signature:(void)
check_page_installed_pgdir	kern/pmap.c	/^static void check_page_installed_pgdir(void);$/;"	p	file:	signature:(void)
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:	signature:(struct regs* a, const char *an, struct regs* b, const char *bn, const char *testname)
check_super	fs/fs.c	/^check_super(void)$/;"	f	signature:(void)
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va)
check_va2pa	kern/pmap.c	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va)
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
child	obj/user/hello.asm	/^			child = fork ();$/;"	d
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f	signature:(void)
childofspawn	user/testptelibrary.c	/^void childofspawn(void);$/;"	p	file:	signature:(void)
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f	signature:(void)
childofspawn	user/testpteshare.c	/^void childofspawn(void);$/;"	p	file:	signature:(void)
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient	access:public
close	inc/lib.h	/^int	close(int fd);$/;"	p	signature:(int fd)
close	lib/fd.c	/^close(int fdnum)$/;"	f	signature:(int fdnum)
close_all	inc/lib.h	/^void	close_all(void);$/;"	p	signature:(void)
close_all	lib/fd.c	/^close_all(void)$/;"	f	signature:(void)
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f	access:public
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon8	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient	access:public
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:	signature:(envid_t child)
copy_shared_pages	lib/spawn.c	/^static int copy_shared_pages(envid_t child);$/;"	p	file:	signature:(envid_t child)
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpunum	kern/cpu.h	/^int cpunum(void);$/;"	p	signature:(void)
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f	signature:(void)
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	inc/lib.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	signature:(int ch)
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate	access:public
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon7
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev	access:public
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev	access:public
dev_lookup	inc/fd.h	/^int	dev_lookup(int devid, struct Dev **dev_store);$/;"	p	signature:(int devid, struct Dev **dev_store)
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f	signature:(int dev_id, struct Dev **dev)
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev	access:public
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev	access:public
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev	access:public
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev	access:public
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev	access:public
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:	signature:(struct Fd *fd)
devcons_close	lib/console.c	/^static int devcons_close(struct Fd*);$/;"	p	file:	signature:(struct Fd*)
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:	signature:(struct Fd *fd, void *vbuf, size_t n)
devcons_read	lib/console.c	/^static ssize_t devcons_read(struct Fd*, void*, size_t);$/;"	p	file:	signature:(struct Fd*, void*, size_t)
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:	signature:(struct Fd *fd, struct Stat *stat)
devcons_stat	lib/console.c	/^static int devcons_stat(struct Fd*, struct Stat*);$/;"	p	file:	signature:(struct Fd*, struct Stat*)
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:	signature:(struct Fd *fd, const void *vbuf, size_t n)
devcons_write	lib/console.c	/^static ssize_t devcons_write(struct Fd*, const void*, size_t);$/;"	p	file:	signature:(struct Fd*, const void*, size_t)
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:	signature:(struct Fd *fd)
devfile_flush	lib/file.c	/^static int devfile_flush(struct Fd *fd);$/;"	p	file:	signature:(struct Fd *fd)
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:	signature:(struct Fd *fd, void *buf, size_t n)
devfile_read	lib/file.c	/^static ssize_t devfile_read(struct Fd *fd, void *buf, size_t n);$/;"	p	file:	signature:(struct Fd *fd, void *buf, size_t n)
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:	signature:(struct Fd *fd, struct Stat *st)
devfile_stat	lib/file.c	/^static int devfile_stat(struct Fd *fd, struct Stat *stat);$/;"	p	file:	signature:(struct Fd *fd, struct Stat *stat)
devfile_trunc	lib/file.c	/^static int devfile_trunc(struct Fd *fd, off_t newsize);$/;"	p	file:	signature:(struct Fd *fd, off_t newsize)
devfile_write	lib/file.c	/^static ssize_t devfile_write(struct Fd *fd, const void *buf, size_t n);$/;"	p	file:	signature:(struct Fd *fd, const void *buf, size_t n)
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:	signature:(struct Fd *fd)
devpipe_close	lib/pipe.c	/^static int devpipe_close(struct Fd *fd);$/;"	p	file:	signature:(struct Fd *fd)
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:	signature:(struct Fd *fd, void *vbuf, size_t n)
devpipe_read	lib/pipe.c	/^static ssize_t devpipe_read(struct Fd *fd, void *buf, size_t n);$/;"	p	file:	signature:(struct Fd *fd, void *buf, size_t n)
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:	signature:(struct Fd *fd, struct Stat *stat)
devpipe_stat	lib/pipe.c	/^static int devpipe_stat(struct Fd *fd, struct Stat *stat);$/;"	p	file:	signature:(struct Fd *fd, struct Stat *stat)
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:	signature:(struct Fd *fd, const void *vbuf, size_t n)
devpipe_write	lib/pipe.c	/^static ssize_t devpipe_write(struct Fd *fd, const void *buf, size_t n);$/;"	p	file:	signature:(struct Fd *fd, const void *buf, size_t n)
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:	signature:(struct File *dir, const char *name, struct File **file)
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f	signature:(struct Dir *d, uint32_t type, const char *name)
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f	signature:(uint32_t blockno)
diskaddr	fs/fs.h	/^void*	diskaddr(uint32_t blockno);$/;"	p	signature:(uint32_t blockno)
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest	access:public
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f	signature:(void)
dumbfork	user/dumbfork.c	/^envid_t dumbfork(void);$/;"	p	file:	signature:(void)
dup	inc/lib.h	/^int	dup(int oldfd, int newfd);$/;"	p	signature:(int oldfd, int newfd)
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f	signature:(int oldfdnum, int newfdnum)
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:	signature:(envid_t envid, unsigned pn)
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f	signature:(envid_t dstenv, void *addr)
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t*) read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
eip	obj/kern/kernel.asm	/^	eip = (uint32_t*) ebp[1];$/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
end	obj/kern/kernel.asm	/^	end   = ROUNDUP(end, PGSIZE);$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f	access:public
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:	access:public
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	signature:(struct Env **newenv_store, envid_t parent_id)
env_alloc	kern/env.h	/^int	env_alloc(struct Env **e, envid_t parent_id);$/;"	p	signature:(struct Env **e, envid_t parent_id)
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f	signature:(uint8_t *binary, size_t size, enum EnvType type)
env_create	kern/env.h	/^void	env_create(uint8_t *binary, size_t size, enum EnvType type);$/;"	p	signature:(uint8_t *binary, size_t size, enum EnvType type)
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	signature:(struct Env *e)
env_destroy	kern/env.h	/^void	env_destroy(struct Env *e);	\/\/ Does not return if e == curenv$/;"	p	signature:(struct Env *e)
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	signature:(struct Env *e)
env_free	kern/env.h	/^void	env_free(struct Env *e);$/;"	p	signature:(struct Env *e)
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = NULL;	$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
env_init	kern/env.c	/^env_init(void)$/;"	f	signature:(void)
env_init	kern/env.h	/^void	env_init(void);$/;"	p	signature:(void)
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	signature:(void)
env_init_percpu	kern/env.h	/^void	env_init_percpu(void);$/;"	p	signature:(void)
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
env_pop_tf	kern/env.h	/^void	env_pop_tf(struct Trapframe *tf) __attribute__((noreturn));$/;"	p	signature:(struct Trapframe *tf)
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	signature:(struct Env *e)
env_run	kern/env.h	/^void	env_run(struct Env *e) __attribute__((noreturn));$/;"	p	signature:(struct Env *e)
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:	signature:(struct Env *e)
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid2env	kern/env.h	/^int	envid2env(envid_t envid, struct Env **env_store, bool checkperm);$/;"	p	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env*) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + now->e_phnum;$/;"	d
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
errno	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:	access:public
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
exec	lib/spawn.c	/^exec(const char *prog, const char **argv)$/;"	f	signature:(const char *prog, const char **argv)
execl	lib/spawn.c	/^execl(const char *prog, const char *arg0, ...)$/;"	f	signature:(const char *prog, const char *arg0, ...)
exit	inc/lib.h	/^void	exit(void);$/;"	p	signature:(void)
exit	lib/exit.c	/^exit(void)$/;"	f	signature:(void)
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:	access:public
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 10 12 f0       	mov    $0xf0121000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 f0 00 00 00       	call   f010012e <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 80 7e 20 f0 00 	cmpl   $0x0,0xf0207e80$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 80 7e 20 f0    	mov    %esi,0xf0207e80$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 ec 6c 00 00       	call   f0106d50 <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 a0 74 10 f0 	movl   $0xf01074a0,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 0c 47 00 00       	call   f010478e <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 cd 46 00 00       	call   f010475b <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 d6 89 10 f0 	movl   $0xf01089d6,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 f4 46 00 00       	call   f010478e <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 a5 11 00 00       	call   f010124b <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <mp_main>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	77 20                	ja     f01000da <mp_main+0x32>$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	f0 $/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	c7 44 24 04 72 00 00 	movl   $0x72,0x4(%esp)$/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	00 $/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	c7 04 24 0b 75 10 f0 	movl   $0xf010750b,(%esp)$/;"	l
f01000d5	obj/kern/kernel.asm	/^f01000d5:	e8 66 ff ff ff       	call   f0100040 <_panic>$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	e8 69 6c 00 00       	call   f0106d50 <cpunum>$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	c7 04 24 17 75 10 f0 	movl   $0xf0107517,(%esp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 97 46 00 00       	call   f010478e <cprintf>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	e8 6e 6c 00 00       	call   f0106d6a <lapic_init>$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	e8 64 3e 00 00       	call   f0103f65 <env_init_percpu>$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	e8 aa 46 00 00       	call   f01047b0 <trap_init_percpu>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	e8 45 6c 00 00       	call   f0106d50 <cpunum>$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	81 c2 20 80 20 f0    	add    $0xf0208020,%edx$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	c7 04 24 40 34 12 f0 	movl   $0xf0123440,(%esp)$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	e8 d7 6e 00 00       	call   f0107000 <spin_lock>$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	e8 3e 51 00 00       	call   f010526c <sched_yield>$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e <i386_init>:$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	55                   	push   %ebp$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	53                   	push   %ebx$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	b8 08 90 24 f0       	mov    $0xf0249008,%eax$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	2d 13 61 20 f0       	sub    $0xf0206113,%eax$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	00 $/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	c7 04 24 13 61 20 f0 	movl   $0xf0206113,(%esp)$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	e8 6a 65 00 00       	call   f01066c1 <memset>$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	e8 58 05 00 00       	call   f01006b4 <cons_init>$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	00 $/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	c7 04 24 2d 75 10 f0 	movl   $0xf010752d,(%esp)$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	e8 1e 46 00 00       	call   f010478e <cprintf>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	e8 a1 1b 00 00       	call   f0101d16 <mem_init>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 15 3e 00 00       	call   f0103f8f <env_init>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	e8 fa 46 00 00       	call   f0104879 <trap_init>$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	90                   	nop$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	e8 ec 68 00 00       	call   f0106a71 <mp_init>$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	e8 e0 6b 00 00       	call   f0106d6a <lapic_init>$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	e8 2e 45 00 00       	call   f01046bd <pic_init>$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	c7 04 24 40 34 12 f0 	movl   $0xf0123440,(%esp)$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	e8 65 6e 00 00       	call   f0107000 <spin_lock>$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	83 3d 88 7e 20 f0 07 	cmpl   $0x7,0xf0207e88$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	77 24                	ja     f01001c8 <i386_init+0x9a>$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	00 $/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	f0 $/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	c7 44 24 04 5b 00 00 	movl   $0x5b,0x4(%esp)$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	00 $/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	c7 04 24 0b 75 10 f0 	movl   $0xf010750b,(%esp)$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	e8 78 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	b8 8a 69 10 f0       	mov    $0xf010698a,%eax$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	2d 10 69 10 f0       	sub    $0xf0106910,%eax$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	c7 44 24 04 10 69 10 	movl   $0xf0106910,0x4(%esp)$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	f0 $/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	e8 32 65 00 00       	call   f010671c <memmove>$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	6b 05 c4 83 20 f0 74 	imul   $0x74,0xf02083c4,%eax$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	05 20 80 20 f0       	add    $0xf0208020,%eax$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	3d 20 80 20 f0       	cmp    $0xf0208020,%eax$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	76 62                	jbe    f010025f <i386_init+0x131>$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	bb 20 80 20 f0       	mov    $0xf0208020,%ebx$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	e8 49 6b 00 00       	call   f0106d50 <cpunum>$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	05 20 80 20 f0       	add    $0xf0208020,%eax$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	74 39                	je     f010024c <i386_init+0x11e>$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	89 d8                	mov    %ebx,%eax$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	2d 20 80 20 f0       	sub    $0xf0208020,%eax$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	8d 80 00 10 21 f0    	lea    -0xfdef000(%eax),%eax$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	a3 84 7e 20 f0       	mov    %eax,0xf0207e84$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	00 $/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	e8 74 6c 00 00       	call   f0106eb8 <lapic_startap>$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	75 f8                	jne    f0100244 <i386_init+0x116>$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	83 c3 74             	add    $0x74,%ebx$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	6b 05 c4 83 20 f0 74 	imul   $0x74,0xf02083c4,%eax$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	05 20 80 20 f0       	add    $0xf0208020,%eax$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	39 c3                	cmp    %eax,%ebx$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	72 a3                	jb     f0100202 <i386_init+0xd4>$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0100266	obj/kern/kernel.asm	/^f0100266:	00 $/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	c7 44 24 04 b8 52 01 	movl   $0x152b8,0x4(%esp)$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	00 $/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	c7 04 24 f0 63 1c f0 	movl   $0xf01c63f0,(%esp)$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	e8 ea 3e 00 00       	call   f0104165 <env_create>$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100282	obj/kern/kernel.asm	/^f0100282:	00 $/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	c7 44 24 04 27 4f 00 	movl   $0x4f27,0x4(%esp)$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	00 $/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	c7 04 24 59 63 1f f0 	movl   $0xf01f6359,(%esp)$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	e8 ce 3e 00 00       	call   f0104165 <env_create>$/;"	l
f0100297	obj/kern/kernel.asm	/^f0100297:	e8 c3 03 00 00       	call   f010065f <kbd_intr>$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	e8 cb 4f 00 00       	call   f010526c <sched_yield>$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1 <_warn>:$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	55                   	push   %ebp$/;"	l
f01002a2	obj/kern/kernel.asm	/^f01002a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	53                   	push   %ebx$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01002b2	obj/kern/kernel.asm	/^f01002b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01002b5	obj/kern/kernel.asm	/^f01002b5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01002b9	obj/kern/kernel.asm	/^f01002b9:	c7 04 24 48 75 10 f0 	movl   $0xf0107548,(%esp)$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	e8 c9 44 00 00       	call   f010478e <cprintf>$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002c9	obj/kern/kernel.asm	/^f01002c9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002cf	obj/kern/kernel.asm	/^f01002cf:	e8 87 44 00 00       	call   f010475b <vcprintf>$/;"	l
f01002d4	obj/kern/kernel.asm	/^f01002d4:	c7 04 24 d6 89 10 f0 	movl   $0xf01089d6,(%esp)$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	e8 ae 44 00 00       	call   f010478e <cprintf>$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	5b                   	pop    %ebx$/;"	l
f01002e4	obj/kern/kernel.asm	/^f01002e4:	5d                   	pop    %ebp$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	c3                   	ret    $/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0 <delay>:$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	55                   	push   %ebp$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	ec                   	in     (%dx),%al$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	ec                   	in     (%dx),%al$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	ec                   	in     (%dx),%al$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	ec                   	in     (%dx),%al$/;"	l
f01002fc	obj/kern/kernel.asm	/^f01002fc:	5d                   	pop    %ebp$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	c3                   	ret    $/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe <serial_proc_data>:$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	55                   	push   %ebp$/;"	l
f01002ff	obj/kern/kernel.asm	/^f01002ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	ec                   	in     (%dx),%al$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	a8 01                	test   $0x1,%al$/;"	l
f010030e	obj/kern/kernel.asm	/^f010030e:	74 06                	je     f0100316 <serial_proc_data+0x18>$/;"	l
f0100310	obj/kern/kernel.asm	/^f0100310:	b2 f8                	mov    $0xf8,%dl$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	ec                   	in     (%dx),%al$/;"	l
f0100313	obj/kern/kernel.asm	/^f0100313:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100316	obj/kern/kernel.asm	/^f0100316:	89 c8                	mov    %ecx,%eax$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	5d                   	pop    %ebp$/;"	l
f0100319	obj/kern/kernel.asm	/^f0100319:	c3                   	ret    $/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a <cons_intr>:$/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	55                   	push   %ebp$/;"	l
f010031b	obj/kern/kernel.asm	/^f010031b:	89 e5                	mov    %esp,%ebp$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	53                   	push   %ebx$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100321	obj/kern/kernel.asm	/^f0100321:	89 c3                	mov    %eax,%ebx$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	eb 25                	jmp    f010034a <cons_intr+0x30>$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	85 c0                	test   %eax,%eax$/;"	l
f0100327	obj/kern/kernel.asm	/^f0100327:	74 21                	je     f010034a <cons_intr+0x30>$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	8b 15 24 72 20 f0    	mov    0xf0207224,%edx$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	88 82 20 70 20 f0    	mov    %al,-0xfdf8fe0(%edx)$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100342	obj/kern/kernel.asm	/^f0100342:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	a3 24 72 20 f0       	mov    %eax,0xf0207224$/;"	l
f010034a	obj/kern/kernel.asm	/^f010034a:	ff d3                	call   *%ebx$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010034f	obj/kern/kernel.asm	/^f010034f:	75 d4                	jne    f0100325 <cons_intr+0xb>$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	5b                   	pop    %ebx$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	5d                   	pop    %ebp$/;"	l
f0100356	obj/kern/kernel.asm	/^f0100356:	c3                   	ret    $/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357 <cons_putc>:$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	55                   	push   %ebp$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	89 e5                	mov    %esp,%ebp$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	57                   	push   %edi$/;"	l
f010035b	obj/kern/kernel.asm	/^f010035b:	56                   	push   %esi$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	53                   	push   %ebx$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	ec                   	in     (%dx),%al$/;"	l
f0100369	obj/kern/kernel.asm	/^f0100369:	a8 20                	test   $0x20,%al$/;"	l
f010036b	obj/kern/kernel.asm	/^f010036b:	75 1b                	jne    f0100388 <cons_putc+0x31>$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	e8 74 ff ff ff       	call   f01002f0 <delay>$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	89 f2                	mov    %esi,%edx$/;"	l
f010037e	obj/kern/kernel.asm	/^f010037e:	ec                   	in     (%dx),%al$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	a8 20                	test   $0x20,%al$/;"	l
f0100381	obj/kern/kernel.asm	/^f0100381:	75 05                	jne    f0100388 <cons_putc+0x31>$/;"	l
f0100383	obj/kern/kernel.asm	/^f0100383:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	75 ef                	jne    f0100377 <cons_putc+0x20>$/;"	l
f0100388	obj/kern/kernel.asm	/^f0100388:	0f b6 7d e4          	movzbl -0x1c(%ebp),%edi$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	89 f8                	mov    %edi,%eax$/;"	l
f0100393	obj/kern/kernel.asm	/^f0100393:	ee                   	out    %al,(%dx)$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	b2 79                	mov    $0x79,%dl$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	ec                   	in     (%dx),%al$/;"	l
f0100397	obj/kern/kernel.asm	/^f0100397:	84 c0                	test   %al,%al$/;"	l
f0100399	obj/kern/kernel.asm	/^f0100399:	78 1b                	js     f01003b6 <cons_putc+0x5f>$/;"	l
f010039b	obj/kern/kernel.asm	/^f010039b:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	e8 46 ff ff ff       	call   f01002f0 <delay>$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	89 f2                	mov    %esi,%edx$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	ec                   	in     (%dx),%al$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	84 c0                	test   %al,%al$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	78 05                	js     f01003b6 <cons_putc+0x5f>$/;"	l
f01003b1	obj/kern/kernel.asm	/^f01003b1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01003b4	obj/kern/kernel.asm	/^f01003b4:	75 ef                	jne    f01003a5 <cons_putc+0x4e>$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	89 f8                	mov    %edi,%eax$/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	ee                   	out    %al,(%dx)$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01003c0	obj/kern/kernel.asm	/^f01003c0:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01003c5	obj/kern/kernel.asm	/^f01003c5:	ee                   	out    %al,(%dx)$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	ee                   	out    %al,(%dx)$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	0f b7 15 00 30 12 f0 	movzwl 0xf0123000,%edx$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	03 55 e4             	add    -0x1c(%ebp),%edx$/;"	l
f01003d6	obj/kern/kernel.asm	/^f01003d6:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003dc	obj/kern/kernel.asm	/^f01003dc:	74 77                	je     f0100455 <cons_putc+0xfe>$/;"	l
f01003de	obj/kern/kernel.asm	/^f01003de:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003e1	obj/kern/kernel.asm	/^f01003e1:	7f 0f                	jg     f01003f2 <cons_putc+0x9b>$/;"	l
f01003e3	obj/kern/kernel.asm	/^f01003e3:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	0f 85 9d 00 00 00    	jne    f0100489 <cons_putc+0x132>$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01003f0	obj/kern/kernel.asm	/^f01003f0:	eb 10                	jmp    f0100402 <cons_putc+0xab>$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	74 38                	je     f010042f <cons_putc+0xd8>$/;"	l
f01003f7	obj/kern/kernel.asm	/^f01003f7:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01003fa	obj/kern/kernel.asm	/^f01003fa:	0f 85 89 00 00 00    	jne    f0100489 <cons_putc+0x132>$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	eb 35                	jmp    f0100437 <cons_putc+0xe0>$/;"	l
f0100402	obj/kern/kernel.asm	/^f0100402:	0f b7 05 34 72 20 f0 	movzwl 0xf0207234,%eax$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	66 85 c0             	test   %ax,%ax$/;"	l
f010040c	obj/kern/kernel.asm	/^f010040c:	0f 84 e1 00 00 00    	je     f01004f3 <cons_putc+0x19c>$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100415	obj/kern/kernel.asm	/^f0100415:	66 a3 34 72 20 f0    	mov    %ax,0xf0207234$/;"	l
f010041b	obj/kern/kernel.asm	/^f010041b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	b2 00                	mov    $0x0,%dl$/;"	l
f0100420	obj/kern/kernel.asm	/^f0100420:	83 ca 20             	or     $0x20,%edx$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	8b 0d 30 72 20 f0    	mov    0xf0207230,%ecx$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	eb 77                	jmp    f01004a6 <cons_putc+0x14f>$/;"	l
f010042f	obj/kern/kernel.asm	/^f010042f:	66 83 05 34 72 20 f0 	addw   $0x50,0xf0207234$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	50 $/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	0f b7 05 34 72 20 f0 	movzwl 0xf0207234,%eax$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100447	obj/kern/kernel.asm	/^f0100447:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010044a	obj/kern/kernel.asm	/^f010044a:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	66 a3 34 72 20 f0    	mov    %ax,0xf0207234$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	eb 51                	jmp    f01004a6 <cons_putc+0x14f>$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	e8 f8 fe ff ff       	call   f0100357 <cons_putc>$/;"	l
f010045f	obj/kern/kernel.asm	/^f010045f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100464	obj/kern/kernel.asm	/^f0100464:	e8 ee fe ff ff       	call   f0100357 <cons_putc>$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010046e	obj/kern/kernel.asm	/^f010046e:	e8 e4 fe ff ff       	call   f0100357 <cons_putc>$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100478	obj/kern/kernel.asm	/^f0100478:	e8 da fe ff ff       	call   f0100357 <cons_putc>$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100482	obj/kern/kernel.asm	/^f0100482:	e8 d0 fe ff ff       	call   f0100357 <cons_putc>$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	eb 1d                	jmp    f01004a6 <cons_putc+0x14f>$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	0f b7 05 34 72 20 f0 	movzwl 0xf0207234,%eax$/;"	l
f0100490	obj/kern/kernel.asm	/^f0100490:	0f b7 d8             	movzwl %ax,%ebx$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	8b 0d 30 72 20 f0    	mov    0xf0207230,%ecx$/;"	l
f0100499	obj/kern/kernel.asm	/^f0100499:	66 89 14 59          	mov    %dx,(%ecx,%ebx,2)$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	83 c0 01             	add    $0x1,%eax$/;"	l
f01004a0	obj/kern/kernel.asm	/^f01004a0:	66 a3 34 72 20 f0    	mov    %ax,0xf0207234$/;"	l
f01004a6	obj/kern/kernel.asm	/^f01004a6:	66 81 3d 34 72 20 f0 	cmpw   $0x7cf,0xf0207234$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	cf 07 $/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	76 42                	jbe    f01004f3 <cons_putc+0x19c>$/;"	l
f01004b1	obj/kern/kernel.asm	/^f01004b1:	a1 30 72 20 f0       	mov    0xf0207230,%eax$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	00 $/;"	l
f01004be	obj/kern/kernel.asm	/^f01004be:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01004c8	obj/kern/kernel.asm	/^f01004c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	e8 4c 62 00 00       	call   f010671c <memmove>$/;"	l
f01004d0	obj/kern/kernel.asm	/^f01004d0:	8b 15 30 72 20 f0    	mov    0xf0207230,%edx$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01004e4	obj/kern/kernel.asm	/^f01004e4:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01004e9	obj/kern/kernel.asm	/^f01004e9:	75 f0                	jne    f01004db <cons_putc+0x184>$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	66 83 2d 34 72 20 f0 	subw   $0x50,0xf0207234$/;"	l
f01004f2	obj/kern/kernel.asm	/^f01004f2:	50 $/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	8b 0d 2c 72 20 f0    	mov    0xf020722c,%ecx$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	89 ca                	mov    %ecx,%edx$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	ee                   	out    %al,(%dx)$/;"	l
f0100501	obj/kern/kernel.asm	/^f0100501:	0f b7 35 34 72 20 f0 	movzwl 0xf0207234,%esi$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f010050b	obj/kern/kernel.asm	/^f010050b:	89 f0                	mov    %esi,%eax$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100511	obj/kern/kernel.asm	/^f0100511:	89 da                	mov    %ebx,%edx$/;"	l
f0100513	obj/kern/kernel.asm	/^f0100513:	ee                   	out    %al,(%dx)$/;"	l
f0100514	obj/kern/kernel.asm	/^f0100514:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100519	obj/kern/kernel.asm	/^f0100519:	89 ca                	mov    %ecx,%edx$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	ee                   	out    %al,(%dx)$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	89 f0                	mov    %esi,%eax$/;"	l
f010051e	obj/kern/kernel.asm	/^f010051e:	89 da                	mov    %ebx,%edx$/;"	l
f0100520	obj/kern/kernel.asm	/^f0100520:	ee                   	out    %al,(%dx)$/;"	l
f0100521	obj/kern/kernel.asm	/^f0100521:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	5b                   	pop    %ebx$/;"	l
f0100525	obj/kern/kernel.asm	/^f0100525:	5e                   	pop    %esi$/;"	l
f0100526	obj/kern/kernel.asm	/^f0100526:	5f                   	pop    %edi$/;"	l
f0100527	obj/kern/kernel.asm	/^f0100527:	5d                   	pop    %ebp$/;"	l
f0100528	obj/kern/kernel.asm	/^f0100528:	c3                   	ret    $/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529 <kbd_proc_data>:$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	55                   	push   %ebp$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	89 e5                	mov    %esp,%ebp$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	53                   	push   %ebx$/;"	l
f010052d	obj/kern/kernel.asm	/^f010052d:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100530	obj/kern/kernel.asm	/^f0100530:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100535	obj/kern/kernel.asm	/^f0100535:	ec                   	in     (%dx),%al$/;"	l
f0100536	obj/kern/kernel.asm	/^f0100536:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	a8 01                	test   $0x1,%al$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	0f 84 de 00 00 00    	je     f0100621 <kbd_proc_data+0xf8>$/;"	l
f0100543	obj/kern/kernel.asm	/^f0100543:	b2 60                	mov    $0x60,%dl$/;"	l
f0100545	obj/kern/kernel.asm	/^f0100545:	ec                   	in     (%dx),%al$/;"	l
f0100546	obj/kern/kernel.asm	/^f0100546:	89 c2                	mov    %eax,%edx$/;"	l
f0100548	obj/kern/kernel.asm	/^f0100548:	3c e0                	cmp    $0xe0,%al$/;"	l
f010054a	obj/kern/kernel.asm	/^f010054a:	75 11                	jne    f010055d <kbd_proc_data+0x34>$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	83 0d 28 72 20 f0 40 	orl    $0x40,0xf0207228$/;"	l
f0100553	obj/kern/kernel.asm	/^f0100553:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100558	obj/kern/kernel.asm	/^f0100558:	e9 c4 00 00 00       	jmp    f0100621 <kbd_proc_data+0xf8>$/;"	l
f010055d	obj/kern/kernel.asm	/^f010055d:	84 c0                	test   %al,%al$/;"	l
f010055f	obj/kern/kernel.asm	/^f010055f:	79 37                	jns    f0100598 <kbd_proc_data+0x6f>$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	8b 0d 28 72 20 f0    	mov    0xf0207228,%ecx$/;"	l
f0100567	obj/kern/kernel.asm	/^f0100567:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100569	obj/kern/kernel.asm	/^f0100569:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010056c	obj/kern/kernel.asm	/^f010056c:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	85 db                	test   %ebx,%ebx$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100577	obj/kern/kernel.asm	/^f0100577:	0f b6 82 a0 75 10 f0 	movzbl -0xfef8a60(%edx),%eax$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	f7 d0                	not    %eax$/;"	l
f0100586	obj/kern/kernel.asm	/^f0100586:	21 c1                	and    %eax,%ecx$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	89 0d 28 72 20 f0    	mov    %ecx,0xf0207228$/;"	l
f010058e	obj/kern/kernel.asm	/^f010058e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100593	obj/kern/kernel.asm	/^f0100593:	e9 89 00 00 00       	jmp    f0100621 <kbd_proc_data+0xf8>$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	8b 0d 28 72 20 f0    	mov    0xf0207228,%ecx$/;"	l
f010059e	obj/kern/kernel.asm	/^f010059e:	f6 c1 40             	test   $0x40,%cl$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	74 0e                	je     f01005b1 <kbd_proc_data+0x88>$/;"	l
f01005a3	obj/kern/kernel.asm	/^f01005a3:	89 c2                	mov    %eax,%edx$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	89 0d 28 72 20 f0    	mov    %ecx,0xf0207228$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	0f b6 82 a0 75 10 f0 	movzbl -0xfef8a60(%edx),%eax$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	0b 05 28 72 20 f0    	or     0xf0207228,%eax$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	0f b6 8a a0 76 10 f0 	movzbl -0xfef8960(%edx),%ecx$/;"	l
f01005c8	obj/kern/kernel.asm	/^f01005c8:	31 c8                	xor    %ecx,%eax$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	a3 28 72 20 f0       	mov    %eax,0xf0207228$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	89 c1                	mov    %eax,%ecx$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01005d4	obj/kern/kernel.asm	/^f01005d4:	8b 0c 8d a0 77 10 f0 	mov    -0xfef8860(,%ecx,4),%ecx$/;"	l
f01005db	obj/kern/kernel.asm	/^f01005db:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
f01005df	obj/kern/kernel.asm	/^f01005df:	a8 08                	test   $0x8,%al$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	74 19                	je     f01005fc <kbd_proc_data+0xd3>$/;"	l
f01005e3	obj/kern/kernel.asm	/^f01005e3:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	77 05                	ja     f01005f0 <kbd_proc_data+0xc7>$/;"	l
f01005eb	obj/kern/kernel.asm	/^f01005eb:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01005ee	obj/kern/kernel.asm	/^f01005ee:	eb 0c                	jmp    f01005fc <kbd_proc_data+0xd3>$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	8d 4b bf             	lea    -0x41(%ebx),%ecx$/;"	l
f01005f3	obj/kern/kernel.asm	/^f01005f3:	8d 53 20             	lea    0x20(%ebx),%edx$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	0f 46 da             	cmovbe %edx,%ebx$/;"	l
f01005fc	obj/kern/kernel.asm	/^f01005fc:	f7 d0                	not    %eax$/;"	l
f01005fe	obj/kern/kernel.asm	/^f01005fe:	a8 06                	test   $0x6,%al$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	75 1f                	jne    f0100621 <kbd_proc_data+0xf8>$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	75 17                	jne    f0100621 <kbd_proc_data+0xf8>$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	c7 04 24 62 75 10 f0 	movl   $0xf0107562,(%esp)$/;"	l
f0100611	obj/kern/kernel.asm	/^f0100611:	e8 78 41 00 00       	call   f010478e <cprintf>$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	ee                   	out    %al,(%dx)$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	89 d8                	mov    %ebx,%eax$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	5b                   	pop    %ebx$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	5d                   	pop    %ebp$/;"	l
f0100628	obj/kern/kernel.asm	/^f0100628:	c3                   	ret    $/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629 <set_attribute_color>:$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	55                   	push   %ebp$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	89 e5                	mov    %esp,%ebp$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	0f b7 55 0c          	movzwl 0xc(%ebp),%edx$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	c1 e2 08             	shl    $0x8,%edx$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	0f b7 45 08          	movzwl 0x8(%ebp),%eax$/;"	l
f0100637	obj/kern/kernel.asm	/^f0100637:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010063a	obj/kern/kernel.asm	/^f010063a:	09 d0                	or     %edx,%eax$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	66 a3 00 30 12 f0    	mov    %ax,0xf0123000$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	5d                   	pop    %ebp$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	c3                   	ret    $/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644 <serial_intr>:$/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	55                   	push   %ebp$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	89 e5                	mov    %esp,%ebp$/;"	l
f0100647	obj/kern/kernel.asm	/^f0100647:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	80 3d 00 70 20 f0 00 	cmpb   $0x0,0xf0207000$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	74 0a                	je     f010065d <serial_intr+0x19>$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	b8 fe 02 10 f0       	mov    $0xf01002fe,%eax$/;"	l
f0100658	obj/kern/kernel.asm	/^f0100658:	e8 bd fc ff ff       	call   f010031a <cons_intr>$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	c9                   	leave  $/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	c3                   	ret    $/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f <kbd_intr>:$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	55                   	push   %ebp$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	89 e5                	mov    %esp,%ebp$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665:	b8 29 05 10 f0       	mov    $0xf0100529,%eax$/;"	l
f010066a	obj/kern/kernel.asm	/^f010066a:	e8 ab fc ff ff       	call   f010031a <cons_intr>$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	c9                   	leave  $/;"	l
f0100670	obj/kern/kernel.asm	/^f0100670:	c3                   	ret    $/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671 <cons_getc>:$/;"	l
f0100671	obj/kern/kernel.asm	/^f0100671:	55                   	push   %ebp$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	89 e5                	mov    %esp,%ebp$/;"	l
f0100674	obj/kern/kernel.asm	/^f0100674:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100677	obj/kern/kernel.asm	/^f0100677:	e8 c8 ff ff ff       	call   f0100644 <serial_intr>$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	e8 de ff ff ff       	call   f010065f <kbd_intr>$/;"	l
f0100681	obj/kern/kernel.asm	/^f0100681:	8b 15 20 72 20 f0    	mov    0xf0207220,%edx$/;"	l
f0100687	obj/kern/kernel.asm	/^f0100687:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	3b 15 24 72 20 f0    	cmp    0xf0207224,%edx$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	74 1e                	je     f01006b2 <cons_getc+0x41>$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	0f b6 82 20 70 20 f0 	movzbl -0xfdf8fe0(%edx),%eax$/;"	l
f010069b	obj/kern/kernel.asm	/^f010069b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01006a9	obj/kern/kernel.asm	/^f01006a9:	0f 44 d1             	cmove  %ecx,%edx$/;"	l
f01006ac	obj/kern/kernel.asm	/^f01006ac:	89 15 20 72 20 f0    	mov    %edx,0xf0207220$/;"	l
f01006b2	obj/kern/kernel.asm	/^f01006b2:	c9                   	leave  $/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	c3                   	ret    $/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4 <cons_init>:$/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	55                   	push   %ebp$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	89 e5                	mov    %esp,%ebp$/;"	l
f01006b7	obj/kern/kernel.asm	/^f01006b7:	57                   	push   %edi$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	56                   	push   %esi$/;"	l
f01006b9	obj/kern/kernel.asm	/^f01006b9:	53                   	push   %ebx$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	5a a5 $/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006d8	obj/kern/kernel.asm	/^f01006d8:	74 11                	je     f01006eb <cons_init+0x37>$/;"	l
f01006da	obj/kern/kernel.asm	/^f01006da:	c7 05 2c 72 20 f0 b4 	movl   $0x3b4,0xf020722c$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	03 00 00 $/;"	l
f01006e4	obj/kern/kernel.asm	/^f01006e4:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01006e9	obj/kern/kernel.asm	/^f01006e9:	eb 16                	jmp    f0100701 <cons_init+0x4d>$/;"	l
f01006eb	obj/kern/kernel.asm	/^f01006eb:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	c7 05 2c 72 20 f0 d4 	movl   $0x3d4,0xf020722c$/;"	l
f01006f9	obj/kern/kernel.asm	/^f01006f9:	03 00 00 $/;"	l
f01006fc	obj/kern/kernel.asm	/^f01006fc:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	8b 0d 2c 72 20 f0    	mov    0xf020722c,%ecx$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	89 ca                	mov    %ecx,%edx$/;"	l
f010070e	obj/kern/kernel.asm	/^f010070e:	ee                   	out    %al,(%dx)$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	89 da                	mov    %ebx,%edx$/;"	l
f0100714	obj/kern/kernel.asm	/^f0100714:	ec                   	in     (%dx),%al$/;"	l
f0100715	obj/kern/kernel.asm	/^f0100715:	0f b6 f8             	movzbl %al,%edi$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	89 ca                	mov    %ecx,%edx$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	ee                   	out    %al,(%dx)$/;"	l
f0100723	obj/kern/kernel.asm	/^f0100723:	89 da                	mov    %ebx,%edx$/;"	l
f0100725	obj/kern/kernel.asm	/^f0100725:	ec                   	in     (%dx),%al$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	89 35 30 72 20 f0    	mov    %esi,0xf0207230$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010072f	obj/kern/kernel.asm	/^f010072f:	09 df                	or     %ebx,%edi$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	66 89 3d 34 72 20 f0 	mov    %di,0xf0207234$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	e8 22 ff ff ff       	call   f010065f <kbd_intr>$/;"	l
f010073d	obj/kern/kernel.asm	/^f010073d:	0f b7 05 c8 33 12 f0 	movzwl 0xf01233c8,%eax$/;"	l
f0100744	obj/kern/kernel.asm	/^f0100744:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100749	obj/kern/kernel.asm	/^f0100749:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010074c	obj/kern/kernel.asm	/^f010074c:	e8 fb 3e 00 00       	call   f010464c <irq_setmask_8259A>$/;"	l
f0100751	obj/kern/kernel.asm	/^f0100751:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	89 da                	mov    %ebx,%edx$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	ee                   	out    %al,(%dx)$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	ee                   	out    %al,(%dx)$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	89 ca                	mov    %ecx,%edx$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	ee                   	out    %al,(%dx)$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010077a	obj/kern/kernel.asm	/^f010077a:	ee                   	out    %al,(%dx)$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	ee                   	out    %al,(%dx)$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	ee                   	out    %al,(%dx)$/;"	l
f010078b	obj/kern/kernel.asm	/^f010078b:	b2 f9                	mov    $0xf9,%dl$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	ee                   	out    %al,(%dx)$/;"	l
f0100793	obj/kern/kernel.asm	/^f0100793:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	ec                   	in     (%dx),%al$/;"	l
f0100796	obj/kern/kernel.asm	/^f0100796:	3c ff                	cmp    $0xff,%al$/;"	l
f0100798	obj/kern/kernel.asm	/^f0100798:	0f 95 c0             	setne  %al$/;"	l
f010079b	obj/kern/kernel.asm	/^f010079b:	89 c6                	mov    %eax,%esi$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	a2 00 70 20 f0       	mov    %al,0xf0207000$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	89 da                	mov    %ebx,%edx$/;"	l
f01007a4	obj/kern/kernel.asm	/^f01007a4:	ec                   	in     (%dx),%al$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	89 ca                	mov    %ecx,%edx$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	ec                   	in     (%dx),%al$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	89 f0                	mov    %esi,%eax$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	84 c0                	test   %al,%al$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	74 1d                	je     f01007cb <cons_init+0x117>$/;"	l
f01007ae	obj/kern/kernel.asm	/^f01007ae:	0f b7 05 c8 33 12 f0 	movzwl 0xf01233c8,%eax$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	e8 8a 3e 00 00       	call   f010464c <irq_setmask_8259A>$/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	80 3d 00 70 20 f0 00 	cmpb   $0x0,0xf0207000$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	75 0c                	jne    f01007d7 <cons_init+0x123>$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	c7 04 24 6e 75 10 f0 	movl   $0xf010756e,(%esp)$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	e8 b7 3f 00 00       	call   f010478e <cprintf>$/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	5b                   	pop    %ebx$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	5e                   	pop    %esi$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	5f                   	pop    %edi$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	5d                   	pop    %ebp$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	c3                   	ret    $/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df <cputchar>:$/;"	l
f01007df	obj/kern/kernel.asm	/^f01007df:	55                   	push   %ebp$/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	89 e5                	mov    %esp,%ebp$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007e5	obj/kern/kernel.asm	/^f01007e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	e8 6a fb ff ff       	call   f0100357 <cons_putc>$/;"	l
f01007ed	obj/kern/kernel.asm	/^f01007ed:	c9                   	leave  $/;"	l
f01007ee	obj/kern/kernel.asm	/^f01007ee:	c3                   	ret    $/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef <getchar>:$/;"	l
f01007ef	obj/kern/kernel.asm	/^f01007ef:	55                   	push   %ebp$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	89 e5                	mov    %esp,%ebp$/;"	l
f01007f2	obj/kern/kernel.asm	/^f01007f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007f5	obj/kern/kernel.asm	/^f01007f5:	e8 77 fe ff ff       	call   f0100671 <cons_getc>$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	85 c0                	test   %eax,%eax$/;"	l
f01007fc	obj/kern/kernel.asm	/^f01007fc:	74 f7                	je     f01007f5 <getchar+0x6>$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	c9                   	leave  $/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	c3                   	ret    $/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800 <iscons>:$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	55                   	push   %ebp$/;"	l
f0100801	obj/kern/kernel.asm	/^f0100801:	89 e5                	mov    %esp,%ebp$/;"	l
f0100803	obj/kern/kernel.asm	/^f0100803:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	5d                   	pop    %ebp$/;"	l
f0100809	obj/kern/kernel.asm	/^f0100809:	c3                   	ret    $/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	00 00                	add    %al,(%eax)$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	00 00                	add    %al,(%eax)$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810 <mon_kerninfo>:$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	55                   	push   %ebp$/;"	l
f0100811	obj/kern/kernel.asm	/^f0100811:	89 e5                	mov    %esp,%ebp$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100816	obj/kern/kernel.asm	/^f0100816:	c7 04 24 b0 77 10 f0 	movl   $0xf01077b0,(%esp)$/;"	l
f010081d	obj/kern/kernel.asm	/^f010081d:	e8 6c 3f 00 00       	call   f010478e <cprintf>$/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	00 $/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	c7 04 24 04 7a 10 f0 	movl   $0xf0107a04,(%esp)$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	e8 58 3f 00 00       	call   f010478e <cprintf>$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	00 $/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	f0 $/;"	l
f0100846	obj/kern/kernel.asm	/^f0100846:	c7 04 24 2c 7a 10 f0 	movl   $0xf0107a2c,(%esp)$/;"	l
f010084d	obj/kern/kernel.asm	/^f010084d:	e8 3c 3f 00 00       	call   f010478e <cprintf>$/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	c7 44 24 08 85 74 10 	movl   $0x107485,0x8(%esp)$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	00 $/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	c7 44 24 04 85 74 10 	movl   $0xf0107485,0x4(%esp)$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	f0 $/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	c7 04 24 50 7a 10 f0 	movl   $0xf0107a50,(%esp)$/;"	l
f0100869	obj/kern/kernel.asm	/^f0100869:	e8 20 3f 00 00       	call   f010478e <cprintf>$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	c7 44 24 08 13 61 20 	movl   $0x206113,0x8(%esp)$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	00 $/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	c7 44 24 04 13 61 20 	movl   $0xf0206113,0x4(%esp)$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	f0 $/;"	l
f010087e	obj/kern/kernel.asm	/^f010087e:	c7 04 24 74 7a 10 f0 	movl   $0xf0107a74,(%esp)$/;"	l
f0100885	obj/kern/kernel.asm	/^f0100885:	e8 04 3f 00 00       	call   f010478e <cprintf>$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	c7 44 24 08 08 90 24 	movl   $0x249008,0x8(%esp)$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	00 $/;"	l
f0100892	obj/kern/kernel.asm	/^f0100892:	c7 44 24 04 08 90 24 	movl   $0xf0249008,0x4(%esp)$/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	f0 $/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	c7 04 24 98 7a 10 f0 	movl   $0xf0107a98,(%esp)$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	e8 e8 3e 00 00       	call   f010478e <cprintf>$/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	b8 07 94 24 f0       	mov    $0xf0249407,%eax$/;"	l
f01008ab	obj/kern/kernel.asm	/^f01008ab:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01008b0	obj/kern/kernel.asm	/^f01008b0:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01008bb	obj/kern/kernel.asm	/^f01008bb:	85 c0                	test   %eax,%eax$/;"	l
f01008bd	obj/kern/kernel.asm	/^f01008bd:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f01008c3	obj/kern/kernel.asm	/^f01008c3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008c7	obj/kern/kernel.asm	/^f01008c7:	c7 04 24 bc 7a 10 f0 	movl   $0xf0107abc,(%esp)$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	e8 bb 3e 00 00       	call   f010478e <cprintf>$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	c9                   	leave  $/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	c3                   	ret    $/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da <mon_help>:$/;"	l
f01008da	obj/kern/kernel.asm	/^f01008da:	55                   	push   %ebp$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	89 e5                	mov    %esp,%ebp$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	56                   	push   %esi$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	53                   	push   %ebx$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01008e2	obj/kern/kernel.asm	/^f01008e2:	bb c4 7d 10 f0       	mov    $0xf0107dc4,%ebx$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	be 3c 7e 10 f0       	mov    $0xf0107e3c,%esi$/;"	l
f01008ec	obj/kern/kernel.asm	/^f01008ec:	8b 03                	mov    (%ebx),%eax$/;"	l
f01008ee	obj/kern/kernel.asm	/^f01008ee:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	8b 43 fc             	mov    -0x4(%ebx),%eax$/;"	l
f01008f5	obj/kern/kernel.asm	/^f01008f5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008f9	obj/kern/kernel.asm	/^f01008f9:	c7 04 24 c9 77 10 f0 	movl   $0xf01077c9,(%esp)$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	e8 89 3e 00 00       	call   f010478e <cprintf>$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	39 f3                	cmp    %esi,%ebx$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	75 e0                	jne    f01008ec <mon_help+0x12>$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	5b                   	pop    %ebx$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	5e                   	pop    %esi$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	5d                   	pop    %ebp$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	c3                   	ret    $/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918 <mon_backtrace>:$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	55                   	push   %ebp$/;"	l
f0100919	obj/kern/kernel.asm	/^f0100919:	89 e5                	mov    %esp,%ebp$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	57                   	push   %edi$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	56                   	push   %esi$/;"	l
f010091d	obj/kern/kernel.asm	/^f010091d:	53                   	push   %ebx$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	89 eb                	mov    %ebp,%ebx$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	89 de                	mov    %ebx,%esi$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	8b 7b 04             	mov    0x4(%ebx),%edi$/;"	l
f0100928	obj/kern/kernel.asm	/^f0100928:	c7 04 24 d2 77 10 f0 	movl   $0xf01077d2,(%esp)$/;"	l
f010092f	obj/kern/kernel.asm	/^f010092f:	e8 5a 3e 00 00       	call   f010478e <cprintf>$/;"	l
f0100934	obj/kern/kernel.asm	/^f0100934:	85 db                	test   %ebx,%ebx$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	0f 84 aa 00 00 00    	je     f01009e6 <mon_backtrace+0xce>$/;"	l
f010093c	obj/kern/kernel.asm	/^f010093c:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f010093f	obj/kern/kernel.asm	/^f010093f:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f010094d	obj/kern/kernel.asm	/^f010094d:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	8b 46 0c             	mov    0xc(%esi),%eax$/;"	l
f0100954	obj/kern/kernel.asm	/^f0100954:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f010095b	obj/kern/kernel.asm	/^f010095b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010095f	obj/kern/kernel.asm	/^f010095f:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0100963	obj/kern/kernel.asm	/^f0100963:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	c7 04 24 e8 7a 10 f0 	movl   $0xf0107ae8,(%esp)$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	e8 1b 3e 00 00       	call   f010478e <cprintf>$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f0100976	obj/kern/kernel.asm	/^f0100976:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010097a	obj/kern/kernel.asm	/^f010097a:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010097d	obj/kern/kernel.asm	/^f010097d:	e8 88 51 00 00       	call   f0105b0a <debuginfo_eip>$/;"	l
f0100982	obj/kern/kernel.asm	/^f0100982:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	c7 04 24 e3 77 10 f0 	movl   $0xf01077e3,(%esp)$/;"	l
f0100997	obj/kern/kernel.asm	/^f0100997:	e8 f2 3d 00 00       	call   f010478e <cprintf>$/;"	l
f010099c	obj/kern/kernel.asm	/^f010099c:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	74 24                	je     f01009c6 <mon_backtrace+0xae>$/;"	l
f01009a2	obj/kern/kernel.asm	/^f01009a2:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01009aa	obj/kern/kernel.asm	/^f01009aa:	0f be 04 18          	movsbl (%eax,%ebx,1),%eax$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	c7 04 24 f2 77 10 f0 	movl   $0xf01077f2,(%esp)$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	e8 d0 3d 00 00       	call   f010478e <cprintf>$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01009c1	obj/kern/kernel.asm	/^f01009c1:	39 5d dc             	cmp    %ebx,-0x24(%ebp)$/;"	l
f01009c4	obj/kern/kernel.asm	/^f01009c4:	77 e1                	ja     f01009a7 <mon_backtrace+0x8f>$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	2b 7d e0             	sub    -0x20(%ebp),%edi$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01009cd	obj/kern/kernel.asm	/^f01009cd:	c7 04 24 2a 94 10 f0 	movl   $0xf010942a,(%esp)$/;"	l
f01009d4	obj/kern/kernel.asm	/^f01009d4:	e8 b5 3d 00 00       	call   f010478e <cprintf>$/;"	l
f01009d9	obj/kern/kernel.asm	/^f01009d9:	8b 36                	mov    (%esi),%esi$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	8b 7e 04             	mov    0x4(%esi),%edi$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	85 f6                	test   %esi,%esi$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	0f 85 56 ff ff ff    	jne    f010093c <mon_backtrace+0x24>$/;"	l
f01009e6	obj/kern/kernel.asm	/^f01009e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009eb	obj/kern/kernel.asm	/^f01009eb:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	5b                   	pop    %ebx$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	5e                   	pop    %esi$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	5f                   	pop    %edi$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	5d                   	pop    %ebp$/;"	l
f01009f2	obj/kern/kernel.asm	/^f01009f2:	c3                   	ret    $/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3 <mon_setcolor>:$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	55                   	push   %ebp$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	89 e5                	mov    %esp,%ebp$/;"	l
f01009f6	obj/kern/kernel.asm	/^f01009f6:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	c7 44 24 04 f5 77 10 	movl   $0xf01077f5,0x4(%esp)$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	f0 $/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	e8 d3 5b 00 00       	call   f01065eb <strcmp>$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	85 c0                	test   %eax,%eax$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	0f 84 0e 01 00 00    	je     f0100b33 <mon_setcolor+0x140>$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	c7 44 24 04 f9 77 10 	movl   $0xf01077f9,0x4(%esp)$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	f0 $/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100a30	obj/kern/kernel.asm	/^f0100a30:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	e8 b3 5b 00 00       	call   f01065eb <strcmp>$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	85 c0                	test   %eax,%eax$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	0f 84 ee 00 00 00    	je     f0100b33 <mon_setcolor+0x140>$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	c7 44 24 04 fd 77 10 	movl   $0xf01077fd,0x4(%esp)$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	f0 $/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	e8 93 5b 00 00       	call   f01065eb <strcmp>$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	85 c0                	test   %eax,%eax$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	0f 84 ce 00 00 00    	je     f0100b33 <mon_setcolor+0x140>$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	c7 44 24 04 01 78 10 	movl   $0xf0107801,0x4(%esp)$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	f0 $/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	e8 73 5b 00 00       	call   f01065eb <strcmp>$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	85 c0                	test   %eax,%eax$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	0f 84 ae 00 00 00    	je     f0100b33 <mon_setcolor+0x140>$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	c7 44 24 04 05 78 10 	movl   $0xf0107805,0x4(%esp)$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	f0 $/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	e8 53 5b 00 00       	call   f01065eb <strcmp>$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	85 c0                	test   %eax,%eax$/;"	l
f0100a9f	obj/kern/kernel.asm	/^f0100a9f:	0f 84 8e 00 00 00    	je     f0100b33 <mon_setcolor+0x140>$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	c7 44 24 04 09 78 10 	movl   $0xf0107809,0x4(%esp)$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	f0 $/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ab3	obj/kern/kernel.asm	/^f0100ab3:	e8 33 5b 00 00       	call   f01065eb <strcmp>$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
f0100abd	obj/kern/kernel.asm	/^f0100abd:	85 c0                	test   %eax,%eax$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	74 72                	je     f0100b33 <mon_setcolor+0x140>$/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	c7 44 24 04 0d 78 10 	movl   $0xf010780d,0x4(%esp)$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	f0 $/;"	l
f0100ac9	obj/kern/kernel.asm	/^f0100ac9:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100acf	obj/kern/kernel.asm	/^f0100acf:	e8 17 5b 00 00       	call   f01065eb <strcmp>$/;"	l
f0100ad4	obj/kern/kernel.asm	/^f0100ad4:	bf 0f 00 00 00       	mov    $0xf,%edi$/;"	l
f0100ad9	obj/kern/kernel.asm	/^f0100ad9:	85 c0                	test   %eax,%eax$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	74 56                	je     f0100b33 <mon_setcolor+0x140>$/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	c7 44 24 04 11 78 10 	movl   $0xf0107811,0x4(%esp)$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	f0 $/;"	l
f0100ae5	obj/kern/kernel.asm	/^f0100ae5:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	e8 fb 5a 00 00       	call   f01065eb <strcmp>$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	bf 0c 00 00 00       	mov    $0xc,%edi$/;"	l
f0100af5	obj/kern/kernel.asm	/^f0100af5:	85 c0                	test   %eax,%eax$/;"	l
f0100af7	obj/kern/kernel.asm	/^f0100af7:	74 3a                	je     f0100b33 <mon_setcolor+0x140>$/;"	l
f0100af9	obj/kern/kernel.asm	/^f0100af9:	c7 44 24 04 15 78 10 	movl   $0xf0107815,0x4(%esp)$/;"	l
f0100b00	obj/kern/kernel.asm	/^f0100b00:	f0 $/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100b04	obj/kern/kernel.asm	/^f0100b04:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b07	obj/kern/kernel.asm	/^f0100b07:	e8 df 5a 00 00       	call   f01065eb <strcmp>$/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	bf 06 00 00 00       	mov    $0x6,%edi$/;"	l
f0100b11	obj/kern/kernel.asm	/^f0100b11:	85 c0                	test   %eax,%eax$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	74 1e                	je     f0100b33 <mon_setcolor+0x140>$/;"	l
f0100b15	obj/kern/kernel.asm	/^f0100b15:	c7 44 24 04 19 78 10 	movl   $0xf0107819,0x4(%esp)$/;"	l
f0100b1c	obj/kern/kernel.asm	/^f0100b1c:	f0 $/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	e8 c3 5a 00 00       	call   f01065eb <strcmp>$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	19 ff                	sbb    %edi,%edi$/;"	l
f0100b2d	obj/kern/kernel.asm	/^f0100b2d:	83 e7 04             	and    $0x4,%edi$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	83 c7 07             	add    $0x7,%edi$/;"	l
f0100b33	obj/kern/kernel.asm	/^f0100b33:	c7 44 24 04 f5 77 10 	movl   $0xf01077f5,0x4(%esp)$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	f0 $/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b41	obj/kern/kernel.asm	/^f0100b41:	e8 a5 5a 00 00       	call   f01065eb <strcmp>$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	85 c0                	test   %eax,%eax$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	0f 84 f6 00 00 00    	je     f0100c49 <mon_setcolor+0x256>$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	c7 44 24 04 f9 77 10 	movl   $0xf01077f9,0x4(%esp)$/;"	l
f0100b5a	obj/kern/kernel.asm	/^f0100b5a:	f0 $/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100b5e	obj/kern/kernel.asm	/^f0100b5e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	e8 85 5a 00 00       	call   f01065eb <strcmp>$/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	b3 07                	mov    $0x7,%bl$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	85 c0                	test   %eax,%eax$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	0f 84 d9 00 00 00    	je     f0100c49 <mon_setcolor+0x256>$/;"	l
f0100b70	obj/kern/kernel.asm	/^f0100b70:	c7 44 24 04 fd 77 10 	movl   $0xf01077fd,0x4(%esp)$/;"	l
f0100b77	obj/kern/kernel.asm	/^f0100b77:	f0 $/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	e8 68 5a 00 00       	call   f01065eb <strcmp>$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	b3 01                	mov    $0x1,%bl$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	85 c0                	test   %eax,%eax$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	0f 84 bc 00 00 00    	je     f0100c49 <mon_setcolor+0x256>$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	c7 44 24 04 01 78 10 	movl   $0xf0107801,0x4(%esp)$/;"	l
f0100b94	obj/kern/kernel.asm	/^f0100b94:	f0 $/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	e8 4b 5a 00 00       	call   f01065eb <strcmp>$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	b3 02                	mov    $0x2,%bl$/;"	l
f0100ba2	obj/kern/kernel.asm	/^f0100ba2:	85 c0                	test   %eax,%eax$/;"	l
f0100ba4	obj/kern/kernel.asm	/^f0100ba4:	0f 84 9f 00 00 00    	je     f0100c49 <mon_setcolor+0x256>$/;"	l
f0100baa	obj/kern/kernel.asm	/^f0100baa:	c7 44 24 04 05 78 10 	movl   $0xf0107805,0x4(%esp)$/;"	l
f0100bb1	obj/kern/kernel.asm	/^f0100bb1:	f0 $/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100bb8	obj/kern/kernel.asm	/^f0100bb8:	e8 2e 5a 00 00       	call   f01065eb <strcmp>$/;"	l
f0100bbd	obj/kern/kernel.asm	/^f0100bbd:	b3 04                	mov    $0x4,%bl$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	85 c0                	test   %eax,%eax$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	0f 84 82 00 00 00    	je     f0100c49 <mon_setcolor+0x256>$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	c7 44 24 04 09 78 10 	movl   $0xf0107809,0x4(%esp)$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	f0 $/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	e8 11 5a 00 00       	call   f01065eb <strcmp>$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	b3 08                	mov    $0x8,%bl$/;"	l
f0100bdc	obj/kern/kernel.asm	/^f0100bdc:	85 c0                	test   %eax,%eax$/;"	l
f0100bde	obj/kern/kernel.asm	/^f0100bde:	74 69                	je     f0100c49 <mon_setcolor+0x256>$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	c7 44 24 04 0d 78 10 	movl   $0xf010780d,0x4(%esp)$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	f0 $/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100bee	obj/kern/kernel.asm	/^f0100bee:	e8 f8 59 00 00       	call   f01065eb <strcmp>$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	b3 0f                	mov    $0xf,%bl$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	85 c0                	test   %eax,%eax$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	74 50                	je     f0100c49 <mon_setcolor+0x256>$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	c7 44 24 04 11 78 10 	movl   $0xf0107811,0x4(%esp)$/;"	l
f0100c00	obj/kern/kernel.asm	/^f0100c00:	f0 $/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100c04	obj/kern/kernel.asm	/^f0100c04:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	e8 df 59 00 00       	call   f01065eb <strcmp>$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	b3 0c                	mov    $0xc,%bl$/;"	l
f0100c0e	obj/kern/kernel.asm	/^f0100c0e:	85 c0                	test   %eax,%eax$/;"	l
f0100c10	obj/kern/kernel.asm	/^f0100c10:	74 37                	je     f0100c49 <mon_setcolor+0x256>$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	c7 44 24 04 15 78 10 	movl   $0xf0107815,0x4(%esp)$/;"	l
f0100c19	obj/kern/kernel.asm	/^f0100c19:	f0 $/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	e8 c6 59 00 00       	call   f01065eb <strcmp>$/;"	l
f0100c25	obj/kern/kernel.asm	/^f0100c25:	b3 06                	mov    $0x6,%bl$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	85 c0                	test   %eax,%eax$/;"	l
f0100c29	obj/kern/kernel.asm	/^f0100c29:	74 1e                	je     f0100c49 <mon_setcolor+0x256>$/;"	l
f0100c2b	obj/kern/kernel.asm	/^f0100c2b:	c7 44 24 04 19 78 10 	movl   $0xf0107819,0x4(%esp)$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	f0 $/;"	l
f0100c33	obj/kern/kernel.asm	/^f0100c33:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100c36	obj/kern/kernel.asm	/^f0100c36:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c39	obj/kern/kernel.asm	/^f0100c39:	e8 ad 59 00 00       	call   f01065eb <strcmp>$/;"	l
f0100c3e	obj/kern/kernel.asm	/^f0100c3e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	19 db                	sbb    %ebx,%ebx$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	83 e3 04             	and    $0x4,%ebx$/;"	l
f0100c46	obj/kern/kernel.asm	/^f0100c46:	83 c3 07             	add    $0x7,%ebx$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	0f b7 f7             	movzwl %di,%esi$/;"	l
f0100c4c	obj/kern/kernel.asm	/^f0100c4c:	0f b7 db             	movzwl %bx,%ebx$/;"	l
f0100c4f	obj/kern/kernel.asm	/^f0100c4f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100c53	obj/kern/kernel.asm	/^f0100c53:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100c56	obj/kern/kernel.asm	/^f0100c56:	e8 ce f9 ff ff       	call   f0100629 <set_attribute_color>$/;"	l
f0100c5b	obj/kern/kernel.asm	/^f0100c5b:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0100c5f	obj/kern/kernel.asm	/^f0100c5f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	c7 04 24 1c 7b 10 f0 	movl   $0xf0107b1c,(%esp)$/;"	l
f0100c6a	obj/kern/kernel.asm	/^f0100c6a:	e8 1f 3b 00 00       	call   f010478e <cprintf>$/;"	l
f0100c6f	obj/kern/kernel.asm	/^f0100c6f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c74	obj/kern/kernel.asm	/^f0100c74:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0100c7d	obj/kern/kernel.asm	/^f0100c7d:	89 ec                	mov    %ebp,%esp$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	5d                   	pop    %ebp$/;"	l
f0100c80	obj/kern/kernel.asm	/^f0100c80:	c3                   	ret    $/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81 <mon_si>:$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	55                   	push   %ebp$/;"	l
f0100c82	obj/kern/kernel.asm	/^f0100c82:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c84	obj/kern/kernel.asm	/^f0100c84:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c87	obj/kern/kernel.asm	/^f0100c87:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100c8e	obj/kern/kernel.asm	/^f0100c8e:	7e 0e                	jle    f0100c9e <mon_si+0x1d>$/;"	l
f0100c90	obj/kern/kernel.asm	/^f0100c90:	c7 04 24 1d 78 10 f0 	movl   $0xf010781d,(%esp)$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	e8 f2 3a 00 00       	call   f010478e <cprintf>$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	eb 2f                	jmp    f0100ccd <mon_si+0x4c>$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	85 c0                	test   %eax,%eax$/;"	l
f0100ca0	obj/kern/kernel.asm	/^f0100ca0:	75 0e                	jne    f0100cb0 <mon_si+0x2f>$/;"	l
f0100ca2	obj/kern/kernel.asm	/^f0100ca2:	c7 04 24 3b 78 10 f0 	movl   $0xf010783b,(%esp)$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	e8 e0 3a 00 00       	call   f010478e <cprintf>$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	eb 1d                	jmp    f0100ccd <mon_si+0x4c>$/;"	l
f0100cb0	obj/kern/kernel.asm	/^f0100cb0:	81 48 38 00 01 00 00 	orl    $0x100,0x38(%eax)$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	e8 94 60 00 00       	call   f0106d50 <cpunum>$/;"	l
f0100cbc	obj/kern/kernel.asm	/^f0100cbc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0100cc5	obj/kern/kernel.asm	/^f0100cc5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100cc8	obj/kern/kernel.asm	/^f0100cc8:	e8 7b 38 00 00       	call   f0104548 <env_run>$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	c9                   	leave  $/;"	l
f0100cd3	obj/kern/kernel.asm	/^f0100cd3:	c3                   	ret    $/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4 <mon_continue>:$/;"	l
f0100cd4	obj/kern/kernel.asm	/^f0100cd4:	55                   	push   %ebp$/;"	l
f0100cd5	obj/kern/kernel.asm	/^f0100cd5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100cdd	obj/kern/kernel.asm	/^f0100cdd:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	7e 0e                	jle    f0100cf1 <mon_continue+0x1d>$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	c7 04 24 1d 78 10 f0 	movl   $0xf010781d,(%esp)$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	e8 9f 3a 00 00       	call   f010478e <cprintf>$/;"	l
f0100cef	obj/kern/kernel.asm	/^f0100cef:	eb 2f                	jmp    f0100d20 <mon_continue+0x4c>$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	85 c0                	test   %eax,%eax$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	75 0e                	jne    f0100d03 <mon_continue+0x2f>$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	c7 04 24 46 78 10 f0 	movl   $0xf0107846,(%esp)$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	e8 8d 3a 00 00       	call   f010478e <cprintf>$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	eb 1d                	jmp    f0100d20 <mon_continue+0x4c>$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	81 60 38 ff fe ff ff 	andl   $0xfffffeff,0x38(%eax)$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	e8 41 60 00 00       	call   f0106d50 <cpunum>$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0100d18	obj/kern/kernel.asm	/^f0100d18:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100d1b	obj/kern/kernel.asm	/^f0100d1b:	e8 28 38 00 00       	call   f0104548 <env_run>$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	c9                   	leave  $/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	c3                   	ret    $/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27 <printPermission>:$/;"	l
f0100d27	obj/kern/kernel.asm	/^f0100d27:	55                   	push   %ebp$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	53                   	push   %ebx$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	f6 c3 04             	test   $0x4,%bl$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	0f 95 c0             	setne  %al$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100d3e	obj/kern/kernel.asm	/^f0100d3e:	c7 04 24 57 78 10 f0 	movl   $0xf0107857,(%esp)$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	e8 44 3a 00 00       	call   f010478e <cprintf>$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	f6 c3 02             	test   $0x2,%bl$/;"	l
f0100d4d	obj/kern/kernel.asm	/^f0100d4d:	0f 95 c0             	setne  %al$/;"	l
f0100d50	obj/kern/kernel.asm	/^f0100d50:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100d53	obj/kern/kernel.asm	/^f0100d53:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	c7 04 24 63 78 10 f0 	movl   $0xf0107863,(%esp)$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	e8 2b 3a 00 00       	call   f010478e <cprintf>$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	83 e3 01             	and    $0x1,%ebx$/;"	l
f0100d66	obj/kern/kernel.asm	/^f0100d66:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	c7 04 24 6f 78 10 f0 	movl   $0xf010786f,(%esp)$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	e8 18 3a 00 00       	call   f010478e <cprintf>$/;"	l
f0100d76	obj/kern/kernel.asm	/^f0100d76:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	5b                   	pop    %ebx$/;"	l
f0100d7a	obj/kern/kernel.asm	/^f0100d7a:	5d                   	pop    %ebp$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	c3                   	ret    $/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c <xtoi>:$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	55                   	push   %ebp$/;"	l
f0100d7d	obj/kern/kernel.asm	/^f0100d7d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d7f	obj/kern/kernel.asm	/^f0100d7f:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100d91	obj/kern/kernel.asm	/^f0100d91:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100d94	obj/kern/kernel.asm	/^f0100d94:	e8 47 57 00 00       	call   f01064e0 <strlen>$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	c6 06 01             	movb   $0x1,(%esi)$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	80 3b 30             	cmpb   $0x30,(%ebx)$/;"	l
f0100d9f	obj/kern/kernel.asm	/^f0100d9f:	75 1f                	jne    f0100dc0 <xtoi+0x44>$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	0f b6 53 01          	movzbl 0x1(%ebx),%edx$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	80 fa 78             	cmp    $0x78,%dl$/;"	l
f0100da8	obj/kern/kernel.asm	/^f0100da8:	74 05                	je     f0100daf <xtoi+0x33>$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	80 fa 58             	cmp    $0x58,%dl$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	75 11                	jne    f0100dc0 <xtoi+0x44>$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0100dbc	obj/kern/kernel.asm	/^f0100dbc:	77 0c                	ja     f0100dca <xtoi+0x4e>$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	eb 5d                	jmp    f0100e1d <xtoi+0xa1>$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	c6 06 00             	movb   $0x0,(%esi)$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	eb 53                	jmp    f0100e1d <xtoi+0xa1>$/;"	l
f0100dca	obj/kern/kernel.asm	/^f0100dca:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f0100dcd	obj/kern/kernel.asm	/^f0100dcd:	89 c6                	mov    %eax,%esi$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	c1 e7 04             	shl    $0x4,%edi$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	0f b6 04 13          	movzbl (%ebx,%edx,1),%eax$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	8d 48 d0             	lea    -0x30(%eax),%ecx$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	77 09                	ja     f0100de7 <xtoi+0x6b>$/;"	l
f0100dde	obj/kern/kernel.asm	/^f0100dde:	0f be c0             	movsbl %al,%eax$/;"	l
f0100de1	obj/kern/kernel.asm	/^f0100de1:	8d 7c 07 d0          	lea    -0x30(%edi,%eax,1),%edi$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	eb 2f                	jmp    f0100e16 <xtoi+0x9a>$/;"	l
f0100de7	obj/kern/kernel.asm	/^f0100de7:	8d 48 9f             	lea    -0x61(%eax),%ecx$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	80 f9 05             	cmp    $0x5,%cl$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	77 09                	ja     f0100df8 <xtoi+0x7c>$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	0f be c0             	movsbl %al,%eax$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	8d 7c 07 a9          	lea    -0x57(%edi,%eax,1),%edi$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	eb 1e                	jmp    f0100e16 <xtoi+0x9a>$/;"	l
f0100df8	obj/kern/kernel.asm	/^f0100df8:	8d 48 bf             	lea    -0x41(%eax),%ecx$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	80 f9 05             	cmp    $0x5,%cl$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	77 09                	ja     f0100e09 <xtoi+0x8d>$/;"	l
f0100e00	obj/kern/kernel.asm	/^f0100e00:	0f be c0             	movsbl %al,%eax$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	8d 7c 07 c9          	lea    -0x37(%edi,%eax,1),%edi$/;"	l
f0100e07	obj/kern/kernel.asm	/^f0100e07:	eb 0d                	jmp    f0100e16 <xtoi+0x9a>$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	c6 06 00             	movb   $0x0,(%esi)$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	eb 07                	jmp    f0100e1d <xtoi+0xa1>$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100e19	obj/kern/kernel.asm	/^f0100e19:	39 d6                	cmp    %edx,%esi$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	75 b2                	jne    f0100dcf <xtoi+0x53>$/;"	l
f0100e1d	obj/kern/kernel.asm	/^f0100e1d:	89 f8                	mov    %edi,%eax$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0100e22	obj/kern/kernel.asm	/^f0100e22:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	89 ec                	mov    %ebp,%esp$/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	5d                   	pop    %ebp$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	c3                   	ret    $/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c <pxtoi>:$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	55                   	push   %ebp$/;"	l
f0100e2d	obj/kern/kernel.asm	/^f0100e2d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	c6 45 f7 01          	movb   $0x1,-0x9(%ebp)$/;"	l
f0100e36	obj/kern/kernel.asm	/^f0100e36:	8d 45 f7             	lea    -0x9(%ebp),%eax$/;"	l
f0100e39	obj/kern/kernel.asm	/^f0100e39:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e43	obj/kern/kernel.asm	/^f0100e43:	e8 34 ff ff ff       	call   f0100d7c <xtoi>$/;"	l
f0100e48	obj/kern/kernel.asm	/^f0100e48:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	89 02                	mov    %eax,(%edx)$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	75 11                	jne    f0100e69 <pxtoi+0x3d>$/;"	l
f0100e58	obj/kern/kernel.asm	/^f0100e58:	c7 04 24 7b 78 10 f0 	movl   $0xf010787b,(%esp)$/;"	l
f0100e5f	obj/kern/kernel.asm	/^f0100e5f:	e8 2a 39 00 00       	call   f010478e <cprintf>$/;"	l
f0100e64	obj/kern/kernel.asm	/^f0100e64:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	c9                   	leave  $/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	c3                   	ret    $/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b <mon_showmapping>:$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	55                   	push   %ebp$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	53                   	push   %ebx$/;"	l
f0100e6f	obj/kern/kernel.asm	/^f0100e6f:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100e7f	obj/kern/kernel.asm	/^f0100e7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	e8 a5 ff ff ff       	call   f0100e2c <pxtoi>$/;"	l
f0100e87	obj/kern/kernel.asm	/^f0100e87:	84 c0                	test   %al,%al$/;"	l
f0100e89	obj/kern/kernel.asm	/^f0100e89:	0f 84 eb 00 00 00    	je     f0100f7a <mon_showmapping+0x10f>$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e9c	obj/kern/kernel.asm	/^f0100e9c:	e8 8b ff ff ff       	call   f0100e2c <pxtoi>$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	84 c0                	test   %al,%al$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	0f 84 d1 00 00 00    	je     f0100f7a <mon_showmapping+0x10f>$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100eac	obj/kern/kernel.asm	/^f0100eac:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100eb8	obj/kern/kernel.asm	/^f0100eb8:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	81 c1 ff 0f 00 00    	add    $0xfff,%ecx$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0100eca	obj/kern/kernel.asm	/^f0100eca:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	89 d0                	mov    %edx,%eax$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	0f 82 a3 00 00 00    	jb     f0100f7a <mon_showmapping+0x10f>$/;"	l
f0100ed7	obj/kern/kernel.asm	/^f0100ed7:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	00 $/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0100ee8	obj/kern/kernel.asm	/^f0100ee8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100eeb	obj/kern/kernel.asm	/^f0100eeb:	e8 a2 0a 00 00       	call   f0101992 <pgdir_walk>$/;"	l
f0100ef0	obj/kern/kernel.asm	/^f0100ef0:	89 c3                	mov    %eax,%ebx$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ef9	obj/kern/kernel.asm	/^f0100ef9:	c7 04 24 91 78 10 f0 	movl   $0xf0107891,(%esp)$/;"	l
f0100f00	obj/kern/kernel.asm	/^f0100f00:	e8 89 38 00 00       	call   f010478e <cprintf>$/;"	l
f0100f05	obj/kern/kernel.asm	/^f0100f05:	85 db                	test   %ebx,%ebx$/;"	l
f0100f07	obj/kern/kernel.asm	/^f0100f07:	74 41                	je     f0100f4a <mon_showmapping+0xdf>$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100f0b	obj/kern/kernel.asm	/^f0100f0b:	a8 01                	test   $0x1,%al$/;"	l
f0100f0d	obj/kern/kernel.asm	/^f0100f0d:	74 2d                	je     f0100f3c <mon_showmapping+0xd1>$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100f18	obj/kern/kernel.asm	/^f0100f18:	c7 04 24 9e 78 10 f0 	movl   $0xf010789e,(%esp)$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	e8 6a 38 00 00       	call   f010478e <cprintf>$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	e8 f9 fd ff ff       	call   f0100d27 <printPermission>$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	c7 04 24 d6 89 10 f0 	movl   $0xf01089d6,(%esp)$/;"	l
f0100f35	obj/kern/kernel.asm	/^f0100f35:	e8 54 38 00 00       	call   f010478e <cprintf>$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	eb 2a                	jmp    f0100f66 <mon_showmapping+0xfb>$/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	c7 04 24 ae 78 10 f0 	movl   $0xf01078ae,(%esp)$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	e8 46 38 00 00       	call   f010478e <cprintf>$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48:	eb 1c                	jmp    f0100f66 <mon_showmapping+0xfb>$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	c7 44 24 08 c0 78 10 	movl   $0xf01078c0,0x8(%esp)$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	f0 $/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	c7 44 24 04 0b 01 00 	movl   $0x10b,0x4(%esp)$/;"	l
f0100f59	obj/kern/kernel.asm	/^f0100f59:	00 $/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	c7 04 24 d5 78 10 f0 	movl   $0xf01078d5,(%esp)$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	e8 da f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	0f 83 5d ff ff ff    	jae    f0100ed7 <mon_showmapping+0x6c>$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	83 c4 24             	add    $0x24,%esp$/;"	l
f0100f82	obj/kern/kernel.asm	/^f0100f82:	5b                   	pop    %ebx$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	5d                   	pop    %ebp$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	c3                   	ret    $/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85 <mon_dump>:$/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	55                   	push   %ebp$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f88	obj/kern/kernel.asm	/^f0100f88:	53                   	push   %ebx$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100f8f	obj/kern/kernel.asm	/^f0100f8f:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	7f 11                	jg     f0100fa6 <mon_dump+0x21>$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	c7 04 24 e4 78 10 f0 	movl   $0xf01078e4,(%esp)$/;"	l
f0100f9c	obj/kern/kernel.asm	/^f0100f9c:	e8 ed 37 00 00       	call   f010478e <cprintf>$/;"	l
f0100fa1	obj/kern/kernel.asm	/^f0100fa1:	e9 10 01 00 00       	jmp    f01010b6 <mon_dump+0x131>$/;"	l
f0100fa6	obj/kern/kernel.asm	/^f0100fa6:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100fa9	obj/kern/kernel.asm	/^f0100fa9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100fb0	obj/kern/kernel.asm	/^f0100fb0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	e8 74 fe ff ff       	call   f0100e2c <pxtoi>$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	84 c0                	test   %al,%al$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	0f 84 f6 00 00 00    	je     f01010b6 <mon_dump+0x131>$/;"	l
f0100fc0	obj/kern/kernel.asm	/^f0100fc0:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	e8 5a fe ff ff       	call   f0100e2c <pxtoi>$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	84 c0                	test   %al,%al$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	0f 84 dc 00 00 00    	je     f01010b6 <mon_dump+0x131>$/;"	l
f0100fda	obj/kern/kernel.asm	/^f0100fda:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0100fe0	obj/kern/kernel.asm	/^f0100fe0:	3c 70                	cmp    $0x70,%al$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	0f 85 90 00 00 00    	jne    f0101078 <mon_dump+0xf3>$/;"	l
f0100fe8	obj/kern/kernel.asm	/^f0100fe8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0100feb	obj/kern/kernel.asm	/^f0100feb:	8b 0d 88 7e 20 f0    	mov    0xf0207e88,%ecx$/;"	l
f0100ff1	obj/kern/kernel.asm	/^f0100ff1:	89 d0                	mov    %edx,%eax$/;"	l
f0100ff3	obj/kern/kernel.asm	/^f0100ff3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100ff6	obj/kern/kernel.asm	/^f0100ff6:	39 c8                	cmp    %ecx,%eax$/;"	l
f0100ff8	obj/kern/kernel.asm	/^f0100ff8:	73 16                	jae    f0101010 <mon_dump+0x8b>$/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	39 c2                	cmp    %eax,%edx$/;"	l
f0100fff	obj/kern/kernel.asm	/^f0100fff:	0f 82 b1 00 00 00    	jb     f01010b6 <mon_dump+0x131>$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	89 c2                	mov    %eax,%edx$/;"	l
f0101007	obj/kern/kernel.asm	/^f0101007:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010100a	obj/kern/kernel.asm	/^f010100a:	39 d1                	cmp    %edx,%ecx$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	77 40                	ja     f010104e <mon_dump+0xc9>$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	eb 1e                	jmp    f010102e <mon_dump+0xa9>$/;"	l
f0101010	obj/kern/kernel.asm	/^f0101010:	c7 04 24 f5 78 10 f0 	movl   $0xf01078f5,(%esp)$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	e8 72 37 00 00       	call   f010478e <cprintf>$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	e9 95 00 00 00       	jmp    f01010b6 <mon_dump+0x131>$/;"	l
f0101021	obj/kern/kernel.asm	/^f0101021:	89 c2                	mov    %eax,%edx$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101026	obj/kern/kernel.asm	/^f0101026:	3b 15 88 7e 20 f0    	cmp    0xf0207e88,%edx$/;"	l
f010102c	obj/kern/kernel.asm	/^f010102c:	72 20                	jb     f010104e <mon_dump+0xc9>$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	f0 $/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	c7 44 24 04 ee 00 00 	movl   $0xee,0x4(%esp)$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	00 $/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	c7 04 24 d5 78 10 f0 	movl   $0xf01078d5,(%esp)$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	e8 f2 ef ff ff       	call   f0100040 <_panic>$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	8b 90 00 00 00 f0    	mov    -0x10000000(%eax),%edx$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010105c	obj/kern/kernel.asm	/^f010105c:	c7 04 24 04 79 10 f0 	movl   $0xf0107904,(%esp)$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	e8 26 37 00 00       	call   f010478e <cprintf>$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	83 c0 04             	add    $0x4,%eax$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	73 ab                	jae    f0101021 <mon_dump+0x9c>$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	eb 3e                	jmp    f01010b6 <mon_dump+0x131>$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	3c 76                	cmp    $0x76,%al$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	75 2e                	jne    f01010aa <mon_dump+0x125>$/;"	l
f010107c	obj/kern/kernel.asm	/^f010107c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	77 32                	ja     f01010b6 <mon_dump+0x131>$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	8b 10                	mov    (%eax),%edx$/;"	l
f0101086	obj/kern/kernel.asm	/^f0101086:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010108e	obj/kern/kernel.asm	/^f010108e:	c7 04 24 18 79 10 f0 	movl   $0xf0107918,(%esp)$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	e8 f4 36 00 00       	call   f010478e <cprintf>$/;"	l
f010109a	obj/kern/kernel.asm	/^f010109a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	83 c0 04             	add    $0x4,%eax$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01010a3	obj/kern/kernel.asm	/^f01010a3:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
f01010a6	obj/kern/kernel.asm	/^f01010a6:	73 dc                	jae    f0101084 <mon_dump+0xff>$/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	eb 0c                	jmp    f01010b6 <mon_dump+0x131>$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	c7 04 24 e4 78 10 f0 	movl   $0xf01078e4,(%esp)$/;"	l
f01010b1	obj/kern/kernel.asm	/^f01010b1:	e8 d8 36 00 00       	call   f010478e <cprintf>$/;"	l
f01010b6	obj/kern/kernel.asm	/^f01010b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010bb	obj/kern/kernel.asm	/^f01010bb:	83 c4 24             	add    $0x24,%esp$/;"	l
f01010be	obj/kern/kernel.asm	/^f01010be:	5b                   	pop    %ebx$/;"	l
f01010bf	obj/kern/kernel.asm	/^f01010bf:	5d                   	pop    %ebp$/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	c3                   	ret    $/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1 <mon_showPT>:$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	55                   	push   %ebp$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	e8 50 fd ff ff       	call   f0100e2c <pxtoi>$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	84 c0                	test   %al,%al$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	74 31                	je     f0101111 <mon_showPT+0x50>$/;"	l
f01010e0	obj/kern/kernel.asm	/^f01010e0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	00 $/;"	l
f01010e8	obj/kern/kernel.asm	/^f01010e8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01010eb	obj/kern/kernel.asm	/^f01010eb:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01010fc	obj/kern/kernel.asm	/^f01010fc:	e8 91 08 00 00       	call   f0101992 <pgdir_walk>$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	c7 04 24 50 7b 10 f0 	movl   $0xf0107b50,(%esp)$/;"	l
f010110c	obj/kern/kernel.asm	/^f010110c:	e8 7d 36 00 00       	call   f010478e <cprintf>$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101116	obj/kern/kernel.asm	/^f0101116:	c9                   	leave  $/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	c3                   	ret    $/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118 <mon_changePermission>:$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	55                   	push   %ebp$/;"	l
f0101119	obj/kern/kernel.asm	/^f0101119:	89 e5                	mov    %esp,%ebp$/;"	l
f010111b	obj/kern/kernel.asm	/^f010111b:	83 ec 38             	sub    $0x38,%esp$/;"	l
f010111e	obj/kern/kernel.asm	/^f010111e:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0101121	obj/kern/kernel.asm	/^f0101121:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f010112d	obj/kern/kernel.asm	/^f010112d:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f0101130	obj/kern/kernel.asm	/^f0101130:	7f 11                	jg     f0101143 <mon_changePermission+0x2b>$/;"	l
f0101132	obj/kern/kernel.asm	/^f0101132:	c7 04 24 1d 78 10 f0 	movl   $0xf010781d,(%esp)$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	e8 50 36 00 00       	call   f010478e <cprintf>$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	e9 f6 00 00 00       	jmp    f0101239 <mon_changePermission+0x121>$/;"	l
f0101143	obj/kern/kernel.asm	/^f0101143:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010114d	obj/kern/kernel.asm	/^f010114d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	e8 d7 fc ff ff       	call   f0100e2c <pxtoi>$/;"	l
f0101155	obj/kern/kernel.asm	/^f0101155:	84 c0                	test   %al,%al$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	0f 84 dc 00 00 00    	je     f0101239 <mon_changePermission+0x121>$/;"	l
f010115d	obj/kern/kernel.asm	/^f010115d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101164	obj/kern/kernel.asm	/^f0101164:	00 $/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	e8 19 08 00 00       	call   f0101992 <pgdir_walk>$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	89 c6                	mov    %eax,%esi$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	85 c0                	test   %eax,%eax$/;"	l
f010117d	obj/kern/kernel.asm	/^f010117d:	75 1c                	jne    f010119b <mon_changePermission+0x83>$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	c7 44 24 08 c0 78 10 	movl   $0xf01078c0,0x8(%esp)$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	f0 $/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	c7 44 24 04 c1 00 00 	movl   $0xc1,0x4(%esp)$/;"	l
f010118e	obj/kern/kernel.asm	/^f010118e:	00 $/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	c7 04 24 d5 78 10 f0 	movl   $0xf01078d5,(%esp)$/;"	l
f0101196	obj/kern/kernel.asm	/^f0101196:	e8 a5 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010119b	obj/kern/kernel.asm	/^f010119b:	83 ff 02             	cmp    $0x2,%edi$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	74 45                	je     f01011e5 <mon_changePermission+0xcd>$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	83 ff 05             	cmp    $0x5,%edi$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	74 11                	je     f01011b6 <mon_changePermission+0x9e>$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	c7 04 24 1d 78 10 f0 	movl   $0xf010781d,(%esp)$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	e8 dd 35 00 00       	call   f010478e <cprintf>$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	e9 83 00 00 00       	jmp    f0101239 <mon_changePermission+0x121>$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01011b9	obj/kern/kernel.asm	/^f01011b9:	80 38 31             	cmpb   $0x31,(%eax)$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	0f 94 c0             	sete   %al$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	89 c7                	mov    %eax,%edi$/;"	l
f01011c4	obj/kern/kernel.asm	/^f01011c4:	c1 e7 02             	shl    $0x2,%edi$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	8b 53 0c             	mov    0xc(%ebx),%edx$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	89 f8                	mov    %edi,%eax$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	83 c8 02             	or     $0x2,%eax$/;"	l
f01011cf	obj/kern/kernel.asm	/^f01011cf:	80 3a 31             	cmpb   $0x31,(%edx)$/;"	l
f01011d2	obj/kern/kernel.asm	/^f01011d2:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	8b 53 10             	mov    0x10(%ebx),%edx$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	89 f8                	mov    %edi,%eax$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	83 c8 01             	or     $0x1,%eax$/;"	l
f01011dd	obj/kern/kernel.asm	/^f01011dd:	80 3a 31             	cmpb   $0x31,(%edx)$/;"	l
f01011e0	obj/kern/kernel.asm	/^f01011e0:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	eb 05                	jmp    f01011ea <mon_changePermission+0xd2>$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	c7 04 24 2c 79 10 f0 	movl   $0xf010792c,(%esp)$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	e8 98 35 00 00       	call   f010478e <cprintf>$/;"	l
f01011f6	obj/kern/kernel.asm	/^f01011f6:	8b 06                	mov    (%esi),%eax$/;"	l
f01011f8	obj/kern/kernel.asm	/^f01011f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011fb	obj/kern/kernel.asm	/^f01011fb:	e8 27 fb ff ff       	call   f0100d27 <printPermission>$/;"	l
f0101200	obj/kern/kernel.asm	/^f0101200:	c7 04 24 d6 89 10 f0 	movl   $0xf01089d6,(%esp)$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	e8 82 35 00 00       	call   f010478e <cprintf>$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	8b 06                	mov    (%esi),%eax$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	09 c7                	or     %eax,%edi$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	89 3e                	mov    %edi,(%esi)$/;"	l
f0101217	obj/kern/kernel.asm	/^f0101217:	c7 04 24 3b 79 10 f0 	movl   $0xf010793b,(%esp)$/;"	l
f010121e	obj/kern/kernel.asm	/^f010121e:	e8 6b 35 00 00       	call   f010478e <cprintf>$/;"	l
f0101223	obj/kern/kernel.asm	/^f0101223:	8b 06                	mov    (%esi),%eax$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101228	obj/kern/kernel.asm	/^f0101228:	e8 fa fa ff ff       	call   f0100d27 <printPermission>$/;"	l
f010122d	obj/kern/kernel.asm	/^f010122d:	c7 04 24 d6 89 10 f0 	movl   $0xf01089d6,(%esp)$/;"	l
f0101234	obj/kern/kernel.asm	/^f0101234:	e8 55 35 00 00       	call   f010478e <cprintf>$/;"	l
f0101239	obj/kern/kernel.asm	/^f0101239:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010123e	obj/kern/kernel.asm	/^f010123e:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0101241	obj/kern/kernel.asm	/^f0101241:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	89 ec                	mov    %ebp,%esp$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	5d                   	pop    %ebp$/;"	l
f010124a	obj/kern/kernel.asm	/^f010124a:	c3                   	ret    $/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b <monitor>:$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	55                   	push   %ebp$/;"	l
f010124c	obj/kern/kernel.asm	/^f010124c:	89 e5                	mov    %esp,%ebp$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	57                   	push   %edi$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	56                   	push   %esi$/;"	l
f0101250	obj/kern/kernel.asm	/^f0101250:	53                   	push   %ebx$/;"	l
f0101251	obj/kern/kernel.asm	/^f0101251:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	c7 04 24 74 7b 10 f0 	movl   $0xf0107b74,(%esp)$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	e8 2e 35 00 00       	call   f010478e <cprintf>$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	c7 04 24 98 7b 10 f0 	movl   $0xf0107b98,(%esp)$/;"	l
f0101267	obj/kern/kernel.asm	/^f0101267:	e8 22 35 00 00       	call   f010478e <cprintf>$/;"	l
f010126c	obj/kern/kernel.asm	/^f010126c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	74 0b                	je     f010127d <monitor+0x32>$/;"	l
f0101272	obj/kern/kernel.asm	/^f0101272:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	e8 5d 38 00 00       	call   f0104ada <print_trapframe>$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	c7 04 24 49 79 10 f0 	movl   $0xf0107949,(%esp)$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	e8 77 51 00 00       	call   f0106400 <readline>$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	89 c3                	mov    %eax,%ebx$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	85 c0                	test   %eax,%eax$/;"	l
f010128d	obj/kern/kernel.asm	/^f010128d:	74 ee                	je     f010127d <monitor+0x32>$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0101296	obj/kern/kernel.asm	/^f0101296:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010129b	obj/kern/kernel.asm	/^f010129b:	eb 06                	jmp    f01012a3 <monitor+0x58>$/;"	l
f010129d	obj/kern/kernel.asm	/^f010129d:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01012a3	obj/kern/kernel.asm	/^f01012a3:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	84 c0                	test   %al,%al$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	74 6a                	je     f0101314 <monitor+0xc9>$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	0f be c0             	movsbl %al,%eax$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	c7 04 24 4d 79 10 f0 	movl   $0xf010794d,(%esp)$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	e8 a9 53 00 00       	call   f0106666 <strchr>$/;"	l
f01012bd	obj/kern/kernel.asm	/^f01012bd:	85 c0                	test   %eax,%eax$/;"	l
f01012bf	obj/kern/kernel.asm	/^f01012bf:	75 dc                	jne    f010129d <monitor+0x52>$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	74 4e                	je     f0101314 <monitor+0xc9>$/;"	l
f01012c6	obj/kern/kernel.asm	/^f01012c6:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	75 16                	jne    f01012e1 <monitor+0x96>$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	00 $/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	c7 04 24 52 79 10 f0 	movl   $0xf0107952,(%esp)$/;"	l
f01012da	obj/kern/kernel.asm	/^f01012da:	e8 af 34 00 00       	call   f010478e <cprintf>$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	eb 9c                	jmp    f010127d <monitor+0x32>$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f01012e5	obj/kern/kernel.asm	/^f01012e5:	83 c6 01             	add    $0x1,%esi$/;"	l
f01012e8	obj/kern/kernel.asm	/^f01012e8:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	84 c0                	test   %al,%al$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	75 0c                	jne    f01012fb <monitor+0xb0>$/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	eb b2                	jmp    f01012a3 <monitor+0x58>$/;"	l
f01012f1	obj/kern/kernel.asm	/^f01012f1:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	84 c0                	test   %al,%al$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	74 a8                	je     f01012a3 <monitor+0x58>$/;"	l
f01012fb	obj/kern/kernel.asm	/^f01012fb:	0f be c0             	movsbl %al,%eax$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101302	obj/kern/kernel.asm	/^f0101302:	c7 04 24 4d 79 10 f0 	movl   $0xf010794d,(%esp)$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	e8 58 53 00 00       	call   f0106666 <strchr>$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	85 c0                	test   %eax,%eax$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	74 df                	je     f01012f1 <monitor+0xa6>$/;"	l
f0101312	obj/kern/kernel.asm	/^f0101312:	eb 8f                	jmp    f01012a3 <monitor+0x58>$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f010131b	obj/kern/kernel.asm	/^f010131b:	00 $/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	85 f6                	test   %esi,%esi$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	0f 84 59 ff ff ff    	je     f010127d <monitor+0x32>$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	bb c0 7d 10 f0       	mov    $0xf0107dc0,%ebx$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	8b 03                	mov    (%ebx),%eax$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010133a	obj/kern/kernel.asm	/^f010133a:	e8 ac 52 00 00       	call   f01065eb <strcmp>$/;"	l
f010133f	obj/kern/kernel.asm	/^f010133f:	85 c0                	test   %eax,%eax$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	75 24                	jne    f0101367 <monitor+0x11c>$/;"	l
f0101343	obj/kern/kernel.asm	/^f0101343:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0101346	obj/kern/kernel.asm	/^f0101346:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101349	obj/kern/kernel.asm	/^f0101349:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0101354	obj/kern/kernel.asm	/^f0101354:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	ff 14 85 c8 7d 10 f0 	call   *-0xfef8238(,%eax,4)$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	85 c0                	test   %eax,%eax$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	78 28                	js     f010138a <monitor+0x13f>$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	e9 16 ff ff ff       	jmp    f010127d <monitor+0x32>$/;"	l
f0101367	obj/kern/kernel.asm	/^f0101367:	83 c7 01             	add    $0x1,%edi$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	83 ff 0a             	cmp    $0xa,%edi$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	75 bc                	jne    f010132e <monitor+0xe3>$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101379	obj/kern/kernel.asm	/^f0101379:	c7 04 24 6f 79 10 f0 	movl   $0xf010796f,(%esp)$/;"	l
f0101380	obj/kern/kernel.asm	/^f0101380:	e8 09 34 00 00       	call   f010478e <cprintf>$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	e9 f3 fe ff ff       	jmp    f010127d <monitor+0x32>$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f010138d	obj/kern/kernel.asm	/^f010138d:	5b                   	pop    %ebx$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	5e                   	pop    %esi$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	5f                   	pop    %edi$/;"	l
f0101390	obj/kern/kernel.asm	/^f0101390:	5d                   	pop    %ebp$/;"	l
f0101391	obj/kern/kernel.asm	/^f0101391:	c3                   	ret    $/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0 <boot_alloc>:$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	55                   	push   %ebp$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	89 e5                	mov    %esp,%ebp$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	83 3d 3c 72 20 f0 00 	cmpl   $0x0,0xf020723c$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	75 11                	jne    f01013bd <boot_alloc+0x1d>$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	ba 07 a0 24 f0       	mov    $0xf024a007,%edx$/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01013b7	obj/kern/kernel.asm	/^f01013b7:	89 15 3c 72 20 f0    	mov    %edx,0xf020723c$/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	8b 15 3c 72 20 f0    	mov    0xf020723c,%edx$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	85 c0                	test   %eax,%eax$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	74 11                	je     f01013d8 <boot_alloc+0x38>$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	8d 84 02 ff 0f 00 00 	lea    0xfff(%edx,%eax,1),%eax$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	a3 3c 72 20 f0       	mov    %eax,0xf020723c$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	89 d0                	mov    %edx,%eax$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	5d                   	pop    %ebp$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	c3                   	ret    $/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc <check_va2pa>:$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	55                   	push   %ebp$/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	89 d1                	mov    %edx,%ecx$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	8b 0c 88             	mov    (%eax,%ecx,4),%ecx$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01013ef	obj/kern/kernel.asm	/^f01013ef:	f6 c1 01             	test   $0x1,%cl$/;"	l
f01013f2	obj/kern/kernel.asm	/^f01013f2:	74 57                	je     f010144b <check_va2pa+0x6f>$/;"	l
f01013f4	obj/kern/kernel.asm	/^f01013f4:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	89 c8                	mov    %ecx,%eax$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	3b 05 88 7e 20 f0    	cmp    0xf0207e88,%eax$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	72 20                	jb     f0101427 <check_va2pa+0x4b>$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	f0 $/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	c7 44 24 04 85 03 00 	movl   $0x385,0x4(%esp)$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	00 $/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	e8 19 ec ff ff       	call   f0100040 <_panic>$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	8b 84 91 00 00 00 f0 	mov    -0x10000000(%ecx,%edx,4),%eax$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	89 c2                	mov    %eax,%edx$/;"	l
f0101439	obj/kern/kernel.asm	/^f0101439:	83 e2 01             	and    $0x1,%edx$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	85 d2                	test   %edx,%edx$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	c9                   	leave  $/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	c3                   	ret    $/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d <nvram_read>:$/;"	l
f010144d	obj/kern/kernel.asm	/^f010144d:	55                   	push   %ebp$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f0101456	obj/kern/kernel.asm	/^f0101456:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0101459	obj/kern/kernel.asm	/^f0101459:	89 c3                	mov    %eax,%ebx$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	e8 c1 31 00 00       	call   f0104624 <mc146818_read>$/;"	l
f0101463	obj/kern/kernel.asm	/^f0101463:	89 c6                	mov    %eax,%esi$/;"	l
f0101465	obj/kern/kernel.asm	/^f0101465:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	e8 b4 31 00 00       	call   f0104624 <mc146818_read>$/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101473	obj/kern/kernel.asm	/^f0101473:	09 f0                	or     %esi,%eax$/;"	l
f0101475	obj/kern/kernel.asm	/^f0101475:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0101478	obj/kern/kernel.asm	/^f0101478:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	89 ec                	mov    %ebp,%esp$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	5d                   	pop    %ebp$/;"	l
f010147e	obj/kern/kernel.asm	/^f010147e:	c3                   	ret    $/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f <check_page_free_list>:$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	55                   	push   %ebp$/;"	l
f0101480	obj/kern/kernel.asm	/^f0101480:	89 e5                	mov    %esp,%ebp$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	57                   	push   %edi$/;"	l
f0101483	obj/kern/kernel.asm	/^f0101483:	56                   	push   %esi$/;"	l
f0101484	obj/kern/kernel.asm	/^f0101484:	53                   	push   %ebx$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	3c 01                	cmp    $0x1,%al$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	19 f6                	sbb    %esi,%esi$/;"	l
f010148c	obj/kern/kernel.asm	/^f010148c:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f0101492	obj/kern/kernel.asm	/^f0101492:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101495	obj/kern/kernel.asm	/^f0101495:	8b 1d 40 72 20 f0    	mov    0xf0207240,%ebx$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	85 db                	test   %ebx,%ebx$/;"	l
f010149d	obj/kern/kernel.asm	/^f010149d:	75 1c                	jne    f01014bb <check_page_free_list+0x3c>$/;"	l
f010149f	obj/kern/kernel.asm	/^f010149f:	c7 44 24 08 38 7e 10 	movl   $0xf0107e38,0x8(%esp)$/;"	l
f01014a6	obj/kern/kernel.asm	/^f01014a6:	f0 $/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	c7 44 24 04 b7 02 00 	movl   $0x2b7,0x4(%esp)$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	00 $/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01014b6	obj/kern/kernel.asm	/^f01014b6:	e8 85 eb ff ff       	call   f0100040 <_panic>$/;"	l
f01014bb	obj/kern/kernel.asm	/^f01014bb:	84 c0                	test   %al,%al$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	74 50                	je     f010150f <check_page_free_list+0x90>$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01014c8	obj/kern/kernel.asm	/^f01014c8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	89 d8                	mov    %ebx,%eax$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	2b 05 90 7e 20 f0    	sub    0xf0207e90,%eax$/;"	l
f01014d3	obj/kern/kernel.asm	/^f01014d3:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f01014d6	obj/kern/kernel.asm	/^f01014d6:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	39 c6                	cmp    %eax,%esi$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	0f 96 c0             	setbe  %al$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	8b 54 85 d8          	mov    -0x28(%ebp,%eax,4),%edx$/;"	l
f01014e5	obj/kern/kernel.asm	/^f01014e5:	89 1a                	mov    %ebx,(%edx)$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	89 5c 85 d8          	mov    %ebx,-0x28(%ebp,%eax,4)$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f01014ed	obj/kern/kernel.asm	/^f01014ed:	85 db                	test   %ebx,%ebx$/;"	l
f01014ef	obj/kern/kernel.asm	/^f01014ef:	75 da                	jne    f01014cb <check_page_free_list+0x4c>$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01014fa	obj/kern/kernel.asm	/^f01014fa:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01014fd	obj/kern/kernel.asm	/^f01014fd:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	89 10                	mov    %edx,(%eax)$/;"	l
f0101502	obj/kern/kernel.asm	/^f0101502:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0101505	obj/kern/kernel.asm	/^f0101505:	89 1d 40 72 20 f0    	mov    %ebx,0xf0207240$/;"	l
f010150b	obj/kern/kernel.asm	/^f010150b:	85 db                	test   %ebx,%ebx$/;"	l
f010150d	obj/kern/kernel.asm	/^f010150d:	74 67                	je     f0101576 <check_page_free_list+0xf7>$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	89 d8                	mov    %ebx,%eax$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	2b 05 90 7e 20 f0    	sub    0xf0207e90,%eax$/;"	l
f0101517	obj/kern/kernel.asm	/^f0101517:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010151d	obj/kern/kernel.asm	/^f010151d:	89 c2                	mov    %eax,%edx$/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	39 d6                	cmp    %edx,%esi$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	76 4a                	jbe    f0101570 <check_page_free_list+0xf1>$/;"	l
f0101526	obj/kern/kernel.asm	/^f0101526:	89 c2                	mov    %eax,%edx$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	3b 15 88 7e 20 f0    	cmp    0xf0207e88,%edx$/;"	l
f0101531	obj/kern/kernel.asm	/^f0101531:	72 20                	jb     f0101553 <check_page_free_list+0xd4>$/;"	l
f0101533	obj/kern/kernel.asm	/^f0101533:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f010153e	obj/kern/kernel.asm	/^f010153e:	f0 $/;"	l
f010153f	obj/kern/kernel.asm	/^f010153f:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	00 $/;"	l
f0101547	obj/kern/kernel.asm	/^f0101547:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	e8 ed ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101553	obj/kern/kernel.asm	/^f0101553:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f010155a	obj/kern/kernel.asm	/^f010155a:	00 $/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	00 $/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101568	obj/kern/kernel.asm	/^f0101568:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	e8 51 51 00 00       	call   f01066c1 <memset>$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	85 db                	test   %ebx,%ebx$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	75 99                	jne    f010150f <check_page_free_list+0x90>$/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010157b	obj/kern/kernel.asm	/^f010157b:	e8 20 fe ff ff       	call   f01013a0 <boot_alloc>$/;"	l
f0101580	obj/kern/kernel.asm	/^f0101580:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0101583	obj/kern/kernel.asm	/^f0101583:	8b 15 40 72 20 f0    	mov    0xf0207240,%edx$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	85 d2                	test   %edx,%edx$/;"	l
f010158b	obj/kern/kernel.asm	/^f010158b:	0f 84 2f 02 00 00    	je     f01017c0 <check_page_free_list+0x341>$/;"	l
f0101591	obj/kern/kernel.asm	/^f0101591:	8b 1d 90 7e 20 f0    	mov    0xf0207e90,%ebx$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	39 da                	cmp    %ebx,%edx$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	72 51                	jb     f01015ec <check_page_free_list+0x16d>$/;"	l
f010159b	obj/kern/kernel.asm	/^f010159b:	a1 88 7e 20 f0       	mov    0xf0207e88,%eax$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01015a3	obj/kern/kernel.asm	/^f01015a3:	8d 04 c3             	lea    (%ebx,%eax,8),%eax$/;"	l
f01015a6	obj/kern/kernel.asm	/^f01015a6:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	39 c2                	cmp    %eax,%edx$/;"	l
f01015ab	obj/kern/kernel.asm	/^f01015ab:	73 68                	jae    f0101615 <check_page_free_list+0x196>$/;"	l
f01015ad	obj/kern/kernel.asm	/^f01015ad:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	89 d0                	mov    %edx,%eax$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	29 d8                	sub    %ebx,%eax$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	a8 07                	test   $0x7,%al$/;"	l
f01015b6	obj/kern/kernel.asm	/^f01015b6:	0f 85 86 00 00 00    	jne    f0101642 <check_page_free_list+0x1c3>$/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01015bf	obj/kern/kernel.asm	/^f01015bf:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	85 c0                	test   %eax,%eax$/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	0f 84 a6 00 00 00    	je     f0101670 <check_page_free_list+0x1f1>$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f01015cf	obj/kern/kernel.asm	/^f01015cf:	0f 84 c6 00 00 00    	je     f010169b <check_page_free_list+0x21c>$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	e9 d8 00 00 00       	jmp    f01016bf <check_page_free_list+0x240>$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	3b 55 c0             	cmp    -0x40(%ebp),%edx$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	73 24                	jae    f0101610 <check_page_free_list+0x191>$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	c7 44 24 0c 17 87 10 	movl   $0xf0108717,0xc(%esp)$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	f0 $/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	f0 $/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	c7 44 24 04 d1 02 00 	movl   $0x2d1,0x4(%esp)$/;"	l
f0101603	obj/kern/kernel.asm	/^f0101603:	00 $/;"	l
f0101604	obj/kern/kernel.asm	/^f0101604:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	e8 30 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101610	obj/kern/kernel.asm	/^f0101610:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0101613	obj/kern/kernel.asm	/^f0101613:	72 24                	jb     f0101639 <check_page_free_list+0x1ba>$/;"	l
f0101615	obj/kern/kernel.asm	/^f0101615:	c7 44 24 0c 38 87 10 	movl   $0xf0108738,0xc(%esp)$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	f0 $/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0101624	obj/kern/kernel.asm	/^f0101624:	f0 $/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	c7 44 24 04 d2 02 00 	movl   $0x2d2,0x4(%esp)$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	00 $/;"	l
f010162d	obj/kern/kernel.asm	/^f010162d:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	e8 07 ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	89 d0                	mov    %edx,%eax$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f010163e	obj/kern/kernel.asm	/^f010163e:	a8 07                	test   $0x7,%al$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	74 24                	je     f0101666 <check_page_free_list+0x1e7>$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	c7 44 24 0c 5c 7e 10 	movl   $0xf0107e5c,0xc(%esp)$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	f0 $/;"	l
f010164a	obj/kern/kernel.asm	/^f010164a:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	f0 $/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	c7 44 24 04 d3 02 00 	movl   $0x2d3,0x4(%esp)$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	00 $/;"	l
f010165a	obj/kern/kernel.asm	/^f010165a:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	e8 da e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101669	obj/kern/kernel.asm	/^f0101669:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010166c	obj/kern/kernel.asm	/^f010166c:	85 c0                	test   %eax,%eax$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	75 24                	jne    f0101694 <check_page_free_list+0x215>$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	c7 44 24 0c 4c 87 10 	movl   $0xf010874c,0xc(%esp)$/;"	l
f0101677	obj/kern/kernel.asm	/^f0101677:	f0 $/;"	l
f0101678	obj/kern/kernel.asm	/^f0101678:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	f0 $/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	c7 44 24 04 d6 02 00 	movl   $0x2d6,0x4(%esp)$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	00 $/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	e8 ac e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101694	obj/kern/kernel.asm	/^f0101694:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101699	obj/kern/kernel.asm	/^f0101699:	75 24                	jne    f01016bf <check_page_free_list+0x240>$/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	c7 44 24 0c 5d 87 10 	movl   $0xf010875d,0xc(%esp)$/;"	l
f01016a2	obj/kern/kernel.asm	/^f01016a2:	f0 $/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	f0 $/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	c7 44 24 04 d7 02 00 	movl   $0x2d7,0x4(%esp)$/;"	l
f01016b2	obj/kern/kernel.asm	/^f01016b2:	00 $/;"	l
f01016b3	obj/kern/kernel.asm	/^f01016b3:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01016ba	obj/kern/kernel.asm	/^f01016ba:	e8 81 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016bf	obj/kern/kernel.asm	/^f01016bf:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f01016c4	obj/kern/kernel.asm	/^f01016c4:	75 24                	jne    f01016ea <check_page_free_list+0x26b>$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	c7 44 24 0c 90 7e 10 	movl   $0xf0107e90,0xc(%esp)$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	f0 $/;"	l
f01016ce	obj/kern/kernel.asm	/^f01016ce:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	f0 $/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	c7 44 24 04 d8 02 00 	movl   $0x2d8,0x4(%esp)$/;"	l
f01016dd	obj/kern/kernel.asm	/^f01016dd:	00 $/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01016e5	obj/kern/kernel.asm	/^f01016e5:	e8 56 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f01016ef	obj/kern/kernel.asm	/^f01016ef:	75 24                	jne    f0101715 <check_page_free_list+0x296>$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	c7 44 24 0c 76 87 10 	movl   $0xf0108776,0xc(%esp)$/;"	l
f01016f8	obj/kern/kernel.asm	/^f01016f8:	f0 $/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0101700	obj/kern/kernel.asm	/^f0101700:	f0 $/;"	l
f0101701	obj/kern/kernel.asm	/^f0101701:	c7 44 24 04 d9 02 00 	movl   $0x2d9,0x4(%esp)$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	00 $/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	e8 2b e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101715	obj/kern/kernel.asm	/^f0101715:	89 c1                	mov    %eax,%ecx$/;"	l
f0101717	obj/kern/kernel.asm	/^f0101717:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f010171c	obj/kern/kernel.asm	/^f010171c:	76 59                	jbe    f0101777 <check_page_free_list+0x2f8>$/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	89 c3                	mov    %eax,%ebx$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	39 5d c8             	cmp    %ebx,-0x38(%ebp)$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	77 20                	ja     f0101748 <check_page_free_list+0x2c9>$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010172c	obj/kern/kernel.asm	/^f010172c:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	f0 $/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010173b	obj/kern/kernel.asm	/^f010173b:	00 $/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	e8 f8 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101748	obj/kern/kernel.asm	/^f0101748:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	39 5d c4             	cmp    %ebx,-0x3c(%ebp)$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	76 24                	jbe    f0101777 <check_page_free_list+0x2f8>$/;"	l
f0101753	obj/kern/kernel.asm	/^f0101753:	c7 44 24 0c b4 7e 10 	movl   $0xf0107eb4,0xc(%esp)$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	f0 $/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	f0 $/;"	l
f0101763	obj/kern/kernel.asm	/^f0101763:	c7 44 24 04 da 02 00 	movl   $0x2da,0x4(%esp)$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	00 $/;"	l
f010176b	obj/kern/kernel.asm	/^f010176b:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	e8 c9 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	75 24                	jne    f01017a2 <check_page_free_list+0x323>$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	c7 44 24 0c 90 87 10 	movl   $0xf0108790,0xc(%esp)$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	f0 $/;"	l
f0101786	obj/kern/kernel.asm	/^f0101786:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	f0 $/;"	l
f010178e	obj/kern/kernel.asm	/^f010178e:	c7 44 24 04 dc 02 00 	movl   $0x2dc,0x4(%esp)$/;"	l
f0101795	obj/kern/kernel.asm	/^f0101795:	00 $/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010179d	obj/kern/kernel.asm	/^f010179d:	e8 9e e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017a2	obj/kern/kernel.asm	/^f01017a2:	81 f9 ff ff 0f 00    	cmp    $0xfffff,%ecx$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	77 05                	ja     f01017af <check_page_free_list+0x330>$/;"	l
f01017aa	obj/kern/kernel.asm	/^f01017aa:	83 c7 01             	add    $0x1,%edi$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	eb 03                	jmp    f01017b2 <check_page_free_list+0x333>$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	83 c6 01             	add    $0x1,%esi$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	8b 12                	mov    (%edx),%edx$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	85 d2                	test   %edx,%edx$/;"	l
f01017b6	obj/kern/kernel.asm	/^f01017b6:	0f 85 2b fe ff ff    	jne    f01015e7 <check_page_free_list+0x168>$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	85 ff                	test   %edi,%edi$/;"	l
f01017be	obj/kern/kernel.asm	/^f01017be:	7f 24                	jg     f01017e4 <check_page_free_list+0x365>$/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	c7 44 24 0c ad 87 10 	movl   $0xf01087ad,0xc(%esp)$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	f0 $/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	f0 $/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	c7 44 24 04 e4 02 00 	movl   $0x2e4,0x4(%esp)$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	00 $/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	e8 5c e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	85 f6                	test   %esi,%esi$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	7f 24                	jg     f010180c <check_page_free_list+0x38d>$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	c7 44 24 0c bf 87 10 	movl   $0xf01087bf,0xc(%esp)$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	f0 $/;"	l
f01017f0	obj/kern/kernel.asm	/^f01017f0:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01017f7	obj/kern/kernel.asm	/^f01017f7:	f0 $/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	c7 44 24 04 e5 02 00 	movl   $0x2e5,0x4(%esp)$/;"	l
f01017ff	obj/kern/kernel.asm	/^f01017ff:	00 $/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101807	obj/kern/kernel.asm	/^f0101807:	e8 34 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010180f	obj/kern/kernel.asm	/^f010180f:	5b                   	pop    %ebx$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	5e                   	pop    %esi$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	5f                   	pop    %edi$/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	5d                   	pop    %ebp$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	c3                   	ret    $/;"	l
f0101814	obj/kern/kernel.asm	/^f0101814 <page_init>:$/;"	l
f0101814	obj/kern/kernel.asm	/^f0101814:	55                   	push   %ebp$/;"	l
f0101815	obj/kern/kernel.asm	/^f0101815:	89 e5                	mov    %esp,%ebp$/;"	l
f0101817	obj/kern/kernel.asm	/^f0101817:	56                   	push   %esi$/;"	l
f0101818	obj/kern/kernel.asm	/^f0101818:	53                   	push   %ebx$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	e8 7a fb ff ff       	call   f01013a0 <boot_alloc>$/;"	l
f0101826	obj/kern/kernel.asm	/^f0101826:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	77 20                	ja     f010184d <page_init+0x39>$/;"	l
f010182d	obj/kern/kernel.asm	/^f010182d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101831	obj/kern/kernel.asm	/^f0101831:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f0101838	obj/kern/kernel.asm	/^f0101838:	f0 $/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	c7 44 24 04 3a 01 00 	movl   $0x13a,0x4(%esp)$/;"	l
f0101840	obj/kern/kernel.asm	/^f0101840:	00 $/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	e8 f3 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	8d 98 00 00 00 10    	lea    0x10000000(%eax),%ebx$/;"	l
f0101853	obj/kern/kernel.asm	/^f0101853:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	c7 05 40 72 20 f0 00 	movl   $0x0,0xf0207240$/;"	l
f010185d	obj/kern/kernel.asm	/^f010185d:	00 00 00 $/;"	l
f0101860	obj/kern/kernel.asm	/^f0101860:	83 3d 88 7e 20 f0 00 	cmpl   $0x0,0xf0207e88$/;"	l
f0101867	obj/kern/kernel.asm	/^f0101867:	74 69                	je     f01018d2 <page_init+0xbe>$/;"	l
f0101869	obj/kern/kernel.asm	/^f0101869:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	85 d2                	test   %edx,%edx$/;"	l
f0101875	obj/kern/kernel.asm	/^f0101875:	74 11                	je     f0101888 <page_init+0x74>$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	81 fa 9f 00 00 00    	cmp    $0x9f,%edx$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	76 04                	jbe    f0101883 <page_init+0x6f>$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	39 da                	cmp    %ebx,%edx$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	72 05                	jb     f0101888 <page_init+0x74>$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	75 1b                	jne    f01018a3 <page_init+0x8f>$/;"	l
f0101888	obj/kern/kernel.asm	/^f0101888:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx$/;"	l
f010188f	obj/kern/kernel.asm	/^f010188f:	03 0d 90 7e 20 f0    	add    0xf0207e90,%ecx$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	66 c7 41 04 01 00    	movw   $0x1,0x4(%ecx)$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	eb 1f                	jmp    f01018c2 <page_init+0xae>$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx$/;"	l
f01018aa	obj/kern/kernel.asm	/^f01018aa:	8b 35 90 7e 20 f0    	mov    0xf0207e90,%esi$/;"	l
f01018b0	obj/kern/kernel.asm	/^f01018b0:	66 c7 44 0e 04 00 00 	movw   $0x0,0x4(%esi,%ecx,1)$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	89 04 d6             	mov    %eax,(%esi,%edx,8)$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	89 c8                	mov    %ecx,%eax$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	03 05 90 7e 20 f0    	add    0xf0207e90,%eax$/;"	l
f01018c2	obj/kern/kernel.asm	/^f01018c2:	83 c2 01             	add    $0x1,%edx$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	39 15 88 7e 20 f0    	cmp    %edx,0xf0207e88$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	77 a6                	ja     f0101873 <page_init+0x5f>$/;"	l
f01018cd	obj/kern/kernel.asm	/^f01018cd:	a3 40 72 20 f0       	mov    %eax,0xf0207240$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	5b                   	pop    %ebx$/;"	l
f01018d6	obj/kern/kernel.asm	/^f01018d6:	5e                   	pop    %esi$/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7:	5d                   	pop    %ebp$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	c3                   	ret    $/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9 <page_alloc>:$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	55                   	push   %ebp$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	89 e5                	mov    %esp,%ebp$/;"	l
f01018dc	obj/kern/kernel.asm	/^f01018dc:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	a1 40 72 20 f0       	mov    0xf0207240,%eax$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	85 c0                	test   %eax,%eax$/;"	l
f01018e6	obj/kern/kernel.asm	/^f01018e6:	74 6b                	je     f0101953 <page_alloc+0x7a>$/;"	l
f01018e8	obj/kern/kernel.asm	/^f01018e8:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01018ec	obj/kern/kernel.asm	/^f01018ec:	74 56                	je     f0101944 <page_alloc+0x6b>$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	2b 05 90 7e 20 f0    	sub    0xf0207e90,%eax$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01018fa	obj/kern/kernel.asm	/^f01018fa:	89 c2                	mov    %eax,%edx$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	3b 15 88 7e 20 f0    	cmp    0xf0207e88,%edx$/;"	l
f0101905	obj/kern/kernel.asm	/^f0101905:	72 20                	jb     f0101927 <page_alloc+0x4e>$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	f0 $/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	00 $/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f0101922	obj/kern/kernel.asm	/^f0101922:	e8 19 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	00 $/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101936	obj/kern/kernel.asm	/^f0101936:	00 $/;"	l
f0101937	obj/kern/kernel.asm	/^f0101937:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	e8 7d 4d 00 00       	call   f01066c1 <memset>$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	a1 40 72 20 f0       	mov    0xf0207240,%eax$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	8b 10                	mov    (%eax),%edx$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	89 15 40 72 20 f0    	mov    %edx,0xf0207240$/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	eb 05                	jmp    f0101958 <page_alloc+0x7f>$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	c9                   	leave  $/;"	l
f0101959	obj/kern/kernel.asm	/^f0101959:	c3                   	ret    $/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a <page_free>:$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	55                   	push   %ebp$/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	89 e5                	mov    %esp,%ebp$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	8b 15 40 72 20 f0    	mov    0xf0207240,%edx$/;"	l
f0101966	obj/kern/kernel.asm	/^f0101966:	89 10                	mov    %edx,(%eax)$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	a3 40 72 20 f0       	mov    %eax,0xf0207240$/;"	l
f010196d	obj/kern/kernel.asm	/^f010196d:	5d                   	pop    %ebp$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	c3                   	ret    $/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f <page_decref>:$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	55                   	push   %ebp$/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	89 e5                	mov    %esp,%ebp$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	0f b7 50 04          	movzwl 0x4(%eax),%edx$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101983	obj/kern/kernel.asm	/^f0101983:	66 85 d2             	test   %dx,%dx$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	75 08                	jne    f0101990 <page_decref+0x21>$/;"	l
f0101988	obj/kern/kernel.asm	/^f0101988:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	e8 ca ff ff ff       	call   f010195a <page_free>$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	c9                   	leave  $/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	c3                   	ret    $/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992 <pgdir_walk>:$/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	55                   	push   %ebp$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	89 e5                	mov    %esp,%ebp$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	56                   	push   %esi$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	53                   	push   %ebx$/;"	l
f0101997	obj/kern/kernel.asm	/^f0101997:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	89 f3                	mov    %esi,%ebx$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f01019a2	obj/kern/kernel.asm	/^f01019a2:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f01019a5	obj/kern/kernel.asm	/^f01019a5:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f01019a8	obj/kern/kernel.asm	/^f01019a8:	8b 03                	mov    (%ebx),%eax$/;"	l
f01019aa	obj/kern/kernel.asm	/^f01019aa:	a8 01                	test   $0x1,%al$/;"	l
f01019ac	obj/kern/kernel.asm	/^f01019ac:	74 47                	je     f01019f5 <pgdir_walk+0x63>$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	89 c2                	mov    %eax,%edx$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	3b 15 88 7e 20 f0    	cmp    0xf0207e88,%edx$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	72 20                	jb     f01019e0 <pgdir_walk+0x4e>$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01019c4	obj/kern/kernel.asm	/^f01019c4:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	f0 $/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	c7 44 24 04 9a 01 00 	movl   $0x19a,0x4(%esp)$/;"	l
f01019d3	obj/kern/kernel.asm	/^f01019d3:	00 $/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	e8 60 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019e0	obj/kern/kernel.asm	/^f01019e0:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f01019e3	obj/kern/kernel.asm	/^f01019e3:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f01019f0	obj/kern/kernel.asm	/^f01019f0:	e9 85 00 00 00       	jmp    f0101a7a <pgdir_walk+0xe8>$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01019f9	obj/kern/kernel.asm	/^f01019f9:	74 73                	je     f0101a6e <pgdir_walk+0xdc>$/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101a02	obj/kern/kernel.asm	/^f0101a02:	e8 d2 fe ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0101a07	obj/kern/kernel.asm	/^f0101a07:	85 c0                	test   %eax,%eax$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	74 6a                	je     f0101a75 <pgdir_walk+0xe3>$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	89 c2                	mov    %eax,%edx$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f0101a18	obj/kern/kernel.asm	/^f0101a18:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	83 ca 07             	or     $0x7,%edx$/;"	l
f0101a21	obj/kern/kernel.asm	/^f0101a21:	89 13                	mov    %edx,(%ebx)$/;"	l
f0101a23	obj/kern/kernel.asm	/^f0101a23:	2b 05 90 7e 20 f0    	sub    0xf0207e90,%eax$/;"	l
f0101a29	obj/kern/kernel.asm	/^f0101a29:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	89 c2                	mov    %eax,%edx$/;"	l
f0101a31	obj/kern/kernel.asm	/^f0101a31:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101a34	obj/kern/kernel.asm	/^f0101a34:	3b 15 88 7e 20 f0    	cmp    0xf0207e88,%edx$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	72 20                	jb     f0101a5c <pgdir_walk+0xca>$/;"	l
f0101a3c	obj/kern/kernel.asm	/^f0101a3c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	f0 $/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	c7 44 24 04 a4 01 00 	movl   $0x1a4,0x4(%esp)$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	00 $/;"	l
f0101a50	obj/kern/kernel.asm	/^f0101a50:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101a57	obj/kern/kernel.asm	/^f0101a57:	e8 e4 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101a5f	obj/kern/kernel.asm	/^f0101a5f:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0101a6c	obj/kern/kernel.asm	/^f0101a6c:	eb 0c                	jmp    f0101a7a <pgdir_walk+0xe8>$/;"	l
f0101a6e	obj/kern/kernel.asm	/^f0101a6e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a73	obj/kern/kernel.asm	/^f0101a73:	eb 05                	jmp    f0101a7a <pgdir_walk+0xe8>$/;"	l
f0101a75	obj/kern/kernel.asm	/^f0101a75:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	5b                   	pop    %ebx$/;"	l
f0101a7e	obj/kern/kernel.asm	/^f0101a7e:	5e                   	pop    %esi$/;"	l
f0101a7f	obj/kern/kernel.asm	/^f0101a7f:	5d                   	pop    %ebp$/;"	l
f0101a80	obj/kern/kernel.asm	/^f0101a80:	c3                   	ret    $/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81 <boot_map_region>:$/;"	l
f0101a81	obj/kern/kernel.asm	/^f0101a81:	55                   	push   %ebp$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	57                   	push   %edi$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	56                   	push   %esi$/;"	l
f0101a86	obj/kern/kernel.asm	/^f0101a86:	53                   	push   %ebx$/;"	l
f0101a87	obj/kern/kernel.asm	/^f0101a87:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	89 c7                	mov    %eax,%edi$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	89 d3                	mov    %edx,%ebx$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	01 d1                	add    %edx,%ecx$/;"	l
f0101a93	obj/kern/kernel.asm	/^f0101a93:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	39 ca                	cmp    %ecx,%edx$/;"	l
f0101a98	obj/kern/kernel.asm	/^f0101a98:	74 5b                	je     f0101af5 <boot_map_region+0x74>$/;"	l
f0101a9a	obj/kern/kernel.asm	/^f0101a9a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101a9d	obj/kern/kernel.asm	/^f0101a9d:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	00 $/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101aaf	obj/kern/kernel.asm	/^f0101aaf:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101ab2	obj/kern/kernel.asm	/^f0101ab2:	e8 db fe ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0101ab7	obj/kern/kernel.asm	/^f0101ab7:	85 c0                	test   %eax,%eax$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	75 1c                	jne    f0101ad7 <boot_map_region+0x56>$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	c7 44 24 08 d0 87 10 	movl   $0xf01087d0,0x8(%esp)$/;"	l
f0101ac2	obj/kern/kernel.asm	/^f0101ac2:	f0 $/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	c7 44 24 04 bf 01 00 	movl   $0x1bf,0x4(%esp)$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	00 $/;"	l
f0101acb	obj/kern/kernel.asm	/^f0101acb:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	e8 69 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	89 f2                	mov    %esi,%edx$/;"	l
f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	0b 55 e0             	or     -0x20(%ebp),%edx$/;"	l
f0101ae2	obj/kern/kernel.asm	/^f0101ae2:	89 10                	mov    %edx,(%eax)$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101aea	obj/kern/kernel.asm	/^f0101aea:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f0101af3	obj/kern/kernel.asm	/^f0101af3:	75 ae                	jne    f0101aa3 <boot_map_region+0x22>$/;"	l
f0101af5	obj/kern/kernel.asm	/^f0101af5:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	5b                   	pop    %ebx$/;"	l
f0101af9	obj/kern/kernel.asm	/^f0101af9:	5e                   	pop    %esi$/;"	l
f0101afa	obj/kern/kernel.asm	/^f0101afa:	5f                   	pop    %edi$/;"	l
f0101afb	obj/kern/kernel.asm	/^f0101afb:	5d                   	pop    %ebp$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	c3                   	ret    $/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd <page_lookup>:$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	55                   	push   %ebp$/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b00	obj/kern/kernel.asm	/^f0101b00:	53                   	push   %ebx$/;"	l
f0101b01	obj/kern/kernel.asm	/^f0101b01:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101b04	obj/kern/kernel.asm	/^f0101b04:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	00 $/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101b12	obj/kern/kernel.asm	/^f0101b12:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101b19	obj/kern/kernel.asm	/^f0101b19:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	e8 71 fe ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0101b21	obj/kern/kernel.asm	/^f0101b21:	85 c0                	test   %eax,%eax$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	74 3a                	je     f0101b5f <page_lookup+0x62>$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	85 db                	test   %ebx,%ebx$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	74 02                	je     f0101b2b <page_lookup+0x2e>$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	8b 00                	mov    (%eax),%eax$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	3b 05 88 7e 20 f0    	cmp    0xf0207e88,%eax$/;"	l
f0101b36	obj/kern/kernel.asm	/^f0101b36:	72 1c                	jb     f0101b54 <page_lookup+0x57>$/;"	l
f0101b38	obj/kern/kernel.asm	/^f0101b38:	c7 44 24 08 fc 7e 10 	movl   $0xf0107efc,0x8(%esp)$/;"	l
f0101b3f	obj/kern/kernel.asm	/^f0101b3f:	f0 $/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0101b47	obj/kern/kernel.asm	/^f0101b47:	00 $/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f0101b4f	obj/kern/kernel.asm	/^f0101b4f:	e8 ec e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b54	obj/kern/kernel.asm	/^f0101b54:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	03 05 90 7e 20 f0    	add    0xf0207e90,%eax$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	eb 05                	jmp    f0101b64 <page_lookup+0x67>$/;"	l
f0101b5f	obj/kern/kernel.asm	/^f0101b5f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101b64	obj/kern/kernel.asm	/^f0101b64:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	5b                   	pop    %ebx$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	5d                   	pop    %ebp$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	c3                   	ret    $/;"	l
f0101b6a	obj/kern/kernel.asm	/^f0101b6a <page_remove>:$/;"	l
f0101b6a	obj/kern/kernel.asm	/^f0101b6a:	55                   	push   %ebp$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101b70	obj/kern/kernel.asm	/^f0101b70:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101b73	obj/kern/kernel.asm	/^f0101b73:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101b77	obj/kern/kernel.asm	/^f0101b77:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101b7e	obj/kern/kernel.asm	/^f0101b7e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101b81	obj/kern/kernel.asm	/^f0101b81:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	e8 74 ff ff ff       	call   f0101afd <page_lookup>$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	85 c0                	test   %eax,%eax$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	74 19                	je     f0101ba6 <page_remove+0x3c>$/;"	l
f0101b8d	obj/kern/kernel.asm	/^f0101b8d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101b90	obj/kern/kernel.asm	/^f0101b90:	f6 02 01             	testb  $0x1,(%edx)$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	74 08                	je     f0101b9d <page_remove+0x33>$/;"	l
f0101b95	obj/kern/kernel.asm	/^f0101b95:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	e8 d2 fd ff ff       	call   f010196f <page_decref>$/;"	l
f0101b9d	obj/kern/kernel.asm	/^f0101b9d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101ba0	obj/kern/kernel.asm	/^f0101ba0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101ba6	obj/kern/kernel.asm	/^f0101ba6:	c9                   	leave  $/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	c3                   	ret    $/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8 <page_insert>:$/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8:	55                   	push   %ebp$/;"	l
f0101ba9	obj/kern/kernel.asm	/^f0101ba9:	89 e5                	mov    %esp,%ebp$/;"	l
f0101bab	obj/kern/kernel.asm	/^f0101bab:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0101bb1	obj/kern/kernel.asm	/^f0101bb1:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0101bb4	obj/kern/kernel.asm	/^f0101bb4:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	00 $/;"	l
f0101bc5	obj/kern/kernel.asm	/^f0101bc5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101bc9	obj/kern/kernel.asm	/^f0101bc9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	e8 be fd ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	89 c3                	mov    %eax,%ebx$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	85 c0                	test   %eax,%eax$/;"	l
f0101bd8	obj/kern/kernel.asm	/^f0101bd8:	74 3f                	je     f0101c19 <page_insert+0x71>$/;"	l
f0101bda	obj/kern/kernel.asm	/^f0101bda:	8b 00                	mov    (%eax),%eax$/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	a8 01                	test   $0x1,%al$/;"	l
f0101bde	obj/kern/kernel.asm	/^f0101bde:	74 5b                	je     f0101c3b <page_insert+0x93>$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	89 f2                	mov    %esi,%edx$/;"	l
f0101be7	obj/kern/kernel.asm	/^f0101be7:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f0101bed	obj/kern/kernel.asm	/^f0101bed:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101bf3	obj/kern/kernel.asm	/^f0101bf3:	39 d0                	cmp    %edx,%eax$/;"	l
f0101bf5	obj/kern/kernel.asm	/^f0101bf5:	75 11                	jne    f0101c08 <page_insert+0x60>$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	83 ca 01             	or     $0x1,%edx$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	09 d0                	or     %edx,%eax$/;"	l
f0101bff	obj/kern/kernel.asm	/^f0101bff:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	eb 55                	jmp    f0101c5d <page_insert+0xb5>$/;"	l
f0101c08	obj/kern/kernel.asm	/^f0101c08:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101c0f	obj/kern/kernel.asm	/^f0101c0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c12	obj/kern/kernel.asm	/^f0101c12:	e8 53 ff ff ff       	call   f0101b6a <page_remove>$/;"	l
f0101c17	obj/kern/kernel.asm	/^f0101c17:	eb 22                	jmp    f0101c3b <page_insert+0x93>$/;"	l
f0101c19	obj/kern/kernel.asm	/^f0101c19:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	00 $/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	e8 62 fd ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	89 c3                	mov    %eax,%ebx$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101c37	obj/kern/kernel.asm	/^f0101c37:	85 db                	test   %ebx,%ebx$/;"	l
f0101c39	obj/kern/kernel.asm	/^f0101c39:	74 22                	je     f0101c5d <page_insert+0xb5>$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101c3e	obj/kern/kernel.asm	/^f0101c3e:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	89 f2                	mov    %esi,%edx$/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c4c	obj/kern/kernel.asm	/^f0101c4c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	09 d0                	or     %edx,%eax$/;"	l
f0101c51	obj/kern/kernel.asm	/^f0101c51:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101c53	obj/kern/kernel.asm	/^f0101c53:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0101c58	obj/kern/kernel.asm	/^f0101c58:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	89 ec                	mov    %ebp,%esp$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	5d                   	pop    %ebp$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	c3                   	ret    $/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a <tlb_invalidate>:$/;"	l
f0101c6a	obj/kern/kernel.asm	/^f0101c6a:	55                   	push   %ebp$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101c70	obj/kern/kernel.asm	/^f0101c70:	e8 db 50 00 00       	call   f0106d50 <cpunum>$/;"	l
f0101c75	obj/kern/kernel.asm	/^f0101c75:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	83 b8 28 80 20 f0 00 	cmpl   $0x0,-0xfdf7fd8(%eax)$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	74 16                	je     f0101c97 <tlb_invalidate+0x2d>$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	e8 ca 50 00 00       	call   f0106d50 <cpunum>$/;"	l
f0101c86	obj/kern/kernel.asm	/^f0101c86:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0101c8f	obj/kern/kernel.asm	/^f0101c8f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101c92	obj/kern/kernel.asm	/^f0101c92:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	75 06                	jne    f0101c9d <tlb_invalidate+0x33>$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101c9a	obj/kern/kernel.asm	/^f0101c9a:	0f 01 38             	invlpg (%eax)$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	c9                   	leave  $/;"	l
f0101c9e	obj/kern/kernel.asm	/^f0101c9e:	c3                   	ret    $/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f <mmio_map_region>:$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	55                   	push   %ebp$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	89 e5                	mov    %esp,%ebp$/;"	l
f0101ca2	obj/kern/kernel.asm	/^f0101ca2:	53                   	push   %ebx$/;"	l
f0101ca3	obj/kern/kernel.asm	/^f0101ca3:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101ca6	obj/kern/kernel.asm	/^f0101ca6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101ca9	obj/kern/kernel.asm	/^f0101ca9:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx$/;"	l
f0101caf	obj/kern/kernel.asm	/^f0101caf:	03 5d 0c             	add    0xc(%ebp),%ebx$/;"	l
f0101cb2	obj/kern/kernel.asm	/^f0101cb2:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0101cb8	obj/kern/kernel.asm	/^f0101cb8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101cbd	obj/kern/kernel.asm	/^f0101cbd:	29 c3                	sub    %eax,%ebx$/;"	l
f0101cbf	obj/kern/kernel.asm	/^f0101cbf:	8b 15 20 33 12 f0    	mov    0xf0123320,%edx$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	8d 0c 13             	lea    (%ebx,%edx,1),%ecx$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	81 f9 ff ff bf ef    	cmp    $0xefbfffff,%ecx$/;"	l
f0101cce	obj/kern/kernel.asm	/^f0101cce:	76 1c                	jbe    f0101cec <mmio_map_region+0x4d>$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	c7 44 24 08 d8 87 10 	movl   $0xf01087d8,0x8(%esp)$/;"	l
f0101cd7	obj/kern/kernel.asm	/^f0101cd7:	f0 $/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	c7 44 24 04 5f 02 00 	movl   $0x25f,0x4(%esp)$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	00 $/;"	l
f0101ce0	obj/kern/kernel.asm	/^f0101ce0:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101ce7	obj/kern/kernel.asm	/^f0101ce7:	e8 54 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	00 $/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101cf9	obj/kern/kernel.asm	/^f0101cf9:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0101cfe	obj/kern/kernel.asm	/^f0101cfe:	e8 7e fd ff ff       	call   f0101a81 <boot_map_region>$/;"	l
f0101d03	obj/kern/kernel.asm	/^f0101d03:	a1 20 33 12 f0       	mov    0xf0123320,%eax$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	01 c3                	add    %eax,%ebx$/;"	l
f0101d0a	obj/kern/kernel.asm	/^f0101d0a:	89 1d 20 33 12 f0    	mov    %ebx,0xf0123320$/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101d13	obj/kern/kernel.asm	/^f0101d13:	5b                   	pop    %ebx$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	5d                   	pop    %ebp$/;"	l
f0101d15	obj/kern/kernel.asm	/^f0101d15:	c3                   	ret    $/;"	l
f0101d16	obj/kern/kernel.asm	/^f0101d16 <mem_init>:$/;"	l
f0101d16	obj/kern/kernel.asm	/^f0101d16:	55                   	push   %ebp$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	89 e5                	mov    %esp,%ebp$/;"	l
f0101d19	obj/kern/kernel.asm	/^f0101d19:	57                   	push   %edi$/;"	l
f0101d1a	obj/kern/kernel.asm	/^f0101d1a:	56                   	push   %esi$/;"	l
f0101d1b	obj/kern/kernel.asm	/^f0101d1b:	53                   	push   %ebx$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	e8 24 f7 ff ff       	call   f010144d <nvram_read>$/;"	l
f0101d29	obj/kern/kernel.asm	/^f0101d29:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101d32	obj/kern/kernel.asm	/^f0101d32:	85 c0                	test   %eax,%eax$/;"	l
f0101d34	obj/kern/kernel.asm	/^f0101d34:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101d3a	obj/kern/kernel.asm	/^f0101d3a:	a3 38 72 20 f0       	mov    %eax,0xf0207238$/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101d44	obj/kern/kernel.asm	/^f0101d44:	e8 04 f7 ff ff       	call   f010144d <nvram_read>$/;"	l
f0101d49	obj/kern/kernel.asm	/^f0101d49:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101d4c	obj/kern/kernel.asm	/^f0101d4c:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101d52	obj/kern/kernel.asm	/^f0101d52:	85 c0                	test   %eax,%eax$/;"	l
f0101d54	obj/kern/kernel.asm	/^f0101d54:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	85 c0                	test   %eax,%eax$/;"	l
f0101d5c	obj/kern/kernel.asm	/^f0101d5c:	74 0e                	je     f0101d6c <mem_init+0x56>$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	89 15 88 7e 20 f0    	mov    %edx,0xf0207e88$/;"	l
f0101d6a	obj/kern/kernel.asm	/^f0101d6a:	eb 0c                	jmp    f0101d78 <mem_init+0x62>$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	8b 15 38 72 20 f0    	mov    0xf0207238,%edx$/;"	l
f0101d72	obj/kern/kernel.asm	/^f0101d72:	89 15 88 7e 20 f0    	mov    %edx,0xf0207e88$/;"	l
f0101d78	obj/kern/kernel.asm	/^f0101d78:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101d82	obj/kern/kernel.asm	/^f0101d82:	a1 38 72 20 f0       	mov    0xf0207238,%eax$/;"	l
f0101d87	obj/kern/kernel.asm	/^f0101d87:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101d91	obj/kern/kernel.asm	/^f0101d91:	a1 88 7e 20 f0       	mov    0xf0207e88,%eax$/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101da0	obj/kern/kernel.asm	/^f0101da0:	c7 04 24 1c 7f 10 f0 	movl   $0xf0107f1c,(%esp)$/;"	l
f0101da7	obj/kern/kernel.asm	/^f0101da7:	e8 e2 29 00 00       	call   f010478e <cprintf>$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	e8 ea f5 ff ff       	call   f01013a0 <boot_alloc>$/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	a3 8c 7e 20 f0       	mov    %eax,0xf0207e8c$/;"	l
f0101dbb	obj/kern/kernel.asm	/^f0101dbb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	00 $/;"	l
f0101dc3	obj/kern/kernel.asm	/^f0101dc3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	00 $/;"	l
f0101dcb	obj/kern/kernel.asm	/^f0101dcb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	e8 ee 48 00 00       	call   f01066c1 <memset>$/;"	l
f0101dd3	obj/kern/kernel.asm	/^f0101dd3:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0101dd8	obj/kern/kernel.asm	/^f0101dd8:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101ddd	obj/kern/kernel.asm	/^f0101ddd:	77 20                	ja     f0101dff <mem_init+0xe9>$/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101de3	obj/kern/kernel.asm	/^f0101de3:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	f0 $/;"	l
f0101deb	obj/kern/kernel.asm	/^f0101deb:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
f0101df2	obj/kern/kernel.asm	/^f0101df2:	00 $/;"	l
f0101df3	obj/kern/kernel.asm	/^f0101df3:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	e8 41 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dff	obj/kern/kernel.asm	/^f0101dff:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101e08	obj/kern/kernel.asm	/^f0101e08:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	a1 88 7e 20 f0       	mov    0xf0207e88,%eax$/;"	l
f0101e13	obj/kern/kernel.asm	/^f0101e13:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	e8 85 f5 ff ff       	call   f01013a0 <boot_alloc>$/;"	l
f0101e1b	obj/kern/kernel.asm	/^f0101e1b:	a3 90 7e 20 f0       	mov    %eax,0xf0207e90$/;"	l
f0101e20	obj/kern/kernel.asm	/^f0101e20:	b8 00 00 02 00       	mov    $0x20000,%eax$/;"	l
f0101e25	obj/kern/kernel.asm	/^f0101e25:	e8 76 f5 ff ff       	call   f01013a0 <boot_alloc>$/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	a3 48 72 20 f0       	mov    %eax,0xf0207248$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	e8 e0 f9 ff ff       	call   f0101814 <page_init>$/;"	l
f0101e34	obj/kern/kernel.asm	/^f0101e34:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	e8 41 f6 ff ff       	call   f010147f <check_page_free_list>$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	83 3d 90 7e 20 f0 00 	cmpl   $0x0,0xf0207e90$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	75 1c                	jne    f0101e63 <mem_init+0x14d>$/;"	l
f0101e47	obj/kern/kernel.asm	/^f0101e47:	c7 44 24 08 ea 87 10 	movl   $0xf01087ea,0x8(%esp)$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	f0 $/;"	l
f0101e4f	obj/kern/kernel.asm	/^f0101e4f:	c7 44 24 04 f6 02 00 	movl   $0x2f6,0x4(%esp)$/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	00 $/;"	l
f0101e57	obj/kern/kernel.asm	/^f0101e57:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	e8 dd e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	a1 40 72 20 f0       	mov    0xf0207240,%eax$/;"	l
f0101e68	obj/kern/kernel.asm	/^f0101e68:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101e6d	obj/kern/kernel.asm	/^f0101e6d:	85 c0                	test   %eax,%eax$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	74 09                	je     f0101e7a <mem_init+0x164>$/;"	l
f0101e71	obj/kern/kernel.asm	/^f0101e71:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	8b 00                	mov    (%eax),%eax$/;"	l
f0101e76	obj/kern/kernel.asm	/^f0101e76:	85 c0                	test   %eax,%eax$/;"	l
f0101e78	obj/kern/kernel.asm	/^f0101e78:	75 f7                	jne    f0101e71 <mem_init+0x15b>$/;"	l
f0101e7a	obj/kern/kernel.asm	/^f0101e7a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e81	obj/kern/kernel.asm	/^f0101e81:	e8 53 fa ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	89 c6                	mov    %eax,%esi$/;"	l
f0101e88	obj/kern/kernel.asm	/^f0101e88:	85 c0                	test   %eax,%eax$/;"	l
f0101e8a	obj/kern/kernel.asm	/^f0101e8a:	75 24                	jne    f0101eb0 <mem_init+0x19a>$/;"	l
f0101e8c	obj/kern/kernel.asm	/^f0101e8c:	c7 44 24 0c 05 88 10 	movl   $0xf0108805,0xc(%esp)$/;"	l
f0101e93	obj/kern/kernel.asm	/^f0101e93:	f0 $/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0101e9b	obj/kern/kernel.asm	/^f0101e9b:	f0 $/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	c7 44 24 04 fe 02 00 	movl   $0x2fe,0x4(%esp)$/;"	l
f0101ea3	obj/kern/kernel.asm	/^f0101ea3:	00 $/;"	l
f0101ea4	obj/kern/kernel.asm	/^f0101ea4:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101eab	obj/kern/kernel.asm	/^f0101eab:	e8 90 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101eb0	obj/kern/kernel.asm	/^f0101eb0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	e8 1d fa ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0101ebc	obj/kern/kernel.asm	/^f0101ebc:	89 c7                	mov    %eax,%edi$/;"	l
f0101ebe	obj/kern/kernel.asm	/^f0101ebe:	85 c0                	test   %eax,%eax$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	75 24                	jne    f0101ee6 <mem_init+0x1d0>$/;"	l
f0101ec2	obj/kern/kernel.asm	/^f0101ec2:	c7 44 24 0c 1b 88 10 	movl   $0xf010881b,0xc(%esp)$/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	f0 $/;"	l
f0101eca	obj/kern/kernel.asm	/^f0101eca:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0101ed1	obj/kern/kernel.asm	/^f0101ed1:	f0 $/;"	l
f0101ed2	obj/kern/kernel.asm	/^f0101ed2:	c7 44 24 04 ff 02 00 	movl   $0x2ff,0x4(%esp)$/;"	l
f0101ed9	obj/kern/kernel.asm	/^f0101ed9:	00 $/;"	l
f0101eda	obj/kern/kernel.asm	/^f0101eda:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	e8 5a e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	e8 e7 f9 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0101ef2	obj/kern/kernel.asm	/^f0101ef2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	85 c0                	test   %eax,%eax$/;"	l
f0101ef7	obj/kern/kernel.asm	/^f0101ef7:	75 24                	jne    f0101f1d <mem_init+0x207>$/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	c7 44 24 0c 31 88 10 	movl   $0xf0108831,0xc(%esp)$/;"	l
f0101f00	obj/kern/kernel.asm	/^f0101f00:	f0 $/;"	l
f0101f01	obj/kern/kernel.asm	/^f0101f01:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	f0 $/;"	l
f0101f09	obj/kern/kernel.asm	/^f0101f09:	c7 44 24 04 00 03 00 	movl   $0x300,0x4(%esp)$/;"	l
f0101f10	obj/kern/kernel.asm	/^f0101f10:	00 $/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101f18	obj/kern/kernel.asm	/^f0101f18:	e8 23 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f1d	obj/kern/kernel.asm	/^f0101f1d:	39 fe                	cmp    %edi,%esi$/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	75 24                	jne    f0101f45 <mem_init+0x22f>$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	c7 44 24 0c 47 88 10 	movl   $0xf0108847,0xc(%esp)$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	f0 $/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0101f30	obj/kern/kernel.asm	/^f0101f30:	f0 $/;"	l
f0101f31	obj/kern/kernel.asm	/^f0101f31:	c7 44 24 04 03 03 00 	movl   $0x303,0x4(%esp)$/;"	l
f0101f38	obj/kern/kernel.asm	/^f0101f38:	00 $/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	e8 fb e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	74 05                	je     f0101f4f <mem_init+0x239>$/;"	l
f0101f4a	obj/kern/kernel.asm	/^f0101f4a:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	75 24                	jne    f0101f73 <mem_init+0x25d>$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	c7 44 24 0c 58 7f 10 	movl   $0xf0107f58,0xc(%esp)$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	f0 $/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0101f5e	obj/kern/kernel.asm	/^f0101f5e:	f0 $/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	c7 44 24 04 04 03 00 	movl   $0x304,0x4(%esp)$/;"	l
f0101f66	obj/kern/kernel.asm	/^f0101f66:	00 $/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	e8 cd e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f73	obj/kern/kernel.asm	/^f0101f73:	8b 15 90 7e 20 f0    	mov    0xf0207e90,%edx$/;"	l
f0101f79	obj/kern/kernel.asm	/^f0101f79:	a1 88 7e 20 f0       	mov    0xf0207e88,%eax$/;"	l
f0101f7e	obj/kern/kernel.asm	/^f0101f7e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	89 f1                	mov    %esi,%ecx$/;"	l
f0101f83	obj/kern/kernel.asm	/^f0101f83:	29 d1                	sub    %edx,%ecx$/;"	l
f0101f85	obj/kern/kernel.asm	/^f0101f85:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101f8d	obj/kern/kernel.asm	/^f0101f8d:	72 24                	jb     f0101fb3 <mem_init+0x29d>$/;"	l
f0101f8f	obj/kern/kernel.asm	/^f0101f8f:	c7 44 24 0c 59 88 10 	movl   $0xf0108859,0xc(%esp)$/;"	l
f0101f96	obj/kern/kernel.asm	/^f0101f96:	f0 $/;"	l
f0101f97	obj/kern/kernel.asm	/^f0101f97:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0101f9e	obj/kern/kernel.asm	/^f0101f9e:	f0 $/;"	l
f0101f9f	obj/kern/kernel.asm	/^f0101f9f:	c7 44 24 04 05 03 00 	movl   $0x305,0x4(%esp)$/;"	l
f0101fa6	obj/kern/kernel.asm	/^f0101fa6:	00 $/;"	l
f0101fa7	obj/kern/kernel.asm	/^f0101fa7:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101fae	obj/kern/kernel.asm	/^f0101fae:	e8 8d e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fb3	obj/kern/kernel.asm	/^f0101fb3:	89 f9                	mov    %edi,%ecx$/;"	l
f0101fb5	obj/kern/kernel.asm	/^f0101fb5:	29 d1                	sub    %edx,%ecx$/;"	l
f0101fb7	obj/kern/kernel.asm	/^f0101fb7:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101fba	obj/kern/kernel.asm	/^f0101fba:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101fbd	obj/kern/kernel.asm	/^f0101fbd:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101fbf	obj/kern/kernel.asm	/^f0101fbf:	77 24                	ja     f0101fe5 <mem_init+0x2cf>$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	c7 44 24 0c 76 88 10 	movl   $0xf0108876,0xc(%esp)$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	f0 $/;"	l
f0101fc9	obj/kern/kernel.asm	/^f0101fc9:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	f0 $/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	c7 44 24 04 06 03 00 	movl   $0x306,0x4(%esp)$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	00 $/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0101fe0	obj/kern/kernel.asm	/^f0101fe0:	e8 5b e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101fe8	obj/kern/kernel.asm	/^f0101fe8:	29 d1                	sub    %edx,%ecx$/;"	l
f0101fea	obj/kern/kernel.asm	/^f0101fea:	89 ca                	mov    %ecx,%edx$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101fef	obj/kern/kernel.asm	/^f0101fef:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101ff2	obj/kern/kernel.asm	/^f0101ff2:	39 d0                	cmp    %edx,%eax$/;"	l
f0101ff4	obj/kern/kernel.asm	/^f0101ff4:	77 24                	ja     f010201a <mem_init+0x304>$/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	c7 44 24 0c 93 88 10 	movl   $0xf0108893,0xc(%esp)$/;"	l
f0101ffd	obj/kern/kernel.asm	/^f0101ffd:	f0 $/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102005	obj/kern/kernel.asm	/^f0102005:	f0 $/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	c7 44 24 04 07 03 00 	movl   $0x307,0x4(%esp)$/;"	l
f010200d	obj/kern/kernel.asm	/^f010200d:	00 $/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102015	obj/kern/kernel.asm	/^f0102015:	e8 26 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f010201a	obj/kern/kernel.asm	/^f010201a:	a1 40 72 20 f0       	mov    0xf0207240,%eax$/;"	l
f010201f	obj/kern/kernel.asm	/^f010201f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102022	obj/kern/kernel.asm	/^f0102022:	c7 05 40 72 20 f0 00 	movl   $0x0,0xf0207240$/;"	l
f0102029	obj/kern/kernel.asm	/^f0102029:	00 00 00 $/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102033	obj/kern/kernel.asm	/^f0102033:	e8 a1 f8 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	85 c0                	test   %eax,%eax$/;"	l
f010203a	obj/kern/kernel.asm	/^f010203a:	74 24                	je     f0102060 <mem_init+0x34a>$/;"	l
f010203c	obj/kern/kernel.asm	/^f010203c:	c7 44 24 0c b0 88 10 	movl   $0xf01088b0,0xc(%esp)$/;"	l
f0102043	obj/kern/kernel.asm	/^f0102043:	f0 $/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	f0 $/;"	l
f010204c	obj/kern/kernel.asm	/^f010204c:	c7 44 24 04 0e 03 00 	movl   $0x30e,0x4(%esp)$/;"	l
f0102053	obj/kern/kernel.asm	/^f0102053:	00 $/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010205b	obj/kern/kernel.asm	/^f010205b:	e8 e0 df ff ff       	call   f0100040 <_panic>$/;"	l
f0102060	obj/kern/kernel.asm	/^f0102060:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102063	obj/kern/kernel.asm	/^f0102063:	e8 f2 f8 ff ff       	call   f010195a <page_free>$/;"	l
f0102068	obj/kern/kernel.asm	/^f0102068:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010206b	obj/kern/kernel.asm	/^f010206b:	e8 ea f8 ff ff       	call   f010195a <page_free>$/;"	l
f0102070	obj/kern/kernel.asm	/^f0102070:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102073	obj/kern/kernel.asm	/^f0102073:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102076	obj/kern/kernel.asm	/^f0102076:	e8 df f8 ff ff       	call   f010195a <page_free>$/;"	l
f010207b	obj/kern/kernel.asm	/^f010207b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102082	obj/kern/kernel.asm	/^f0102082:	e8 52 f8 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0102087	obj/kern/kernel.asm	/^f0102087:	89 c6                	mov    %eax,%esi$/;"	l
f0102089	obj/kern/kernel.asm	/^f0102089:	85 c0                	test   %eax,%eax$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	75 24                	jne    f01020b1 <mem_init+0x39b>$/;"	l
f010208d	obj/kern/kernel.asm	/^f010208d:	c7 44 24 0c 05 88 10 	movl   $0xf0108805,0xc(%esp)$/;"	l
f0102094	obj/kern/kernel.asm	/^f0102094:	f0 $/;"	l
f0102095	obj/kern/kernel.asm	/^f0102095:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010209c	obj/kern/kernel.asm	/^f010209c:	f0 $/;"	l
f010209d	obj/kern/kernel.asm	/^f010209d:	c7 44 24 04 15 03 00 	movl   $0x315,0x4(%esp)$/;"	l
f01020a4	obj/kern/kernel.asm	/^f01020a4:	00 $/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01020ac	obj/kern/kernel.asm	/^f01020ac:	e8 8f df ff ff       	call   f0100040 <_panic>$/;"	l
f01020b1	obj/kern/kernel.asm	/^f01020b1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	e8 1c f8 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f01020bd	obj/kern/kernel.asm	/^f01020bd:	89 c7                	mov    %eax,%edi$/;"	l
f01020bf	obj/kern/kernel.asm	/^f01020bf:	85 c0                	test   %eax,%eax$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	75 24                	jne    f01020e7 <mem_init+0x3d1>$/;"	l
f01020c3	obj/kern/kernel.asm	/^f01020c3:	c7 44 24 0c 1b 88 10 	movl   $0xf010881b,0xc(%esp)$/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	f0 $/;"	l
f01020cb	obj/kern/kernel.asm	/^f01020cb:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	f0 $/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	c7 44 24 04 16 03 00 	movl   $0x316,0x4(%esp)$/;"	l
f01020da	obj/kern/kernel.asm	/^f01020da:	00 $/;"	l
f01020db	obj/kern/kernel.asm	/^f01020db:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	e8 59 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	e8 e6 f7 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	85 c0                	test   %eax,%eax$/;"	l
f01020f8	obj/kern/kernel.asm	/^f01020f8:	75 24                	jne    f010211e <mem_init+0x408>$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	c7 44 24 0c 31 88 10 	movl   $0xf0108831,0xc(%esp)$/;"	l
f0102101	obj/kern/kernel.asm	/^f0102101:	f0 $/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102109	obj/kern/kernel.asm	/^f0102109:	f0 $/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	c7 44 24 04 17 03 00 	movl   $0x317,0x4(%esp)$/;"	l
f0102111	obj/kern/kernel.asm	/^f0102111:	00 $/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	e8 22 df ff ff       	call   f0100040 <_panic>$/;"	l
f010211e	obj/kern/kernel.asm	/^f010211e:	39 fe                	cmp    %edi,%esi$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	75 24                	jne    f0102146 <mem_init+0x430>$/;"	l
f0102122	obj/kern/kernel.asm	/^f0102122:	c7 44 24 0c 47 88 10 	movl   $0xf0108847,0xc(%esp)$/;"	l
f0102129	obj/kern/kernel.asm	/^f0102129:	f0 $/;"	l
f010212a	obj/kern/kernel.asm	/^f010212a:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102131	obj/kern/kernel.asm	/^f0102131:	f0 $/;"	l
f0102132	obj/kern/kernel.asm	/^f0102132:	c7 44 24 04 19 03 00 	movl   $0x319,0x4(%esp)$/;"	l
f0102139	obj/kern/kernel.asm	/^f0102139:	00 $/;"	l
f010213a	obj/kern/kernel.asm	/^f010213a:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	e8 fa de ff ff       	call   f0100040 <_panic>$/;"	l
f0102146	obj/kern/kernel.asm	/^f0102146:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0102149	obj/kern/kernel.asm	/^f0102149:	74 05                	je     f0102150 <mem_init+0x43a>$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f010214e	obj/kern/kernel.asm	/^f010214e:	75 24                	jne    f0102174 <mem_init+0x45e>$/;"	l
f0102150	obj/kern/kernel.asm	/^f0102150:	c7 44 24 0c 58 7f 10 	movl   $0xf0107f58,0xc(%esp)$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	f0 $/;"	l
f0102158	obj/kern/kernel.asm	/^f0102158:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	f0 $/;"	l
f0102160	obj/kern/kernel.asm	/^f0102160:	c7 44 24 04 1a 03 00 	movl   $0x31a,0x4(%esp)$/;"	l
f0102167	obj/kern/kernel.asm	/^f0102167:	00 $/;"	l
f0102168	obj/kern/kernel.asm	/^f0102168:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010216f	obj/kern/kernel.asm	/^f010216f:	e8 cc de ff ff       	call   f0100040 <_panic>$/;"	l
f0102174	obj/kern/kernel.asm	/^f0102174:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	e8 59 f7 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	85 c0                	test   %eax,%eax$/;"	l
f0102182	obj/kern/kernel.asm	/^f0102182:	74 24                	je     f01021a8 <mem_init+0x492>$/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	c7 44 24 0c b0 88 10 	movl   $0xf01088b0,0xc(%esp)$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	f0 $/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	f0 $/;"	l
f0102194	obj/kern/kernel.asm	/^f0102194:	c7 44 24 04 1b 03 00 	movl   $0x31b,0x4(%esp)$/;"	l
f010219b	obj/kern/kernel.asm	/^f010219b:	00 $/;"	l
f010219c	obj/kern/kernel.asm	/^f010219c:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	e8 98 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021a8	obj/kern/kernel.asm	/^f01021a8:	89 f0                	mov    %esi,%eax$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	2b 05 90 7e 20 f0    	sub    0xf0207e90,%eax$/;"	l
f01021b0	obj/kern/kernel.asm	/^f01021b0:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01021b6	obj/kern/kernel.asm	/^f01021b6:	89 c2                	mov    %eax,%edx$/;"	l
f01021b8	obj/kern/kernel.asm	/^f01021b8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	3b 15 88 7e 20 f0    	cmp    0xf0207e88,%edx$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	72 20                	jb     f01021e3 <mem_init+0x4cd>$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01021c7	obj/kern/kernel.asm	/^f01021c7:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	f0 $/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	00 $/;"	l
f01021d7	obj/kern/kernel.asm	/^f01021d7:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	e8 5d de ff ff       	call   f0100040 <_panic>$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	00 $/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01021f2	obj/kern/kernel.asm	/^f01021f2:	00 $/;"	l
f01021f3	obj/kern/kernel.asm	/^f01021f3:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01021f8	obj/kern/kernel.asm	/^f01021f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021fb	obj/kern/kernel.asm	/^f01021fb:	e8 c1 44 00 00       	call   f01066c1 <memset>$/;"	l
f0102200	obj/kern/kernel.asm	/^f0102200:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102203	obj/kern/kernel.asm	/^f0102203:	e8 52 f7 ff ff       	call   f010195a <page_free>$/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f010220f	obj/kern/kernel.asm	/^f010220f:	e8 c5 f6 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0102214	obj/kern/kernel.asm	/^f0102214:	85 c0                	test   %eax,%eax$/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	75 24                	jne    f010223c <mem_init+0x526>$/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	c7 44 24 0c bf 88 10 	movl   $0xf01088bf,0xc(%esp)$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	f0 $/;"	l
f0102220	obj/kern/kernel.asm	/^f0102220:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	f0 $/;"	l
f0102228	obj/kern/kernel.asm	/^f0102228:	c7 44 24 04 20 03 00 	movl   $0x320,0x4(%esp)$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	00 $/;"	l
f0102230	obj/kern/kernel.asm	/^f0102230:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	e8 04 de ff ff       	call   f0100040 <_panic>$/;"	l
f010223c	obj/kern/kernel.asm	/^f010223c:	39 c6                	cmp    %eax,%esi$/;"	l
f010223e	obj/kern/kernel.asm	/^f010223e:	74 24                	je     f0102264 <mem_init+0x54e>$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	c7 44 24 0c dd 88 10 	movl   $0xf01088dd,0xc(%esp)$/;"	l
f0102247	obj/kern/kernel.asm	/^f0102247:	f0 $/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010224f	obj/kern/kernel.asm	/^f010224f:	f0 $/;"	l
f0102250	obj/kern/kernel.asm	/^f0102250:	c7 44 24 04 21 03 00 	movl   $0x321,0x4(%esp)$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	00 $/;"	l
f0102258	obj/kern/kernel.asm	/^f0102258:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	e8 dc dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102264	obj/kern/kernel.asm	/^f0102264:	89 f2                	mov    %esi,%edx$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f010226c	obj/kern/kernel.asm	/^f010226c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010226f	obj/kern/kernel.asm	/^f010226f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102272	obj/kern/kernel.asm	/^f0102272:	89 d0                	mov    %edx,%eax$/;"	l
f0102274	obj/kern/kernel.asm	/^f0102274:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	3b 05 88 7e 20 f0    	cmp    0xf0207e88,%eax$/;"	l
f010227d	obj/kern/kernel.asm	/^f010227d:	72 20                	jb     f010229f <mem_init+0x589>$/;"	l
f010227f	obj/kern/kernel.asm	/^f010227f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	f0 $/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102292	obj/kern/kernel.asm	/^f0102292:	00 $/;"	l
f0102293	obj/kern/kernel.asm	/^f0102293:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f010229a	obj/kern/kernel.asm	/^f010229a:	e8 a1 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010229f	obj/kern/kernel.asm	/^f010229f:	80 ba 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%edx)$/;"	l
f01022a6	obj/kern/kernel.asm	/^f01022a6:	75 11                	jne    f01022b9 <mem_init+0x5a3>$/;"	l
f01022a8	obj/kern/kernel.asm	/^f01022a8:	8d 82 01 00 00 f0    	lea    -0xfffffff(%edx),%eax$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01022b4	obj/kern/kernel.asm	/^f01022b4:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f01022b7	obj/kern/kernel.asm	/^f01022b7:	74 24                	je     f01022dd <mem_init+0x5c7>$/;"	l
f01022b9	obj/kern/kernel.asm	/^f01022b9:	c7 44 24 0c ed 88 10 	movl   $0xf01088ed,0xc(%esp)$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	f0 $/;"	l
f01022c1	obj/kern/kernel.asm	/^f01022c1:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	f0 $/;"	l
f01022c9	obj/kern/kernel.asm	/^f01022c9:	c7 44 24 04 24 03 00 	movl   $0x324,0x4(%esp)$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	00 $/;"	l
f01022d1	obj/kern/kernel.asm	/^f01022d1:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	e8 63 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022dd	obj/kern/kernel.asm	/^f01022dd:	83 c0 01             	add    $0x1,%eax$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	39 d0                	cmp    %edx,%eax$/;"	l
f01022e2	obj/kern/kernel.asm	/^f01022e2:	75 d0                	jne    f01022b4 <mem_init+0x59e>$/;"	l
f01022e4	obj/kern/kernel.asm	/^f01022e4:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	89 15 40 72 20 f0    	mov    %edx,0xf0207240$/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	e8 65 f6 ff ff       	call   f010195a <page_free>$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	e8 5d f6 ff ff       	call   f010195a <page_free>$/;"	l
f01022fd	obj/kern/kernel.asm	/^f01022fd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102300	obj/kern/kernel.asm	/^f0102300:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	e8 52 f6 ff ff       	call   f010195a <page_free>$/;"	l
f0102308	obj/kern/kernel.asm	/^f0102308:	a1 40 72 20 f0       	mov    0xf0207240,%eax$/;"	l
f010230d	obj/kern/kernel.asm	/^f010230d:	85 c0                	test   %eax,%eax$/;"	l
f010230f	obj/kern/kernel.asm	/^f010230f:	74 09                	je     f010231a <mem_init+0x604>$/;"	l
f0102311	obj/kern/kernel.asm	/^f0102311:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0102314	obj/kern/kernel.asm	/^f0102314:	8b 00                	mov    (%eax),%eax$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	85 c0                	test   %eax,%eax$/;"	l
f0102318	obj/kern/kernel.asm	/^f0102318:	75 f7                	jne    f0102311 <mem_init+0x5fb>$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	85 db                	test   %ebx,%ebx$/;"	l
f010231c	obj/kern/kernel.asm	/^f010231c:	74 24                	je     f0102342 <mem_init+0x62c>$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	c7 44 24 0c f7 88 10 	movl   $0xf01088f7,0xc(%esp)$/;"	l
f0102325	obj/kern/kernel.asm	/^f0102325:	f0 $/;"	l
f0102326	obj/kern/kernel.asm	/^f0102326:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010232d	obj/kern/kernel.asm	/^f010232d:	f0 $/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	c7 44 24 04 31 03 00 	movl   $0x331,0x4(%esp)$/;"	l
f0102335	obj/kern/kernel.asm	/^f0102335:	00 $/;"	l
f0102336	obj/kern/kernel.asm	/^f0102336:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010233d	obj/kern/kernel.asm	/^f010233d:	e8 fe dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	c7 04 24 78 7f 10 f0 	movl   $0xf0107f78,(%esp)$/;"	l
f0102349	obj/kern/kernel.asm	/^f0102349:	e8 40 24 00 00       	call   f010478e <cprintf>$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102355	obj/kern/kernel.asm	/^f0102355:	e8 7f f5 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f010235a	obj/kern/kernel.asm	/^f010235a:	89 c6                	mov    %eax,%esi$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	85 c0                	test   %eax,%eax$/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	75 24                	jne    f0102384 <mem_init+0x66e>$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	c7 44 24 0c 05 88 10 	movl   $0xf0108805,0xc(%esp)$/;"	l
f0102367	obj/kern/kernel.asm	/^f0102367:	f0 $/;"	l
f0102368	obj/kern/kernel.asm	/^f0102368:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	f0 $/;"	l
f0102370	obj/kern/kernel.asm	/^f0102370:	c7 44 24 04 9a 03 00 	movl   $0x39a,0x4(%esp)$/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	00 $/;"	l
f0102378	obj/kern/kernel.asm	/^f0102378:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	e8 bc dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102384	obj/kern/kernel.asm	/^f0102384:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010238b	obj/kern/kernel.asm	/^f010238b:	e8 49 f5 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	89 c7                	mov    %eax,%edi$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	85 c0                	test   %eax,%eax$/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	75 24                	jne    f01023ba <mem_init+0x6a4>$/;"	l
f0102396	obj/kern/kernel.asm	/^f0102396:	c7 44 24 0c 1b 88 10 	movl   $0xf010881b,0xc(%esp)$/;"	l
f010239d	obj/kern/kernel.asm	/^f010239d:	f0 $/;"	l
f010239e	obj/kern/kernel.asm	/^f010239e:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01023a5	obj/kern/kernel.asm	/^f01023a5:	f0 $/;"	l
f01023a6	obj/kern/kernel.asm	/^f01023a6:	c7 44 24 04 9b 03 00 	movl   $0x39b,0x4(%esp)$/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	00 $/;"	l
f01023ae	obj/kern/kernel.asm	/^f01023ae:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01023b5	obj/kern/kernel.asm	/^f01023b5:	e8 86 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023ba	obj/kern/kernel.asm	/^f01023ba:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01023c1	obj/kern/kernel.asm	/^f01023c1:	e8 13 f5 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	89 c3                	mov    %eax,%ebx$/;"	l
f01023c8	obj/kern/kernel.asm	/^f01023c8:	85 c0                	test   %eax,%eax$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	75 24                	jne    f01023f0 <mem_init+0x6da>$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	c7 44 24 0c 31 88 10 	movl   $0xf0108831,0xc(%esp)$/;"	l
f01023d3	obj/kern/kernel.asm	/^f01023d3:	f0 $/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	f0 $/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	c7 44 24 04 9c 03 00 	movl   $0x39c,0x4(%esp)$/;"	l
f01023e3	obj/kern/kernel.asm	/^f01023e3:	00 $/;"	l
f01023e4	obj/kern/kernel.asm	/^f01023e4:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01023eb	obj/kern/kernel.asm	/^f01023eb:	e8 50 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023f0	obj/kern/kernel.asm	/^f01023f0:	39 fe                	cmp    %edi,%esi$/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	75 24                	jne    f0102418 <mem_init+0x702>$/;"	l
f01023f4	obj/kern/kernel.asm	/^f01023f4:	c7 44 24 0c 47 88 10 	movl   $0xf0108847,0xc(%esp)$/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	f0 $/;"	l
f01023fc	obj/kern/kernel.asm	/^f01023fc:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102403	obj/kern/kernel.asm	/^f0102403:	f0 $/;"	l
f0102404	obj/kern/kernel.asm	/^f0102404:	c7 44 24 04 9f 03 00 	movl   $0x39f,0x4(%esp)$/;"	l
f010240b	obj/kern/kernel.asm	/^f010240b:	00 $/;"	l
f010240c	obj/kern/kernel.asm	/^f010240c:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102413	obj/kern/kernel.asm	/^f0102413:	e8 28 dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102418	obj/kern/kernel.asm	/^f0102418:	39 c7                	cmp    %eax,%edi$/;"	l
f010241a	obj/kern/kernel.asm	/^f010241a:	74 04                	je     f0102420 <mem_init+0x70a>$/;"	l
f010241c	obj/kern/kernel.asm	/^f010241c:	39 c6                	cmp    %eax,%esi$/;"	l
f010241e	obj/kern/kernel.asm	/^f010241e:	75 24                	jne    f0102444 <mem_init+0x72e>$/;"	l
f0102420	obj/kern/kernel.asm	/^f0102420:	c7 44 24 0c 58 7f 10 	movl   $0xf0107f58,0xc(%esp)$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	f0 $/;"	l
f0102428	obj/kern/kernel.asm	/^f0102428:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010242f	obj/kern/kernel.asm	/^f010242f:	f0 $/;"	l
f0102430	obj/kern/kernel.asm	/^f0102430:	c7 44 24 04 a0 03 00 	movl   $0x3a0,0x4(%esp)$/;"	l
f0102437	obj/kern/kernel.asm	/^f0102437:	00 $/;"	l
f0102438	obj/kern/kernel.asm	/^f0102438:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	e8 fc db ff ff       	call   f0100040 <_panic>$/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	8b 15 40 72 20 f0    	mov    0xf0207240,%edx$/;"	l
f010244a	obj/kern/kernel.asm	/^f010244a:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f010244d	obj/kern/kernel.asm	/^f010244d:	c7 05 40 72 20 f0 00 	movl   $0x0,0xf0207240$/;"	l
f0102454	obj/kern/kernel.asm	/^f0102454:	00 00 00 $/;"	l
f0102457	obj/kern/kernel.asm	/^f0102457:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010245e	obj/kern/kernel.asm	/^f010245e:	e8 76 f4 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0102463	obj/kern/kernel.asm	/^f0102463:	85 c0                	test   %eax,%eax$/;"	l
f0102465	obj/kern/kernel.asm	/^f0102465:	74 24                	je     f010248b <mem_init+0x775>$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	c7 44 24 0c b0 88 10 	movl   $0xf01088b0,0xc(%esp)$/;"	l
f010246e	obj/kern/kernel.asm	/^f010246e:	f0 $/;"	l
f010246f	obj/kern/kernel.asm	/^f010246f:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	f0 $/;"	l
f0102477	obj/kern/kernel.asm	/^f0102477:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	00 $/;"	l
f010247f	obj/kern/kernel.asm	/^f010247f:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102486	obj/kern/kernel.asm	/^f0102486:	e8 b5 db ff ff       	call   f0100040 <_panic>$/;"	l
f010248b	obj/kern/kernel.asm	/^f010248b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010248e	obj/kern/kernel.asm	/^f010248e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	00 $/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01024a2	obj/kern/kernel.asm	/^f01024a2:	e8 56 f6 ff ff       	call   f0101afd <page_lookup>$/;"	l
f01024a7	obj/kern/kernel.asm	/^f01024a7:	85 c0                	test   %eax,%eax$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	74 24                	je     f01024cf <mem_init+0x7b9>$/;"	l
f01024ab	obj/kern/kernel.asm	/^f01024ab:	c7 44 24 0c 98 7f 10 	movl   $0xf0107f98,0xc(%esp)$/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	f0 $/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01024ba	obj/kern/kernel.asm	/^f01024ba:	f0 $/;"	l
f01024bb	obj/kern/kernel.asm	/^f01024bb:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	00 $/;"	l
f01024c3	obj/kern/kernel.asm	/^f01024c3:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01024ca	obj/kern/kernel.asm	/^f01024ca:	e8 71 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024cf	obj/kern/kernel.asm	/^f01024cf:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01024d6	obj/kern/kernel.asm	/^f01024d6:	00 $/;"	l
f01024d7	obj/kern/kernel.asm	/^f01024d7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01024de	obj/kern/kernel.asm	/^f01024de:	00 $/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01024e3	obj/kern/kernel.asm	/^f01024e3:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01024eb	obj/kern/kernel.asm	/^f01024eb:	e8 b8 f6 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	85 c0                	test   %eax,%eax$/;"	l
f01024f2	obj/kern/kernel.asm	/^f01024f2:	78 24                	js     f0102518 <mem_init+0x802>$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	c7 44 24 0c d0 7f 10 	movl   $0xf0107fd0,0xc(%esp)$/;"	l
f01024fb	obj/kern/kernel.asm	/^f01024fb:	f0 $/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102503	obj/kern/kernel.asm	/^f0102503:	f0 $/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	c7 44 24 04 ad 03 00 	movl   $0x3ad,0x4(%esp)$/;"	l
f010250b	obj/kern/kernel.asm	/^f010250b:	00 $/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102513	obj/kern/kernel.asm	/^f0102513:	e8 28 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102518	obj/kern/kernel.asm	/^f0102518:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010251b	obj/kern/kernel.asm	/^f010251b:	e8 3a f4 ff ff       	call   f010195a <page_free>$/;"	l
f0102520	obj/kern/kernel.asm	/^f0102520:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	00 $/;"	l
f0102528	obj/kern/kernel.asm	/^f0102528:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	00 $/;"	l
f0102530	obj/kern/kernel.asm	/^f0102530:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102534	obj/kern/kernel.asm	/^f0102534:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102539	obj/kern/kernel.asm	/^f0102539:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	e8 67 f6 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f0102541	obj/kern/kernel.asm	/^f0102541:	85 c0                	test   %eax,%eax$/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	74 24                	je     f0102569 <mem_init+0x853>$/;"	l
f0102545	obj/kern/kernel.asm	/^f0102545:	c7 44 24 0c 00 80 10 	movl   $0xf0108000,0xc(%esp)$/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	f0 $/;"	l
f010254d	obj/kern/kernel.asm	/^f010254d:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102554	obj/kern/kernel.asm	/^f0102554:	f0 $/;"	l
f0102555	obj/kern/kernel.asm	/^f0102555:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f010255c	obj/kern/kernel.asm	/^f010255c:	00 $/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102564	obj/kern/kernel.asm	/^f0102564:	e8 d7 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	8b 0d 8c 7e 20 f0    	mov    0xf0207e8c,%ecx$/;"	l
f010256f	obj/kern/kernel.asm	/^f010256f:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	a1 90 7e 20 f0       	mov    0xf0207e90,%eax$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	8b 11                	mov    (%ecx),%edx$/;"	l
f010257c	obj/kern/kernel.asm	/^f010257c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102582	obj/kern/kernel.asm	/^f0102582:	89 f0                	mov    %esi,%eax$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010258a	obj/kern/kernel.asm	/^f010258a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010258d	obj/kern/kernel.asm	/^f010258d:	39 c2                	cmp    %eax,%edx$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	74 24                	je     f01025b5 <mem_init+0x89f>$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	c7 44 24 0c 30 80 10 	movl   $0xf0108030,0xc(%esp)$/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	f0 $/;"	l
f0102599	obj/kern/kernel.asm	/^f0102599:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	f0 $/;"	l
f01025a1	obj/kern/kernel.asm	/^f01025a1:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	00 $/;"	l
f01025a9	obj/kern/kernel.asm	/^f01025a9:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	e8 8b da ff ff       	call   f0100040 <_panic>$/;"	l
f01025b5	obj/kern/kernel.asm	/^f01025b5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01025ba	obj/kern/kernel.asm	/^f01025ba:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01025bd	obj/kern/kernel.asm	/^f01025bd:	e8 1a ee ff ff       	call   f01013dc <check_va2pa>$/;"	l
f01025c2	obj/kern/kernel.asm	/^f01025c2:	89 fa                	mov    %edi,%edx$/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	2b 55 d0             	sub    -0x30(%ebp),%edx$/;"	l
f01025c7	obj/kern/kernel.asm	/^f01025c7:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01025ca	obj/kern/kernel.asm	/^f01025ca:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01025cd	obj/kern/kernel.asm	/^f01025cd:	39 d0                	cmp    %edx,%eax$/;"	l
f01025cf	obj/kern/kernel.asm	/^f01025cf:	74 24                	je     f01025f5 <mem_init+0x8df>$/;"	l
f01025d1	obj/kern/kernel.asm	/^f01025d1:	c7 44 24 0c 58 80 10 	movl   $0xf0108058,0xc(%esp)$/;"	l
f01025d8	obj/kern/kernel.asm	/^f01025d8:	f0 $/;"	l
f01025d9	obj/kern/kernel.asm	/^f01025d9:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	f0 $/;"	l
f01025e1	obj/kern/kernel.asm	/^f01025e1:	c7 44 24 04 b3 03 00 	movl   $0x3b3,0x4(%esp)$/;"	l
f01025e8	obj/kern/kernel.asm	/^f01025e8:	00 $/;"	l
f01025e9	obj/kern/kernel.asm	/^f01025e9:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01025f0	obj/kern/kernel.asm	/^f01025f0:	e8 4b da ff ff       	call   f0100040 <_panic>$/;"	l
f01025f5	obj/kern/kernel.asm	/^f01025f5:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01025fa	obj/kern/kernel.asm	/^f01025fa:	74 24                	je     f0102620 <mem_init+0x90a>$/;"	l
f01025fc	obj/kern/kernel.asm	/^f01025fc:	c7 44 24 0c 02 89 10 	movl   $0xf0108902,0xc(%esp)$/;"	l
f0102603	obj/kern/kernel.asm	/^f0102603:	f0 $/;"	l
f0102604	obj/kern/kernel.asm	/^f0102604:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010260b	obj/kern/kernel.asm	/^f010260b:	f0 $/;"	l
f010260c	obj/kern/kernel.asm	/^f010260c:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	00 $/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010261b	obj/kern/kernel.asm	/^f010261b:	e8 20 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102620	obj/kern/kernel.asm	/^f0102620:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102625	obj/kern/kernel.asm	/^f0102625:	74 24                	je     f010264b <mem_init+0x935>$/;"	l
f0102627	obj/kern/kernel.asm	/^f0102627:	c7 44 24 0c 13 89 10 	movl   $0xf0108913,0xc(%esp)$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	f0 $/;"	l
f010262f	obj/kern/kernel.asm	/^f010262f:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102636	obj/kern/kernel.asm	/^f0102636:	f0 $/;"	l
f0102637	obj/kern/kernel.asm	/^f0102637:	c7 44 24 04 b5 03 00 	movl   $0x3b5,0x4(%esp)$/;"	l
f010263e	obj/kern/kernel.asm	/^f010263e:	00 $/;"	l
f010263f	obj/kern/kernel.asm	/^f010263f:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102646	obj/kern/kernel.asm	/^f0102646:	e8 f5 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010264b	obj/kern/kernel.asm	/^f010264b:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	00 $/;"	l
f0102653	obj/kern/kernel.asm	/^f0102653:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010265a	obj/kern/kernel.asm	/^f010265a:	00 $/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010265f	obj/kern/kernel.asm	/^f010265f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102662	obj/kern/kernel.asm	/^f0102662:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0102665	obj/kern/kernel.asm	/^f0102665:	e8 3e f5 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f010266a	obj/kern/kernel.asm	/^f010266a:	85 c0                	test   %eax,%eax$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	74 24                	je     f0102692 <mem_init+0x97c>$/;"	l
f010266e	obj/kern/kernel.asm	/^f010266e:	c7 44 24 0c 88 80 10 	movl   $0xf0108088,0xc(%esp)$/;"	l
f0102675	obj/kern/kernel.asm	/^f0102675:	f0 $/;"	l
f0102676	obj/kern/kernel.asm	/^f0102676:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010267d	obj/kern/kernel.asm	/^f010267d:	f0 $/;"	l
f010267e	obj/kern/kernel.asm	/^f010267e:	c7 44 24 04 b8 03 00 	movl   $0x3b8,0x4(%esp)$/;"	l
f0102685	obj/kern/kernel.asm	/^f0102685:	00 $/;"	l
f0102686	obj/kern/kernel.asm	/^f0102686:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	e8 ae d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102697	obj/kern/kernel.asm	/^f0102697:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f010269c	obj/kern/kernel.asm	/^f010269c:	e8 3b ed ff ff       	call   f01013dc <check_va2pa>$/;"	l
f01026a1	obj/kern/kernel.asm	/^f01026a1:	89 da                	mov    %ebx,%edx$/;"	l
f01026a3	obj/kern/kernel.asm	/^f01026a3:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f01026a9	obj/kern/kernel.asm	/^f01026a9:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01026ac	obj/kern/kernel.asm	/^f01026ac:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	39 d0                	cmp    %edx,%eax$/;"	l
f01026b1	obj/kern/kernel.asm	/^f01026b1:	74 24                	je     f01026d7 <mem_init+0x9c1>$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	c7 44 24 0c c4 80 10 	movl   $0xf01080c4,0xc(%esp)$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	f0 $/;"	l
f01026bb	obj/kern/kernel.asm	/^f01026bb:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01026c2	obj/kern/kernel.asm	/^f01026c2:	f0 $/;"	l
f01026c3	obj/kern/kernel.asm	/^f01026c3:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f01026ca	obj/kern/kernel.asm	/^f01026ca:	00 $/;"	l
f01026cb	obj/kern/kernel.asm	/^f01026cb:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	e8 69 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01026dc	obj/kern/kernel.asm	/^f01026dc:	74 24                	je     f0102702 <mem_init+0x9ec>$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	c7 44 24 0c 24 89 10 	movl   $0xf0108924,0xc(%esp)$/;"	l
f01026e5	obj/kern/kernel.asm	/^f01026e5:	f0 $/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	f0 $/;"	l
f01026ee	obj/kern/kernel.asm	/^f01026ee:	c7 44 24 04 ba 03 00 	movl   $0x3ba,0x4(%esp)$/;"	l
f01026f5	obj/kern/kernel.asm	/^f01026f5:	00 $/;"	l
f01026f6	obj/kern/kernel.asm	/^f01026f6:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	e8 3e d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102702	obj/kern/kernel.asm	/^f0102702:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102709	obj/kern/kernel.asm	/^f0102709:	e8 cb f1 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f010270e	obj/kern/kernel.asm	/^f010270e:	85 c0                	test   %eax,%eax$/;"	l
f0102710	obj/kern/kernel.asm	/^f0102710:	74 24                	je     f0102736 <mem_init+0xa20>$/;"	l
f0102712	obj/kern/kernel.asm	/^f0102712:	c7 44 24 0c b0 88 10 	movl   $0xf01088b0,0xc(%esp)$/;"	l
f0102719	obj/kern/kernel.asm	/^f0102719:	f0 $/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102721	obj/kern/kernel.asm	/^f0102721:	f0 $/;"	l
f0102722	obj/kern/kernel.asm	/^f0102722:	c7 44 24 04 bd 03 00 	movl   $0x3bd,0x4(%esp)$/;"	l
f0102729	obj/kern/kernel.asm	/^f0102729:	00 $/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102731	obj/kern/kernel.asm	/^f0102731:	e8 0a d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010273d	obj/kern/kernel.asm	/^f010273d:	00 $/;"	l
f010273e	obj/kern/kernel.asm	/^f010273e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	00 $/;"	l
f0102746	obj/kern/kernel.asm	/^f0102746:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f010274f	obj/kern/kernel.asm	/^f010274f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102752	obj/kern/kernel.asm	/^f0102752:	e8 51 f4 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f0102757	obj/kern/kernel.asm	/^f0102757:	85 c0                	test   %eax,%eax$/;"	l
f0102759	obj/kern/kernel.asm	/^f0102759:	74 24                	je     f010277f <mem_init+0xa69>$/;"	l
f010275b	obj/kern/kernel.asm	/^f010275b:	c7 44 24 0c 88 80 10 	movl   $0xf0108088,0xc(%esp)$/;"	l
f0102762	obj/kern/kernel.asm	/^f0102762:	f0 $/;"	l
f0102763	obj/kern/kernel.asm	/^f0102763:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010276a	obj/kern/kernel.asm	/^f010276a:	f0 $/;"	l
f010276b	obj/kern/kernel.asm	/^f010276b:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f0102772	obj/kern/kernel.asm	/^f0102772:	00 $/;"	l
f0102773	obj/kern/kernel.asm	/^f0102773:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010277a	obj/kern/kernel.asm	/^f010277a:	e8 c1 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010277f	obj/kern/kernel.asm	/^f010277f:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102784	obj/kern/kernel.asm	/^f0102784:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102789	obj/kern/kernel.asm	/^f0102789:	e8 4e ec ff ff       	call   f01013dc <check_va2pa>$/;"	l
f010278e	obj/kern/kernel.asm	/^f010278e:	89 da                	mov    %ebx,%edx$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f0102796	obj/kern/kernel.asm	/^f0102796:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010279c	obj/kern/kernel.asm	/^f010279c:	39 d0                	cmp    %edx,%eax$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	74 24                	je     f01027c4 <mem_init+0xaae>$/;"	l
f01027a0	obj/kern/kernel.asm	/^f01027a0:	c7 44 24 0c c4 80 10 	movl   $0xf01080c4,0xc(%esp)$/;"	l
f01027a7	obj/kern/kernel.asm	/^f01027a7:	f0 $/;"	l
f01027a8	obj/kern/kernel.asm	/^f01027a8:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	f0 $/;"	l
f01027b0	obj/kern/kernel.asm	/^f01027b0:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
f01027b7	obj/kern/kernel.asm	/^f01027b7:	00 $/;"	l
f01027b8	obj/kern/kernel.asm	/^f01027b8:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	e8 7c d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f01027c9	obj/kern/kernel.asm	/^f01027c9:	74 24                	je     f01027ef <mem_init+0xad9>$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	c7 44 24 0c 24 89 10 	movl   $0xf0108924,0xc(%esp)$/;"	l
f01027d2	obj/kern/kernel.asm	/^f01027d2:	f0 $/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01027da	obj/kern/kernel.asm	/^f01027da:	f0 $/;"	l
f01027db	obj/kern/kernel.asm	/^f01027db:	c7 44 24 04 c2 03 00 	movl   $0x3c2,0x4(%esp)$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	00 $/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01027ea	obj/kern/kernel.asm	/^f01027ea:	e8 51 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	e8 de f0 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	85 c0                	test   %eax,%eax$/;"	l
f01027fd	obj/kern/kernel.asm	/^f01027fd:	74 24                	je     f0102823 <mem_init+0xb0d>$/;"	l
f01027ff	obj/kern/kernel.asm	/^f01027ff:	c7 44 24 0c b0 88 10 	movl   $0xf01088b0,0xc(%esp)$/;"	l
f0102806	obj/kern/kernel.asm	/^f0102806:	f0 $/;"	l
f0102807	obj/kern/kernel.asm	/^f0102807:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010280e	obj/kern/kernel.asm	/^f010280e:	f0 $/;"	l
f010280f	obj/kern/kernel.asm	/^f010280f:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f0102816	obj/kern/kernel.asm	/^f0102816:	00 $/;"	l
f0102817	obj/kern/kernel.asm	/^f0102817:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010281e	obj/kern/kernel.asm	/^f010281e:	e8 1d d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	8b 15 8c 7e 20 f0    	mov    0xf0207e8c,%edx$/;"	l
f0102829	obj/kern/kernel.asm	/^f0102829:	8b 02                	mov    (%edx),%eax$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	89 c1                	mov    %eax,%ecx$/;"	l
f0102832	obj/kern/kernel.asm	/^f0102832:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102835	obj/kern/kernel.asm	/^f0102835:	3b 0d 88 7e 20 f0    	cmp    0xf0207e88,%ecx$/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	72 20                	jb     f010285d <mem_init+0xb47>$/;"	l
f010283d	obj/kern/kernel.asm	/^f010283d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102841	obj/kern/kernel.asm	/^f0102841:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0102848	obj/kern/kernel.asm	/^f0102848:	f0 $/;"	l
f0102849	obj/kern/kernel.asm	/^f0102849:	c7 44 24 04 c9 03 00 	movl   $0x3c9,0x4(%esp)$/;"	l
f0102850	obj/kern/kernel.asm	/^f0102850:	00 $/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102858	obj/kern/kernel.asm	/^f0102858:	e8 e3 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010285d	obj/kern/kernel.asm	/^f010285d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010286c	obj/kern/kernel.asm	/^f010286c:	00 $/;"	l
f010286d	obj/kern/kernel.asm	/^f010286d:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102874	obj/kern/kernel.asm	/^f0102874:	00 $/;"	l
f0102875	obj/kern/kernel.asm	/^f0102875:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0102878	obj/kern/kernel.asm	/^f0102878:	e8 15 f1 ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0102880	obj/kern/kernel.asm	/^f0102880:	83 c2 04             	add    $0x4,%edx$/;"	l
f0102883	obj/kern/kernel.asm	/^f0102883:	39 d0                	cmp    %edx,%eax$/;"	l
f0102885	obj/kern/kernel.asm	/^f0102885:	74 24                	je     f01028ab <mem_init+0xb95>$/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	c7 44 24 0c f4 80 10 	movl   $0xf01080f4,0xc(%esp)$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	f0 $/;"	l
f010288f	obj/kern/kernel.asm	/^f010288f:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	f0 $/;"	l
f0102897	obj/kern/kernel.asm	/^f0102897:	c7 44 24 04 ca 03 00 	movl   $0x3ca,0x4(%esp)$/;"	l
f010289e	obj/kern/kernel.asm	/^f010289e:	00 $/;"	l
f010289f	obj/kern/kernel.asm	/^f010289f:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	e8 95 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028ab	obj/kern/kernel.asm	/^f01028ab:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	00 $/;"	l
f01028b3	obj/kern/kernel.asm	/^f01028b3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	00 $/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01028bf	obj/kern/kernel.asm	/^f01028bf:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01028c4	obj/kern/kernel.asm	/^f01028c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028c7	obj/kern/kernel.asm	/^f01028c7:	e8 dc f2 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f01028cc	obj/kern/kernel.asm	/^f01028cc:	85 c0                	test   %eax,%eax$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	74 24                	je     f01028f4 <mem_init+0xbde>$/;"	l
f01028d0	obj/kern/kernel.asm	/^f01028d0:	c7 44 24 0c 34 81 10 	movl   $0xf0108134,0xc(%esp)$/;"	l
f01028d7	obj/kern/kernel.asm	/^f01028d7:	f0 $/;"	l
f01028d8	obj/kern/kernel.asm	/^f01028d8:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01028df	obj/kern/kernel.asm	/^f01028df:	f0 $/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f01028e7	obj/kern/kernel.asm	/^f01028e7:	00 $/;"	l
f01028e8	obj/kern/kernel.asm	/^f01028e8:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01028ef	obj/kern/kernel.asm	/^f01028ef:	e8 4c d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028f4	obj/kern/kernel.asm	/^f01028f4:	8b 0d 8c 7e 20 f0    	mov    0xf0207e8c,%ecx$/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f01028fd	obj/kern/kernel.asm	/^f01028fd:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102902	obj/kern/kernel.asm	/^f0102902:	89 c8                	mov    %ecx,%eax$/;"	l
f0102904	obj/kern/kernel.asm	/^f0102904:	e8 d3 ea ff ff       	call   f01013dc <check_va2pa>$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	89 da                	mov    %ebx,%edx$/;"	l
f010290b	obj/kern/kernel.asm	/^f010290b:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f0102911	obj/kern/kernel.asm	/^f0102911:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102914	obj/kern/kernel.asm	/^f0102914:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102917	obj/kern/kernel.asm	/^f0102917:	39 d0                	cmp    %edx,%eax$/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	74 24                	je     f010293f <mem_init+0xc29>$/;"	l
f010291b	obj/kern/kernel.asm	/^f010291b:	c7 44 24 0c c4 80 10 	movl   $0xf01080c4,0xc(%esp)$/;"	l
f0102922	obj/kern/kernel.asm	/^f0102922:	f0 $/;"	l
f0102923	obj/kern/kernel.asm	/^f0102923:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010292a	obj/kern/kernel.asm	/^f010292a:	f0 $/;"	l
f010292b	obj/kern/kernel.asm	/^f010292b:	c7 44 24 04 ce 03 00 	movl   $0x3ce,0x4(%esp)$/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	00 $/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	e8 01 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010293f	obj/kern/kernel.asm	/^f010293f:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	74 24                	je     f010296a <mem_init+0xc54>$/;"	l
f0102946	obj/kern/kernel.asm	/^f0102946:	c7 44 24 0c 24 89 10 	movl   $0xf0108924,0xc(%esp)$/;"	l
f010294d	obj/kern/kernel.asm	/^f010294d:	f0 $/;"	l
f010294e	obj/kern/kernel.asm	/^f010294e:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	f0 $/;"	l
f0102956	obj/kern/kernel.asm	/^f0102956:	c7 44 24 04 cf 03 00 	movl   $0x3cf,0x4(%esp)$/;"	l
f010295d	obj/kern/kernel.asm	/^f010295d:	00 $/;"	l
f010295e	obj/kern/kernel.asm	/^f010295e:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102965	obj/kern/kernel.asm	/^f0102965:	e8 d6 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102971	obj/kern/kernel.asm	/^f0102971:	00 $/;"	l
f0102972	obj/kern/kernel.asm	/^f0102972:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102979	obj/kern/kernel.asm	/^f0102979:	00 $/;"	l
f010297a	obj/kern/kernel.asm	/^f010297a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010297d	obj/kern/kernel.asm	/^f010297d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102980	obj/kern/kernel.asm	/^f0102980:	e8 0d f0 ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0102985	obj/kern/kernel.asm	/^f0102985:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	75 24                	jne    f01029ae <mem_init+0xc98>$/;"	l
f010298a	obj/kern/kernel.asm	/^f010298a:	c7 44 24 0c 74 81 10 	movl   $0xf0108174,0xc(%esp)$/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	f0 $/;"	l
f0102992	obj/kern/kernel.asm	/^f0102992:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	f0 $/;"	l
f010299a	obj/kern/kernel.asm	/^f010299a:	c7 44 24 04 d1 03 00 	movl   $0x3d1,0x4(%esp)$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	00 $/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01029a9	obj/kern/kernel.asm	/^f01029a9:	e8 92 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	75 24                	jne    f01029dc <mem_init+0xcc6>$/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	c7 44 24 0c 35 89 10 	movl   $0xf0108935,0xc(%esp)$/;"	l
f01029bf	obj/kern/kernel.asm	/^f01029bf:	f0 $/;"	l
f01029c0	obj/kern/kernel.asm	/^f01029c0:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01029c7	obj/kern/kernel.asm	/^f01029c7:	f0 $/;"	l
f01029c8	obj/kern/kernel.asm	/^f01029c8:	c7 44 24 04 d2 03 00 	movl   $0x3d2,0x4(%esp)$/;"	l
f01029cf	obj/kern/kernel.asm	/^f01029cf:	00 $/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01029d7	obj/kern/kernel.asm	/^f01029d7:	e8 64 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029dc	obj/kern/kernel.asm	/^f01029dc:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01029e3	obj/kern/kernel.asm	/^f01029e3:	00 $/;"	l
f01029e4	obj/kern/kernel.asm	/^f01029e4:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01029eb	obj/kern/kernel.asm	/^f01029eb:	00 $/;"	l
f01029ec	obj/kern/kernel.asm	/^f01029ec:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029f3	obj/kern/kernel.asm	/^f01029f3:	e8 b0 f1 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	85 c0                	test   %eax,%eax$/;"	l
f01029fa	obj/kern/kernel.asm	/^f01029fa:	74 24                	je     f0102a20 <mem_init+0xd0a>$/;"	l
f01029fc	obj/kern/kernel.asm	/^f01029fc:	c7 44 24 0c 88 80 10 	movl   $0xf0108088,0xc(%esp)$/;"	l
f0102a03	obj/kern/kernel.asm	/^f0102a03:	f0 $/;"	l
f0102a04	obj/kern/kernel.asm	/^f0102a04:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102a0b	obj/kern/kernel.asm	/^f0102a0b:	f0 $/;"	l
f0102a0c	obj/kern/kernel.asm	/^f0102a0c:	c7 44 24 04 d5 03 00 	movl   $0x3d5,0x4(%esp)$/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	00 $/;"	l
f0102a14	obj/kern/kernel.asm	/^f0102a14:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102a1b	obj/kern/kernel.asm	/^f0102a1b:	e8 20 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102a27	obj/kern/kernel.asm	/^f0102a27:	00 $/;"	l
f0102a28	obj/kern/kernel.asm	/^f0102a28:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102a2f	obj/kern/kernel.asm	/^f0102a2f:	00 $/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a38	obj/kern/kernel.asm	/^f0102a38:	e8 55 ef ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0102a3d	obj/kern/kernel.asm	/^f0102a3d:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0102a40	obj/kern/kernel.asm	/^f0102a40:	75 24                	jne    f0102a66 <mem_init+0xd50>$/;"	l
f0102a42	obj/kern/kernel.asm	/^f0102a42:	c7 44 24 0c a8 81 10 	movl   $0xf01081a8,0xc(%esp)$/;"	l
f0102a49	obj/kern/kernel.asm	/^f0102a49:	f0 $/;"	l
f0102a4a	obj/kern/kernel.asm	/^f0102a4a:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102a51	obj/kern/kernel.asm	/^f0102a51:	f0 $/;"	l
f0102a52	obj/kern/kernel.asm	/^f0102a52:	c7 44 24 04 d6 03 00 	movl   $0x3d6,0x4(%esp)$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	00 $/;"	l
f0102a5a	obj/kern/kernel.asm	/^f0102a5a:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102a61	obj/kern/kernel.asm	/^f0102a61:	e8 da d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a66	obj/kern/kernel.asm	/^f0102a66:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102a6d	obj/kern/kernel.asm	/^f0102a6d:	00 $/;"	l
f0102a6e	obj/kern/kernel.asm	/^f0102a6e:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	00 $/;"	l
f0102a76	obj/kern/kernel.asm	/^f0102a76:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a7e	obj/kern/kernel.asm	/^f0102a7e:	e8 0f ef ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0102a83	obj/kern/kernel.asm	/^f0102a83:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102a86	obj/kern/kernel.asm	/^f0102a86:	74 24                	je     f0102aac <mem_init+0xd96>$/;"	l
f0102a88	obj/kern/kernel.asm	/^f0102a88:	c7 44 24 0c dc 81 10 	movl   $0xf01081dc,0xc(%esp)$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	f0 $/;"	l
f0102a90	obj/kern/kernel.asm	/^f0102a90:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	f0 $/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f0102a9f	obj/kern/kernel.asm	/^f0102a9f:	00 $/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	e8 94 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102aac	obj/kern/kernel.asm	/^f0102aac:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102ab3	obj/kern/kernel.asm	/^f0102ab3:	00 $/;"	l
f0102ab4	obj/kern/kernel.asm	/^f0102ab4:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0102abb	obj/kern/kernel.asm	/^f0102abb:	00 $/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102ac0	obj/kern/kernel.asm	/^f0102ac0:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	e8 db f0 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f0102acd	obj/kern/kernel.asm	/^f0102acd:	85 c0                	test   %eax,%eax$/;"	l
f0102acf	obj/kern/kernel.asm	/^f0102acf:	78 24                	js     f0102af5 <mem_init+0xddf>$/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	c7 44 24 0c 14 82 10 	movl   $0xf0108214,0xc(%esp)$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	f0 $/;"	l
f0102ad9	obj/kern/kernel.asm	/^f0102ad9:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102ae0	obj/kern/kernel.asm	/^f0102ae0:	f0 $/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f0102ae8	obj/kern/kernel.asm	/^f0102ae8:	00 $/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102af0	obj/kern/kernel.asm	/^f0102af0:	e8 4b d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102af5	obj/kern/kernel.asm	/^f0102af5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	00 $/;"	l
f0102afd	obj/kern/kernel.asm	/^f0102afd:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102b04	obj/kern/kernel.asm	/^f0102b04:	00 $/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102b09	obj/kern/kernel.asm	/^f0102b09:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102b0e	obj/kern/kernel.asm	/^f0102b0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b11	obj/kern/kernel.asm	/^f0102b11:	e8 92 f0 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f0102b16	obj/kern/kernel.asm	/^f0102b16:	85 c0                	test   %eax,%eax$/;"	l
f0102b18	obj/kern/kernel.asm	/^f0102b18:	74 24                	je     f0102b3e <mem_init+0xe28>$/;"	l
f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	c7 44 24 0c 4c 82 10 	movl   $0xf010824c,0xc(%esp)$/;"	l
f0102b21	obj/kern/kernel.asm	/^f0102b21:	f0 $/;"	l
f0102b22	obj/kern/kernel.asm	/^f0102b22:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102b29	obj/kern/kernel.asm	/^f0102b29:	f0 $/;"	l
f0102b2a	obj/kern/kernel.asm	/^f0102b2a:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f0102b31	obj/kern/kernel.asm	/^f0102b31:	00 $/;"	l
f0102b32	obj/kern/kernel.asm	/^f0102b32:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102b39	obj/kern/kernel.asm	/^f0102b39:	e8 02 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b3e	obj/kern/kernel.asm	/^f0102b3e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102b45	obj/kern/kernel.asm	/^f0102b45:	00 $/;"	l
f0102b46	obj/kern/kernel.asm	/^f0102b46:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102b4d	obj/kern/kernel.asm	/^f0102b4d:	00 $/;"	l
f0102b4e	obj/kern/kernel.asm	/^f0102b4e:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102b53	obj/kern/kernel.asm	/^f0102b53:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b56	obj/kern/kernel.asm	/^f0102b56:	e8 37 ee ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0102b5b	obj/kern/kernel.asm	/^f0102b5b:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102b5e	obj/kern/kernel.asm	/^f0102b5e:	74 24                	je     f0102b84 <mem_init+0xe6e>$/;"	l
f0102b60	obj/kern/kernel.asm	/^f0102b60:	c7 44 24 0c dc 81 10 	movl   $0xf01081dc,0xc(%esp)$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	f0 $/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102b6f	obj/kern/kernel.asm	/^f0102b6f:	f0 $/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	c7 44 24 04 df 03 00 	movl   $0x3df,0x4(%esp)$/;"	l
f0102b77	obj/kern/kernel.asm	/^f0102b77:	00 $/;"	l
f0102b78	obj/kern/kernel.asm	/^f0102b78:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102b7f	obj/kern/kernel.asm	/^f0102b7f:	e8 bc d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b84	obj/kern/kernel.asm	/^f0102b84:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102b89	obj/kern/kernel.asm	/^f0102b89:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	e8 46 e8 ff ff       	call   f01013dc <check_va2pa>$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	89 f8                	mov    %edi,%eax$/;"	l
f0102b9b	obj/kern/kernel.asm	/^f0102b9b:	2b 05 90 7e 20 f0    	sub    0xf0207e90,%eax$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102ba4	obj/kern/kernel.asm	/^f0102ba4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102ba7	obj/kern/kernel.asm	/^f0102ba7:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0102baa	obj/kern/kernel.asm	/^f0102baa:	74 24                	je     f0102bd0 <mem_init+0xeba>$/;"	l
f0102bac	obj/kern/kernel.asm	/^f0102bac:	c7 44 24 0c 88 82 10 	movl   $0xf0108288,0xc(%esp)$/;"	l
f0102bb3	obj/kern/kernel.asm	/^f0102bb3:	f0 $/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102bbb	obj/kern/kernel.asm	/^f0102bbb:	f0 $/;"	l
f0102bbc	obj/kern/kernel.asm	/^f0102bbc:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f0102bc3	obj/kern/kernel.asm	/^f0102bc3:	00 $/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	e8 70 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bd0	obj/kern/kernel.asm	/^f0102bd0:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102bd5	obj/kern/kernel.asm	/^f0102bd5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102bd8	obj/kern/kernel.asm	/^f0102bd8:	e8 ff e7 ff ff       	call   f01013dc <check_va2pa>$/;"	l
f0102bdd	obj/kern/kernel.asm	/^f0102bdd:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0102be0	obj/kern/kernel.asm	/^f0102be0:	74 24                	je     f0102c06 <mem_init+0xef0>$/;"	l
f0102be2	obj/kern/kernel.asm	/^f0102be2:	c7 44 24 0c b4 82 10 	movl   $0xf01082b4,0xc(%esp)$/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	f0 $/;"	l
f0102bea	obj/kern/kernel.asm	/^f0102bea:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	f0 $/;"	l
f0102bf2	obj/kern/kernel.asm	/^f0102bf2:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f0102bf9	obj/kern/kernel.asm	/^f0102bf9:	00 $/;"	l
f0102bfa	obj/kern/kernel.asm	/^f0102bfa:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102c01	obj/kern/kernel.asm	/^f0102c01:	e8 3a d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	74 24                	je     f0102c31 <mem_init+0xf1b>$/;"	l
f0102c0d	obj/kern/kernel.asm	/^f0102c0d:	c7 44 24 0c 4b 89 10 	movl   $0xf010894b,0xc(%esp)$/;"	l
f0102c14	obj/kern/kernel.asm	/^f0102c14:	f0 $/;"	l
f0102c15	obj/kern/kernel.asm	/^f0102c15:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102c1c	obj/kern/kernel.asm	/^f0102c1c:	f0 $/;"	l
f0102c1d	obj/kern/kernel.asm	/^f0102c1d:	c7 44 24 04 e6 03 00 	movl   $0x3e6,0x4(%esp)$/;"	l
f0102c24	obj/kern/kernel.asm	/^f0102c24:	00 $/;"	l
f0102c25	obj/kern/kernel.asm	/^f0102c25:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102c2c	obj/kern/kernel.asm	/^f0102c2c:	e8 0f d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c31	obj/kern/kernel.asm	/^f0102c31:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102c36	obj/kern/kernel.asm	/^f0102c36:	74 24                	je     f0102c5c <mem_init+0xf46>$/;"	l
f0102c38	obj/kern/kernel.asm	/^f0102c38:	c7 44 24 0c 5c 89 10 	movl   $0xf010895c,0xc(%esp)$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	f0 $/;"	l
f0102c40	obj/kern/kernel.asm	/^f0102c40:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102c47	obj/kern/kernel.asm	/^f0102c47:	f0 $/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	c7 44 24 04 e7 03 00 	movl   $0x3e7,0x4(%esp)$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	00 $/;"	l
f0102c50	obj/kern/kernel.asm	/^f0102c50:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102c57	obj/kern/kernel.asm	/^f0102c57:	e8 e4 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	e8 71 ec ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0102c68	obj/kern/kernel.asm	/^f0102c68:	85 c0                	test   %eax,%eax$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	74 04                	je     f0102c70 <mem_init+0xf5a>$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102c6e	obj/kern/kernel.asm	/^f0102c6e:	74 24                	je     f0102c94 <mem_init+0xf7e>$/;"	l
f0102c70	obj/kern/kernel.asm	/^f0102c70:	c7 44 24 0c e4 82 10 	movl   $0xf01082e4,0xc(%esp)$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	f0 $/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	f0 $/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f0102c87	obj/kern/kernel.asm	/^f0102c87:	00 $/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102c8f	obj/kern/kernel.asm	/^f0102c8f:	e8 ac d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102c9b	obj/kern/kernel.asm	/^f0102c9b:	00 $/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102ca1	obj/kern/kernel.asm	/^f0102ca1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ca4	obj/kern/kernel.asm	/^f0102ca4:	e8 c1 ee ff ff       	call   f0101b6a <page_remove>$/;"	l
f0102ca9	obj/kern/kernel.asm	/^f0102ca9:	8b 15 8c 7e 20 f0    	mov    0xf0207e8c,%edx$/;"	l
f0102caf	obj/kern/kernel.asm	/^f0102caf:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0102cb2	obj/kern/kernel.asm	/^f0102cb2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102cb7	obj/kern/kernel.asm	/^f0102cb7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	e8 1d e7 ff ff       	call   f01013dc <check_va2pa>$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102cc2	obj/kern/kernel.asm	/^f0102cc2:	74 24                	je     f0102ce8 <mem_init+0xfd2>$/;"	l
f0102cc4	obj/kern/kernel.asm	/^f0102cc4:	c7 44 24 0c 08 83 10 	movl   $0xf0108308,0xc(%esp)$/;"	l
f0102ccb	obj/kern/kernel.asm	/^f0102ccb:	f0 $/;"	l
f0102ccc	obj/kern/kernel.asm	/^f0102ccc:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	f0 $/;"	l
f0102cd4	obj/kern/kernel.asm	/^f0102cd4:	c7 44 24 04 ef 03 00 	movl   $0x3ef,0x4(%esp)$/;"	l
f0102cdb	obj/kern/kernel.asm	/^f0102cdb:	00 $/;"	l
f0102cdc	obj/kern/kernel.asm	/^f0102cdc:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102ce3	obj/kern/kernel.asm	/^f0102ce3:	e8 58 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ce8	obj/kern/kernel.asm	/^f0102ce8:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102ced	obj/kern/kernel.asm	/^f0102ced:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cf0	obj/kern/kernel.asm	/^f0102cf0:	e8 e7 e6 ff ff       	call   f01013dc <check_va2pa>$/;"	l
f0102cf5	obj/kern/kernel.asm	/^f0102cf5:	89 fa                	mov    %edi,%edx$/;"	l
f0102cf7	obj/kern/kernel.asm	/^f0102cf7:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f0102cfd	obj/kern/kernel.asm	/^f0102cfd:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	39 d0                	cmp    %edx,%eax$/;"	l
f0102d05	obj/kern/kernel.asm	/^f0102d05:	74 24                	je     f0102d2b <mem_init+0x1015>$/;"	l
f0102d07	obj/kern/kernel.asm	/^f0102d07:	c7 44 24 0c b4 82 10 	movl   $0xf01082b4,0xc(%esp)$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	f0 $/;"	l
f0102d0f	obj/kern/kernel.asm	/^f0102d0f:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	f0 $/;"	l
f0102d17	obj/kern/kernel.asm	/^f0102d17:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f0102d1e	obj/kern/kernel.asm	/^f0102d1e:	00 $/;"	l
f0102d1f	obj/kern/kernel.asm	/^f0102d1f:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102d26	obj/kern/kernel.asm	/^f0102d26:	e8 15 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d2b	obj/kern/kernel.asm	/^f0102d2b:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	74 24                	je     f0102d56 <mem_init+0x1040>$/;"	l
f0102d32	obj/kern/kernel.asm	/^f0102d32:	c7 44 24 0c 02 89 10 	movl   $0xf0108902,0xc(%esp)$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	f0 $/;"	l
f0102d3a	obj/kern/kernel.asm	/^f0102d3a:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	f0 $/;"	l
f0102d42	obj/kern/kernel.asm	/^f0102d42:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	00 $/;"	l
f0102d4a	obj/kern/kernel.asm	/^f0102d4a:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102d51	obj/kern/kernel.asm	/^f0102d51:	e8 ea d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102d5b	obj/kern/kernel.asm	/^f0102d5b:	74 24                	je     f0102d81 <mem_init+0x106b>$/;"	l
f0102d5d	obj/kern/kernel.asm	/^f0102d5d:	c7 44 24 0c 5c 89 10 	movl   $0xf010895c,0xc(%esp)$/;"	l
f0102d64	obj/kern/kernel.asm	/^f0102d64:	f0 $/;"	l
f0102d65	obj/kern/kernel.asm	/^f0102d65:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	f0 $/;"	l
f0102d6d	obj/kern/kernel.asm	/^f0102d6d:	c7 44 24 04 f2 03 00 	movl   $0x3f2,0x4(%esp)$/;"	l
f0102d74	obj/kern/kernel.asm	/^f0102d74:	00 $/;"	l
f0102d75	obj/kern/kernel.asm	/^f0102d75:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102d7c	obj/kern/kernel.asm	/^f0102d7c:	e8 bf d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d81	obj/kern/kernel.asm	/^f0102d81:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102d88	obj/kern/kernel.asm	/^f0102d88:	00 $/;"	l
f0102d89	obj/kern/kernel.asm	/^f0102d89:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102d8c	obj/kern/kernel.asm	/^f0102d8c:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	e8 d6 ed ff ff       	call   f0101b6a <page_remove>$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102d99	obj/kern/kernel.asm	/^f0102d99:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102da1	obj/kern/kernel.asm	/^f0102da1:	e8 36 e6 ff ff       	call   f01013dc <check_va2pa>$/;"	l
f0102da6	obj/kern/kernel.asm	/^f0102da6:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102da9	obj/kern/kernel.asm	/^f0102da9:	74 24                	je     f0102dcf <mem_init+0x10b9>$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	c7 44 24 0c 08 83 10 	movl   $0xf0108308,0xc(%esp)$/;"	l
f0102db2	obj/kern/kernel.asm	/^f0102db2:	f0 $/;"	l
f0102db3	obj/kern/kernel.asm	/^f0102db3:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	f0 $/;"	l
f0102dbb	obj/kern/kernel.asm	/^f0102dbb:	c7 44 24 04 f6 03 00 	movl   $0x3f6,0x4(%esp)$/;"	l
f0102dc2	obj/kern/kernel.asm	/^f0102dc2:	00 $/;"	l
f0102dc3	obj/kern/kernel.asm	/^f0102dc3:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	e8 71 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102dd4	obj/kern/kernel.asm	/^f0102dd4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	e8 00 e6 ff ff       	call   f01013dc <check_va2pa>$/;"	l
f0102ddc	obj/kern/kernel.asm	/^f0102ddc:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	74 24                	je     f0102e05 <mem_init+0x10ef>$/;"	l
f0102de1	obj/kern/kernel.asm	/^f0102de1:	c7 44 24 0c 2c 83 10 	movl   $0xf010832c,0xc(%esp)$/;"	l
f0102de8	obj/kern/kernel.asm	/^f0102de8:	f0 $/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102df0	obj/kern/kernel.asm	/^f0102df0:	f0 $/;"	l
f0102df1	obj/kern/kernel.asm	/^f0102df1:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	00 $/;"	l
f0102df9	obj/kern/kernel.asm	/^f0102df9:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102e00	obj/kern/kernel.asm	/^f0102e00:	e8 3b d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102e0a	obj/kern/kernel.asm	/^f0102e0a:	74 24                	je     f0102e30 <mem_init+0x111a>$/;"	l
f0102e0c	obj/kern/kernel.asm	/^f0102e0c:	c7 44 24 0c 6d 89 10 	movl   $0xf010896d,0xc(%esp)$/;"	l
f0102e13	obj/kern/kernel.asm	/^f0102e13:	f0 $/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	f0 $/;"	l
f0102e1c	obj/kern/kernel.asm	/^f0102e1c:	c7 44 24 04 f8 03 00 	movl   $0x3f8,0x4(%esp)$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	00 $/;"	l
f0102e24	obj/kern/kernel.asm	/^f0102e24:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	e8 10 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	74 24                	je     f0102e5b <mem_init+0x1145>$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	c7 44 24 0c 5c 89 10 	movl   $0xf010895c,0xc(%esp)$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	f0 $/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	f0 $/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	c7 44 24 04 f9 03 00 	movl   $0x3f9,0x4(%esp)$/;"	l
f0102e4e	obj/kern/kernel.asm	/^f0102e4e:	00 $/;"	l
f0102e4f	obj/kern/kernel.asm	/^f0102e4f:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102e56	obj/kern/kernel.asm	/^f0102e56:	e8 e5 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e5b	obj/kern/kernel.asm	/^f0102e5b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e62	obj/kern/kernel.asm	/^f0102e62:	e8 72 ea ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0102e67	obj/kern/kernel.asm	/^f0102e67:	85 c0                	test   %eax,%eax$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	74 04                	je     f0102e6f <mem_init+0x1159>$/;"	l
f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	39 c7                	cmp    %eax,%edi$/;"	l
f0102e6d	obj/kern/kernel.asm	/^f0102e6d:	74 24                	je     f0102e93 <mem_init+0x117d>$/;"	l
f0102e6f	obj/kern/kernel.asm	/^f0102e6f:	c7 44 24 0c 54 83 10 	movl   $0xf0108354,0xc(%esp)$/;"	l
f0102e76	obj/kern/kernel.asm	/^f0102e76:	f0 $/;"	l
f0102e77	obj/kern/kernel.asm	/^f0102e77:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102e7e	obj/kern/kernel.asm	/^f0102e7e:	f0 $/;"	l
f0102e7f	obj/kern/kernel.asm	/^f0102e7f:	c7 44 24 04 fc 03 00 	movl   $0x3fc,0x4(%esp)$/;"	l
f0102e86	obj/kern/kernel.asm	/^f0102e86:	00 $/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	e8 ad d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e93	obj/kern/kernel.asm	/^f0102e93:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	e8 3a ea ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	85 c0                	test   %eax,%eax$/;"	l
f0102ea1	obj/kern/kernel.asm	/^f0102ea1:	74 24                	je     f0102ec7 <mem_init+0x11b1>$/;"	l
f0102ea3	obj/kern/kernel.asm	/^f0102ea3:	c7 44 24 0c b0 88 10 	movl   $0xf01088b0,0xc(%esp)$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	f0 $/;"	l
f0102eab	obj/kern/kernel.asm	/^f0102eab:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102eb2	obj/kern/kernel.asm	/^f0102eb2:	f0 $/;"	l
f0102eb3	obj/kern/kernel.asm	/^f0102eb3:	c7 44 24 04 ff 03 00 	movl   $0x3ff,0x4(%esp)$/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	00 $/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	e8 79 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ec7	obj/kern/kernel.asm	/^f0102ec7:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102ecc	obj/kern/kernel.asm	/^f0102ecc:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102ece	obj/kern/kernel.asm	/^f0102ece:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	89 f2                	mov    %esi,%edx$/;"	l
f0102ed6	obj/kern/kernel.asm	/^f0102ed6:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102edf	obj/kern/kernel.asm	/^f0102edf:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102ee2	obj/kern/kernel.asm	/^f0102ee2:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102ee4	obj/kern/kernel.asm	/^f0102ee4:	74 24                	je     f0102f0a <mem_init+0x11f4>$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	c7 44 24 0c 30 80 10 	movl   $0xf0108030,0xc(%esp)$/;"	l
f0102eed	obj/kern/kernel.asm	/^f0102eed:	f0 $/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102ef5	obj/kern/kernel.asm	/^f0102ef5:	f0 $/;"	l
f0102ef6	obj/kern/kernel.asm	/^f0102ef6:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	00 $/;"	l
f0102efe	obj/kern/kernel.asm	/^f0102efe:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102f05	obj/kern/kernel.asm	/^f0102f05:	e8 36 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f0a	obj/kern/kernel.asm	/^f0102f0a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	74 24                	je     f0102f3b <mem_init+0x1225>$/;"	l
f0102f17	obj/kern/kernel.asm	/^f0102f17:	c7 44 24 0c 13 89 10 	movl   $0xf0108913,0xc(%esp)$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	f0 $/;"	l
f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102f26	obj/kern/kernel.asm	/^f0102f26:	f0 $/;"	l
f0102f27	obj/kern/kernel.asm	/^f0102f27:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)$/;"	l
f0102f2e	obj/kern/kernel.asm	/^f0102f2e:	00 $/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102f36	obj/kern/kernel.asm	/^f0102f36:	e8 05 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102f41	obj/kern/kernel.asm	/^f0102f41:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	e8 11 ea ff ff       	call   f010195a <page_free>$/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	00 $/;"	l
f0102f51	obj/kern/kernel.asm	/^f0102f51:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	00 $/;"	l
f0102f59	obj/kern/kernel.asm	/^f0102f59:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0102f5e	obj/kern/kernel.asm	/^f0102f5e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102f61	obj/kern/kernel.asm	/^f0102f61:	e8 2c ea ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102f69	obj/kern/kernel.asm	/^f0102f69:	8b 0d 8c 7e 20 f0    	mov    0xf0207e8c,%ecx$/;"	l
f0102f6f	obj/kern/kernel.asm	/^f0102f6f:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0102f7b	obj/kern/kernel.asm	/^f0102f7b:	8b 15 88 7e 20 f0    	mov    0xf0207e88,%edx$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f0102f84	obj/kern/kernel.asm	/^f0102f84:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102f87	obj/kern/kernel.asm	/^f0102f87:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102f8a	obj/kern/kernel.asm	/^f0102f8a:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0102f90	obj/kern/kernel.asm	/^f0102f90:	39 55 d0             	cmp    %edx,-0x30(%ebp)$/;"	l
f0102f93	obj/kern/kernel.asm	/^f0102f93:	72 23                	jb     f0102fb8 <mem_init+0x12a2>$/;"	l
f0102f95	obj/kern/kernel.asm	/^f0102f95:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0102fa3	obj/kern/kernel.asm	/^f0102fa3:	f0 $/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	c7 44 24 04 0b 04 00 	movl   $0x40b,0x4(%esp)$/;"	l
f0102fab	obj/kern/kernel.asm	/^f0102fab:	00 $/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102fb3	obj/kern/kernel.asm	/^f0102fb3:	e8 88 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fb8	obj/kern/kernel.asm	/^f0102fb8:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102fbb	obj/kern/kernel.asm	/^f0102fbb:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	39 d0                	cmp    %edx,%eax$/;"	l
f0102fc3	obj/kern/kernel.asm	/^f0102fc3:	74 24                	je     f0102fe9 <mem_init+0x12d3>$/;"	l
f0102fc5	obj/kern/kernel.asm	/^f0102fc5:	c7 44 24 0c 7e 89 10 	movl   $0xf010897e,0xc(%esp)$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	f0 $/;"	l
f0102fcd	obj/kern/kernel.asm	/^f0102fcd:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0102fd4	obj/kern/kernel.asm	/^f0102fd4:	f0 $/;"	l
f0102fd5	obj/kern/kernel.asm	/^f0102fd5:	c7 44 24 04 0c 04 00 	movl   $0x40c,0x4(%esp)$/;"	l
f0102fdc	obj/kern/kernel.asm	/^f0102fdc:	00 $/;"	l
f0102fdd	obj/kern/kernel.asm	/^f0102fdd:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0102fe4	obj/kern/kernel.asm	/^f0102fe4:	e8 57 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f0102ff0	obj/kern/kernel.asm	/^f0102ff0:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102ff6	obj/kern/kernel.asm	/^f0102ff6:	89 f0                	mov    %esi,%eax$/;"	l
f0102ff8	obj/kern/kernel.asm	/^f0102ff8:	2b 05 90 7e 20 f0    	sub    0xf0207e90,%eax$/;"	l
f0102ffe	obj/kern/kernel.asm	/^f0102ffe:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103004	obj/kern/kernel.asm	/^f0103004:	89 c1                	mov    %eax,%ecx$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103009	obj/kern/kernel.asm	/^f0103009:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	77 20                	ja     f010302e <mem_init+0x1318>$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103012	obj/kern/kernel.asm	/^f0103012:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0103019	obj/kern/kernel.asm	/^f0103019:	f0 $/;"	l
f010301a	obj/kern/kernel.asm	/^f010301a:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0103021	obj/kern/kernel.asm	/^f0103021:	00 $/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f0103029	obj/kern/kernel.asm	/^f0103029:	e8 12 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f010302e	obj/kern/kernel.asm	/^f010302e:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103035	obj/kern/kernel.asm	/^f0103035:	00 $/;"	l
f0103036	obj/kern/kernel.asm	/^f0103036:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f010303d	obj/kern/kernel.asm	/^f010303d:	00 $/;"	l
f010303e	obj/kern/kernel.asm	/^f010303e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103046	obj/kern/kernel.asm	/^f0103046:	e8 76 36 00 00       	call   f01066c1 <memset>$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010304e	obj/kern/kernel.asm	/^f010304e:	e8 07 e9 ff ff       	call   f010195a <page_free>$/;"	l
f0103053	obj/kern/kernel.asm	/^f0103053:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010305a	obj/kern/kernel.asm	/^f010305a:	00 $/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103062	obj/kern/kernel.asm	/^f0103062:	00 $/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0103068	obj/kern/kernel.asm	/^f0103068:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010306b	obj/kern/kernel.asm	/^f010306b:	e8 22 e9 ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	89 f2                	mov    %esi,%edx$/;"	l
f0103072	obj/kern/kernel.asm	/^f0103072:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f0103078	obj/kern/kernel.asm	/^f0103078:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010307b	obj/kern/kernel.asm	/^f010307b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010307e	obj/kern/kernel.asm	/^f010307e:	89 d0                	mov    %edx,%eax$/;"	l
f0103080	obj/kern/kernel.asm	/^f0103080:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103083	obj/kern/kernel.asm	/^f0103083:	3b 05 88 7e 20 f0    	cmp    0xf0207e88,%eax$/;"	l
f0103089	obj/kern/kernel.asm	/^f0103089:	72 20                	jb     f01030ab <mem_init+0x1395>$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010308f	obj/kern/kernel.asm	/^f010308f:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0103096	obj/kern/kernel.asm	/^f0103096:	f0 $/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	00 $/;"	l
f010309f	obj/kern/kernel.asm	/^f010309f:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	e8 95 cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030ab	obj/kern/kernel.asm	/^f01030ab:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f01030b1	obj/kern/kernel.asm	/^f01030b1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01030b4	obj/kern/kernel.asm	/^f01030b4:	f6 82 00 00 00 f0 01 	testb  $0x1,-0x10000000(%edx)$/;"	l
f01030bb	obj/kern/kernel.asm	/^f01030bb:	75 11                	jne    f01030ce <mem_init+0x13b8>$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	8d 82 04 00 00 f0    	lea    -0xffffffc(%edx),%eax$/;"	l
f01030c3	obj/kern/kernel.asm	/^f01030c3:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f01030c9	obj/kern/kernel.asm	/^f01030c9:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f01030cc	obj/kern/kernel.asm	/^f01030cc:	74 24                	je     f01030f2 <mem_init+0x13dc>$/;"	l
f01030ce	obj/kern/kernel.asm	/^f01030ce:	c7 44 24 0c 96 89 10 	movl   $0xf0108996,0xc(%esp)$/;"	l
f01030d5	obj/kern/kernel.asm	/^f01030d5:	f0 $/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01030dd	obj/kern/kernel.asm	/^f01030dd:	f0 $/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	c7 44 24 04 16 04 00 	movl   $0x416,0x4(%esp)$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	00 $/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01030ed	obj/kern/kernel.asm	/^f01030ed:	e8 4e cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	83 c0 04             	add    $0x4,%eax$/;"	l
f01030f5	obj/kern/kernel.asm	/^f01030f5:	39 d0                	cmp    %edx,%eax$/;"	l
f01030f7	obj/kern/kernel.asm	/^f01030f7:	75 d0                	jne    f01030c9 <mem_init+0x13b3>$/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01030fe	obj/kern/kernel.asm	/^f01030fe:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103104	obj/kern/kernel.asm	/^f0103104:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f010310a	obj/kern/kernel.asm	/^f010310a:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f010310d	obj/kern/kernel.asm	/^f010310d:	89 0d 40 72 20 f0    	mov    %ecx,0xf0207240$/;"	l
f0103113	obj/kern/kernel.asm	/^f0103113:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103116	obj/kern/kernel.asm	/^f0103116:	e8 3f e8 ff ff       	call   f010195a <page_free>$/;"	l
f010311b	obj/kern/kernel.asm	/^f010311b:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010311e	obj/kern/kernel.asm	/^f010311e:	e8 37 e8 ff ff       	call   f010195a <page_free>$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103126	obj/kern/kernel.asm	/^f0103126:	e8 2f e8 ff ff       	call   f010195a <page_free>$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	00 $/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010313a	obj/kern/kernel.asm	/^f010313a:	e8 60 eb ff ff       	call   f0101c9f <mmio_map_region>$/;"	l
f010313f	obj/kern/kernel.asm	/^f010313f:	89 c3                	mov    %eax,%ebx$/;"	l
f0103141	obj/kern/kernel.asm	/^f0103141:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103148	obj/kern/kernel.asm	/^f0103148:	00 $/;"	l
f0103149	obj/kern/kernel.asm	/^f0103149:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	e8 4a eb ff ff       	call   f0101c9f <mmio_map_region>$/;"	l
f0103155	obj/kern/kernel.asm	/^f0103155:	89 c6                	mov    %eax,%esi$/;"	l
f0103157	obj/kern/kernel.asm	/^f0103157:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f010315d	obj/kern/kernel.asm	/^f010315d:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103163	obj/kern/kernel.asm	/^f0103163:	76 07                	jbe    f010316c <mem_init+0x1456>$/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f010316a	obj/kern/kernel.asm	/^f010316a:	76 24                	jbe    f0103190 <mem_init+0x147a>$/;"	l
f010316c	obj/kern/kernel.asm	/^f010316c:	c7 44 24 0c 78 83 10 	movl   $0xf0108378,0xc(%esp)$/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	f0 $/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010317b	obj/kern/kernel.asm	/^f010317b:	f0 $/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
f0103183	obj/kern/kernel.asm	/^f0103183:	00 $/;"	l
f0103184	obj/kern/kernel.asm	/^f0103184:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	e8 b0 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103190	obj/kern/kernel.asm	/^f0103190:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	76 0e                	jbe    f01031a6 <mem_init+0x1490>$/;"	l
f0103198	obj/kern/kernel.asm	/^f0103198:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f010319e	obj/kern/kernel.asm	/^f010319e:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f01031a4	obj/kern/kernel.asm	/^f01031a4:	76 24                	jbe    f01031ca <mem_init+0x14b4>$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	c7 44 24 0c a0 83 10 	movl   $0xf01083a0,0xc(%esp)$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	f0 $/;"	l
f01031ae	obj/kern/kernel.asm	/^f01031ae:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	f0 $/;"	l
f01031b6	obj/kern/kernel.asm	/^f01031b6:	c7 44 24 04 27 04 00 	movl   $0x427,0x4(%esp)$/;"	l
f01031bd	obj/kern/kernel.asm	/^f01031bd:	00 $/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01031c5	obj/kern/kernel.asm	/^f01031c5:	e8 76 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031ca	obj/kern/kernel.asm	/^f01031ca:	89 da                	mov    %ebx,%edx$/;"	l
f01031cc	obj/kern/kernel.asm	/^f01031cc:	09 f2                	or     %esi,%edx$/;"	l
f01031ce	obj/kern/kernel.asm	/^f01031ce:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f01031d4	obj/kern/kernel.asm	/^f01031d4:	74 24                	je     f01031fa <mem_init+0x14e4>$/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	c7 44 24 0c c8 83 10 	movl   $0xf01083c8,0xc(%esp)$/;"	l
f01031dd	obj/kern/kernel.asm	/^f01031dd:	f0 $/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01031e5	obj/kern/kernel.asm	/^f01031e5:	f0 $/;"	l
f01031e6	obj/kern/kernel.asm	/^f01031e6:	c7 44 24 04 29 04 00 	movl   $0x429,0x4(%esp)$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	00 $/;"	l
f01031ee	obj/kern/kernel.asm	/^f01031ee:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	e8 46 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031fa	obj/kern/kernel.asm	/^f01031fa:	39 c6                	cmp    %eax,%esi$/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc:	73 24                	jae    f0103222 <mem_init+0x150c>$/;"	l
f01031fe	obj/kern/kernel.asm	/^f01031fe:	c7 44 24 0c ad 89 10 	movl   $0xf01089ad,0xc(%esp)$/;"	l
f0103205	obj/kern/kernel.asm	/^f0103205:	f0 $/;"	l
f0103206	obj/kern/kernel.asm	/^f0103206:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	f0 $/;"	l
f010320e	obj/kern/kernel.asm	/^f010320e:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
f0103215	obj/kern/kernel.asm	/^f0103215:	00 $/;"	l
f0103216	obj/kern/kernel.asm	/^f0103216:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010321d	obj/kern/kernel.asm	/^f010321d:	e8 1e ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	8b 3d 8c 7e 20 f0    	mov    0xf0207e8c,%edi$/;"	l
f0103228	obj/kern/kernel.asm	/^f0103228:	89 da                	mov    %ebx,%edx$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	89 f8                	mov    %edi,%eax$/;"	l
f010322c	obj/kern/kernel.asm	/^f010322c:	e8 ab e1 ff ff       	call   f01013dc <check_va2pa>$/;"	l
f0103231	obj/kern/kernel.asm	/^f0103231:	85 c0                	test   %eax,%eax$/;"	l
f0103233	obj/kern/kernel.asm	/^f0103233:	74 24                	je     f0103259 <mem_init+0x1543>$/;"	l
f0103235	obj/kern/kernel.asm	/^f0103235:	c7 44 24 0c f0 83 10 	movl   $0xf01083f0,0xc(%esp)$/;"	l
f010323c	obj/kern/kernel.asm	/^f010323c:	f0 $/;"	l
f010323d	obj/kern/kernel.asm	/^f010323d:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103244	obj/kern/kernel.asm	/^f0103244:	f0 $/;"	l
f0103245	obj/kern/kernel.asm	/^f0103245:	c7 44 24 04 2d 04 00 	movl   $0x42d,0x4(%esp)$/;"	l
f010324c	obj/kern/kernel.asm	/^f010324c:	00 $/;"	l
f010324d	obj/kern/kernel.asm	/^f010324d:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103254	obj/kern/kernel.asm	/^f0103254:	e8 e7 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103259	obj/kern/kernel.asm	/^f0103259:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103262	obj/kern/kernel.asm	/^f0103262:	89 c2                	mov    %eax,%edx$/;"	l
f0103264	obj/kern/kernel.asm	/^f0103264:	89 f8                	mov    %edi,%eax$/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	e8 71 e1 ff ff       	call   f01013dc <check_va2pa>$/;"	l
f010326b	obj/kern/kernel.asm	/^f010326b:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0103270	obj/kern/kernel.asm	/^f0103270:	74 24                	je     f0103296 <mem_init+0x1580>$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	c7 44 24 0c 14 84 10 	movl   $0xf0108414,0xc(%esp)$/;"	l
f0103279	obj/kern/kernel.asm	/^f0103279:	f0 $/;"	l
f010327a	obj/kern/kernel.asm	/^f010327a:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103281	obj/kern/kernel.asm	/^f0103281:	f0 $/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	c7 44 24 04 2e 04 00 	movl   $0x42e,0x4(%esp)$/;"	l
f0103289	obj/kern/kernel.asm	/^f0103289:	00 $/;"	l
f010328a	obj/kern/kernel.asm	/^f010328a:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	e8 aa cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103296	obj/kern/kernel.asm	/^f0103296:	89 f2                	mov    %esi,%edx$/;"	l
f0103298	obj/kern/kernel.asm	/^f0103298:	89 f8                	mov    %edi,%eax$/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	e8 3d e1 ff ff       	call   f01013dc <check_va2pa>$/;"	l
f010329f	obj/kern/kernel.asm	/^f010329f:	85 c0                	test   %eax,%eax$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	74 24                	je     f01032c7 <mem_init+0x15b1>$/;"	l
f01032a3	obj/kern/kernel.asm	/^f01032a3:	c7 44 24 0c 44 84 10 	movl   $0xf0108444,0xc(%esp)$/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	f0 $/;"	l
f01032ab	obj/kern/kernel.asm	/^f01032ab:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	f0 $/;"	l
f01032b3	obj/kern/kernel.asm	/^f01032b3:	c7 44 24 04 2f 04 00 	movl   $0x42f,0x4(%esp)$/;"	l
f01032ba	obj/kern/kernel.asm	/^f01032ba:	00 $/;"	l
f01032bb	obj/kern/kernel.asm	/^f01032bb:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01032c2	obj/kern/kernel.asm	/^f01032c2:	e8 79 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	89 f8                	mov    %edi,%eax$/;"	l
f01032cf	obj/kern/kernel.asm	/^f01032cf:	e8 08 e1 ff ff       	call   f01013dc <check_va2pa>$/;"	l
f01032d4	obj/kern/kernel.asm	/^f01032d4:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01032d7	obj/kern/kernel.asm	/^f01032d7:	74 24                	je     f01032fd <mem_init+0x15e7>$/;"	l
f01032d9	obj/kern/kernel.asm	/^f01032d9:	c7 44 24 0c 68 84 10 	movl   $0xf0108468,0xc(%esp)$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	f0 $/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	f0 $/;"	l
f01032e9	obj/kern/kernel.asm	/^f01032e9:	c7 44 24 04 30 04 00 	movl   $0x430,0x4(%esp)$/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	00 $/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01032f8	obj/kern/kernel.asm	/^f01032f8:	e8 43 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032fd	obj/kern/kernel.asm	/^f01032fd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103304	obj/kern/kernel.asm	/^f0103304:	00 $/;"	l
f0103305	obj/kern/kernel.asm	/^f0103305:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103309	obj/kern/kernel.asm	/^f0103309:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010330c	obj/kern/kernel.asm	/^f010330c:	e8 81 e6 ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0103314	obj/kern/kernel.asm	/^f0103314:	75 24                	jne    f010333a <mem_init+0x1624>$/;"	l
f0103316	obj/kern/kernel.asm	/^f0103316:	c7 44 24 0c 94 84 10 	movl   $0xf0108494,0xc(%esp)$/;"	l
f010331d	obj/kern/kernel.asm	/^f010331d:	f0 $/;"	l
f010331e	obj/kern/kernel.asm	/^f010331e:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103325	obj/kern/kernel.asm	/^f0103325:	f0 $/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	c7 44 24 04 32 04 00 	movl   $0x432,0x4(%esp)$/;"	l
f010332d	obj/kern/kernel.asm	/^f010332d:	00 $/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103335	obj/kern/kernel.asm	/^f0103335:	e8 06 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010333a	obj/kern/kernel.asm	/^f010333a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103341	obj/kern/kernel.asm	/^f0103341:	00 $/;"	l
f0103342	obj/kern/kernel.asm	/^f0103342:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103346	obj/kern/kernel.asm	/^f0103346:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010334e	obj/kern/kernel.asm	/^f010334e:	e8 3f e6 ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0103353	obj/kern/kernel.asm	/^f0103353:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0103356	obj/kern/kernel.asm	/^f0103356:	74 24                	je     f010337c <mem_init+0x1666>$/;"	l
f0103358	obj/kern/kernel.asm	/^f0103358:	c7 44 24 0c d8 84 10 	movl   $0xf01084d8,0xc(%esp)$/;"	l
f010335f	obj/kern/kernel.asm	/^f010335f:	f0 $/;"	l
f0103360	obj/kern/kernel.asm	/^f0103360:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103367	obj/kern/kernel.asm	/^f0103367:	f0 $/;"	l
f0103368	obj/kern/kernel.asm	/^f0103368:	c7 44 24 04 33 04 00 	movl   $0x433,0x4(%esp)$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	00 $/;"	l
f0103370	obj/kern/kernel.asm	/^f0103370:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	e8 c4 cc ff ff       	call   f0100040 <_panic>$/;"	l
f010337c	obj/kern/kernel.asm	/^f010337c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103383	obj/kern/kernel.asm	/^f0103383:	00 $/;"	l
f0103384	obj/kern/kernel.asm	/^f0103384:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103388	obj/kern/kernel.asm	/^f0103388:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103390	obj/kern/kernel.asm	/^f0103390:	e8 fd e5 ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010339b	obj/kern/kernel.asm	/^f010339b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01033a2	obj/kern/kernel.asm	/^f01033a2:	00 $/;"	l
f01033a3	obj/kern/kernel.asm	/^f01033a3:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01033a6	obj/kern/kernel.asm	/^f01033a6:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01033aa	obj/kern/kernel.asm	/^f01033aa:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	e8 db e5 ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01033bd	obj/kern/kernel.asm	/^f01033bd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01033c4	obj/kern/kernel.asm	/^f01033c4:	00 $/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01033c9	obj/kern/kernel.asm	/^f01033c9:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033d1	obj/kern/kernel.asm	/^f01033d1:	e8 bc e5 ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f01033d6	obj/kern/kernel.asm	/^f01033d6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01033dc	obj/kern/kernel.asm	/^f01033dc:	c7 04 24 bf 89 10 f0 	movl   $0xf01089bf,(%esp)$/;"	l
f01033e3	obj/kern/kernel.asm	/^f01033e3:	e8 a6 13 00 00       	call   f010478e <cprintf>$/;"	l
f01033e8	obj/kern/kernel.asm	/^f01033e8:	a1 90 7e 20 f0       	mov    0xf0207e90,%eax$/;"	l
f01033ed	obj/kern/kernel.asm	/^f01033ed:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01033f2	obj/kern/kernel.asm	/^f01033f2:	77 20                	ja     f0103414 <mem_init+0x16fe>$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01033f8	obj/kern/kernel.asm	/^f01033f8:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	f0 $/;"	l
f0103400	obj/kern/kernel.asm	/^f0103400:	c7 44 24 04 ba 00 00 	movl   $0xba,0x4(%esp)$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	00 $/;"	l
f0103408	obj/kern/kernel.asm	/^f0103408:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010340f	obj/kern/kernel.asm	/^f010340f:	e8 2c cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103414	obj/kern/kernel.asm	/^f0103414:	8b 15 88 7e 20 f0    	mov    0xf0207e88,%edx$/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f0103421	obj/kern/kernel.asm	/^f0103421:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103427	obj/kern/kernel.asm	/^f0103427:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f010342e	obj/kern/kernel.asm	/^f010342e:	00 $/;"	l
f010342f	obj/kern/kernel.asm	/^f010342f:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103434	obj/kern/kernel.asm	/^f0103434:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103437	obj/kern/kernel.asm	/^f0103437:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	e8 3b e6 ff ff       	call   f0101a81 <boot_map_region>$/;"	l
f0103446	obj/kern/kernel.asm	/^f0103446:	a1 48 72 20 f0       	mov    0xf0207248,%eax$/;"	l
f010344b	obj/kern/kernel.asm	/^f010344b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103450	obj/kern/kernel.asm	/^f0103450:	77 20                	ja     f0103472 <mem_init+0x175c>$/;"	l
f0103452	obj/kern/kernel.asm	/^f0103452:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103456	obj/kern/kernel.asm	/^f0103456:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	f0 $/;"	l
f010345e	obj/kern/kernel.asm	/^f010345e:	c7 44 24 04 c3 00 00 	movl   $0xc3,0x4(%esp)$/;"	l
f0103465	obj/kern/kernel.asm	/^f0103465:	00 $/;"	l
f0103466	obj/kern/kernel.asm	/^f0103466:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010346d	obj/kern/kernel.asm	/^f010346d:	e8 ce cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103472	obj/kern/kernel.asm	/^f0103472:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0103479	obj/kern/kernel.asm	/^f0103479:	00 $/;"	l
f010347a	obj/kern/kernel.asm	/^f010347a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010347f	obj/kern/kernel.asm	/^f010347f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103482	obj/kern/kernel.asm	/^f0103482:	b9 00 00 02 00       	mov    $0x20000,%ecx$/;"	l
f0103487	obj/kern/kernel.asm	/^f0103487:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	e8 eb e5 ff ff       	call   f0101a81 <boot_map_region>$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	b8 00 90 11 f0       	mov    $0xf0119000,%eax$/;"	l
f010349b	obj/kern/kernel.asm	/^f010349b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	77 20                	ja     f01034c2 <mem_init+0x17ac>$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01034a6	obj/kern/kernel.asm	/^f01034a6:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	f0 $/;"	l
f01034ae	obj/kern/kernel.asm	/^f01034ae:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)$/;"	l
f01034b5	obj/kern/kernel.asm	/^f01034b5:	00 $/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01034bd	obj/kern/kernel.asm	/^f01034bd:	e8 7e cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01034c9	obj/kern/kernel.asm	/^f01034c9:	00 $/;"	l
f01034ca	obj/kern/kernel.asm	/^f01034ca:	c7 04 24 00 90 11 00 	movl   $0x119000,(%esp)$/;"	l
f01034d1	obj/kern/kernel.asm	/^f01034d1:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	e8 9c e5 ff ff       	call   f0101a81 <boot_map_region>$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01034ec	obj/kern/kernel.asm	/^f01034ec:	00 $/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	e8 79 e5 ff ff       	call   f0101a81 <boot_map_region>$/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	b8 00 90 20 f0       	mov    $0xf0209000,%eax$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	0f 87 d3 07 00 00    	ja     f0103ceb <mem_init+0x1fd5>$/;"	l
f0103518	obj/kern/kernel.asm	/^f0103518:	eb 0c                	jmp    f0103526 <mem_init+0x1810>$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	89 d8                	mov    %ebx,%eax$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f0103522	obj/kern/kernel.asm	/^f0103522:	77 27                	ja     f010354b <mem_init+0x1835>$/;"	l
f0103524	obj/kern/kernel.asm	/^f0103524:	eb 05                	jmp    f010352b <mem_init+0x1815>$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	b8 00 90 20 f0       	mov    $0xf0209000,%eax$/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010352f	obj/kern/kernel.asm	/^f010352f:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f0103536	obj/kern/kernel.asm	/^f0103536:	f0 $/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	c7 44 24 04 0f 01 00 	movl   $0x10f,0x4(%esp)$/;"	l
f010353e	obj/kern/kernel.asm	/^f010353e:	00 $/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	e8 f5 ca ff ff       	call   f0100040 <_panic>$/;"	l
f010354b	obj/kern/kernel.asm	/^f010354b:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103552	obj/kern/kernel.asm	/^f0103552:	00 $/;"	l
f0103553	obj/kern/kernel.asm	/^f0103553:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0103559	obj/kern/kernel.asm	/^f0103559:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103561	obj/kern/kernel.asm	/^f0103561:	89 f2                	mov    %esi,%edx$/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0103568	obj/kern/kernel.asm	/^f0103568:	e8 14 e5 ff ff       	call   f0101a81 <boot_map_region>$/;"	l
f010356d	obj/kern/kernel.asm	/^f010356d:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0103573	obj/kern/kernel.asm	/^f0103573:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0103579	obj/kern/kernel.asm	/^f0103579:	81 fe 00 80 f7 ef    	cmp    $0xeff78000,%esi$/;"	l
f010357f	obj/kern/kernel.asm	/^f010357f:	75 99                	jne    f010351a <mem_init+0x1804>$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	8b 1d 8c 7e 20 f0    	mov    0xf0207e8c,%ebx$/;"	l
f0103587	obj/kern/kernel.asm	/^f0103587:	8b 0d 88 7e 20 f0    	mov    0xf0207e88,%ecx$/;"	l
f010358d	obj/kern/kernel.asm	/^f010358d:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	8d 3c cd ff 0f 00 00 	lea    0xfff(,%ecx,8),%edi$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f010359d	obj/kern/kernel.asm	/^f010359d:	0f 84 80 00 00 00    	je     f0103623 <mem_init+0x190d>$/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01035a8	obj/kern/kernel.asm	/^f01035a8:	8d 96 00 00 00 ef    	lea    -0x11000000(%esi),%edx$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	89 d8                	mov    %ebx,%eax$/;"	l
f01035b0	obj/kern/kernel.asm	/^f01035b0:	e8 27 de ff ff       	call   f01013dc <check_va2pa>$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	8b 15 90 7e 20 f0    	mov    0xf0207e90,%edx$/;"	l
f01035bb	obj/kern/kernel.asm	/^f01035bb:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f01035c1	obj/kern/kernel.asm	/^f01035c1:	77 20                	ja     f01035e3 <mem_init+0x18cd>$/;"	l
f01035c3	obj/kern/kernel.asm	/^f01035c3:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01035c7	obj/kern/kernel.asm	/^f01035c7:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	f0 $/;"	l
f01035cf	obj/kern/kernel.asm	/^f01035cf:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
f01035d6	obj/kern/kernel.asm	/^f01035d6:	00 $/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01035de	obj/kern/kernel.asm	/^f01035de:	e8 5d ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	8d 94 32 00 00 00 10 	lea    0x10000000(%edx,%esi,1),%edx$/;"	l
f01035ea	obj/kern/kernel.asm	/^f01035ea:	39 d0                	cmp    %edx,%eax$/;"	l
f01035ec	obj/kern/kernel.asm	/^f01035ec:	74 24                	je     f0103612 <mem_init+0x18fc>$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	c7 44 24 0c 0c 85 10 	movl   $0xf010850c,0xc(%esp)$/;"	l
f01035f5	obj/kern/kernel.asm	/^f01035f5:	f0 $/;"	l
f01035f6	obj/kern/kernel.asm	/^f01035f6:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	f0 $/;"	l
f01035fe	obj/kern/kernel.asm	/^f01035fe:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
f0103605	obj/kern/kernel.asm	/^f0103605:	00 $/;"	l
f0103606	obj/kern/kernel.asm	/^f0103606:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	e8 2e ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103612	obj/kern/kernel.asm	/^f0103612:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0103618	obj/kern/kernel.asm	/^f0103618:	39 f7                	cmp    %esi,%edi$/;"	l
f010361a	obj/kern/kernel.asm	/^f010361a:	77 8c                	ja     f01035a8 <mem_init+0x1892>$/;"	l
f010361c	obj/kern/kernel.asm	/^f010361c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0103621	obj/kern/kernel.asm	/^f0103621:	eb 05                	jmp    f0103628 <mem_init+0x1912>$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0103628	obj/kern/kernel.asm	/^f0103628:	8d 96 00 00 c0 ee    	lea    -0x11400000(%esi),%edx$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	89 d8                	mov    %ebx,%eax$/;"	l
f0103630	obj/kern/kernel.asm	/^f0103630:	e8 a7 dd ff ff       	call   f01013dc <check_va2pa>$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	8b 15 48 72 20 f0    	mov    0xf0207248,%edx$/;"	l
f010363b	obj/kern/kernel.asm	/^f010363b:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0103641	obj/kern/kernel.asm	/^f0103641:	77 20                	ja     f0103663 <mem_init+0x194d>$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103647	obj/kern/kernel.asm	/^f0103647:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	f0 $/;"	l
f010364f	obj/kern/kernel.asm	/^f010364f:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
f0103656	obj/kern/kernel.asm	/^f0103656:	00 $/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	e8 dd c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	8d 94 32 00 00 00 10 	lea    0x10000000(%edx,%esi,1),%edx$/;"	l
f010366a	obj/kern/kernel.asm	/^f010366a:	39 d0                	cmp    %edx,%eax$/;"	l
f010366c	obj/kern/kernel.asm	/^f010366c:	74 24                	je     f0103692 <mem_init+0x197c>$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	c7 44 24 0c 40 85 10 	movl   $0xf0108540,0xc(%esp)$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	f0 $/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010367d	obj/kern/kernel.asm	/^f010367d:	f0 $/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
f0103685	obj/kern/kernel.asm	/^f0103685:	00 $/;"	l
f0103686	obj/kern/kernel.asm	/^f0103686:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010368d	obj/kern/kernel.asm	/^f010368d:	e8 ae c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	81 fe 00 00 02 00    	cmp    $0x20000,%esi$/;"	l
f010369e	obj/kern/kernel.asm	/^f010369e:	75 88                	jne    f0103628 <mem_init+0x1912>$/;"	l
f01036a0	obj/kern/kernel.asm	/^f01036a0:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f01036a3	obj/kern/kernel.asm	/^f01036a3:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f01036a6	obj/kern/kernel.asm	/^f01036a6:	85 ff                	test   %edi,%edi$/;"	l
f01036a8	obj/kern/kernel.asm	/^f01036a8:	74 44                	je     f01036ee <mem_init+0x19d8>$/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	8d 96 00 00 00 f0    	lea    -0x10000000(%esi),%edx$/;"	l
f01036b5	obj/kern/kernel.asm	/^f01036b5:	89 d8                	mov    %ebx,%eax$/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	e8 20 dd ff ff       	call   f01013dc <check_va2pa>$/;"	l
f01036bc	obj/kern/kernel.asm	/^f01036bc:	39 c6                	cmp    %eax,%esi$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	74 24                	je     f01036e4 <mem_init+0x19ce>$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	c7 44 24 0c 74 85 10 	movl   $0xf0108574,0xc(%esp)$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	f0 $/;"	l
f01036c8	obj/kern/kernel.asm	/^f01036c8:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	f0 $/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	c7 44 24 04 53 03 00 	movl   $0x353,0x4(%esp)$/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	00 $/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	e8 5c c9 ff ff       	call   f0100040 <_panic>$/;"	l
f01036e4	obj/kern/kernel.asm	/^f01036e4:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f01036ea	obj/kern/kernel.asm	/^f01036ea:	39 fe                	cmp    %edi,%esi$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	72 c1                	jb     f01036af <mem_init+0x1999>$/;"	l
f01036ee	obj/kern/kernel.asm	/^f01036ee:	c7 45 cc 00 90 20 f0 	movl   $0xf0209000,-0x34(%ebp)$/;"	l
f01036f5	obj/kern/kernel.asm	/^f01036f5:	c7 45 d0 00 00 ff ef 	movl   $0xefff0000,-0x30(%ebp)$/;"	l
f01036fc	obj/kern/kernel.asm	/^f01036fc:	89 df                	mov    %ebx,%edi$/;"	l
f01036fe	obj/kern/kernel.asm	/^f01036fe:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0103704	obj/kern/kernel.asm	/^f0103704:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f0103707	obj/kern/kernel.asm	/^f0103707:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f010370d	obj/kern/kernel.asm	/^f010370d:	89 c6                	mov    %eax,%esi$/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	81 c6 00 00 00 10    	add    $0x10000000,%esi$/;"	l
f0103715	obj/kern/kernel.asm	/^f0103715:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	81 c2 00 00 01 00    	add    $0x10000,%edx$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0103721	obj/kern/kernel.asm	/^f0103721:	89 da                	mov    %ebx,%edx$/;"	l
f0103723	obj/kern/kernel.asm	/^f0103723:	89 f8                	mov    %edi,%eax$/;"	l
f0103725	obj/kern/kernel.asm	/^f0103725:	e8 b2 dc ff ff       	call   f01013dc <check_va2pa>$/;"	l
f010372a	obj/kern/kernel.asm	/^f010372a:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f0103731	obj/kern/kernel.asm	/^f0103731:	77 23                	ja     f0103756 <mem_init+0x1a40>$/;"	l
f0103733	obj/kern/kernel.asm	/^f0103733:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f0103736	obj/kern/kernel.asm	/^f0103736:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010373a	obj/kern/kernel.asm	/^f010373a:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	f0 $/;"	l
f0103742	obj/kern/kernel.asm	/^f0103742:	c7 44 24 04 5b 03 00 	movl   $0x35b,0x4(%esp)$/;"	l
f0103749	obj/kern/kernel.asm	/^f0103749:	00 $/;"	l
f010374a	obj/kern/kernel.asm	/^f010374a:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	e8 ea c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	39 f0                	cmp    %esi,%eax$/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	74 24                	je     f010377e <mem_init+0x1a68>$/;"	l
f010375a	obj/kern/kernel.asm	/^f010375a:	c7 44 24 0c 9c 85 10 	movl   $0xf010859c,0xc(%esp)$/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	f0 $/;"	l
f0103762	obj/kern/kernel.asm	/^f0103762:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103769	obj/kern/kernel.asm	/^f0103769:	f0 $/;"	l
f010376a	obj/kern/kernel.asm	/^f010376a:	c7 44 24 04 5b 03 00 	movl   $0x35b,0x4(%esp)$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	00 $/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	e8 c2 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010377e	obj/kern/kernel.asm	/^f010377e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103784	obj/kern/kernel.asm	/^f0103784:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx$/;"	l
f010378d	obj/kern/kernel.asm	/^f010378d:	0f 85 8a 05 00 00    	jne    f0103d1d <mem_init+0x2007>$/;"	l
f0103793	obj/kern/kernel.asm	/^f0103793:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103798	obj/kern/kernel.asm	/^f0103798:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	8d 14 33             	lea    (%ebx,%esi,1),%edx$/;"	l
f010379e	obj/kern/kernel.asm	/^f010379e:	89 f8                	mov    %edi,%eax$/;"	l
f01037a0	obj/kern/kernel.asm	/^f01037a0:	e8 37 dc ff ff       	call   f01013dc <check_va2pa>$/;"	l
f01037a5	obj/kern/kernel.asm	/^f01037a5:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01037a8	obj/kern/kernel.asm	/^f01037a8:	74 24                	je     f01037ce <mem_init+0x1ab8>$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	c7 44 24 0c e4 85 10 	movl   $0xf01085e4,0xc(%esp)$/;"	l
f01037b1	obj/kern/kernel.asm	/^f01037b1:	f0 $/;"	l
f01037b2	obj/kern/kernel.asm	/^f01037b2:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01037b9	obj/kern/kernel.asm	/^f01037b9:	f0 $/;"	l
f01037ba	obj/kern/kernel.asm	/^f01037ba:	c7 44 24 04 5d 03 00 	movl   $0x35d,0x4(%esp)$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	00 $/;"	l
f01037c2	obj/kern/kernel.asm	/^f01037c2:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01037c9	obj/kern/kernel.asm	/^f01037c9:	e8 72 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f01037ce	obj/kern/kernel.asm	/^f01037ce:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01037d4	obj/kern/kernel.asm	/^f01037d4:	81 fb 00 80 00 00    	cmp    $0x8000,%ebx$/;"	l
f01037da	obj/kern/kernel.asm	/^f01037da:	75 bf                	jne    f010379b <mem_init+0x1a85>$/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	81 6d d0 00 00 01 00 	subl   $0x10000,-0x30(%ebp)$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	81 45 cc 00 80 00 00 	addl   $0x8000,-0x34(%ebp)$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	81 7d d0 00 00 f7 ef 	cmpl   $0xeff70000,-0x30(%ebp)$/;"	l
f01037f1	obj/kern/kernel.asm	/^f01037f1:	0f 85 07 ff ff ff    	jne    f01036fe <mem_init+0x19e8>$/;"	l
f01037f7	obj/kern/kernel.asm	/^f01037f7:	89 fb                	mov    %edi,%ebx$/;"	l
f01037f9	obj/kern/kernel.asm	/^f01037f9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01037fe	obj/kern/kernel.asm	/^f01037fe:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f0103807	obj/kern/kernel.asm	/^f0103807:	77 2e                	ja     f0103837 <mem_init+0x1b21>$/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	f6 04 83 01          	testb  $0x1,(%ebx,%eax,4)$/;"	l
f010380d	obj/kern/kernel.asm	/^f010380d:	0f 85 aa 00 00 00    	jne    f01038bd <mem_init+0x1ba7>$/;"	l
f0103813	obj/kern/kernel.asm	/^f0103813:	c7 44 24 0c d8 89 10 	movl   $0xf01089d8,0xc(%esp)$/;"	l
f010381a	obj/kern/kernel.asm	/^f010381a:	f0 $/;"	l
f010381b	obj/kern/kernel.asm	/^f010381b:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103822	obj/kern/kernel.asm	/^f0103822:	f0 $/;"	l
f0103823	obj/kern/kernel.asm	/^f0103823:	c7 44 24 04 68 03 00 	movl   $0x368,0x4(%esp)$/;"	l
f010382a	obj/kern/kernel.asm	/^f010382a:	00 $/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	e8 09 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f010383c	obj/kern/kernel.asm	/^f010383c:	76 55                	jbe    f0103893 <mem_init+0x1b7d>$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	8b 14 83             	mov    (%ebx,%eax,4),%edx$/;"	l
f0103841	obj/kern/kernel.asm	/^f0103841:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0103844	obj/kern/kernel.asm	/^f0103844:	75 24                	jne    f010386a <mem_init+0x1b54>$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	c7 44 24 0c d8 89 10 	movl   $0xf01089d8,0xc(%esp)$/;"	l
f010384d	obj/kern/kernel.asm	/^f010384d:	f0 $/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103855	obj/kern/kernel.asm	/^f0103855:	f0 $/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	c7 44 24 04 6c 03 00 	movl   $0x36c,0x4(%esp)$/;"	l
f010385d	obj/kern/kernel.asm	/^f010385d:	00 $/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103865	obj/kern/kernel.asm	/^f0103865:	e8 d6 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	f6 c2 02             	test   $0x2,%dl$/;"	l
f010386d	obj/kern/kernel.asm	/^f010386d:	75 4e                	jne    f01038bd <mem_init+0x1ba7>$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	c7 44 24 0c e9 89 10 	movl   $0xf01089e9,0xc(%esp)$/;"	l
f0103876	obj/kern/kernel.asm	/^f0103876:	f0 $/;"	l
f0103877	obj/kern/kernel.asm	/^f0103877:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	f0 $/;"	l
f010387f	obj/kern/kernel.asm	/^f010387f:	c7 44 24 04 6d 03 00 	movl   $0x36d,0x4(%esp)$/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	00 $/;"	l
f0103887	obj/kern/kernel.asm	/^f0103887:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	e8 ad c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103893	obj/kern/kernel.asm	/^f0103893:	83 3c 83 00          	cmpl   $0x0,(%ebx,%eax,4)$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	74 24                	je     f01038bd <mem_init+0x1ba7>$/;"	l
f0103899	obj/kern/kernel.asm	/^f0103899:	c7 44 24 0c fa 89 10 	movl   $0xf01089fa,0xc(%esp)$/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	f0 $/;"	l
f01038a1	obj/kern/kernel.asm	/^f01038a1:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01038a8	obj/kern/kernel.asm	/^f01038a8:	f0 $/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	c7 44 24 04 6f 03 00 	movl   $0x36f,0x4(%esp)$/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	00 $/;"	l
f01038b1	obj/kern/kernel.asm	/^f01038b1:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01038b8	obj/kern/kernel.asm	/^f01038b8:	e8 83 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038bd	obj/kern/kernel.asm	/^f01038bd:	83 c0 01             	add    $0x1,%eax$/;"	l
f01038c0	obj/kern/kernel.asm	/^f01038c0:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01038c5	obj/kern/kernel.asm	/^f01038c5:	0f 85 33 ff ff ff    	jne    f01037fe <mem_init+0x1ae8>$/;"	l
f01038cb	obj/kern/kernel.asm	/^f01038cb:	c7 04 24 08 86 10 f0 	movl   $0xf0108608,(%esp)$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	e8 b7 0e 00 00       	call   f010478e <cprintf>$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	77 20                	ja     f0103903 <mem_init+0x1bed>$/;"	l
f01038e3	obj/kern/kernel.asm	/^f01038e3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f01038ee	obj/kern/kernel.asm	/^f01038ee:	f0 $/;"	l
f01038ef	obj/kern/kernel.asm	/^f01038ef:	c7 44 24 04 e8 00 00 	movl   $0xe8,0x4(%esp)$/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6:	00 $/;"	l
f01038f7	obj/kern/kernel.asm	/^f01038f7:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	e8 3d c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103903	obj/kern/kernel.asm	/^f0103903:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103908	obj/kern/kernel.asm	/^f0103908:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010390b	obj/kern/kernel.asm	/^f010390b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	e8 6a db ff ff       	call   f010147f <check_page_free_list>$/;"	l
f0103915	obj/kern/kernel.asm	/^f0103915:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f010391d	obj/kern/kernel.asm	/^f010391d:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0103923	obj/kern/kernel.asm	/^f0103923:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	e8 aa df ff ff       	call   f01018d9 <page_alloc>$/;"	l
f010392f	obj/kern/kernel.asm	/^f010392f:	89 c6                	mov    %eax,%esi$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	85 c0                	test   %eax,%eax$/;"	l
f0103933	obj/kern/kernel.asm	/^f0103933:	75 24                	jne    f0103959 <mem_init+0x1c43>$/;"	l
f0103935	obj/kern/kernel.asm	/^f0103935:	c7 44 24 0c 05 88 10 	movl   $0xf0108805,0xc(%esp)$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	f0 $/;"	l
f010393d	obj/kern/kernel.asm	/^f010393d:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103944	obj/kern/kernel.asm	/^f0103944:	f0 $/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	c7 44 24 04 48 04 00 	movl   $0x448,0x4(%esp)$/;"	l
f010394c	obj/kern/kernel.asm	/^f010394c:	00 $/;"	l
f010394d	obj/kern/kernel.asm	/^f010394d:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	e8 e7 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103959	obj/kern/kernel.asm	/^f0103959:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103960	obj/kern/kernel.asm	/^f0103960:	e8 74 df ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	89 c7                	mov    %eax,%edi$/;"	l
f0103967	obj/kern/kernel.asm	/^f0103967:	85 c0                	test   %eax,%eax$/;"	l
f0103969	obj/kern/kernel.asm	/^f0103969:	75 24                	jne    f010398f <mem_init+0x1c79>$/;"	l
f010396b	obj/kern/kernel.asm	/^f010396b:	c7 44 24 0c 1b 88 10 	movl   $0xf010881b,0xc(%esp)$/;"	l
f0103972	obj/kern/kernel.asm	/^f0103972:	f0 $/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f010397a	obj/kern/kernel.asm	/^f010397a:	f0 $/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	c7 44 24 04 49 04 00 	movl   $0x449,0x4(%esp)$/;"	l
f0103982	obj/kern/kernel.asm	/^f0103982:	00 $/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f010398a	obj/kern/kernel.asm	/^f010398a:	e8 b1 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f010398f	obj/kern/kernel.asm	/^f010398f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103996	obj/kern/kernel.asm	/^f0103996:	e8 3e df ff ff       	call   f01018d9 <page_alloc>$/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b:	89 c3                	mov    %eax,%ebx$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	85 c0                	test   %eax,%eax$/;"	l
f010399f	obj/kern/kernel.asm	/^f010399f:	75 24                	jne    f01039c5 <mem_init+0x1caf>$/;"	l
f01039a1	obj/kern/kernel.asm	/^f01039a1:	c7 44 24 0c 31 88 10 	movl   $0xf0108831,0xc(%esp)$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	f0 $/;"	l
f01039a9	obj/kern/kernel.asm	/^f01039a9:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	f0 $/;"	l
f01039b1	obj/kern/kernel.asm	/^f01039b1:	c7 44 24 04 4a 04 00 	movl   $0x44a,0x4(%esp)$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	00 $/;"	l
f01039b9	obj/kern/kernel.asm	/^f01039b9:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	e8 7b c6 ff ff       	call   f0100040 <_panic>$/;"	l
f01039c5	obj/kern/kernel.asm	/^f01039c5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01039c8	obj/kern/kernel.asm	/^f01039c8:	e8 8d df ff ff       	call   f010195a <page_free>$/;"	l
f01039cd	obj/kern/kernel.asm	/^f01039cd:	89 f8                	mov    %edi,%eax$/;"	l
f01039cf	obj/kern/kernel.asm	/^f01039cf:	2b 05 90 7e 20 f0    	sub    0xf0207e90,%eax$/;"	l
f01039d5	obj/kern/kernel.asm	/^f01039d5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01039d8	obj/kern/kernel.asm	/^f01039d8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01039db	obj/kern/kernel.asm	/^f01039db:	89 c2                	mov    %eax,%edx$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01039e0	obj/kern/kernel.asm	/^f01039e0:	3b 15 88 7e 20 f0    	cmp    0xf0207e88,%edx$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	72 20                	jb     f0103a08 <mem_init+0x1cf2>$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01039ec	obj/kern/kernel.asm	/^f01039ec:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f01039f3	obj/kern/kernel.asm	/^f01039f3:	f0 $/;"	l
f01039f4	obj/kern/kernel.asm	/^f01039f4:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01039fb	obj/kern/kernel.asm	/^f01039fb:	00 $/;"	l
f01039fc	obj/kern/kernel.asm	/^f01039fc:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f0103a03	obj/kern/kernel.asm	/^f0103a03:	e8 38 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a08	obj/kern/kernel.asm	/^f0103a08:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103a0f	obj/kern/kernel.asm	/^f0103a0f:	00 $/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	00 $/;"	l
f0103a18	obj/kern/kernel.asm	/^f0103a18:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103a1d	obj/kern/kernel.asm	/^f0103a1d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	e8 9c 2c 00 00       	call   f01066c1 <memset>$/;"	l
f0103a25	obj/kern/kernel.asm	/^f0103a25:	89 d8                	mov    %ebx,%eax$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	2b 05 90 7e 20 f0    	sub    0xf0207e90,%eax$/;"	l
f0103a2d	obj/kern/kernel.asm	/^f0103a2d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103a33	obj/kern/kernel.asm	/^f0103a33:	89 c2                	mov    %eax,%edx$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	3b 15 88 7e 20 f0    	cmp    0xf0207e88,%edx$/;"	l
f0103a3e	obj/kern/kernel.asm	/^f0103a3e:	72 20                	jb     f0103a60 <mem_init+0x1d4a>$/;"	l
f0103a40	obj/kern/kernel.asm	/^f0103a40:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0103a4b	obj/kern/kernel.asm	/^f0103a4b:	f0 $/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0103a53	obj/kern/kernel.asm	/^f0103a53:	00 $/;"	l
f0103a54	obj/kern/kernel.asm	/^f0103a54:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f0103a5b	obj/kern/kernel.asm	/^f0103a5b:	e8 e0 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103a67	obj/kern/kernel.asm	/^f0103a67:	00 $/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103a6f	obj/kern/kernel.asm	/^f0103a6f:	00 $/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103a75	obj/kern/kernel.asm	/^f0103a75:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a78	obj/kern/kernel.asm	/^f0103a78:	e8 44 2c 00 00       	call   f01066c1 <memset>$/;"	l
f0103a7d	obj/kern/kernel.asm	/^f0103a7d:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	00 $/;"	l
f0103a85	obj/kern/kernel.asm	/^f0103a85:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	00 $/;"	l
f0103a8d	obj/kern/kernel.asm	/^f0103a8d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103a91	obj/kern/kernel.asm	/^f0103a91:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0103a96	obj/kern/kernel.asm	/^f0103a96:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a99	obj/kern/kernel.asm	/^f0103a99:	e8 0a e1 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f0103a9e	obj/kern/kernel.asm	/^f0103a9e:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0103aa3	obj/kern/kernel.asm	/^f0103aa3:	74 24                	je     f0103ac9 <mem_init+0x1db3>$/;"	l
f0103aa5	obj/kern/kernel.asm	/^f0103aa5:	c7 44 24 0c 02 89 10 	movl   $0xf0108902,0xc(%esp)$/;"	l
f0103aac	obj/kern/kernel.asm	/^f0103aac:	f0 $/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103ab4	obj/kern/kernel.asm	/^f0103ab4:	f0 $/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	c7 44 24 04 4f 04 00 	movl   $0x44f,0x4(%esp)$/;"	l
f0103abc	obj/kern/kernel.asm	/^f0103abc:	00 $/;"	l
f0103abd	obj/kern/kernel.asm	/^f0103abd:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103ac4	obj/kern/kernel.asm	/^f0103ac4:	e8 77 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	01 01 01 $/;"	l
f0103ad3	obj/kern/kernel.asm	/^f0103ad3:	74 24                	je     f0103af9 <mem_init+0x1de3>$/;"	l
f0103ad5	obj/kern/kernel.asm	/^f0103ad5:	c7 44 24 0c 28 86 10 	movl   $0xf0108628,0xc(%esp)$/;"	l
f0103adc	obj/kern/kernel.asm	/^f0103adc:	f0 $/;"	l
f0103add	obj/kern/kernel.asm	/^f0103add:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	f0 $/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	c7 44 24 04 50 04 00 	movl   $0x450,0x4(%esp)$/;"	l
f0103aec	obj/kern/kernel.asm	/^f0103aec:	00 $/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	e8 47 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103b00	obj/kern/kernel.asm	/^f0103b00:	00 $/;"	l
f0103b01	obj/kern/kernel.asm	/^f0103b01:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	00 $/;"	l
f0103b09	obj/kern/kernel.asm	/^f0103b09:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0103b12	obj/kern/kernel.asm	/^f0103b12:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	e8 8e e0 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f0103b1a	obj/kern/kernel.asm	/^f0103b1a:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	02 02 02 $/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24:	74 24                	je     f0103b4a <mem_init+0x1e34>$/;"	l
f0103b26	obj/kern/kernel.asm	/^f0103b26:	c7 44 24 0c 4c 86 10 	movl   $0xf010864c,0xc(%esp)$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	f0 $/;"	l
f0103b2e	obj/kern/kernel.asm	/^f0103b2e:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103b35	obj/kern/kernel.asm	/^f0103b35:	f0 $/;"	l
f0103b36	obj/kern/kernel.asm	/^f0103b36:	c7 44 24 04 52 04 00 	movl   $0x452,0x4(%esp)$/;"	l
f0103b3d	obj/kern/kernel.asm	/^f0103b3d:	00 $/;"	l
f0103b3e	obj/kern/kernel.asm	/^f0103b3e:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	e8 f6 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103b4f	obj/kern/kernel.asm	/^f0103b4f:	74 24                	je     f0103b75 <mem_init+0x1e5f>$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	c7 44 24 0c 24 89 10 	movl   $0xf0108924,0xc(%esp)$/;"	l
f0103b58	obj/kern/kernel.asm	/^f0103b58:	f0 $/;"	l
f0103b59	obj/kern/kernel.asm	/^f0103b59:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	f0 $/;"	l
f0103b61	obj/kern/kernel.asm	/^f0103b61:	c7 44 24 04 53 04 00 	movl   $0x453,0x4(%esp)$/;"	l
f0103b68	obj/kern/kernel.asm	/^f0103b68:	00 $/;"	l
f0103b69	obj/kern/kernel.asm	/^f0103b69:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103b70	obj/kern/kernel.asm	/^f0103b70:	e8 cb c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0103b7a	obj/kern/kernel.asm	/^f0103b7a:	74 24                	je     f0103ba0 <mem_init+0x1e8a>$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	c7 44 24 0c 6d 89 10 	movl   $0xf010896d,0xc(%esp)$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	f0 $/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103b8b	obj/kern/kernel.asm	/^f0103b8b:	f0 $/;"	l
f0103b8c	obj/kern/kernel.asm	/^f0103b8c:	c7 44 24 04 54 04 00 	movl   $0x454,0x4(%esp)$/;"	l
f0103b93	obj/kern/kernel.asm	/^f0103b93:	00 $/;"	l
f0103b94	obj/kern/kernel.asm	/^f0103b94:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	e8 a0 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0103ba7	obj/kern/kernel.asm	/^f0103ba7:	03 03 03 $/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	89 d8                	mov    %ebx,%eax$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	2b 05 90 7e 20 f0    	sub    0xf0207e90,%eax$/;"	l
f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103bb5	obj/kern/kernel.asm	/^f0103bb5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103bb8	obj/kern/kernel.asm	/^f0103bb8:	89 c2                	mov    %eax,%edx$/;"	l
f0103bba	obj/kern/kernel.asm	/^f0103bba:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103bbd	obj/kern/kernel.asm	/^f0103bbd:	3b 15 88 7e 20 f0    	cmp    0xf0207e88,%edx$/;"	l
f0103bc3	obj/kern/kernel.asm	/^f0103bc3:	72 20                	jb     f0103be5 <mem_init+0x1ecf>$/;"	l
f0103bc5	obj/kern/kernel.asm	/^f0103bc5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103bc9	obj/kern/kernel.asm	/^f0103bc9:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	f0 $/;"	l
f0103bd1	obj/kern/kernel.asm	/^f0103bd1:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0103bd8	obj/kern/kernel.asm	/^f0103bd8:	00 $/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	e8 5b c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0103bec	obj/kern/kernel.asm	/^f0103bec:	03 03 03 $/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	74 24                	je     f0103c15 <mem_init+0x1eff>$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	c7 44 24 0c 70 86 10 	movl   $0xf0108670,0xc(%esp)$/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	f0 $/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103c00	obj/kern/kernel.asm	/^f0103c00:	f0 $/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	c7 44 24 04 56 04 00 	movl   $0x456,0x4(%esp)$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	00 $/;"	l
f0103c09	obj/kern/kernel.asm	/^f0103c09:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	e8 2b c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c15	obj/kern/kernel.asm	/^f0103c15:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	00 $/;"	l
f0103c1d	obj/kern/kernel.asm	/^f0103c1d:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	e8 40 df ff ff       	call   f0101b6a <page_remove>$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	74 24                	je     f0103c55 <mem_init+0x1f3f>$/;"	l
f0103c31	obj/kern/kernel.asm	/^f0103c31:	c7 44 24 0c 5c 89 10 	movl   $0xf010895c,0xc(%esp)$/;"	l
f0103c38	obj/kern/kernel.asm	/^f0103c38:	f0 $/;"	l
f0103c39	obj/kern/kernel.asm	/^f0103c39:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103c40	obj/kern/kernel.asm	/^f0103c40:	f0 $/;"	l
f0103c41	obj/kern/kernel.asm	/^f0103c41:	c7 44 24 04 58 04 00 	movl   $0x458,0x4(%esp)$/;"	l
f0103c48	obj/kern/kernel.asm	/^f0103c48:	00 $/;"	l
f0103c49	obj/kern/kernel.asm	/^f0103c49:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103c50	obj/kern/kernel.asm	/^f0103c50:	e8 eb c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c55	obj/kern/kernel.asm	/^f0103c55:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103c5c	obj/kern/kernel.asm	/^f0103c5c:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103c62	obj/kern/kernel.asm	/^f0103c62:	89 f2                	mov    %esi,%edx$/;"	l
f0103c64	obj/kern/kernel.asm	/^f0103c64:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f0103c6a	obj/kern/kernel.asm	/^f0103c6a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103c70	obj/kern/kernel.asm	/^f0103c70:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	74 24                	je     f0103c98 <mem_init+0x1f82>$/;"	l
f0103c74	obj/kern/kernel.asm	/^f0103c74:	c7 44 24 0c 30 80 10 	movl   $0xf0108030,0xc(%esp)$/;"	l
f0103c7b	obj/kern/kernel.asm	/^f0103c7b:	f0 $/;"	l
f0103c7c	obj/kern/kernel.asm	/^f0103c7c:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103c83	obj/kern/kernel.asm	/^f0103c83:	f0 $/;"	l
f0103c84	obj/kern/kernel.asm	/^f0103c84:	c7 44 24 04 5b 04 00 	movl   $0x45b,0x4(%esp)$/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	00 $/;"	l
f0103c8c	obj/kern/kernel.asm	/^f0103c8c:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103c93	obj/kern/kernel.asm	/^f0103c93:	e8 a8 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c98	obj/kern/kernel.asm	/^f0103c98:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	74 24                	je     f0103cc9 <mem_init+0x1fb3>$/;"	l
f0103ca5	obj/kern/kernel.asm	/^f0103ca5:	c7 44 24 0c 13 89 10 	movl   $0xf0108913,0xc(%esp)$/;"	l
f0103cac	obj/kern/kernel.asm	/^f0103cac:	f0 $/;"	l
f0103cad	obj/kern/kernel.asm	/^f0103cad:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	f0 $/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	c7 44 24 04 5d 04 00 	movl   $0x45d,0x4(%esp)$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	00 $/;"	l
f0103cbd	obj/kern/kernel.asm	/^f0103cbd:	c7 04 24 fd 86 10 f0 	movl   $0xf01086fd,(%esp)$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	e8 77 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103cd2	obj/kern/kernel.asm	/^f0103cd2:	e8 83 dc ff ff       	call   f010195a <page_free>$/;"	l
f0103cd7	obj/kern/kernel.asm	/^f0103cd7:	c7 04 24 9c 86 10 f0 	movl   $0xf010869c,(%esp)$/;"	l
f0103cde	obj/kern/kernel.asm	/^f0103cde:	e8 ab 0a 00 00       	call   f010478e <cprintf>$/;"	l
f0103ce3	obj/kern/kernel.asm	/^f0103ce3:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103ce6	obj/kern/kernel.asm	/^f0103ce6:	5b                   	pop    %ebx$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	5e                   	pop    %esi$/;"	l
f0103ce8	obj/kern/kernel.asm	/^f0103ce8:	5f                   	pop    %edi$/;"	l
f0103ce9	obj/kern/kernel.asm	/^f0103ce9:	5d                   	pop    %ebp$/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	c3                   	ret    $/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	00 $/;"	l
f0103cf3	obj/kern/kernel.asm	/^f0103cf3:	c7 04 24 00 90 20 00 	movl   $0x209000,(%esp)$/;"	l
f0103cfa	obj/kern/kernel.asm	/^f0103cfa:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103cff	obj/kern/kernel.asm	/^f0103cff:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	e8 73 dd ff ff       	call   f0101a81 <boot_map_region>$/;"	l
f0103d0e	obj/kern/kernel.asm	/^f0103d0e:	bb 00 10 21 f0       	mov    $0xf0211000,%ebx$/;"	l
f0103d13	obj/kern/kernel.asm	/^f0103d13:	be 00 80 fe ef       	mov    $0xeffe8000,%esi$/;"	l
f0103d18	obj/kern/kernel.asm	/^f0103d18:	e9 fd f7 ff ff       	jmp    f010351a <mem_init+0x1804>$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	89 da                	mov    %ebx,%edx$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	89 f8                	mov    %edi,%eax$/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	e8 b6 d6 ff ff       	call   f01013dc <check_va2pa>$/;"	l
f0103d26	obj/kern/kernel.asm	/^f0103d26:	e9 2b fa ff ff       	jmp    f0103756 <mem_init+0x1a40>$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b <user_mem_check>:$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	55                   	push   %ebp$/;"	l
f0103d2c	obj/kern/kernel.asm	/^f0103d2c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	57                   	push   %edi$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	56                   	push   %esi$/;"	l
f0103d30	obj/kern/kernel.asm	/^f0103d30:	53                   	push   %ebx$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	83 cf 01             	or     $0x1,%edi$/;"	l
f0103d3d	obj/kern/kernel.asm	/^f0103d3d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103d40	obj/kern/kernel.asm	/^f0103d40:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103d49	obj/kern/kernel.asm	/^f0103d49:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0103d51	obj/kern/kernel.asm	/^f0103d51:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103d59	obj/kern/kernel.asm	/^f0103d59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0103d61	obj/kern/kernel.asm	/^f0103d61:	74 7a                	je     f0103ddd <user_mem_check+0xb2>$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103d69	obj/kern/kernel.asm	/^f0103d69:	77 13                	ja     f0103d7e <user_mem_check+0x53>$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	eb 21                	jmp    f0103d95 <user_mem_check+0x6a>$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	76 12                	jbe    f0103d8e <user_mem_check+0x63>$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	eb 03                	jmp    f0103d81 <user_mem_check+0x56>$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103d81	obj/kern/kernel.asm	/^f0103d81:	89 1d 44 72 20 f0    	mov    %ebx,0xf0207244$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	eb 4f                	jmp    f0103ddd <user_mem_check+0xb2>$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103d9c	obj/kern/kernel.asm	/^f0103d9c:	00 $/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103da1	obj/kern/kernel.asm	/^f0103da1:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103da4	obj/kern/kernel.asm	/^f0103da4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103da7	obj/kern/kernel.asm	/^f0103da7:	e8 e6 db ff ff       	call   f0101992 <pgdir_walk>$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	85 c0                	test   %eax,%eax$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	74 08                	je     f0103db8 <user_mem_check+0x8d>$/;"	l
f0103db0	obj/kern/kernel.asm	/^f0103db0:	8b 00                	mov    (%eax),%eax$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	21 f8                	and    %edi,%eax$/;"	l
f0103db4	obj/kern/kernel.asm	/^f0103db4:	39 c7                	cmp    %eax,%edi$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	74 15                	je     f0103dcd <user_mem_check+0xa2>$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	0f 45 5d 0c          	cmovne 0xc(%ebp),%ebx$/;"	l
f0103dc0	obj/kern/kernel.asm	/^f0103dc0:	89 1d 44 72 20 f0    	mov    %ebx,0xf0207244$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	eb 10                	jmp    f0103ddd <user_mem_check+0xb2>$/;"	l
f0103dcd	obj/kern/kernel.asm	/^f0103dcd:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103dd3	obj/kern/kernel.asm	/^f0103dd3:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f0103dd6	obj/kern/kernel.asm	/^f0103dd6:	75 9c                	jne    f0103d74 <user_mem_check+0x49>$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	5b                   	pop    %ebx$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	5e                   	pop    %esi$/;"	l
f0103de2	obj/kern/kernel.asm	/^f0103de2:	5f                   	pop    %edi$/;"	l
f0103de3	obj/kern/kernel.asm	/^f0103de3:	5d                   	pop    %ebp$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	c3                   	ret    $/;"	l
f0103de5	obj/kern/kernel.asm	/^f0103de5 <user_mem_assert>:$/;"	l
f0103de5	obj/kern/kernel.asm	/^f0103de5:	55                   	push   %ebp$/;"	l
f0103de6	obj/kern/kernel.asm	/^f0103de6:	89 e5                	mov    %esp,%ebp$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	53                   	push   %ebx$/;"	l
f0103de9	obj/kern/kernel.asm	/^f0103de9:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103dec	obj/kern/kernel.asm	/^f0103dec:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e07	obj/kern/kernel.asm	/^f0103e07:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a:	e8 1c ff ff ff       	call   f0103d2b <user_mem_check>$/;"	l
f0103e0f	obj/kern/kernel.asm	/^f0103e0f:	85 c0                	test   %eax,%eax$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	79 24                	jns    f0103e37 <user_mem_assert+0x52>$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	a1 44 72 20 f0       	mov    0xf0207244,%eax$/;"	l
f0103e18	obj/kern/kernel.asm	/^f0103e18:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103e1f	obj/kern/kernel.asm	/^f0103e1f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e23	obj/kern/kernel.asm	/^f0103e23:	c7 04 24 c8 86 10 f0 	movl   $0xf01086c8,(%esp)$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	e8 5f 09 00 00       	call   f010478e <cprintf>$/;"	l
f0103e2f	obj/kern/kernel.asm	/^f0103e2f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	e8 70 06 00 00       	call   f01044a7 <env_destroy>$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103e3a	obj/kern/kernel.asm	/^f0103e3a:	5b                   	pop    %ebx$/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	5d                   	pop    %ebp$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	c3                   	ret    $/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	00 00                	add    %al,(%eax)$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40 <region_alloc>:$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	55                   	push   %ebp$/;"	l
f0103e41	obj/kern/kernel.asm	/^f0103e41:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e43	obj/kern/kernel.asm	/^f0103e43:	57                   	push   %edi$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	56                   	push   %esi$/;"	l
f0103e45	obj/kern/kernel.asm	/^f0103e45:	53                   	push   %ebx$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	89 c6                	mov    %eax,%esi$/;"	l
f0103e4b	obj/kern/kernel.asm	/^f0103e4b:	89 d3                	mov    %edx,%ebx$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	8d bc 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%edi$/;"	l
f0103e5a	obj/kern/kernel.asm	/^f0103e5a:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	39 fb                	cmp    %edi,%ebx$/;"	l
f0103e62	obj/kern/kernel.asm	/^f0103e62:	74 51                	je     f0103eb5 <region_alloc+0x75>$/;"	l
f0103e64	obj/kern/kernel.asm	/^f0103e64:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	e8 69 da ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	85 c0                	test   %eax,%eax$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	75 1c                	jne    f0103e90 <region_alloc+0x50>$/;"	l
f0103e74	obj/kern/kernel.asm	/^f0103e74:	c7 44 24 08 08 8a 10 	movl   $0xf0108a08,0x8(%esp)$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	f0 $/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	c7 44 24 04 3b 01 00 	movl   $0x13b,0x4(%esp)$/;"	l
f0103e83	obj/kern/kernel.asm	/^f0103e83:	00 $/;"	l
f0103e84	obj/kern/kernel.asm	/^f0103e84:	c7 04 24 13 8a 10 f0 	movl   $0xf0108a13,(%esp)$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	e8 b0 c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0103e97	obj/kern/kernel.asm	/^f0103e97:	00 $/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ea6	obj/kern/kernel.asm	/^f0103ea6:	e8 fd dc ff ff       	call   f0101ba8 <page_insert>$/;"	l
f0103eab	obj/kern/kernel.asm	/^f0103eab:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103eb1	obj/kern/kernel.asm	/^f0103eb1:	39 df                	cmp    %ebx,%edi$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	75 af                	jne    f0103e64 <region_alloc+0x24>$/;"	l
f0103eb5	obj/kern/kernel.asm	/^f0103eb5:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103eb8	obj/kern/kernel.asm	/^f0103eb8:	5b                   	pop    %ebx$/;"	l
f0103eb9	obj/kern/kernel.asm	/^f0103eb9:	5e                   	pop    %esi$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	5f                   	pop    %edi$/;"	l
f0103ebb	obj/kern/kernel.asm	/^f0103ebb:	5d                   	pop    %ebp$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	c3                   	ret    $/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd <envid2env>:$/;"	l
f0103ebd	obj/kern/kernel.asm	/^f0103ebd:	55                   	push   %ebp$/;"	l
f0103ebe	obj/kern/kernel.asm	/^f0103ebe:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ec0	obj/kern/kernel.asm	/^f0103ec0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103ec3	obj/kern/kernel.asm	/^f0103ec3:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0103ec6	obj/kern/kernel.asm	/^f0103ec6:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0103ecc	obj/kern/kernel.asm	/^f0103ecc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103ecf	obj/kern/kernel.asm	/^f0103ecf:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0103ed2	obj/kern/kernel.asm	/^f0103ed2:	0f b6 55 10          	movzbl 0x10(%ebp),%edx$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	85 c0                	test   %eax,%eax$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	75 17                	jne    f0103ef1 <envid2env+0x34>$/;"	l
f0103eda	obj/kern/kernel.asm	/^f0103eda:	e8 71 2e 00 00       	call   f0106d50 <cpunum>$/;"	l
f0103edf	obj/kern/kernel.asm	/^f0103edf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ee2	obj/kern/kernel.asm	/^f0103ee2:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	89 06                	mov    %eax,(%esi)$/;"	l
f0103eea	obj/kern/kernel.asm	/^f0103eea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	eb 67                	jmp    f0103f58 <envid2env+0x9b>$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	89 c3                	mov    %eax,%ebx$/;"	l
f0103ef3	obj/kern/kernel.asm	/^f0103ef3:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	c1 e3 07             	shl    $0x7,%ebx$/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	03 1d 48 72 20 f0    	add    0xf0207248,%ebx$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	74 05                	je     f0103f0d <envid2env+0x50>$/;"	l
f0103f08	obj/kern/kernel.asm	/^f0103f08:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	74 0d                	je     f0103f1a <envid2env+0x5d>$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103f13	obj/kern/kernel.asm	/^f0103f13:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103f18	obj/kern/kernel.asm	/^f0103f18:	eb 3e                	jmp    f0103f58 <envid2env+0x9b>$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	84 d2                	test   %dl,%dl$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	74 33                	je     f0103f51 <envid2env+0x94>$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	e8 2d 2e 00 00       	call   f0106d50 <cpunum>$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	39 98 28 80 20 f0    	cmp    %ebx,-0xfdf7fd8(%eax)$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	74 23                	je     f0103f51 <envid2env+0x94>$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	8b 7b 4c             	mov    0x4c(%ebx),%edi$/;"	l
f0103f31	obj/kern/kernel.asm	/^f0103f31:	e8 1a 2e 00 00       	call   f0106d50 <cpunum>$/;"	l
f0103f36	obj/kern/kernel.asm	/^f0103f36:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	3b 78 48             	cmp    0x48(%eax),%edi$/;"	l
f0103f42	obj/kern/kernel.asm	/^f0103f42:	74 0d                	je     f0103f51 <envid2env+0x94>$/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	eb 07                	jmp    f0103f58 <envid2env+0x9b>$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103f58	obj/kern/kernel.asm	/^f0103f58:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0103f5b	obj/kern/kernel.asm	/^f0103f5b:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0103f5e	obj/kern/kernel.asm	/^f0103f5e:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	89 ec                	mov    %ebp,%esp$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	5d                   	pop    %ebp$/;"	l
f0103f64	obj/kern/kernel.asm	/^f0103f64:	c3                   	ret    $/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65 <env_init_percpu>:$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	55                   	push   %ebp$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f68	obj/kern/kernel.asm	/^f0103f68:	b8 40 33 12 f0       	mov    $0xf0123340,%eax$/;"	l
f0103f6d	obj/kern/kernel.asm	/^f0103f6d:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103f75	obj/kern/kernel.asm	/^f0103f75:	8e e8                	mov    %eax,%gs$/;"	l
f0103f77	obj/kern/kernel.asm	/^f0103f77:	8e e0                	mov    %eax,%fs$/;"	l
f0103f79	obj/kern/kernel.asm	/^f0103f79:	b0 10                	mov    $0x10,%al$/;"	l
f0103f7b	obj/kern/kernel.asm	/^f0103f7b:	8e c0                	mov    %eax,%es$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	8e d8                	mov    %eax,%ds$/;"	l
f0103f7f	obj/kern/kernel.asm	/^f0103f7f:	8e d0                	mov    %eax,%ss$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	ea 88 3f 10 f0 08 00 	ljmp   $0x8,$0xf0103f88$/;"	l
f0103f88	obj/kern/kernel.asm	/^f0103f88:	b0 00                	mov    $0x0,%al$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	0f 00 d0             	lldt   %ax$/;"	l
f0103f8d	obj/kern/kernel.asm	/^f0103f8d:	5d                   	pop    %ebp$/;"	l
f0103f8e	obj/kern/kernel.asm	/^f0103f8e:	c3                   	ret    $/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f <env_init>:$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	55                   	push   %ebp$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	56                   	push   %esi$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	53                   	push   %ebx$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	8b 35 48 72 20 f0    	mov    0xf0207248,%esi$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	8d 86 80 ff 01 00    	lea    0x1ff80(%esi),%eax$/;"	l
f0103fa0	obj/kern/kernel.asm	/^f0103fa0:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103fa5	obj/kern/kernel.asm	/^f0103fa5:	ba ff 03 00 00       	mov    $0x3ff,%edx$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	eb 02                	jmp    f0103fae <env_init+0x1f>$/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103fae	obj/kern/kernel.asm	/^f0103fae:	89 c3                	mov    %eax,%ebx$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	83 c0 80             	add    $0xffffff80,%eax$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	83 fa ff             	cmp    $0xffffffff,%edx$/;"	l
f0103fc3	obj/kern/kernel.asm	/^f0103fc3:	75 e7                	jne    f0103fac <env_init+0x1d>$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	89 35 4c 72 20 f0    	mov    %esi,0xf020724c$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	e8 95 ff ff ff       	call   f0103f65 <env_init_percpu>$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	5b                   	pop    %ebx$/;"	l
f0103fd1	obj/kern/kernel.asm	/^f0103fd1:	5e                   	pop    %esi$/;"	l
f0103fd2	obj/kern/kernel.asm	/^f0103fd2:	5d                   	pop    %ebp$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	c3                   	ret    $/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4 <env_alloc>:$/;"	l
f0103fd4	obj/kern/kernel.asm	/^f0103fd4:	55                   	push   %ebp$/;"	l
f0103fd5	obj/kern/kernel.asm	/^f0103fd5:	89 e5                	mov    %esp,%ebp$/;"	l
f0103fd7	obj/kern/kernel.asm	/^f0103fd7:	53                   	push   %ebx$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	8b 1d 4c 72 20 f0    	mov    0xf020724c,%ebx$/;"	l
f0103fe1	obj/kern/kernel.asm	/^f0103fe1:	85 db                	test   %ebx,%ebx$/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	0f 84 6a 01 00 00    	je     f0104153 <env_alloc+0x17f>$/;"	l
f0103fe9	obj/kern/kernel.asm	/^f0103fe9:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	e8 e4 d8 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f0103ff5	obj/kern/kernel.asm	/^f0103ff5:	85 c0                	test   %eax,%eax$/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	0f 84 5d 01 00 00    	je     f010415a <env_alloc+0x186>$/;"	l
f0103ffd	obj/kern/kernel.asm	/^f0103ffd:	89 c2                	mov    %eax,%edx$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	2b 15 90 7e 20 f0    	sub    0xf0207e90,%edx$/;"	l
f0104005	obj/kern/kernel.asm	/^f0104005:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010400b	obj/kern/kernel.asm	/^f010400b:	89 d1                	mov    %edx,%ecx$/;"	l
f010400d	obj/kern/kernel.asm	/^f010400d:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0104010	obj/kern/kernel.asm	/^f0104010:	3b 0d 88 7e 20 f0    	cmp    0xf0207e88,%ecx$/;"	l
f0104016	obj/kern/kernel.asm	/^f0104016:	72 20                	jb     f0104038 <env_alloc+0x64>$/;"	l
f0104018	obj/kern/kernel.asm	/^f0104018:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010401c	obj/kern/kernel.asm	/^f010401c:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0104023	obj/kern/kernel.asm	/^f0104023:	f0 $/;"	l
f0104024	obj/kern/kernel.asm	/^f0104024:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	00 $/;"	l
f010402c	obj/kern/kernel.asm	/^f010402c:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	e8 08 c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0104041	obj/kern/kernel.asm	/^f0104041:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	00 $/;"	l
f010404e	obj/kern/kernel.asm	/^f010404e:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104057	obj/kern/kernel.asm	/^f0104057:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010405d	obj/kern/kernel.asm	/^f010405d:	e8 33 27 00 00       	call   f0106795 <memcpy>$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	c7 44 24 08 ec 0e 00 	movl   $0xeec,0x8(%esp)$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	00 $/;"	l
f010406a	obj/kern/kernel.asm	/^f010406a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	00 $/;"	l
f0104072	obj/kern/kernel.asm	/^f0104072:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0104075	obj/kern/kernel.asm	/^f0104075:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	e8 44 26 00 00       	call   f01066c1 <memset>$/;"	l
f010407d	obj/kern/kernel.asm	/^f010407d:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104085	obj/kern/kernel.asm	/^f0104085:	77 20                	ja     f01040a7 <env_alloc+0xd3>$/;"	l
f0104087	obj/kern/kernel.asm	/^f0104087:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f0104092	obj/kern/kernel.asm	/^f0104092:	f0 $/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	c7 44 24 04 d7 00 00 	movl   $0xd7,0x4(%esp)$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	00 $/;"	l
f010409b	obj/kern/kernel.asm	/^f010409b:	c7 04 24 13 8a 10 f0 	movl   $0xf0108a13,(%esp)$/;"	l
f01040a2	obj/kern/kernel.asm	/^f01040a2:	e8 99 bf ff ff       	call   f0100040 <_panic>$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	83 ca 05             	or     $0x5,%edx$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f01040b6	obj/kern/kernel.asm	/^f01040b6:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f01040be	obj/kern/kernel.asm	/^f01040be:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	89 da                	mov    %ebx,%edx$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	2b 15 48 72 20 f0    	sub    0xf0207248,%edx$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	c1 fa 07             	sar    $0x7,%edx$/;"	l
f01040d6	obj/kern/kernel.asm	/^f01040d6:	09 d0                	or     %edx,%eax$/;"	l
f01040d8	obj/kern/kernel.asm	/^f01040d8:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f01040db	obj/kern/kernel.asm	/^f01040db:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01040de	obj/kern/kernel.asm	/^f01040de:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f01040e8	obj/kern/kernel.asm	/^f01040e8:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f01040ef	obj/kern/kernel.asm	/^f01040ef:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f01040f6	obj/kern/kernel.asm	/^f01040f6:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f01040fd	obj/kern/kernel.asm	/^f01040fd:	00 $/;"	l
f01040fe	obj/kern/kernel.asm	/^f01040fe:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	00 $/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	e8 b3 25 00 00       	call   f01066c1 <memset>$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f010411a	obj/kern/kernel.asm	/^f010411a:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0104127	obj/kern/kernel.asm	/^f0104127:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f010412d	obj/kern/kernel.asm	/^f010412d:	81 4b 38 00 02 00 00 	orl    $0x200,0x38(%ebx)$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f010413b	obj/kern/kernel.asm	/^f010413b:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	a3 4c 72 20 f0       	mov    %eax,0xf020724c$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	89 18                	mov    %ebx,(%eax)$/;"	l
f010414c	obj/kern/kernel.asm	/^f010414c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104151	obj/kern/kernel.asm	/^f0104151:	eb 0c                	jmp    f010415f <env_alloc+0x18b>$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0104158	obj/kern/kernel.asm	/^f0104158:	eb 05                	jmp    f010415f <env_alloc+0x18b>$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	5b                   	pop    %ebx$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	5d                   	pop    %ebp$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	c3                   	ret    $/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165 <env_create>:$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	55                   	push   %ebp$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	89 e5                	mov    %esp,%ebp$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	57                   	push   %edi$/;"	l
f0104169	obj/kern/kernel.asm	/^f0104169:	56                   	push   %esi$/;"	l
f010416a	obj/kern/kernel.asm	/^f010416a:	53                   	push   %ebx$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0104171	obj/kern/kernel.asm	/^f0104171:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	00 $/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	e8 50 fe ff ff       	call   f0103fd4 <env_alloc>$/;"	l
f0104184	obj/kern/kernel.asm	/^f0104184:	85 c0                	test   %eax,%eax$/;"	l
f0104186	obj/kern/kernel.asm	/^f0104186:	79 1c                	jns    f01041a4 <env_create+0x3f>$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	c7 44 24 08 1e 8a 10 	movl   $0xf0108a1e,0x8(%esp)$/;"	l
f010418f	obj/kern/kernel.asm	/^f010418f:	f0 $/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	c7 44 24 04 aa 01 00 	movl   $0x1aa,0x4(%esp)$/;"	l
f0104197	obj/kern/kernel.asm	/^f0104197:	00 $/;"	l
f0104198	obj/kern/kernel.asm	/^f0104198:	c7 04 24 13 8a 10 f0 	movl   $0xf0108a13,(%esp)$/;"	l
f010419f	obj/kern/kernel.asm	/^f010419f:	e8 9c be ff ff       	call   f0100040 <_panic>$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01041aa	obj/kern/kernel.asm	/^f01041aa:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f01041b0	obj/kern/kernel.asm	/^f01041b0:	74 1c                	je     f01041ce <env_create+0x69>$/;"	l
f01041b2	obj/kern/kernel.asm	/^f01041b2:	c7 44 24 08 1e 8a 10 	movl   $0xf0108a1e,0x8(%esp)$/;"	l
f01041b9	obj/kern/kernel.asm	/^f01041b9:	f0 $/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	c7 44 24 04 83 01 00 	movl   $0x183,0x4(%esp)$/;"	l
f01041c1	obj/kern/kernel.asm	/^f01041c1:	00 $/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	c7 04 24 13 8a 10 f0 	movl   $0xf0108a13,(%esp)$/;"	l
f01041c9	obj/kern/kernel.asm	/^f01041c9:	e8 72 be ff ff       	call   f0100040 <_panic>$/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01041d9	obj/kern/kernel.asm	/^f01041d9:	77 20                	ja     f01041fb <env_create+0x96>$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f01041e6	obj/kern/kernel.asm	/^f01041e6:	f0 $/;"	l
f01041e7	obj/kern/kernel.asm	/^f01041e7:	c7 44 24 04 85 01 00 	movl   $0x185,0x4(%esp)$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	00 $/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	c7 04 24 13 8a 10 f0 	movl   $0xf0108a13,(%esp)$/;"	l
f01041f6	obj/kern/kernel.asm	/^f01041f6:	e8 45 be ff ff       	call   f0100040 <_panic>$/;"	l
f01041fb	obj/kern/kernel.asm	/^f01041fb:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104203	obj/kern/kernel.asm	/^f0104203:	89 fb                	mov    %edi,%ebx$/;"	l
f0104205	obj/kern/kernel.asm	/^f0104205:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0104208	obj/kern/kernel.asm	/^f0104208:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	01 de                	add    %ebx,%esi$/;"	l
f0104211	obj/kern/kernel.asm	/^f0104211:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104213	obj/kern/kernel.asm	/^f0104213:	73 4f                	jae    f0104264 <env_create+0xff>$/;"	l
f0104215	obj/kern/kernel.asm	/^f0104215:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	75 43                	jne    f010425d <env_create+0xf8>$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f010421d	obj/kern/kernel.asm	/^f010421d:	8b 53 0c             	mov    0xc(%ebx),%edx$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104223	obj/kern/kernel.asm	/^f0104223:	e8 18 fc ff ff       	call   f0103e40 <region_alloc>$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f010422b	obj/kern/kernel.asm	/^f010422b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104236	obj/kern/kernel.asm	/^f0104236:	00 $/;"	l
f0104237	obj/kern/kernel.asm	/^f0104237:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010423d	obj/kern/kernel.asm	/^f010423d:	e8 7f 24 00 00       	call   f01066c1 <memset>$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104249	obj/kern/kernel.asm	/^f0104249:	89 f8                	mov    %edi,%eax$/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	e8 38 25 00 00       	call   f0106795 <memcpy>$/;"	l
f010425d	obj/kern/kernel.asm	/^f010425d:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	39 de                	cmp    %ebx,%esi$/;"	l
f0104262	obj/kern/kernel.asm	/^f0104262:	77 b1                	ja     f0104215 <env_create+0xb0>$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f0104269	obj/kern/kernel.asm	/^f0104269:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010426e	obj/kern/kernel.asm	/^f010426e:	77 20                	ja     f0104290 <env_create+0x12b>$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f010427b	obj/kern/kernel.asm	/^f010427b:	f0 $/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	c7 44 24 04 94 01 00 	movl   $0x194,0x4(%esp)$/;"	l
f0104283	obj/kern/kernel.asm	/^f0104283:	00 $/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	c7 04 24 13 8a 10 f0 	movl   $0xf0108a13,(%esp)$/;"	l
f010428b	obj/kern/kernel.asm	/^f010428b:	e8 b0 bd ff ff       	call   f0100040 <_panic>$/;"	l
f0104290	obj/kern/kernel.asm	/^f0104290:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104295	obj/kern/kernel.asm	/^f0104295:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104298	obj/kern/kernel.asm	/^f0104298:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f01042a6	obj/kern/kernel.asm	/^f01042a6:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01042ae	obj/kern/kernel.asm	/^f01042ae:	e8 8d fb ff ff       	call   f0103e40 <region_alloc>$/;"	l
f01042b3	obj/kern/kernel.asm	/^f01042b3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%eax)$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	75 07                	jne    f01042cf <env_create+0x16a>$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f01042cf	obj/kern/kernel.asm	/^f01042cf:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01042d2	obj/kern/kernel.asm	/^f01042d2:	5b                   	pop    %ebx$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	5e                   	pop    %esi$/;"	l
f01042d4	obj/kern/kernel.asm	/^f01042d4:	5f                   	pop    %edi$/;"	l
f01042d5	obj/kern/kernel.asm	/^f01042d5:	5d                   	pop    %ebp$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	c3                   	ret    $/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7 <env_free>:$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	55                   	push   %ebp$/;"	l
f01042d8	obj/kern/kernel.asm	/^f01042d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01042da	obj/kern/kernel.asm	/^f01042da:	57                   	push   %edi$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	56                   	push   %esi$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	53                   	push   %ebx$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01042e0	obj/kern/kernel.asm	/^f01042e0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01042e3	obj/kern/kernel.asm	/^f01042e3:	e8 68 2a 00 00       	call   f0106d50 <cpunum>$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042eb	obj/kern/kernel.asm	/^f01042eb:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01042f2	obj/kern/kernel.asm	/^f01042f2:	39 b8 28 80 20 f0    	cmp    %edi,-0xfdf7fd8(%eax)$/;"	l
f01042f8	obj/kern/kernel.asm	/^f01042f8:	75 3b                	jne    f0104335 <env_free+0x5e>$/;"	l
f01042fa	obj/kern/kernel.asm	/^f01042fa:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	77 20                	ja     f0104326 <env_free+0x4f>$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010430a	obj/kern/kernel.asm	/^f010430a:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	f0 $/;"	l
f0104312	obj/kern/kernel.asm	/^f0104312:	c7 44 24 04 c2 01 00 	movl   $0x1c2,0x4(%esp)$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	00 $/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	c7 04 24 13 8a 10 f0 	movl   $0xf0108a13,(%esp)$/;"	l
f0104321	obj/kern/kernel.asm	/^f0104321:	e8 1a bd ff ff       	call   f0100040 <_panic>$/;"	l
f0104326	obj/kern/kernel.asm	/^f0104326:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010432b	obj/kern/kernel.asm	/^f010432b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0104335	obj/kern/kernel.asm	/^f0104335:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010433b	obj/kern/kernel.asm	/^f010433b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010433e	obj/kern/kernel.asm	/^f010433e:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0104347	obj/kern/kernel.asm	/^f0104347:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f010434d	obj/kern/kernel.asm	/^f010434d:	0f 84 b8 00 00 00    	je     f010440b <env_free+0x134>$/;"	l
f0104353	obj/kern/kernel.asm	/^f0104353:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	89 f0                	mov    %esi,%eax$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010435e	obj/kern/kernel.asm	/^f010435e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104361	obj/kern/kernel.asm	/^f0104361:	3b 05 88 7e 20 f0    	cmp    0xf0207e88,%eax$/;"	l
f0104367	obj/kern/kernel.asm	/^f0104367:	72 20                	jb     f0104389 <env_free+0xb2>$/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0104374	obj/kern/kernel.asm	/^f0104374:	f0 $/;"	l
f0104375	obj/kern/kernel.asm	/^f0104375:	c7 44 24 04 d1 01 00 	movl   $0x1d1,0x4(%esp)$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	00 $/;"	l
f010437d	obj/kern/kernel.asm	/^f010437d:	c7 04 24 13 8a 10 f0 	movl   $0xf0108a13,(%esp)$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	e8 b7 bc ff ff       	call   f0100040 <_panic>$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f010438c	obj/kern/kernel.asm	/^f010438c:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f010438f	obj/kern/kernel.asm	/^f010438f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104392	obj/kern/kernel.asm	/^f0104392:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104397	obj/kern/kernel.asm	/^f0104397:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	01 $/;"	l
f010439f	obj/kern/kernel.asm	/^f010439f:	74 17                	je     f01043b8 <env_free+0xe1>$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	89 d8                	mov    %ebx,%eax$/;"	l
f01043a3	obj/kern/kernel.asm	/^f01043a3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01043a6	obj/kern/kernel.asm	/^f01043a6:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f01043a9	obj/kern/kernel.asm	/^f01043a9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	e8 b2 d7 ff ff       	call   f0101b6a <page_remove>$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	75 d4                	jne    f0104397 <env_free+0xc0>$/;"	l
f01043c3	obj/kern/kernel.asm	/^f01043c3:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01043c9	obj/kern/kernel.asm	/^f01043c9:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f01043d0	obj/kern/kernel.asm	/^f01043d0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01043d3	obj/kern/kernel.asm	/^f01043d3:	3b 05 88 7e 20 f0    	cmp    0xf0207e88,%eax$/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9:	72 1c                	jb     f01043f7 <env_free+0x120>$/;"	l
f01043db	obj/kern/kernel.asm	/^f01043db:	c7 44 24 08 fc 7e 10 	movl   $0xf0107efc,0x8(%esp)$/;"	l
f01043e2	obj/kern/kernel.asm	/^f01043e2:	f0 $/;"	l
f01043e3	obj/kern/kernel.asm	/^f01043e3:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea:	00 $/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f01043f2	obj/kern/kernel.asm	/^f01043f2:	e8 49 bc ff ff       	call   f0100040 <_panic>$/;"	l
f01043f7	obj/kern/kernel.asm	/^f01043f7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	03 05 90 7e 20 f0    	add    0xf0207e90,%eax$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104406	obj/kern/kernel.asm	/^f0104406:	e8 64 d5 ff ff       	call   f010196f <page_decref>$/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f010440f	obj/kern/kernel.asm	/^f010440f:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0104416	obj/kern/kernel.asm	/^f0104416:	0f 85 19 ff ff ff    	jne    f0104335 <env_free+0x5e>$/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	77 20                	ja     f0104446 <env_free+0x16f>$/;"	l
f0104426	obj/kern/kernel.asm	/^f0104426:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010442a	obj/kern/kernel.asm	/^f010442a:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f0104431	obj/kern/kernel.asm	/^f0104431:	f0 $/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	c7 44 24 04 df 01 00 	movl   $0x1df,0x4(%esp)$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	00 $/;"	l
f010443a	obj/kern/kernel.asm	/^f010443a:	c7 04 24 13 8a 10 f0 	movl   $0xf0108a13,(%esp)$/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441:	e8 fa bb ff ff       	call   f0100040 <_panic>$/;"	l
f0104446	obj/kern/kernel.asm	/^f0104446:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0104455	obj/kern/kernel.asm	/^f0104455:	3b 05 88 7e 20 f0    	cmp    0xf0207e88,%eax$/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	72 1c                	jb     f0104479 <env_free+0x1a2>$/;"	l
f010445d	obj/kern/kernel.asm	/^f010445d:	c7 44 24 08 fc 7e 10 	movl   $0xf0107efc,0x8(%esp)$/;"	l
f0104464	obj/kern/kernel.asm	/^f0104464:	f0 $/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f010446c	obj/kern/kernel.asm	/^f010446c:	00 $/;"	l
f010446d	obj/kern/kernel.asm	/^f010446d:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	e8 c7 bb ff ff       	call   f0100040 <_panic>$/;"	l
f0104479	obj/kern/kernel.asm	/^f0104479:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010447c	obj/kern/kernel.asm	/^f010447c:	03 05 90 7e 20 f0    	add    0xf0207e90,%eax$/;"	l
f0104482	obj/kern/kernel.asm	/^f0104482:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	e8 e5 d4 ff ff       	call   f010196f <page_decref>$/;"	l
f010448a	obj/kern/kernel.asm	/^f010448a:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f0104491	obj/kern/kernel.asm	/^f0104491:	a1 4c 72 20 f0       	mov    0xf020724c,%eax$/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f0104499	obj/kern/kernel.asm	/^f0104499:	89 3d 4c 72 20 f0    	mov    %edi,0xf020724c$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01044a2	obj/kern/kernel.asm	/^f01044a2:	5b                   	pop    %ebx$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	5e                   	pop    %esi$/;"	l
f01044a4	obj/kern/kernel.asm	/^f01044a4:	5f                   	pop    %edi$/;"	l
f01044a5	obj/kern/kernel.asm	/^f01044a5:	5d                   	pop    %ebp$/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	c3                   	ret    $/;"	l
f01044a7	obj/kern/kernel.asm	/^f01044a7 <env_destroy>:$/;"	l
f01044a7	obj/kern/kernel.asm	/^f01044a7:	55                   	push   %ebp$/;"	l
f01044a8	obj/kern/kernel.asm	/^f01044a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	53                   	push   %ebx$/;"	l
f01044ab	obj/kern/kernel.asm	/^f01044ab:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01044ae	obj/kern/kernel.asm	/^f01044ae:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f01044b5	obj/kern/kernel.asm	/^f01044b5:	75 19                	jne    f01044d0 <env_destroy+0x29>$/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	e8 94 28 00 00       	call   f0106d50 <cpunum>$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044bf	obj/kern/kernel.asm	/^f01044bf:	39 98 28 80 20 f0    	cmp    %ebx,-0xfdf7fd8(%eax)$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	74 09                	je     f01044d0 <env_destroy+0x29>$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	eb 2f                	jmp    f01044ff <env_destroy+0x58>$/;"	l
f01044d0	obj/kern/kernel.asm	/^f01044d0:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	e8 ff fd ff ff       	call   f01042d7 <env_free>$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	e8 73 28 00 00       	call   f0106d50 <cpunum>$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	39 98 28 80 20 f0    	cmp    %ebx,-0xfdf7fd8(%eax)$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	75 17                	jne    f01044ff <env_destroy+0x58>$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	e8 63 28 00 00       	call   f0106d50 <cpunum>$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	c7 80 28 80 20 f0 00 	movl   $0x0,-0xfdf7fd8(%eax)$/;"	l
f01044f7	obj/kern/kernel.asm	/^f01044f7:	00 00 00 $/;"	l
f01044fa	obj/kern/kernel.asm	/^f01044fa:	e8 6d 0d 00 00       	call   f010526c <sched_yield>$/;"	l
f01044ff	obj/kern/kernel.asm	/^f01044ff:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104502	obj/kern/kernel.asm	/^f0104502:	5b                   	pop    %ebx$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	5d                   	pop    %ebp$/;"	l
f0104504	obj/kern/kernel.asm	/^f0104504:	c3                   	ret    $/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505 <env_pop_tf>:$/;"	l
f0104505	obj/kern/kernel.asm	/^f0104505:	55                   	push   %ebp$/;"	l
f0104506	obj/kern/kernel.asm	/^f0104506:	89 e5                	mov    %esp,%ebp$/;"	l
f0104508	obj/kern/kernel.asm	/^f0104508:	53                   	push   %ebx$/;"	l
f0104509	obj/kern/kernel.asm	/^f0104509:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010450c	obj/kern/kernel.asm	/^f010450c:	e8 3f 28 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	8b 98 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%ebx$/;"	l
f010451a	obj/kern/kernel.asm	/^f010451a:	e8 31 28 00 00       	call   f0106d50 <cpunum>$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0104525	obj/kern/kernel.asm	/^f0104525:	61                   	popa   $/;"	l
f0104526	obj/kern/kernel.asm	/^f0104526:	07                   	pop    %es$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	1f                   	pop    %ds$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	83 c4 08             	add    $0x8,%esp$/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	cf                   	iret   $/;"	l
f010452c	obj/kern/kernel.asm	/^f010452c:	c7 44 24 08 24 8a 10 	movl   $0xf0108a24,0x8(%esp)$/;"	l
f0104533	obj/kern/kernel.asm	/^f0104533:	f0 $/;"	l
f0104534	obj/kern/kernel.asm	/^f0104534:	c7 44 24 04 15 02 00 	movl   $0x215,0x4(%esp)$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	00 $/;"	l
f010453c	obj/kern/kernel.asm	/^f010453c:	c7 04 24 13 8a 10 f0 	movl   $0xf0108a13,(%esp)$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	e8 f8 ba ff ff       	call   f0100040 <_panic>$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548 <env_run>:$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	55                   	push   %ebp$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	89 e5                	mov    %esp,%ebp$/;"	l
f010454b	obj/kern/kernel.asm	/^f010454b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	e8 fd 27 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104553	obj/kern/kernel.asm	/^f0104553:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104556	obj/kern/kernel.asm	/^f0104556:	83 b8 28 80 20 f0 00 	cmpl   $0x0,-0xfdf7fd8(%eax)$/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d:	74 29                	je     f0104588 <env_run+0x40>$/;"	l
f010455f	obj/kern/kernel.asm	/^f010455f:	e8 ec 27 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f010456d	obj/kern/kernel.asm	/^f010456d:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104571	obj/kern/kernel.asm	/^f0104571:	75 15                	jne    f0104588 <env_run+0x40>$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	e8 d8 27 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104578	obj/kern/kernel.asm	/^f0104578:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010457b	obj/kern/kernel.asm	/^f010457b:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0104588	obj/kern/kernel.asm	/^f0104588:	e8 c3 27 00 00       	call   f0106d50 <cpunum>$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104590	obj/kern/kernel.asm	/^f0104590:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104593	obj/kern/kernel.asm	/^f0104593:	89 90 28 80 20 f0    	mov    %edx,-0xfdf7fd8(%eax)$/;"	l
f0104599	obj/kern/kernel.asm	/^f0104599:	e8 b2 27 00 00       	call   f0106d50 <cpunum>$/;"	l
f010459e	obj/kern/kernel.asm	/^f010459e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	e8 9d 27 00 00       	call   f0106d50 <cpunum>$/;"	l
f01045b3	obj/kern/kernel.asm	/^f01045b3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045b6	obj/kern/kernel.asm	/^f01045b6:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f01045c0	obj/kern/kernel.asm	/^f01045c0:	e8 8b 27 00 00       	call   f0106d50 <cpunum>$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01045d1	obj/kern/kernel.asm	/^f01045d1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01045d6	obj/kern/kernel.asm	/^f01045d6:	77 20                	ja     f01045f8 <env_run+0xb0>$/;"	l
f01045d8	obj/kern/kernel.asm	/^f01045d8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01045dc	obj/kern/kernel.asm	/^f01045dc:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f01045e3	obj/kern/kernel.asm	/^f01045e3:	f0 $/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	c7 44 24 04 39 02 00 	movl   $0x239,0x4(%esp)$/;"	l
f01045eb	obj/kern/kernel.asm	/^f01045eb:	00 $/;"	l
f01045ec	obj/kern/kernel.asm	/^f01045ec:	c7 04 24 13 8a 10 f0 	movl   $0xf0108a13,(%esp)$/;"	l
f01045f3	obj/kern/kernel.asm	/^f01045f3:	e8 48 ba ff ff       	call   f0100040 <_panic>$/;"	l
f01045f8	obj/kern/kernel.asm	/^f01045f8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	c7 04 24 40 34 12 f0 	movl   $0xf0123440,(%esp)$/;"	l
f0104607	obj/kern/kernel.asm	/^f0104607:	e8 b7 2a 00 00       	call   f01070c3 <spin_unlock>$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	f3 90                	pause  $/;"	l
f010460e	obj/kern/kernel.asm	/^f010460e:	e8 3d 27 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104613	obj/kern/kernel.asm	/^f0104613:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	e8 e1 fe ff ff       	call   f0104505 <env_pop_tf>$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624 <mc146818_read>:$/;"	l
f0104624	obj/kern/kernel.asm	/^f0104624:	55                   	push   %ebp$/;"	l
f0104625	obj/kern/kernel.asm	/^f0104625:	89 e5                	mov    %esp,%ebp$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010462c	obj/kern/kernel.asm	/^f010462c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	ee                   	out    %al,(%dx)$/;"	l
f0104630	obj/kern/kernel.asm	/^f0104630:	b2 71                	mov    $0x71,%dl$/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632:	ec                   	in     (%dx),%al$/;"	l
f0104633	obj/kern/kernel.asm	/^f0104633:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	5d                   	pop    %ebp$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	c3                   	ret    $/;"	l
f0104638	obj/kern/kernel.asm	/^f0104638 <mc146818_write>:$/;"	l
f0104638	obj/kern/kernel.asm	/^f0104638:	55                   	push   %ebp$/;"	l
f0104639	obj/kern/kernel.asm	/^f0104639:	89 e5                	mov    %esp,%ebp$/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	ee                   	out    %al,(%dx)$/;"	l
f0104644	obj/kern/kernel.asm	/^f0104644:	b2 71                	mov    $0x71,%dl$/;"	l
f0104646	obj/kern/kernel.asm	/^f0104646:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	ee                   	out    %al,(%dx)$/;"	l
f010464a	obj/kern/kernel.asm	/^f010464a:	5d                   	pop    %ebp$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	c3                   	ret    $/;"	l
f010464c	obj/kern/kernel.asm	/^f010464c <irq_setmask_8259A>:$/;"	l
f010464c	obj/kern/kernel.asm	/^f010464c:	55                   	push   %ebp$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	89 e5                	mov    %esp,%ebp$/;"	l
f010464f	obj/kern/kernel.asm	/^f010464f:	56                   	push   %esi$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	53                   	push   %ebx$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104654	obj/kern/kernel.asm	/^f0104654:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	89 c6                	mov    %eax,%esi$/;"	l
f0104659	obj/kern/kernel.asm	/^f0104659:	66 a3 c8 33 12 f0    	mov    %ax,0xf01233c8$/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f:	80 3d 50 72 20 f0 00 	cmpb   $0x0,0xf0207250$/;"	l
f0104666	obj/kern/kernel.asm	/^f0104666:	74 4e                	je     f01046b6 <irq_setmask_8259A+0x6a>$/;"	l
f0104668	obj/kern/kernel.asm	/^f0104668:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010466d	obj/kern/kernel.asm	/^f010466d:	ee                   	out    %al,(%dx)$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	89 f0                	mov    %esi,%eax$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104676	obj/kern/kernel.asm	/^f0104676:	ee                   	out    %al,(%dx)$/;"	l
f0104677	obj/kern/kernel.asm	/^f0104677:	c7 04 24 30 8a 10 f0 	movl   $0xf0108a30,(%esp)$/;"	l
f010467e	obj/kern/kernel.asm	/^f010467e:	e8 0b 01 00 00       	call   f010478e <cprintf>$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104688	obj/kern/kernel.asm	/^f0104688:	0f b7 f6             	movzwl %si,%esi$/;"	l
f010468b	obj/kern/kernel.asm	/^f010468b:	f7 d6                	not    %esi$/;"	l
f010468d	obj/kern/kernel.asm	/^f010468d:	0f a3 de             	bt     %ebx,%esi$/;"	l
f0104690	obj/kern/kernel.asm	/^f0104690:	73 10                	jae    f01046a2 <irq_setmask_8259A+0x56>$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104696	obj/kern/kernel.asm	/^f0104696:	c7 04 24 e3 8e 10 f0 	movl   $0xf0108ee3,(%esp)$/;"	l
f010469d	obj/kern/kernel.asm	/^f010469d:	e8 ec 00 00 00       	call   f010478e <cprintf>$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01046a5	obj/kern/kernel.asm	/^f01046a5:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01046a8	obj/kern/kernel.asm	/^f01046a8:	75 e3                	jne    f010468d <irq_setmask_8259A+0x41>$/;"	l
f01046aa	obj/kern/kernel.asm	/^f01046aa:	c7 04 24 d6 89 10 f0 	movl   $0xf01089d6,(%esp)$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	e8 d8 00 00 00       	call   f010478e <cprintf>$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046b9	obj/kern/kernel.asm	/^f01046b9:	5b                   	pop    %ebx$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	5e                   	pop    %esi$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	5d                   	pop    %ebp$/;"	l
f01046bc	obj/kern/kernel.asm	/^f01046bc:	c3                   	ret    $/;"	l
f01046bd	obj/kern/kernel.asm	/^f01046bd <pic_init>:$/;"	l
f01046bd	obj/kern/kernel.asm	/^f01046bd:	55                   	push   %ebp$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	89 e5                	mov    %esp,%ebp$/;"	l
f01046c0	obj/kern/kernel.asm	/^f01046c0:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01046c3	obj/kern/kernel.asm	/^f01046c3:	c6 05 50 72 20 f0 01 	movb   $0x1,0xf0207250$/;"	l
f01046ca	obj/kern/kernel.asm	/^f01046ca:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01046cf	obj/kern/kernel.asm	/^f01046cf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01046d4	obj/kern/kernel.asm	/^f01046d4:	ee                   	out    %al,(%dx)$/;"	l
f01046d5	obj/kern/kernel.asm	/^f01046d5:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01046d7	obj/kern/kernel.asm	/^f01046d7:	ee                   	out    %al,(%dx)$/;"	l
f01046d8	obj/kern/kernel.asm	/^f01046d8:	b2 20                	mov    $0x20,%dl$/;"	l
f01046da	obj/kern/kernel.asm	/^f01046da:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01046df	obj/kern/kernel.asm	/^f01046df:	ee                   	out    %al,(%dx)$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	b2 21                	mov    $0x21,%dl$/;"	l
f01046e2	obj/kern/kernel.asm	/^f01046e2:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01046e7	obj/kern/kernel.asm	/^f01046e7:	ee                   	out    %al,(%dx)$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f01046ed	obj/kern/kernel.asm	/^f01046ed:	ee                   	out    %al,(%dx)$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	ee                   	out    %al,(%dx)$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	b2 a0                	mov    $0xa0,%dl$/;"	l
f01046f6	obj/kern/kernel.asm	/^f01046f6:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01046fb	obj/kern/kernel.asm	/^f01046fb:	ee                   	out    %al,(%dx)$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	ee                   	out    %al,(%dx)$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104709	obj/kern/kernel.asm	/^f0104709:	ee                   	out    %al,(%dx)$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	ee                   	out    %al,(%dx)$/;"	l
f0104710	obj/kern/kernel.asm	/^f0104710:	b2 20                	mov    $0x20,%dl$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	ee                   	out    %al,(%dx)$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010471d	obj/kern/kernel.asm	/^f010471d:	ee                   	out    %al,(%dx)$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104720	obj/kern/kernel.asm	/^f0104720:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	ee                   	out    %al,(%dx)$/;"	l
f0104726	obj/kern/kernel.asm	/^f0104726:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	ee                   	out    %al,(%dx)$/;"	l
f010472c	obj/kern/kernel.asm	/^f010472c:	0f b7 05 c8 33 12 f0 	movzwl 0xf01233c8,%eax$/;"	l
f0104733	obj/kern/kernel.asm	/^f0104733:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	74 0b                	je     f0104744 <pic_init+0x87>$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	e8 08 ff ff ff       	call   f010464c <irq_setmask_8259A>$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	c9                   	leave  $/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	c3                   	ret    $/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748 <putch>:$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	55                   	push   %ebp$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	89 e5                	mov    %esp,%ebp$/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010474e	obj/kern/kernel.asm	/^f010474e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104751	obj/kern/kernel.asm	/^f0104751:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	e8 86 c0 ff ff       	call   f01007df <cputchar>$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	c9                   	leave  $/;"	l
f010475a	obj/kern/kernel.asm	/^f010475a:	c3                   	ret    $/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b <vcprintf>:$/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b:	55                   	push   %ebp$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	89 e5                	mov    %esp,%ebp$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104761	obj/kern/kernel.asm	/^f0104761:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104776	obj/kern/kernel.asm	/^f0104776:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	c7 04 24 48 47 10 f0 	movl   $0xf0104748,(%esp)$/;"	l
f0104784	obj/kern/kernel.asm	/^f0104784:	e8 21 18 00 00       	call   f0105faa <vprintfmt>$/;"	l
f0104789	obj/kern/kernel.asm	/^f0104789:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	c9                   	leave  $/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	c3                   	ret    $/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e <cprintf>:$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	55                   	push   %ebp$/;"	l
f010478f	obj/kern/kernel.asm	/^f010478f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104791	obj/kern/kernel.asm	/^f0104791:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f0104797	obj/kern/kernel.asm	/^f0104797:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010479b	obj/kern/kernel.asm	/^f010479b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	e8 b5 ff ff ff       	call   f010475b <vcprintf>$/;"	l
f01047a6	obj/kern/kernel.asm	/^f01047a6:	c9                   	leave  $/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	c3                   	ret    $/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0 <trap_init_percpu>:$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	55                   	push   %ebp$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01047b6	obj/kern/kernel.asm	/^f01047b6:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	e8 8c 25 00 00       	call   f0106d50 <cpunum>$/;"	l
f01047c4	obj/kern/kernel.asm	/^f01047c4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047c7	obj/kern/kernel.asm	/^f01047c7:	0f b6 98 20 80 20 f0 	movzbl -0xfdf7fe0(%eax),%ebx$/;"	l
f01047ce	obj/kern/kernel.asm	/^f01047ce:	e8 7d 25 00 00       	call   f0106d50 <cpunum>$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	89 da                	mov    %ebx,%edx$/;"	l
f01047d8	obj/kern/kernel.asm	/^f01047d8:	c1 e2 0f             	shl    $0xf,%edx$/;"	l
f01047db	obj/kern/kernel.asm	/^f01047db:	81 c2 00 10 21 f0    	add    $0xf0211000,%edx$/;"	l
f01047e1	obj/kern/kernel.asm	/^f01047e1:	89 90 30 80 20 f0    	mov    %edx,-0xfdf7fd0(%eax)$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	e8 64 25 00 00       	call   f0106d50 <cpunum>$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	66 c7 80 34 80 20 f0 	movw   $0x10,-0xfdf7fcc(%eax)$/;"	l
f01047f6	obj/kern/kernel.asm	/^f01047f6:	10 00 $/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	83 c3 05             	add    $0x5,%ebx$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	e8 50 25 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	89 c6                	mov    %eax,%esi$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802:	e8 49 25 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104807	obj/kern/kernel.asm	/^f0104807:	89 c7                	mov    %eax,%edi$/;"	l
f0104809	obj/kern/kernel.asm	/^f0104809:	e8 42 25 00 00       	call   f0106d50 <cpunum>$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	66 c7 04 dd 60 33 12 	movw   $0x68,-0xfedcca0(,%ebx,8)$/;"	l
f0104815	obj/kern/kernel.asm	/^f0104815:	f0 68 00 $/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	6b f6 74             	imul   $0x74,%esi,%esi$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	81 c6 2c 80 20 f0    	add    $0xf020802c,%esi$/;"	l
f0104821	obj/kern/kernel.asm	/^f0104821:	66 89 34 dd 62 33 12 	mov    %si,-0xfedcc9e(,%ebx,8)$/;"	l
f0104828	obj/kern/kernel.asm	/^f0104828:	f0 $/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	6b d7 74             	imul   $0x74,%edi,%edx$/;"	l
f010482c	obj/kern/kernel.asm	/^f010482c:	81 c2 2c 80 20 f0    	add    $0xf020802c,%edx$/;"	l
f0104832	obj/kern/kernel.asm	/^f0104832:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	88 14 dd 64 33 12 f0 	mov    %dl,-0xfedcc9c(,%ebx,8)$/;"	l
f010483c	obj/kern/kernel.asm	/^f010483c:	c6 04 dd 66 33 12 f0 	movb   $0x40,-0xfedcc9a(,%ebx,8)$/;"	l
f0104843	obj/kern/kernel.asm	/^f0104843:	40 $/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	05 2c 80 20 f0       	add    $0xf020802c,%eax$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	88 04 dd 67 33 12 f0 	mov    %al,-0xfedcc99(,%ebx,8)$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	c6 04 dd 65 33 12 f0 	movb   $0x89,-0xfedcc9b(,%ebx,8)$/;"	l
f010485d	obj/kern/kernel.asm	/^f010485d:	89 $/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	0f 00 db             	ltr    %bx$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	b8 cc 33 12 f0       	mov    $0xf01233cc,%eax$/;"	l
f0104869	obj/kern/kernel.asm	/^f0104869:	0f 01 18             	lidtl  (%eax)$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0104872	obj/kern/kernel.asm	/^f0104872:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0104875	obj/kern/kernel.asm	/^f0104875:	89 ec                	mov    %ebp,%esp$/;"	l
f0104877	obj/kern/kernel.asm	/^f0104877:	5d                   	pop    %ebp$/;"	l
f0104878	obj/kern/kernel.asm	/^f0104878:	c3                   	ret    $/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879 <trap_init>:$/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	55                   	push   %ebp$/;"	l
f010487a	obj/kern/kernel.asm	/^f010487a:	89 e5                	mov    %esp,%ebp$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	eb 06                	jmp    f0104891 <trap_init+0x18>$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0104891	obj/kern/kernel.asm	/^f0104891:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104894	obj/kern/kernel.asm	/^f0104894:	75 30                	jne    f01048c6 <trap_init+0x4d>$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	8b 0d e0 33 12 f0    	mov    0xf01233e0,%ecx$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	66 89 0d 78 72 20 f0 	mov    %cx,0xf0207278$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	66 c7 05 7a 72 20 f0 	movw   $0x8,0xf020727a$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	08 00 $/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	c6 05 7c 72 20 f0 00 	movb   $0x0,0xf020727c$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	c6 05 7d 72 20 f0 ee 	movb   $0xee,0xf020727d$/;"	l
f01048ba	obj/kern/kernel.asm	/^f01048ba:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f01048bd	obj/kern/kernel.asm	/^f01048bd:	66 89 0d 7e 72 20 f0 	mov    %cx,0xf020727e$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	eb c5                	jmp    f010488b <trap_init+0x12>$/;"	l
f01048c6	obj/kern/kernel.asm	/^f01048c6:	8b 0c 85 d4 33 12 f0 	mov    -0xfedcc2c(,%eax,4),%ecx$/;"	l
f01048cd	obj/kern/kernel.asm	/^f01048cd:	66 89 0c c5 60 72 20 	mov    %cx,-0xfdf8da0(,%eax,8)$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	f0 $/;"	l
f01048d5	obj/kern/kernel.asm	/^f01048d5:	66 c7 04 c5 62 72 20 	movw   $0x8,-0xfdf8d9e(,%eax,8)$/;"	l
f01048dc	obj/kern/kernel.asm	/^f01048dc:	f0 08 00 $/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	c6 04 c5 64 72 20 f0 	movb   $0x0,-0xfdf8d9c(,%eax,8)$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	00 $/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	c6 04 c5 65 72 20 f0 	movb   $0x8e,-0xfdf8d9b(,%eax,8)$/;"	l
f01048ee	obj/kern/kernel.asm	/^f01048ee:	8e $/;"	l
f01048ef	obj/kern/kernel.asm	/^f01048ef:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f01048f2	obj/kern/kernel.asm	/^f01048f2:	66 89 0c c5 66 72 20 	mov    %cx,-0xfdf8d9a(,%eax,8)$/;"	l
f01048f9	obj/kern/kernel.asm	/^f01048f9:	f0 $/;"	l
f01048fa	obj/kern/kernel.asm	/^f01048fa:	83 fa 13             	cmp    $0x13,%edx$/;"	l
f01048fd	obj/kern/kernel.asm	/^f01048fd:	7e 8c                	jle    f010488b <trap_init+0x12>$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	b8 40 51 10 f0       	mov    $0xf0105140,%eax$/;"	l
f0104904	obj/kern/kernel.asm	/^f0104904:	66 a3 e0 73 20 f0    	mov    %ax,0xf02073e0$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	66 c7 05 e2 73 20 f0 	movw   $0x8,0xf02073e2$/;"	l
f0104911	obj/kern/kernel.asm	/^f0104911:	08 00 $/;"	l
f0104913	obj/kern/kernel.asm	/^f0104913:	c6 05 e4 73 20 f0 00 	movb   $0x0,0xf02073e4$/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	c6 05 e5 73 20 f0 ee 	movb   $0xee,0xf02073e5$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	66 a3 e6 73 20 f0    	mov    %ax,0xf02073e6$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	b8 4a 51 10 f0       	mov    $0xf010514a,%eax$/;"	l
f010492f	obj/kern/kernel.asm	/^f010492f:	66 a3 60 73 20 f0    	mov    %ax,0xf0207360$/;"	l
f0104935	obj/kern/kernel.asm	/^f0104935:	66 c7 05 62 73 20 f0 	movw   $0x8,0xf0207362$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	08 00 $/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	c6 05 64 73 20 f0 00 	movb   $0x0,0xf0207364$/;"	l
f0104945	obj/kern/kernel.asm	/^f0104945:	c6 05 65 73 20 f0 8e 	movb   $0x8e,0xf0207365$/;"	l
f010494c	obj/kern/kernel.asm	/^f010494c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	66 a3 66 73 20 f0    	mov    %ax,0xf0207366$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	b8 54 51 10 f0       	mov    $0xf0105154,%eax$/;"	l
f010495a	obj/kern/kernel.asm	/^f010495a:	66 a3 68 73 20 f0    	mov    %ax,0xf0207368$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	66 c7 05 6a 73 20 f0 	movw   $0x8,0xf020736a$/;"	l
f0104967	obj/kern/kernel.asm	/^f0104967:	08 00 $/;"	l
f0104969	obj/kern/kernel.asm	/^f0104969:	c6 05 6c 73 20 f0 00 	movb   $0x0,0xf020736c$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	c6 05 6d 73 20 f0 8e 	movb   $0x8e,0xf020736d$/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	66 a3 6e 73 20 f0    	mov    %ax,0xf020736e$/;"	l
f0104980	obj/kern/kernel.asm	/^f0104980:	b8 5e 51 10 f0       	mov    $0xf010515e,%eax$/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985:	66 a3 80 73 20 f0    	mov    %ax,0xf0207380$/;"	l
f010498b	obj/kern/kernel.asm	/^f010498b:	66 c7 05 82 73 20 f0 	movw   $0x8,0xf0207382$/;"	l
f0104992	obj/kern/kernel.asm	/^f0104992:	08 00 $/;"	l
f0104994	obj/kern/kernel.asm	/^f0104994:	c6 05 84 73 20 f0 00 	movb   $0x0,0xf0207384$/;"	l
f010499b	obj/kern/kernel.asm	/^f010499b:	c6 05 85 73 20 f0 8e 	movb   $0x8e,0xf0207385$/;"	l
f01049a2	obj/kern/kernel.asm	/^f01049a2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01049a5	obj/kern/kernel.asm	/^f01049a5:	66 a3 86 73 20 f0    	mov    %ax,0xf0207386$/;"	l
f01049ab	obj/kern/kernel.asm	/^f01049ab:	b8 68 51 10 f0       	mov    $0xf0105168,%eax$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	66 a3 98 73 20 f0    	mov    %ax,0xf0207398$/;"	l
f01049b6	obj/kern/kernel.asm	/^f01049b6:	66 c7 05 9a 73 20 f0 	movw   $0x8,0xf020739a$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	08 00 $/;"	l
f01049bf	obj/kern/kernel.asm	/^f01049bf:	c6 05 9c 73 20 f0 00 	movb   $0x0,0xf020739c$/;"	l
f01049c6	obj/kern/kernel.asm	/^f01049c6:	c6 05 9d 73 20 f0 8e 	movb   $0x8e,0xf020739d$/;"	l
f01049cd	obj/kern/kernel.asm	/^f01049cd:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01049d0	obj/kern/kernel.asm	/^f01049d0:	66 a3 9e 73 20 f0    	mov    %ax,0xf020739e$/;"	l
f01049d6	obj/kern/kernel.asm	/^f01049d6:	b8 72 51 10 f0       	mov    $0xf0105172,%eax$/;"	l
f01049db	obj/kern/kernel.asm	/^f01049db:	66 a3 d0 73 20 f0    	mov    %ax,0xf02073d0$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	66 c7 05 d2 73 20 f0 	movw   $0x8,0xf02073d2$/;"	l
f01049e8	obj/kern/kernel.asm	/^f01049e8:	08 00 $/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	c6 05 d4 73 20 f0 00 	movb   $0x0,0xf02073d4$/;"	l
f01049f1	obj/kern/kernel.asm	/^f01049f1:	c6 05 d5 73 20 f0 8e 	movb   $0x8e,0xf02073d5$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	66 a3 d6 73 20 f0    	mov    %ax,0xf02073d6$/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	b8 7c 51 10 f0       	mov    $0xf010517c,%eax$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	66 a3 f8 73 20 f0    	mov    %ax,0xf02073f8$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	66 c7 05 fa 73 20 f0 	movw   $0x8,0xf02073fa$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	08 00 $/;"	l
f0104a15	obj/kern/kernel.asm	/^f0104a15:	c6 05 fc 73 20 f0 00 	movb   $0x0,0xf02073fc$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	c6 05 fd 73 20 f0 8e 	movb   $0x8e,0xf02073fd$/;"	l
f0104a23	obj/kern/kernel.asm	/^f0104a23:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104a26	obj/kern/kernel.asm	/^f0104a26:	66 a3 fe 73 20 f0    	mov    %ax,0xf02073fe$/;"	l
f0104a2c	obj/kern/kernel.asm	/^f0104a2c:	e8 7f fd ff ff       	call   f01047b0 <trap_init_percpu>$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	c9                   	leave  $/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	c3                   	ret    $/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33 <print_regs>:$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	55                   	push   %ebp$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a36	obj/kern/kernel.asm	/^f0104a36:	53                   	push   %ebx$/;"	l
f0104a37	obj/kern/kernel.asm	/^f0104a37:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104a3a	obj/kern/kernel.asm	/^f0104a3a:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104a3d	obj/kern/kernel.asm	/^f0104a3d:	8b 03                	mov    (%ebx),%eax$/;"	l
f0104a3f	obj/kern/kernel.asm	/^f0104a3f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	c7 04 24 44 8a 10 f0 	movl   $0xf0108a44,(%esp)$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	e8 3f fd ff ff       	call   f010478e <cprintf>$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a56	obj/kern/kernel.asm	/^f0104a56:	c7 04 24 53 8a 10 f0 	movl   $0xf0108a53,(%esp)$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	e8 2c fd ff ff       	call   f010478e <cprintf>$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a69	obj/kern/kernel.asm	/^f0104a69:	c7 04 24 62 8a 10 f0 	movl   $0xf0108a62,(%esp)$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	e8 19 fd ff ff       	call   f010478e <cprintf>$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a7c	obj/kern/kernel.asm	/^f0104a7c:	c7 04 24 71 8a 10 f0 	movl   $0xf0108a71,(%esp)$/;"	l
f0104a83	obj/kern/kernel.asm	/^f0104a83:	e8 06 fd ff ff       	call   f010478e <cprintf>$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104a8b	obj/kern/kernel.asm	/^f0104a8b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a8f	obj/kern/kernel.asm	/^f0104a8f:	c7 04 24 80 8a 10 f0 	movl   $0xf0108a80,(%esp)$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	e8 f3 fc ff ff       	call   f010478e <cprintf>$/;"	l
f0104a9b	obj/kern/kernel.asm	/^f0104a9b:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104a9e	obj/kern/kernel.asm	/^f0104a9e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104aa2	obj/kern/kernel.asm	/^f0104aa2:	c7 04 24 8f 8a 10 f0 	movl   $0xf0108a8f,(%esp)$/;"	l
f0104aa9	obj/kern/kernel.asm	/^f0104aa9:	e8 e0 fc ff ff       	call   f010478e <cprintf>$/;"	l
f0104aae	obj/kern/kernel.asm	/^f0104aae:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f0104ab1	obj/kern/kernel.asm	/^f0104ab1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	c7 04 24 9e 8a 10 f0 	movl   $0xf0108a9e,(%esp)$/;"	l
f0104abc	obj/kern/kernel.asm	/^f0104abc:	e8 cd fc ff ff       	call   f010478e <cprintf>$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f0104ac4	obj/kern/kernel.asm	/^f0104ac4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	c7 04 24 ad 8a 10 f0 	movl   $0xf0108aad,(%esp)$/;"	l
f0104acf	obj/kern/kernel.asm	/^f0104acf:	e8 ba fc ff ff       	call   f010478e <cprintf>$/;"	l
f0104ad4	obj/kern/kernel.asm	/^f0104ad4:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	5b                   	pop    %ebx$/;"	l
f0104ad8	obj/kern/kernel.asm	/^f0104ad8:	5d                   	pop    %ebp$/;"	l
f0104ad9	obj/kern/kernel.asm	/^f0104ad9:	c3                   	ret    $/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada <print_trapframe>:$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	55                   	push   %ebp$/;"	l
f0104adb	obj/kern/kernel.asm	/^f0104adb:	89 e5                	mov    %esp,%ebp$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	56                   	push   %esi$/;"	l
f0104ade	obj/kern/kernel.asm	/^f0104ade:	53                   	push   %ebx$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104ae2	obj/kern/kernel.asm	/^f0104ae2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104ae5	obj/kern/kernel.asm	/^f0104ae5:	e8 66 22 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104aea	obj/kern/kernel.asm	/^f0104aea:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104af2	obj/kern/kernel.asm	/^f0104af2:	c7 04 24 11 8b 10 f0 	movl   $0xf0108b11,(%esp)$/;"	l
f0104af9	obj/kern/kernel.asm	/^f0104af9:	e8 90 fc ff ff       	call   f010478e <cprintf>$/;"	l
f0104afe	obj/kern/kernel.asm	/^f0104afe:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104b01	obj/kern/kernel.asm	/^f0104b01:	e8 2d ff ff ff       	call   f0104a33 <print_regs>$/;"	l
f0104b06	obj/kern/kernel.asm	/^f0104b06:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0104b0a	obj/kern/kernel.asm	/^f0104b0a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b0e	obj/kern/kernel.asm	/^f0104b0e:	c7 04 24 2f 8b 10 f0 	movl   $0xf0108b2f,(%esp)$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	e8 74 fc ff ff       	call   f010478e <cprintf>$/;"	l
f0104b1a	obj/kern/kernel.asm	/^f0104b1a:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b22	obj/kern/kernel.asm	/^f0104b22:	c7 04 24 42 8b 10 f0 	movl   $0xf0108b42,(%esp)$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	e8 60 fc ff ff       	call   f010478e <cprintf>$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0104b31	obj/kern/kernel.asm	/^f0104b31:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104b34	obj/kern/kernel.asm	/^f0104b34:	77 09                	ja     f0104b3f <print_trapframe+0x65>$/;"	l
f0104b36	obj/kern/kernel.asm	/^f0104b36:	8b 14 85 e0 8d 10 f0 	mov    -0xfef7220(,%eax,4),%edx$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	eb 1d                	jmp    f0104b5c <print_trapframe+0x82>$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	ba bc 8a 10 f0       	mov    $0xf0108abc,%edx$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	74 13                	je     f0104b5c <print_trapframe+0x82>$/;"	l
f0104b49	obj/kern/kernel.asm	/^f0104b49:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	ba c8 8a 10 f0       	mov    $0xf0108ac8,%edx$/;"	l
f0104b54	obj/kern/kernel.asm	/^f0104b54:	b9 db 8a 10 f0       	mov    $0xf0108adb,%ecx$/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104b60	obj/kern/kernel.asm	/^f0104b60:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b64	obj/kern/kernel.asm	/^f0104b64:	c7 04 24 55 8b 10 f0 	movl   $0xf0108b55,(%esp)$/;"	l
f0104b6b	obj/kern/kernel.asm	/^f0104b6b:	e8 1e fc ff ff       	call   f010478e <cprintf>$/;"	l
f0104b70	obj/kern/kernel.asm	/^f0104b70:	3b 1d 60 7a 20 f0    	cmp    0xf0207a60,%ebx$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	75 19                	jne    f0104b91 <print_trapframe+0xb7>$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	75 13                	jne    f0104b91 <print_trapframe+0xb7>$/;"	l
f0104b7e	obj/kern/kernel.asm	/^f0104b7e:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b85	obj/kern/kernel.asm	/^f0104b85:	c7 04 24 67 8b 10 f0 	movl   $0xf0108b67,(%esp)$/;"	l
f0104b8c	obj/kern/kernel.asm	/^f0104b8c:	e8 fd fb ff ff       	call   f010478e <cprintf>$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b98	obj/kern/kernel.asm	/^f0104b98:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	e8 ea fb ff ff       	call   f010478e <cprintf>$/;"	l
f0104ba4	obj/kern/kernel.asm	/^f0104ba4:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	75 51                	jne    f0104bfb <print_trapframe+0x121>$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	89 c2                	mov    %eax,%edx$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	83 e2 01             	and    $0x1,%edx$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	ba ea 8a 10 f0       	mov    $0xf0108aea,%edx$/;"	l
f0104bb7	obj/kern/kernel.asm	/^f0104bb7:	b9 f5 8a 10 f0       	mov    $0xf0108af5,%ecx$/;"	l
f0104bbc	obj/kern/kernel.asm	/^f0104bbc:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	89 c2                	mov    %eax,%edx$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	83 e2 02             	and    $0x2,%edx$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	ba 01 8b 10 f0       	mov    $0xf0108b01,%edx$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	be 07 8b 10 f0       	mov    $0xf0108b07,%esi$/;"	l
f0104bce	obj/kern/kernel.asm	/^f0104bce:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	83 e0 04             	and    $0x4,%eax$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	b8 0c 8b 10 f0       	mov    $0xf0108b0c,%eax$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	be 41 8c 10 f0       	mov    $0xf0108c41,%esi$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104be5	obj/kern/kernel.asm	/^f0104be5:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104be9	obj/kern/kernel.asm	/^f0104be9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	c7 04 24 84 8b 10 f0 	movl   $0xf0108b84,(%esp)$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	e8 95 fb ff ff       	call   f010478e <cprintf>$/;"	l
f0104bf9	obj/kern/kernel.asm	/^f0104bf9:	eb 0c                	jmp    f0104c07 <print_trapframe+0x12d>$/;"	l
f0104bfb	obj/kern/kernel.asm	/^f0104bfb:	c7 04 24 d6 89 10 f0 	movl   $0xf01089d6,(%esp)$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	e8 87 fb ff ff       	call   f010478e <cprintf>$/;"	l
f0104c07	obj/kern/kernel.asm	/^f0104c07:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	c7 04 24 93 8b 10 f0 	movl   $0xf0108b93,(%esp)$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	e8 74 fb ff ff       	call   f010478e <cprintf>$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	c7 04 24 a2 8b 10 f0 	movl   $0xf0108ba2,(%esp)$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	e8 60 fb ff ff       	call   f010478e <cprintf>$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	c7 04 24 b5 8b 10 f0 	movl   $0xf0108bb5,(%esp)$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	e8 4d fb ff ff       	call   f010478e <cprintf>$/;"	l
f0104c41	obj/kern/kernel.asm	/^f0104c41:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104c45	obj/kern/kernel.asm	/^f0104c45:	74 27                	je     f0104c6e <print_trapframe+0x194>$/;"	l
f0104c47	obj/kern/kernel.asm	/^f0104c47:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	c7 04 24 c4 8b 10 f0 	movl   $0xf0108bc4,(%esp)$/;"	l
f0104c55	obj/kern/kernel.asm	/^f0104c55:	e8 34 fb ff ff       	call   f010478e <cprintf>$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	c7 04 24 d3 8b 10 f0 	movl   $0xf0108bd3,(%esp)$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	e8 20 fb ff ff       	call   f010478e <cprintf>$/;"	l
f0104c6e	obj/kern/kernel.asm	/^f0104c6e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	5b                   	pop    %ebx$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	5e                   	pop    %esi$/;"	l
f0104c73	obj/kern/kernel.asm	/^f0104c73:	5d                   	pop    %ebp$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	c3                   	ret    $/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75 <page_fault_handler>:$/;"	l
f0104c75	obj/kern/kernel.asm	/^f0104c75:	55                   	push   %ebp$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c78	obj/kern/kernel.asm	/^f0104c78:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104c87	obj/kern/kernel.asm	/^f0104c87:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104c8e	obj/kern/kernel.asm	/^f0104c8e:	75 1c                	jne    f0104cac <page_fault_handler+0x37>$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	c7 44 24 08 8c 8d 10 	movl   $0xf0108d8c,0x8(%esp)$/;"	l
f0104c97	obj/kern/kernel.asm	/^f0104c97:	f0 $/;"	l
f0104c98	obj/kern/kernel.asm	/^f0104c98:	c7 44 24 04 85 01 00 	movl   $0x185,0x4(%esp)$/;"	l
f0104c9f	obj/kern/kernel.asm	/^f0104c9f:	00 $/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	c7 04 24 e6 8b 10 f0 	movl   $0xf0108be6,(%esp)$/;"	l
f0104ca7	obj/kern/kernel.asm	/^f0104ca7:	e8 94 b3 ff ff       	call   f0100040 <_panic>$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	e8 9f 20 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cb4	obj/kern/kernel.asm	/^f0104cb4:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f0104cbe	obj/kern/kernel.asm	/^f0104cbe:	0f 84 03 01 00 00    	je     f0104dc7 <page_fault_handler+0x152>$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104cc7	obj/kern/kernel.asm	/^f0104cc7:	8d 90 00 10 40 11    	lea    0x11401000(%eax),%edx$/;"	l
f0104ccd	obj/kern/kernel.asm	/^f0104ccd:	83 e8 38             	sub    $0x38,%eax$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	81 fa ff 0f 00 00    	cmp    $0xfff,%edx$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	ba cc ff bf ee       	mov    $0xeebfffcc,%edx$/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	0f 46 d0             	cmovbe %eax,%edx$/;"	l
f0104cde	obj/kern/kernel.asm	/^f0104cde:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0104ce1	obj/kern/kernel.asm	/^f0104ce1:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	e8 67 20 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0104cf0	obj/kern/kernel.asm	/^f0104cf0:	00 $/;"	l
f0104cf1	obj/kern/kernel.asm	/^f0104cf1:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	00 $/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104cfc	obj/kern/kernel.asm	/^f0104cfc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d03	obj/kern/kernel.asm	/^f0104d03:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	e8 d4 f0 ff ff       	call   f0103de5 <user_mem_assert>$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104d17	obj/kern/kernel.asm	/^f0104d17:	89 42 2c             	mov    %eax,0x2c(%edx)$/;"	l
f0104d1a	obj/kern/kernel.asm	/^f0104d1a:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104d1d	obj/kern/kernel.asm	/^f0104d1d:	89 42 28             	mov    %eax,0x28(%edx)$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26:	89 32                	mov    %esi,(%edx)$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	89 d7                	mov    %edx,%edi$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	83 c7 08             	add    $0x8,%edi$/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	89 de                	mov    %ebx,%esi$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	f7 c7 01 00 00 00    	test   $0x1,%edi$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	74 03                	je     f0104d3f <page_fault_handler+0xca>$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	a4                   	movsb  %ds:(%esi),%es:(%edi)$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	b0 1f                	mov    $0x1f,%al$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	f7 c7 02 00 00 00    	test   $0x2,%edi$/;"	l
f0104d45	obj/kern/kernel.asm	/^f0104d45:	74 05                	je     f0104d4c <page_fault_handler+0xd7>$/;"	l
f0104d47	obj/kern/kernel.asm	/^f0104d47:	66 a5                	movsw  %ds:(%esi),%es:(%edi)$/;"	l
f0104d49	obj/kern/kernel.asm	/^f0104d49:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104d4c	obj/kern/kernel.asm	/^f0104d4c:	89 c1                	mov    %eax,%ecx$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0104d51	obj/kern/kernel.asm	/^f0104d51:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	a8 02                	test   $0x2,%al$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	74 0b                	je     f0104d67 <page_fault_handler+0xf2>$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	0f b7 16             	movzwl (%esi),%edx$/;"	l
f0104d5f	obj/kern/kernel.asm	/^f0104d5f:	66 89 17             	mov    %dx,(%edi)$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f0104d67	obj/kern/kernel.asm	/^f0104d67:	a8 01                	test   $0x1,%al$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	74 07                	je     f0104d72 <page_fault_handler+0xfd>$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	0f b6 04 16          	movzbl (%esi,%edx,1),%eax$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	88 04 17             	mov    %al,(%edi,%edx,1)$/;"	l
f0104d72	obj/kern/kernel.asm	/^f0104d72:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f0104d7b	obj/kern/kernel.asm	/^f0104d7b:	e8 d0 1f 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d83	obj/kern/kernel.asm	/^f0104d83:	8b 98 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%ebx$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	e8 c2 1f 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d91	obj/kern/kernel.asm	/^f0104d91:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	e8 ae 1f 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0104dab	obj/kern/kernel.asm	/^f0104dab:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0104dae	obj/kern/kernel.asm	/^f0104dae:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	e8 9a 1f 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104db9	obj/kern/kernel.asm	/^f0104db9:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0104dbf	obj/kern/kernel.asm	/^f0104dbf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	e8 81 f7 ff ff       	call   f0104548 <env_run>$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	e8 81 1f 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104dd3	obj/kern/kernel.asm	/^f0104dd3:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0104dd7	obj/kern/kernel.asm	/^f0104dd7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104de7	obj/kern/kernel.asm	/^f0104de7:	c7 04 24 b8 8d 10 f0 	movl   $0xf0108db8,(%esp)$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	e8 9b f9 ff ff       	call   f010478e <cprintf>$/;"	l
f0104df3	obj/kern/kernel.asm	/^f0104df3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104df6	obj/kern/kernel.asm	/^f0104df6:	e8 df fc ff ff       	call   f0104ada <print_trapframe>$/;"	l
f0104dfb	obj/kern/kernel.asm	/^f0104dfb:	e8 50 1f 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104e00	obj/kern/kernel.asm	/^f0104e00:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e03	obj/kern/kernel.asm	/^f0104e03:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0104e09	obj/kern/kernel.asm	/^f0104e09:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	e8 96 f6 ff ff       	call   f01044a7 <env_destroy>$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0104e14	obj/kern/kernel.asm	/^f0104e14:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0104e17	obj/kern/kernel.asm	/^f0104e17:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	89 ec                	mov    %ebp,%esp$/;"	l
f0104e1c	obj/kern/kernel.asm	/^f0104e1c:	5d                   	pop    %ebp$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	c3                   	ret    $/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e <trap>:$/;"	l
f0104e1e	obj/kern/kernel.asm	/^f0104e1e:	55                   	push   %ebp$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104e21	obj/kern/kernel.asm	/^f0104e21:	57                   	push   %edi$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	56                   	push   %esi$/;"	l
f0104e23	obj/kern/kernel.asm	/^f0104e23:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104e26	obj/kern/kernel.asm	/^f0104e26:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104e29	obj/kern/kernel.asm	/^f0104e29:	fc                   	cld    $/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	83 3d 80 7e 20 f0 00 	cmpl   $0x0,0xf0207e80$/;"	l
f0104e31	obj/kern/kernel.asm	/^f0104e31:	74 01                	je     f0104e34 <trap+0x16>$/;"	l
f0104e33	obj/kern/kernel.asm	/^f0104e33:	f4                   	hlt    $/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	e8 17 1f 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104e39	obj/kern/kernel.asm	/^f0104e39:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104e3c	obj/kern/kernel.asm	/^f0104e3c:	81 c2 20 80 20 f0    	add    $0xf0208020,%edx$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104e4b	obj/kern/kernel.asm	/^f0104e4b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	75 0c                	jne    f0104e5c <trap+0x3e>$/;"	l
f0104e50	obj/kern/kernel.asm	/^f0104e50:	c7 04 24 40 34 12 f0 	movl   $0xf0123440,(%esp)$/;"	l
f0104e57	obj/kern/kernel.asm	/^f0104e57:	e8 a4 21 00 00       	call   f0107000 <spin_lock>$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	9c                   	pushf  $/;"	l
f0104e5d	obj/kern/kernel.asm	/^f0104e5d:	58                   	pop    %eax$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	74 24                	je     f0104e87 <trap+0x69>$/;"	l
f0104e63	obj/kern/kernel.asm	/^f0104e63:	c7 44 24 0c f2 8b 10 	movl   $0xf0108bf2,0xc(%esp)$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	f0 $/;"	l
f0104e6b	obj/kern/kernel.asm	/^f0104e6b:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	f0 $/;"	l
f0104e73	obj/kern/kernel.asm	/^f0104e73:	c7 44 24 04 4c 01 00 	movl   $0x14c,0x4(%esp)$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	00 $/;"	l
f0104e7b	obj/kern/kernel.asm	/^f0104e7b:	c7 04 24 e6 8b 10 f0 	movl   $0xf0108be6,(%esp)$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	e8 b9 b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104e87	obj/kern/kernel.asm	/^f0104e87:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104e91	obj/kern/kernel.asm	/^f0104e91:	0f 85 a7 00 00 00    	jne    f0104f3e <trap+0x120>$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	c7 04 24 40 34 12 f0 	movl   $0xf0123440,(%esp)$/;"	l
f0104e9e	obj/kern/kernel.asm	/^f0104e9e:	e8 5d 21 00 00       	call   f0107000 <spin_lock>$/;"	l
f0104ea3	obj/kern/kernel.asm	/^f0104ea3:	e8 a8 1e 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104ea8	obj/kern/kernel.asm	/^f0104ea8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	83 b8 28 80 20 f0 00 	cmpl   $0x0,-0xfdf7fd8(%eax)$/;"	l
f0104eb2	obj/kern/kernel.asm	/^f0104eb2:	75 24                	jne    f0104ed8 <trap+0xba>$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	c7 44 24 0c 0b 8c 10 	movl   $0xf0108c0b,0xc(%esp)$/;"	l
f0104ebb	obj/kern/kernel.asm	/^f0104ebb:	f0 $/;"	l
f0104ebc	obj/kern/kernel.asm	/^f0104ebc:	c7 44 24 08 23 87 10 	movl   $0xf0108723,0x8(%esp)$/;"	l
f0104ec3	obj/kern/kernel.asm	/^f0104ec3:	f0 $/;"	l
f0104ec4	obj/kern/kernel.asm	/^f0104ec4:	c7 44 24 04 55 01 00 	movl   $0x155,0x4(%esp)$/;"	l
f0104ecb	obj/kern/kernel.asm	/^f0104ecb:	00 $/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	c7 04 24 e6 8b 10 f0 	movl   $0xf0108be6,(%esp)$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	e8 68 b1 ff ff       	call   f0100040 <_panic>$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	e8 73 1e 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0104ee6	obj/kern/kernel.asm	/^f0104ee6:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea:	75 2d                	jne    f0104f19 <trap+0xfb>$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	e8 5f 1e 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	e8 d5 f3 ff ff       	call   f01042d7 <env_free>$/;"	l
f0104f02	obj/kern/kernel.asm	/^f0104f02:	e8 49 1e 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104f07	obj/kern/kernel.asm	/^f0104f07:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a:	c7 80 28 80 20 f0 00 	movl   $0x0,-0xfdf7fd8(%eax)$/;"	l
f0104f11	obj/kern/kernel.asm	/^f0104f11:	00 00 00 $/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	e8 53 03 00 00       	call   f010526c <sched_yield>$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	e8 32 1e 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f21	obj/kern/kernel.asm	/^f0104f21:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	89 c7                	mov    %eax,%edi$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	e8 1b 1e 00 00       	call   f0106d50 <cpunum>$/;"	l
f0104f35	obj/kern/kernel.asm	/^f0104f35:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38:	8b b0 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%esi$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	89 35 60 7a 20 f0    	mov    %esi,0xf0207a60$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104f47	obj/kern/kernel.asm	/^f0104f47:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104f4a	obj/kern/kernel.asm	/^f0104f4a:	75 19                	jne    f0104f65 <trap+0x147>$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c:	c7 04 24 12 8c 10 f0 	movl   $0xf0108c12,(%esp)$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	e8 36 f8 ff ff       	call   f010478e <cprintf>$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	e8 7a fb ff ff       	call   f0104ada <print_trapframe>$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	e9 f1 00 00 00       	jmp    f0105056 <trap+0x238>$/;"	l
f0104f65	obj/kern/kernel.asm	/^f0104f65:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104f68	obj/kern/kernel.asm	/^f0104f68:	75 10                	jne    f0104f7a <trap+0x15c>$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0104f70	obj/kern/kernel.asm	/^f0104f70:	e8 26 1f 00 00       	call   f0106e9b <lapic_eoi>$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	e8 f2 02 00 00       	call   f010526c <sched_yield>$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	83 f8 21             	cmp    $0x21,%eax$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	75 0b                	jne    f0104f8a <trap+0x16c>$/;"	l
f0104f7f	obj/kern/kernel.asm	/^f0104f7f:	90                   	nop$/;"	l
f0104f80	obj/kern/kernel.asm	/^f0104f80:	e8 da b6 ff ff       	call   f010065f <kbd_intr>$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	e9 cc 00 00 00       	jmp    f0105056 <trap+0x238>$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	83 f8 24             	cmp    $0x24,%eax$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	75 0a                	jne    f0104f9c <trap+0x17e>$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	e8 ad b6 ff ff       	call   f0100644 <serial_intr>$/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	e9 ba 00 00 00       	jmp    f0105056 <trap+0x238>$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	90                   	nop$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	74 2d                	je     f0104fcf <trap+0x1b1>$/;"	l
f0104fa2	obj/kern/kernel.asm	/^f0104fa2:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104fa5	obj/kern/kernel.asm	/^f0104fa5:	77 0b                	ja     f0104fb2 <trap+0x194>$/;"	l
f0104fa7	obj/kern/kernel.asm	/^f0104fa7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	75 69                	jne    f0105015 <trap+0x1f7>$/;"	l
f0104fac	obj/kern/kernel.asm	/^f0104fac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	eb 27                	jmp    f0104fd9 <trap+0x1bb>$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104fb5	obj/kern/kernel.asm	/^f0104fb5:	74 0b                	je     f0104fc2 <trap+0x1a4>$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	75 59                	jne    f0105015 <trap+0x1f7>$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104fc0	obj/kern/kernel.asm	/^f0104fc0:	eb 21                	jmp    f0104fe3 <trap+0x1c5>$/;"	l
f0104fc2	obj/kern/kernel.asm	/^f0104fc2:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104fc5	obj/kern/kernel.asm	/^f0104fc5:	e8 ab fc ff ff       	call   f0104c75 <page_fault_handler>$/;"	l
f0104fca	obj/kern/kernel.asm	/^f0104fca:	e9 87 00 00 00       	jmp    f0105056 <trap+0x238>$/;"	l
f0104fcf	obj/kern/kernel.asm	/^f0104fcf:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	e8 74 c2 ff ff       	call   f010124b <monitor>$/;"	l
f0104fd7	obj/kern/kernel.asm	/^f0104fd7:	eb 7d                	jmp    f0105056 <trap+0x238>$/;"	l
f0104fd9	obj/kern/kernel.asm	/^f0104fd9:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	e8 6a c2 ff ff       	call   f010124b <monitor>$/;"	l
f0104fe1	obj/kern/kernel.asm	/^f0104fe1:	eb 73                	jmp    f0105056 <trap+0x238>$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104fea	obj/kern/kernel.asm	/^f0104fea:	8b 06                	mov    (%esi),%eax$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104ff0	obj/kern/kernel.asm	/^f0104ff0:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104ff7	obj/kern/kernel.asm	/^f0104ff7:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105005	obj/kern/kernel.asm	/^f0105005:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0105008	obj/kern/kernel.asm	/^f0105008:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010500b	obj/kern/kernel.asm	/^f010500b:	e8 80 03 00 00       	call   f0105390 <syscall>$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	eb 41                	jmp    f0105056 <trap+0x238>$/;"	l
f0105015	obj/kern/kernel.asm	/^f0105015:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	e8 bd fa ff ff       	call   f0104ada <print_trapframe>$/;"	l
f010501d	obj/kern/kernel.asm	/^f010501d:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0105022	obj/kern/kernel.asm	/^f0105022:	75 1c                	jne    f0105040 <trap+0x222>$/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	c7 44 24 08 2f 8c 10 	movl   $0xf0108c2f,0x8(%esp)$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	f0 $/;"	l
f010502c	obj/kern/kernel.asm	/^f010502c:	c7 44 24 04 31 01 00 	movl   $0x131,0x4(%esp)$/;"	l
f0105033	obj/kern/kernel.asm	/^f0105033:	00 $/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	c7 04 24 e6 8b 10 f0 	movl   $0xf0108be6,(%esp)$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	e8 00 b0 ff ff       	call   f0100040 <_panic>$/;"	l
f0105040	obj/kern/kernel.asm	/^f0105040:	e8 0b 1d 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105045	obj/kern/kernel.asm	/^f0105045:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f010504e	obj/kern/kernel.asm	/^f010504e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	e8 51 f4 ff ff       	call   f01044a7 <env_destroy>$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	e8 f5 1c 00 00       	call   f0106d50 <cpunum>$/;"	l
f010505b	obj/kern/kernel.asm	/^f010505b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010505e	obj/kern/kernel.asm	/^f010505e:	83 b8 28 80 20 f0 00 	cmpl   $0x0,-0xfdf7fd8(%eax)$/;"	l
f0105065	obj/kern/kernel.asm	/^f0105065:	74 2a                	je     f0105091 <trap+0x273>$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	e8 e4 1c 00 00       	call   f0106d50 <cpunum>$/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010506f	obj/kern/kernel.asm	/^f010506f:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105075	obj/kern/kernel.asm	/^f0105075:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	75 16                	jne    f0105091 <trap+0x273>$/;"	l
f010507b	obj/kern/kernel.asm	/^f010507b:	e8 d0 1c 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105089	obj/kern/kernel.asm	/^f0105089:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	e8 b7 f4 ff ff       	call   f0104548 <env_run>$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	e8 d6 01 00 00       	call   f010526c <sched_yield>$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098 <trap_handler0>:$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	6a 00                	push   $0x0$/;"	l
f010509a	obj/kern/kernel.asm	/^f010509a:	6a 00                	push   $0x0$/;"	l
f010509c	obj/kern/kernel.asm	/^f010509c:	e9 87 e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f01050a1	obj/kern/kernel.asm	/^f01050a1:	90                   	nop$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2 <trap_handler1>:$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	6a 00                	push   $0x0$/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	6a 01                	push   $0x1$/;"	l
f01050a6	obj/kern/kernel.asm	/^f01050a6:	e9 7d e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f01050ab	obj/kern/kernel.asm	/^f01050ab:	90                   	nop$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac <trap_handler2>:$/;"	l
f01050ac	obj/kern/kernel.asm	/^f01050ac:	6a 00                	push   $0x0$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae:	6a 02                	push   $0x2$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	e9 73 e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f01050b5	obj/kern/kernel.asm	/^f01050b5:	90                   	nop$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6 <trap_handler3>:$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	6a 00                	push   $0x0$/;"	l
f01050b8	obj/kern/kernel.asm	/^f01050b8:	6a 03                	push   $0x3$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba:	e9 69 e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f01050bf	obj/kern/kernel.asm	/^f01050bf:	90                   	nop$/;"	l
f01050c0	obj/kern/kernel.asm	/^f01050c0 <trap_handler4>:$/;"	l
f01050c0	obj/kern/kernel.asm	/^f01050c0:	6a 00                	push   $0x0$/;"	l
f01050c2	obj/kern/kernel.asm	/^f01050c2:	6a 04                	push   $0x4$/;"	l
f01050c4	obj/kern/kernel.asm	/^f01050c4:	e9 5f e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	90                   	nop$/;"	l
f01050ca	obj/kern/kernel.asm	/^f01050ca <trap_handler6>:$/;"	l
f01050ca	obj/kern/kernel.asm	/^f01050ca:	6a 00                	push   $0x0$/;"	l
f01050cc	obj/kern/kernel.asm	/^f01050cc:	6a 06                	push   $0x6$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	e9 55 e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	90                   	nop$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4 <trap_handler7>:$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	6a 00                	push   $0x0$/;"	l
f01050d6	obj/kern/kernel.asm	/^f01050d6:	6a 07                	push   $0x7$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	e9 4b e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	90                   	nop$/;"	l
f01050de	obj/kern/kernel.asm	/^f01050de <trap_handler8>:$/;"	l
f01050de	obj/kern/kernel.asm	/^f01050de:	6a 00                	push   $0x0$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	6a 08                	push   $0x8$/;"	l
f01050e2	obj/kern/kernel.asm	/^f01050e2:	e9 41 e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f01050e7	obj/kern/kernel.asm	/^f01050e7:	90                   	nop$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8 <trap_handler9>:$/;"	l
f01050e8	obj/kern/kernel.asm	/^f01050e8:	6a 00                	push   $0x0$/;"	l
f01050ea	obj/kern/kernel.asm	/^f01050ea:	6a 09                	push   $0x9$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	e9 37 e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	90                   	nop$/;"	l
f01050f2	obj/kern/kernel.asm	/^f01050f2 <trap_handler10>:$/;"	l
f01050f2	obj/kern/kernel.asm	/^f01050f2:	6a 0a                	push   $0xa$/;"	l
f01050f4	obj/kern/kernel.asm	/^f01050f4:	e9 2f e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	90                   	nop$/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa <trap_handler11>:$/;"	l
f01050fa	obj/kern/kernel.asm	/^f01050fa:	6a 0b                	push   $0xb$/;"	l
f01050fc	obj/kern/kernel.asm	/^f01050fc:	e9 27 e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f0105101	obj/kern/kernel.asm	/^f0105101:	90                   	nop$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102 <trap_handler12>:$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	6a 0c                	push   $0xc$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	e9 1f e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f0105109	obj/kern/kernel.asm	/^f0105109:	90                   	nop$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a <trap_handler13>:$/;"	l
f010510a	obj/kern/kernel.asm	/^f010510a:	6a 0d                	push   $0xd$/;"	l
f010510c	obj/kern/kernel.asm	/^f010510c:	e9 17 e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f0105111	obj/kern/kernel.asm	/^f0105111:	90                   	nop$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112 <trap_handler14>:$/;"	l
f0105112	obj/kern/kernel.asm	/^f0105112:	6a 0e                	push   $0xe$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	e9 0f e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f0105119	obj/kern/kernel.asm	/^f0105119:	90                   	nop$/;"	l
f010511a	obj/kern/kernel.asm	/^f010511a <trap_handler16>:$/;"	l
f010511a	obj/kern/kernel.asm	/^f010511a:	6a 00                	push   $0x0$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	6a 10                	push   $0x10$/;"	l
f010511e	obj/kern/kernel.asm	/^f010511e:	e9 05 e3 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f0105123	obj/kern/kernel.asm	/^f0105123:	90                   	nop$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124 <trap_handler17>:$/;"	l
f0105124	obj/kern/kernel.asm	/^f0105124:	6a 11                	push   $0x11$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	e9 fd e2 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	90                   	nop$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c <trap_handler18>:$/;"	l
f010512c	obj/kern/kernel.asm	/^f010512c:	6a 00                	push   $0x0$/;"	l
f010512e	obj/kern/kernel.asm	/^f010512e:	6a 12                	push   $0x12$/;"	l
f0105130	obj/kern/kernel.asm	/^f0105130:	e9 f3 e2 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	90                   	nop$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136 <trap_handler19>:$/;"	l
f0105136	obj/kern/kernel.asm	/^f0105136:	6a 00                	push   $0x0$/;"	l
f0105138	obj/kern/kernel.asm	/^f0105138:	6a 13                	push   $0x13$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	e9 e9 e2 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f010513f	obj/kern/kernel.asm	/^f010513f:	90                   	nop$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140 <trap_handler48>:$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	6a 00                	push   $0x0$/;"	l
f0105142	obj/kern/kernel.asm	/^f0105142:	6a 30                	push   $0x30$/;"	l
f0105144	obj/kern/kernel.asm	/^f0105144:	e9 df e2 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	90                   	nop$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a <irq_handler32>:$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	6a 00                	push   $0x0$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	6a 20                	push   $0x20$/;"	l
f010514e	obj/kern/kernel.asm	/^f010514e:	e9 d5 e2 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f0105153	obj/kern/kernel.asm	/^f0105153:	90                   	nop$/;"	l
f0105154	obj/kern/kernel.asm	/^f0105154 <irq_handler33>:$/;"	l
f0105154	obj/kern/kernel.asm	/^f0105154:	6a 00                	push   $0x0$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	6a 21                	push   $0x21$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	e9 cb e2 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	90                   	nop$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e <irq_handler36>:$/;"	l
f010515e	obj/kern/kernel.asm	/^f010515e:	6a 00                	push   $0x0$/;"	l
f0105160	obj/kern/kernel.asm	/^f0105160:	6a 24                	push   $0x24$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	e9 c1 e2 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f0105167	obj/kern/kernel.asm	/^f0105167:	90                   	nop$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168 <irq_handler39>:$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	6a 00                	push   $0x0$/;"	l
f010516a	obj/kern/kernel.asm	/^f010516a:	6a 27                	push   $0x27$/;"	l
f010516c	obj/kern/kernel.asm	/^f010516c:	e9 b7 e2 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	90                   	nop$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172 <irq_handler46>:$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	6a 00                	push   $0x0$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	6a 2e                	push   $0x2e$/;"	l
f0105176	obj/kern/kernel.asm	/^f0105176:	e9 ad e2 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f010517b	obj/kern/kernel.asm	/^f010517b:	90                   	nop$/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c <irq_handler51>:$/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c:	6a 00                	push   $0x0$/;"	l
f010517e	obj/kern/kernel.asm	/^f010517e:	6a 33                	push   $0x33$/;"	l
f0105180	obj/kern/kernel.asm	/^f0105180:	e9 a3 e2 01 00       	jmp    f0123428 <_alltraps>$/;"	l
f0105185	obj/kern/kernel.asm	/^f0105185:	00 00                	add    %al,(%eax)$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188 <sched_halt>:$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	55                   	push   %ebp$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	89 e5                	mov    %esp,%ebp$/;"	l
f010518b	obj/kern/kernel.asm	/^f010518b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	8b 15 48 72 20 f0    	mov    0xf0207248,%edx$/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194:	8b 42 54             	mov    0x54(%edx),%eax$/;"	l
f0105197	obj/kern/kernel.asm	/^f0105197:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010519a	obj/kern/kernel.asm	/^f010519a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f010519d	obj/kern/kernel.asm	/^f010519d:	76 45                	jbe    f01051e4 <sched_halt+0x5c>$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	81 c2 d4 00 00 00    	add    $0xd4,%edx$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	8b 0a                	mov    (%edx),%ecx$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f01051af	obj/kern/kernel.asm	/^f01051af:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f01051b2	obj/kern/kernel.asm	/^f01051b2:	76 0f                	jbe    f01051c3 <sched_halt+0x3b>$/;"	l
f01051b4	obj/kern/kernel.asm	/^f01051b4:	83 c0 01             	add    $0x1,%eax$/;"	l
f01051b7	obj/kern/kernel.asm	/^f01051b7:	83 ea 80             	sub    $0xffffff80,%edx$/;"	l
f01051ba	obj/kern/kernel.asm	/^f01051ba:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01051bf	obj/kern/kernel.asm	/^f01051bf:	75 e9                	jne    f01051aa <sched_halt+0x22>$/;"	l
f01051c1	obj/kern/kernel.asm	/^f01051c1:	eb 07                	jmp    f01051ca <sched_halt+0x42>$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	75 1a                	jne    f01051e4 <sched_halt+0x5c>$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	c7 04 24 30 8e 10 f0 	movl   $0xf0108e30,(%esp)$/;"	l
f01051d1	obj/kern/kernel.asm	/^f01051d1:	e8 b8 f5 ff ff       	call   f010478e <cprintf>$/;"	l
f01051d6	obj/kern/kernel.asm	/^f01051d6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01051dd	obj/kern/kernel.asm	/^f01051dd:	e8 69 c0 ff ff       	call   f010124b <monitor>$/;"	l
f01051e2	obj/kern/kernel.asm	/^f01051e2:	eb f2                	jmp    f01051d6 <sched_halt+0x4e>$/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	e8 67 1b 00 00       	call   f0106d50 <cpunum>$/;"	l
f01051e9	obj/kern/kernel.asm	/^f01051e9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01051ec	obj/kern/kernel.asm	/^f01051ec:	c7 80 28 80 20 f0 00 	movl   $0x0,-0xfdf7fd8(%eax)$/;"	l
f01051f3	obj/kern/kernel.asm	/^f01051f3:	00 00 00 $/;"	l
f01051f6	obj/kern/kernel.asm	/^f01051f6:	a1 8c 7e 20 f0       	mov    0xf0207e8c,%eax$/;"	l
f01051fb	obj/kern/kernel.asm	/^f01051fb:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	77 20                	ja     f0105222 <sched_halt+0x9a>$/;"	l
f0105202	obj/kern/kernel.asm	/^f0105202:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105206	obj/kern/kernel.asm	/^f0105206:	c7 44 24 08 c4 74 10 	movl   $0xf01074c4,0x8(%esp)$/;"	l
f010520d	obj/kern/kernel.asm	/^f010520d:	f0 $/;"	l
f010520e	obj/kern/kernel.asm	/^f010520e:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0105215	obj/kern/kernel.asm	/^f0105215:	00 $/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	c7 04 24 59 8e 10 f0 	movl   $0xf0108e59,(%esp)$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	e8 1e ae ff ff       	call   f0100040 <_panic>$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0105227	obj/kern/kernel.asm	/^f0105227:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	e8 21 1b 00 00       	call   f0106d50 <cpunum>$/;"	l
f010522f	obj/kern/kernel.asm	/^f010522f:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	81 c2 20 80 20 f0    	add    $0xf0208020,%edx$/;"	l
f0105238	obj/kern/kernel.asm	/^f0105238:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010523d	obj/kern/kernel.asm	/^f010523d:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	c7 04 24 40 34 12 f0 	movl   $0xf0123440,(%esp)$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	e8 76 1e 00 00       	call   f01070c3 <spin_unlock>$/;"	l
f010524d	obj/kern/kernel.asm	/^f010524d:	f3 90                	pause  $/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	e8 fc 1a 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105257	obj/kern/kernel.asm	/^f0105257:	8b 80 30 80 20 f0    	mov    -0xfdf7fd0(%eax),%eax$/;"	l
f010525d	obj/kern/kernel.asm	/^f010525d:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105262	obj/kern/kernel.asm	/^f0105262:	89 c4                	mov    %eax,%esp$/;"	l
f0105264	obj/kern/kernel.asm	/^f0105264:	6a 00                	push   $0x0$/;"	l
f0105266	obj/kern/kernel.asm	/^f0105266:	6a 00                	push   $0x0$/;"	l
f0105268	obj/kern/kernel.asm	/^f0105268:	fb                   	sti    $/;"	l
f0105269	obj/kern/kernel.asm	/^f0105269:	f4                   	hlt    $/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	c9                   	leave  $/;"	l
f010526b	obj/kern/kernel.asm	/^f010526b:	c3                   	ret    $/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c <sched_yield>:$/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c:	55                   	push   %ebp$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	89 e5                	mov    %esp,%ebp$/;"	l
f010526f	obj/kern/kernel.asm	/^f010526f:	57                   	push   %edi$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	56                   	push   %esi$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	53                   	push   %ebx$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105275	obj/kern/kernel.asm	/^f0105275:	e8 d6 1a 00 00       	call   f0106d50 <cpunum>$/;"	l
f010527a	obj/kern/kernel.asm	/^f010527a:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	83 ba 28 80 20 f0 00 	cmpl   $0x0,-0xfdf7fd8(%edx)$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	74 19                	je     f01052a4 <sched_yield+0x38>$/;"	l
f010528b	obj/kern/kernel.asm	/^f010528b:	e8 c0 1a 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105293	obj/kern/kernel.asm	/^f0105293:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105299	obj/kern/kernel.asm	/^f0105299:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	8d 40 01             	lea    0x1(%eax),%eax$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01052a4	obj/kern/kernel.asm	/^f01052a4:	8b 3d 48 72 20 f0    	mov    0xf0207248,%edi$/;"	l
f01052aa	obj/kern/kernel.asm	/^f01052aa:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01052af	obj/kern/kernel.asm	/^f01052af:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	be ff ff ff ff       	mov    $0xffffffff,%esi$/;"	l
f01052b9	obj/kern/kernel.asm	/^f01052b9:	89 c1                	mov    %eax,%ecx$/;"	l
f01052bb	obj/kern/kernel.asm	/^f01052bb:	c1 e1 07             	shl    $0x7,%ecx$/;"	l
f01052be	obj/kern/kernel.asm	/^f01052be:	01 f9                	add    %edi,%ecx$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	83 79 54 02          	cmpl   $0x2,0x54(%ecx)$/;"	l
f01052c4	obj/kern/kernel.asm	/^f01052c4:	75 10                	jne    f01052d6 <sched_yield+0x6a>$/;"	l
f01052c6	obj/kern/kernel.asm	/^f01052c6:	8b 49 7c             	mov    0x7c(%ecx),%ecx$/;"	l
f01052c9	obj/kern/kernel.asm	/^f01052c9:	39 d9                	cmp    %ebx,%ecx$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	7f 05                	jg     f01052d2 <sched_yield+0x66>$/;"	l
f01052cd	obj/kern/kernel.asm	/^f01052cd:	83 fe ff             	cmp    $0xffffffff,%esi$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	75 04                	jne    f01052d6 <sched_yield+0x6a>$/;"	l
f01052d2	obj/kern/kernel.asm	/^f01052d2:	89 cb                	mov    %ecx,%ebx$/;"	l
f01052d4	obj/kern/kernel.asm	/^f01052d4:	89 c6                	mov    %eax,%esi$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	83 c0 01             	add    $0x1,%eax$/;"	l
f01052d9	obj/kern/kernel.asm	/^f01052d9:	89 c1                	mov    %eax,%ecx$/;"	l
f01052db	obj/kern/kernel.asm	/^f01052db:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f01052de	obj/kern/kernel.asm	/^f01052de:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f01052e1	obj/kern/kernel.asm	/^f01052e1:	01 c8                	add    %ecx,%eax$/;"	l
f01052e3	obj/kern/kernel.asm	/^f01052e3:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	29 c8                	sub    %ecx,%eax$/;"	l
f01052ea	obj/kern/kernel.asm	/^f01052ea:	83 ea 01             	sub    $0x1,%edx$/;"	l
f01052ed	obj/kern/kernel.asm	/^f01052ed:	75 ca                	jne    f01052b9 <sched_yield+0x4d>$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	85 f6                	test   %esi,%esi$/;"	l
f01052f1	obj/kern/kernel.asm	/^f01052f1:	78 4b                	js     f010533e <sched_yield+0xd2>$/;"	l
f01052f3	obj/kern/kernel.asm	/^f01052f3:	e8 58 1a 00 00       	call   f0106d50 <cpunum>$/;"	l
f01052f8	obj/kern/kernel.asm	/^f01052f8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01052fb	obj/kern/kernel.asm	/^f01052fb:	83 b8 28 80 20 f0 00 	cmpl   $0x0,-0xfdf7fd8(%eax)$/;"	l
f0105302	obj/kern/kernel.asm	/^f0105302:	74 27                	je     f010532b <sched_yield+0xbf>$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	e8 47 1a 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105309	obj/kern/kernel.asm	/^f0105309:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	75 13                	jne    f010532b <sched_yield+0xbf>$/;"	l
f0105318	obj/kern/kernel.asm	/^f0105318:	e8 33 1a 00 00       	call   f0106d50 <cpunum>$/;"	l
f010531d	obj/kern/kernel.asm	/^f010531d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105320	obj/kern/kernel.asm	/^f0105320:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105326	obj/kern/kernel.asm	/^f0105326:	3b 58 7c             	cmp    0x7c(%eax),%ebx$/;"	l
f0105329	obj/kern/kernel.asm	/^f0105329:	7c 13                	jl     f010533e <sched_yield+0xd2>$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	89 f0                	mov    %esi,%eax$/;"	l
f010532d	obj/kern/kernel.asm	/^f010532d:	c1 e0 07             	shl    $0x7,%eax$/;"	l
f0105330	obj/kern/kernel.asm	/^f0105330:	03 05 48 72 20 f0    	add    0xf0207248,%eax$/;"	l
f0105336	obj/kern/kernel.asm	/^f0105336:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	e8 0a f2 ff ff       	call   f0104548 <env_run>$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	e8 0d 1a 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105346	obj/kern/kernel.asm	/^f0105346:	83 b8 28 80 20 f0 00 	cmpl   $0x0,-0xfdf7fd8(%eax)$/;"	l
f010534d	obj/kern/kernel.asm	/^f010534d:	74 2a                	je     f0105379 <sched_yield+0x10d>$/;"	l
f010534f	obj/kern/kernel.asm	/^f010534f:	e8 fc 19 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105354	obj/kern/kernel.asm	/^f0105354:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105357	obj/kern/kernel.asm	/^f0105357:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f010535d	obj/kern/kernel.asm	/^f010535d:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	75 16                	jne    f0105379 <sched_yield+0x10d>$/;"	l
f0105363	obj/kern/kernel.asm	/^f0105363:	e8 e8 19 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010536b	obj/kern/kernel.asm	/^f010536b:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105371	obj/kern/kernel.asm	/^f0105371:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	e8 cf f1 ff ff       	call   f0104548 <env_run>$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	e8 0a fe ff ff       	call   f0105188 <sched_halt>$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105381	obj/kern/kernel.asm	/^f0105381:	5b                   	pop    %ebx$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	5e                   	pop    %esi$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	5f                   	pop    %edi$/;"	l
f0105384	obj/kern/kernel.asm	/^f0105384:	5d                   	pop    %ebp$/;"	l
f0105385	obj/kern/kernel.asm	/^f0105385:	c3                   	ret    $/;"	l
f0105390	obj/kern/kernel.asm	/^f0105390 <syscall>:$/;"	l
f0105390	obj/kern/kernel.asm	/^f0105390:	55                   	push   %ebp$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	89 e5                	mov    %esp,%ebp$/;"	l
f0105393	obj/kern/kernel.asm	/^f0105393:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0105396	obj/kern/kernel.asm	/^f0105396:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0105399	obj/kern/kernel.asm	/^f0105399:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f010539c	obj/kern/kernel.asm	/^f010539c:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f010539f	obj/kern/kernel.asm	/^f010539f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01053a5	obj/kern/kernel.asm	/^f01053a5:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01053a8	obj/kern/kernel.asm	/^f01053a8:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	0f 87 14 06 00 00    	ja     f01059ca <syscall+0x63a>$/;"	l
f01053b6	obj/kern/kernel.asm	/^f01053b6:	ff 24 85 80 8e 10 f0 	jmp    *-0xfef7180(,%eax,4)$/;"	l
f01053bd	obj/kern/kernel.asm	/^f01053bd:	e8 af b2 ff ff       	call   f0100671 <cons_getc>$/;"	l
f01053c2	obj/kern/kernel.asm	/^f01053c2:	89 c6                	mov    %eax,%esi$/;"	l
f01053c4	obj/kern/kernel.asm	/^f01053c4:	e9 01 06 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f01053c9	obj/kern/kernel.asm	/^f01053c9:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01053d0	obj/kern/kernel.asm	/^f01053d0:	00 $/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f01053d4	obj/kern/kernel.asm	/^f01053d4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01053d8	obj/kern/kernel.asm	/^f01053d8:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01053db	obj/kern/kernel.asm	/^f01053db:	e8 dd ea ff ff       	call   f0103ebd <envid2env>$/;"	l
f01053e0	obj/kern/kernel.asm	/^f01053e0:	89 c6                	mov    %eax,%esi$/;"	l
f01053e2	obj/kern/kernel.asm	/^f01053e2:	85 c0                	test   %eax,%eax$/;"	l
f01053e4	obj/kern/kernel.asm	/^f01053e4:	0f 88 e0 05 00 00    	js     f01059ca <syscall+0x63a>$/;"	l
f01053ea	obj/kern/kernel.asm	/^f01053ea:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01053ed	obj/kern/kernel.asm	/^f01053ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053f0	obj/kern/kernel.asm	/^f01053f0:	e8 b2 f0 ff ff       	call   f01044a7 <env_destroy>$/;"	l
f01053f5	obj/kern/kernel.asm	/^f01053f5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	e9 cb 05 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f01053ff	obj/kern/kernel.asm	/^f01053ff:	e8 4c 19 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105404	obj/kern/kernel.asm	/^f0105404:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105407	obj/kern/kernel.asm	/^f0105407:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f010540d	obj/kern/kernel.asm	/^f010540d:	8b 70 48             	mov    0x48(%eax),%esi$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	e9 b5 05 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	e8 52 fe ff ff       	call   f010526c <sched_yield>$/;"	l
f010541a	obj/kern/kernel.asm	/^f010541a:	e8 31 19 00 00       	call   f0106d50 <cpunum>$/;"	l
f010541f	obj/kern/kernel.asm	/^f010541f:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	00 $/;"	l
f0105427	obj/kern/kernel.asm	/^f0105427:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010542b	obj/kern/kernel.asm	/^f010542b:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010542f	obj/kern/kernel.asm	/^f010542f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105438	obj/kern/kernel.asm	/^f0105438:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010543b	obj/kern/kernel.asm	/^f010543b:	e8 a5 e9 ff ff       	call   f0103de5 <user_mem_assert>$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105448	obj/kern/kernel.asm	/^f0105448:	c7 04 24 66 8e 10 f0 	movl   $0xf0108e66,(%esp)$/;"	l
f010544f	obj/kern/kernel.asm	/^f010544f:	e8 3a f3 ff ff       	call   f010478e <cprintf>$/;"	l
f0105454	obj/kern/kernel.asm	/^f0105454:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	e9 6c 05 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105465	obj/kern/kernel.asm	/^f0105465:	00 $/;"	l
f0105466	obj/kern/kernel.asm	/^f0105466:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0105469	obj/kern/kernel.asm	/^f0105469:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010546d	obj/kern/kernel.asm	/^f010546d:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105470	obj/kern/kernel.asm	/^f0105470:	e8 48 ea ff ff       	call   f0103ebd <envid2env>$/;"	l
f0105475	obj/kern/kernel.asm	/^f0105475:	85 c0                	test   %eax,%eax$/;"	l
f0105477	obj/kern/kernel.asm	/^f0105477:	78 7a                	js     f01054f3 <syscall+0x163>$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010547e	obj/kern/kernel.asm	/^f010547e:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105484	obj/kern/kernel.asm	/^f0105484:	0f 87 40 05 00 00    	ja     f01059ca <syscall+0x63a>$/;"	l
f010548a	obj/kern/kernel.asm	/^f010548a:	8d 83 ff 0f 00 00    	lea    0xfff(%ebx),%eax$/;"	l
f0105490	obj/kern/kernel.asm	/^f0105490:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105497	obj/kern/kernel.asm	/^f0105497:	0f 85 2d 05 00 00    	jne    f01059ca <syscall+0x63a>$/;"	l
f010549d	obj/kern/kernel.asm	/^f010549d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01054a0	obj/kern/kernel.asm	/^f01054a0:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	0f 85 1c 05 00 00    	jne    f01059ca <syscall+0x63a>$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	e8 1f c4 ff ff       	call   f01018d9 <page_alloc>$/;"	l
f01054ba	obj/kern/kernel.asm	/^f01054ba:	89 c6                	mov    %eax,%esi$/;"	l
f01054bc	obj/kern/kernel.asm	/^f01054bc:	85 c0                	test   %eax,%eax$/;"	l
f01054be	obj/kern/kernel.asm	/^f01054be:	74 3d                	je     f01054fd <syscall+0x16d>$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f01054c3	obj/kern/kernel.asm	/^f01054c3:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01054cb	obj/kern/kernel.asm	/^f01054cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01054cf	obj/kern/kernel.asm	/^f01054cf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01054d5	obj/kern/kernel.asm	/^f01054d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01054d8	obj/kern/kernel.asm	/^f01054d8:	e8 cb c6 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f01054dd	obj/kern/kernel.asm	/^f01054dd:	85 c0                	test   %eax,%eax$/;"	l
f01054df	obj/kern/kernel.asm	/^f01054df:	79 26                	jns    f0105507 <syscall+0x177>$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	e8 71 c4 ff ff       	call   f010195a <page_free>$/;"	l
f01054e9	obj/kern/kernel.asm	/^f01054e9:	be fc ff ff ff       	mov    $0xfffffffc,%esi$/;"	l
f01054ee	obj/kern/kernel.asm	/^f01054ee:	e9 d7 04 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f01054f3	obj/kern/kernel.asm	/^f01054f3:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f01054f8	obj/kern/kernel.asm	/^f01054f8:	e9 cd 04 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	be fc ff ff ff       	mov    $0xfffffffc,%esi$/;"	l
f0105502	obj/kern/kernel.asm	/^f0105502:	e9 c3 04 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105507	obj/kern/kernel.asm	/^f0105507:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	e9 b9 04 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	00 $/;"	l
f0105519	obj/kern/kernel.asm	/^f0105519:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105520	obj/kern/kernel.asm	/^f0105520:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105526	obj/kern/kernel.asm	/^f0105526:	e8 92 e9 ff ff       	call   f0103ebd <envid2env>$/;"	l
f010552b	obj/kern/kernel.asm	/^f010552b:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	85 c0                	test   %eax,%eax$/;"	l
f0105532	obj/kern/kernel.asm	/^f0105532:	0f 88 92 04 00 00    	js     f01059ca <syscall+0x63a>$/;"	l
f0105538	obj/kern/kernel.asm	/^f0105538:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010553f	obj/kern/kernel.asm	/^f010553f:	00 $/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0105543	obj/kern/kernel.asm	/^f0105543:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010554a	obj/kern/kernel.asm	/^f010554a:	e8 6e e9 ff ff       	call   f0103ebd <envid2env>$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	85 c0                	test   %eax,%eax$/;"	l
f0105551	obj/kern/kernel.asm	/^f0105551:	0f 88 b3 00 00 00    	js     f010560a <syscall+0x27a>$/;"	l
f0105557	obj/kern/kernel.asm	/^f0105557:	66 be fd ff          	mov    $0xfffd,%si$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	0f 87 63 04 00 00    	ja     f01059ca <syscall+0x63a>$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	8d 83 ff 0f 00 00    	lea    0xfff(%ebx),%eax$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105574	obj/kern/kernel.asm	/^f0105574:	0f 85 50 04 00 00    	jne    f01059ca <syscall+0x63a>$/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	0f 87 43 04 00 00    	ja     f01059ca <syscall+0x63a>$/;"	l
f0105587	obj/kern/kernel.asm	/^f0105587:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f010558a	obj/kern/kernel.asm	/^f010558a:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f010558f	obj/kern/kernel.asm	/^f010558f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105594	obj/kern/kernel.asm	/^f0105594:	39 45 18             	cmp    %eax,0x18(%ebp)$/;"	l
f0105597	obj/kern/kernel.asm	/^f0105597:	0f 85 2d 04 00 00    	jne    f01059ca <syscall+0x63a>$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f01055a0	obj/kern/kernel.asm	/^f01055a0:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f01055a5	obj/kern/kernel.asm	/^f01055a5:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	0f 85 1c 04 00 00    	jne    f01059ca <syscall+0x63a>$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01055b1	obj/kern/kernel.asm	/^f01055b1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01055b5	obj/kern/kernel.asm	/^f01055b5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01055bc	obj/kern/kernel.asm	/^f01055bc:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01055bf	obj/kern/kernel.asm	/^f01055bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	e8 36 c5 ff ff       	call   f0101afd <page_lookup>$/;"	l
f01055c7	obj/kern/kernel.asm	/^f01055c7:	85 c0                	test   %eax,%eax$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	74 49                	je     f0105614 <syscall+0x284>$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f01055cf	obj/kern/kernel.asm	/^f01055cf:	74 0c                	je     f01055dd <syscall+0x24d>$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01055d4	obj/kern/kernel.asm	/^f01055d4:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f01055d7	obj/kern/kernel.asm	/^f01055d7:	0f 84 ed 03 00 00    	je     f01059ca <syscall+0x63a>$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	8b 7d 1c             	mov    0x1c(%ebp),%edi$/;"	l
f01055e0	obj/kern/kernel.asm	/^f01055e0:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01055e4	obj/kern/kernel.asm	/^f01055e4:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f01055e7	obj/kern/kernel.asm	/^f01055e7:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01055eb	obj/kern/kernel.asm	/^f01055eb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	e8 ab c5 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f01055fd	obj/kern/kernel.asm	/^f01055fd:	89 c6                	mov    %eax,%esi$/;"	l
f01055ff	obj/kern/kernel.asm	/^f01055ff:	c1 fe 1f             	sar    $0x1f,%esi$/;"	l
f0105602	obj/kern/kernel.asm	/^f0105602:	83 e6 fc             	and    $0xfffffffc,%esi$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	e9 c0 03 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	e9 b6 03 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105614	obj/kern/kernel.asm	/^f0105614:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105619	obj/kern/kernel.asm	/^f0105619:	e9 ac 03 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	00 $/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105629	obj/kern/kernel.asm	/^f0105629:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010562d	obj/kern/kernel.asm	/^f010562d:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	e8 88 e8 ff ff       	call   f0103ebd <envid2env>$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	85 c0                	test   %eax,%eax$/;"	l
f0105637	obj/kern/kernel.asm	/^f0105637:	78 40                	js     f0105679 <syscall+0x2e9>$/;"	l
f0105639	obj/kern/kernel.asm	/^f0105639:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	0f 87 80 03 00 00    	ja     f01059ca <syscall+0x63a>$/;"	l
f010564a	obj/kern/kernel.asm	/^f010564a:	8d 83 ff 0f 00 00    	lea    0xfff(%ebx),%eax$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0105655	obj/kern/kernel.asm	/^f0105655:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	0f 85 6d 03 00 00    	jne    f01059ca <syscall+0x63a>$/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105661	obj/kern/kernel.asm	/^f0105661:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105664	obj/kern/kernel.asm	/^f0105664:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	e8 fb c4 ff ff       	call   f0101b6a <page_remove>$/;"	l
f010566f	obj/kern/kernel.asm	/^f010566f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105674	obj/kern/kernel.asm	/^f0105674:	e9 51 03 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105679	obj/kern/kernel.asm	/^f0105679:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	e9 47 03 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	e8 c8 16 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105698	obj/kern/kernel.asm	/^f0105698:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010569b	obj/kern/kernel.asm	/^f010569b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	e8 31 e9 ff ff       	call   f0103fd4 <env_alloc>$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	89 c6                	mov    %eax,%esi$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	85 c0                	test   %eax,%eax$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	0f 88 1d 03 00 00    	js     f01059ca <syscall+0x63a>$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f01056b0	obj/kern/kernel.asm	/^f01056b0:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f01056b7	obj/kern/kernel.asm	/^f01056b7:	e8 94 16 00 00       	call   f0106d50 <cpunum>$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	8b b0 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%esi$/;"	l
f01056c5	obj/kern/kernel.asm	/^f01056c5:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01056ca	obj/kern/kernel.asm	/^f01056ca:	89 df                	mov    %ebx,%edi$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01056ce	obj/kern/kernel.asm	/^f01056ce:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01056d1	obj/kern/kernel.asm	/^f01056d1:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	8b 70 48             	mov    0x48(%eax),%esi$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	e9 ea 02 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f01056e0	obj/kern/kernel.asm	/^f01056e0:	83 fb 04             	cmp    $0x4,%ebx$/;"	l
f01056e3	obj/kern/kernel.asm	/^f01056e3:	74 0e                	je     f01056f3 <syscall+0x363>$/;"	l
f01056e5	obj/kern/kernel.asm	/^f01056e5:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01056ea	obj/kern/kernel.asm	/^f01056ea:	83 fb 02             	cmp    $0x2,%ebx$/;"	l
f01056ed	obj/kern/kernel.asm	/^f01056ed:	0f 85 d7 02 00 00    	jne    f01059ca <syscall+0x63a>$/;"	l
f01056f3	obj/kern/kernel.asm	/^f01056f3:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01056fa	obj/kern/kernel.asm	/^f01056fa:	00 $/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105705	obj/kern/kernel.asm	/^f0105705:	e8 b3 e7 ff ff       	call   f0103ebd <envid2env>$/;"	l
f010570a	obj/kern/kernel.asm	/^f010570a:	85 c0                	test   %eax,%eax$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	78 10                	js     f010571e <syscall+0x38e>$/;"	l
f010570e	obj/kern/kernel.asm	/^f010570e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105711	obj/kern/kernel.asm	/^f0105711:	89 58 54             	mov    %ebx,0x54(%eax)$/;"	l
f0105714	obj/kern/kernel.asm	/^f0105714:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105719	obj/kern/kernel.asm	/^f0105719:	e9 ac 02 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	e9 a2 02 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105728	obj/kern/kernel.asm	/^f0105728:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	00 $/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105733	obj/kern/kernel.asm	/^f0105733:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105737	obj/kern/kernel.asm	/^f0105737:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010573a	obj/kern/kernel.asm	/^f010573a:	e8 7e e7 ff ff       	call   f0103ebd <envid2env>$/;"	l
f010573f	obj/kern/kernel.asm	/^f010573f:	89 c6                	mov    %eax,%esi$/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	85 c0                	test   %eax,%eax$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	0f 88 81 02 00 00    	js     f01059ca <syscall+0x63a>$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	89 58 64             	mov    %ebx,0x64(%eax)$/;"	l
f010574f	obj/kern/kernel.asm	/^f010574f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105754	obj/kern/kernel.asm	/^f0105754:	e9 71 02 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105759	obj/kern/kernel.asm	/^f0105759:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105760	obj/kern/kernel.asm	/^f0105760:	00 $/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105768	obj/kern/kernel.asm	/^f0105768:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010576b	obj/kern/kernel.asm	/^f010576b:	e8 4d e7 ff ff       	call   f0103ebd <envid2env>$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	89 c6                	mov    %eax,%esi$/;"	l
f0105772	obj/kern/kernel.asm	/^f0105772:	85 c0                	test   %eax,%eax$/;"	l
f0105774	obj/kern/kernel.asm	/^f0105774:	0f 85 50 02 00 00    	jne    f01059ca <syscall+0x63a>$/;"	l
f010577a	obj/kern/kernel.asm	/^f010577a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	80 78 68 00          	cmpb   $0x0,0x68(%eax)$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	0f 84 e2 00 00 00    	je     f0105869 <syscall+0x4d9>$/;"	l
f0105787	obj/kern/kernel.asm	/^f0105787:	83 78 74 00          	cmpl   $0x0,0x74(%eax)$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	0f 85 e2 00 00 00    	jne    f0105873 <syscall+0x4e3>$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f0105798	obj/kern/kernel.asm	/^f0105798:	0f 87 97 00 00 00    	ja     f0105835 <syscall+0x4a5>$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	e8 ad 15 00 00       	call   f0106d50 <cpunum>$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f01057a6	obj/kern/kernel.asm	/^f01057a6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01057aa	obj/kern/kernel.asm	/^f01057aa:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f01057ba	obj/kern/kernel.asm	/^f01057ba:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01057bd	obj/kern/kernel.asm	/^f01057bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	e8 38 c3 ff ff       	call   f0101afd <page_lookup>$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	85 c0                	test   %eax,%eax$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	0f 84 b0 00 00 00    	je     f010587d <syscall+0x4ed>$/;"	l
f01057cd	obj/kern/kernel.asm	/^f01057cd:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	8b 0a                	mov    (%edx),%ecx$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	89 ca                	mov    %ecx,%edx$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	f7 d2                	not    %edx$/;"	l
f01057d6	obj/kern/kernel.asm	/^f01057d6:	83 e2 07             	and    $0x7,%edx$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	85 55 18             	test   %edx,0x18(%ebp)$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	0f 85 a5 00 00 00    	jne    f0105887 <syscall+0x4f7>$/;"	l
f01057e2	obj/kern/kernel.asm	/^f01057e2:	f6 45 18 02          	testb  $0x2,0x18(%ebp)$/;"	l
f01057e6	obj/kern/kernel.asm	/^f01057e6:	74 09                	je     f01057f1 <syscall+0x461>$/;"	l
f01057e8	obj/kern/kernel.asm	/^f01057e8:	f6 c1 02             	test   $0x2,%cl$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	0f 84 a0 00 00 00    	je     f0105891 <syscall+0x501>$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01057fa	obj/kern/kernel.asm	/^f01057fa:	39 55 14             	cmp    %edx,0x14(%ebp)$/;"	l
f01057fd	obj/kern/kernel.asm	/^f01057fd:	0f 85 98 00 00 00    	jne    f010589b <syscall+0x50b>$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105806	obj/kern/kernel.asm	/^f0105806:	8b 4a 6c             	mov    0x6c(%edx),%ecx$/;"	l
f0105809	obj/kern/kernel.asm	/^f0105809:	81 f9 ff ff bf ee    	cmp    $0xeebfffff,%ecx$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	77 24                	ja     f0105835 <syscall+0x4a5>$/;"	l
f0105811	obj/kern/kernel.asm	/^f0105811:	8b 7d 18             	mov    0x18(%ebp),%edi$/;"	l
f0105814	obj/kern/kernel.asm	/^f0105814:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f0105823	obj/kern/kernel.asm	/^f0105823:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	e8 7d c3 ff ff       	call   f0101ba8 <page_insert>$/;"	l
f010582b	obj/kern/kernel.asm	/^f010582b:	85 c0                	test   %eax,%eax$/;"	l
f010582d	obj/kern/kernel.asm	/^f010582d:	75 76                	jne    f01058a5 <syscall+0x515>$/;"	l
f010582f	obj/kern/kernel.asm	/^f010582f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105832	obj/kern/kernel.asm	/^f0105832:	89 78 78             	mov    %edi,0x78(%eax)$/;"	l
f0105835	obj/kern/kernel.asm	/^f0105835:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105838	obj/kern/kernel.asm	/^f0105838:	c6 47 68 00          	movb   $0x0,0x68(%edi)$/;"	l
f010583c	obj/kern/kernel.asm	/^f010583c:	e8 0f 15 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105844	obj/kern/kernel.asm	/^f0105844:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	89 47 74             	mov    %eax,0x74(%edi)$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105853	obj/kern/kernel.asm	/^f0105853:	89 58 70             	mov    %ebx,0x70(%eax)$/;"	l
f0105856	obj/kern/kernel.asm	/^f0105856:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f010585d	obj/kern/kernel.asm	/^f010585d:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	e9 61 01 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105869	obj/kern/kernel.asm	/^f0105869:	be f9 ff ff ff       	mov    $0xfffffff9,%esi$/;"	l
f010586e	obj/kern/kernel.asm	/^f010586e:	e9 57 01 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105873	obj/kern/kernel.asm	/^f0105873:	be f9 ff ff ff       	mov    $0xfffffff9,%esi$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	e9 4d 01 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f010587d	obj/kern/kernel.asm	/^f010587d:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105882	obj/kern/kernel.asm	/^f0105882:	e9 43 01 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105887	obj/kern/kernel.asm	/^f0105887:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	e9 39 01 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f0105896	obj/kern/kernel.asm	/^f0105896:	e9 2f 01 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f010589b	obj/kern/kernel.asm	/^f010589b:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01058a0	obj/kern/kernel.asm	/^f01058a0:	e9 25 01 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	89 c6                	mov    %eax,%esi$/;"	l
f01058a7	obj/kern/kernel.asm	/^f01058a7:	e9 1e 01 00 00       	jmp    f01059ca <syscall+0x63a>$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	81 ff ff ff bf ee    	cmp    $0xeebfffff,%edi$/;"	l
f01058b2	obj/kern/kernel.asm	/^f01058b2:	77 0f                	ja     f01058c3 <syscall+0x533>$/;"	l
f01058b4	obj/kern/kernel.asm	/^f01058b4:	89 f8                	mov    %edi,%eax$/;"	l
f01058b6	obj/kern/kernel.asm	/^f01058b6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01058bb	obj/kern/kernel.asm	/^f01058bb:	39 c7                	cmp    %eax,%edi$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	0f 85 02 01 00 00    	jne    f01059c5 <syscall+0x635>$/;"	l
f01058c3	obj/kern/kernel.asm	/^f01058c3:	e8 88 14 00 00       	call   f0106d50 <cpunum>$/;"	l
f01058c8	obj/kern/kernel.asm	/^f01058c8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01058cb	obj/kern/kernel.asm	/^f01058cb:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f01058d1	obj/kern/kernel.asm	/^f01058d1:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	e8 76 14 00 00       	call   f0106d50 <cpunum>$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01058dd	obj/kern/kernel.asm	/^f01058dd:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f01058e3	obj/kern/kernel.asm	/^f01058e3:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f01058ea	obj/kern/kernel.asm	/^f01058ea:	e8 61 14 00 00       	call   f0106d50 <cpunum>$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8:	89 78 6c             	mov    %edi,0x6c(%eax)$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	e8 50 14 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105909	obj/kern/kernel.asm	/^f0105909:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
f0105910	obj/kern/kernel.asm	/^f0105910:	e8 57 f9 ff ff       	call   f010526c <sched_yield>$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	00 $/;"	l
f010591d	obj/kern/kernel.asm	/^f010591d:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105920	obj/kern/kernel.asm	/^f0105920:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105924	obj/kern/kernel.asm	/^f0105924:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	e8 91 e5 ff ff       	call   f0103ebd <envid2env>$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	89 c6                	mov    %eax,%esi$/;"	l
f010592e	obj/kern/kernel.asm	/^f010592e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105932	obj/kern/kernel.asm	/^f0105932:	c7 04 24 6b 8e 10 f0 	movl   $0xf0108e6b,(%esp)$/;"	l
f0105939	obj/kern/kernel.asm	/^f0105939:	e8 50 ee ff ff       	call   f010478e <cprintf>$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	85 f6                	test   %esi,%esi$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	79 13                	jns    f0105955 <syscall+0x5c5>$/;"	l
f0105942	obj/kern/kernel.asm	/^f0105942:	c7 04 24 73 8e 10 f0 	movl   $0xf0108e73,(%esp)$/;"	l
f0105949	obj/kern/kernel.asm	/^f0105949:	e8 40 ee ff ff       	call   f010478e <cprintf>$/;"	l
f010594e	obj/kern/kernel.asm	/^f010594e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105953	obj/kern/kernel.asm	/^f0105953:	eb 75                	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105958	obj/kern/kernel.asm	/^f0105958:	89 58 7c             	mov    %ebx,0x7c(%eax)$/;"	l
f010595b	obj/kern/kernel.asm	/^f010595b:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	eb 68                	jmp    f01059ca <syscall+0x63a>$/;"	l
f0105962	obj/kern/kernel.asm	/^f0105962:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	00 $/;"	l
f010596a	obj/kern/kernel.asm	/^f010596a:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f010596d	obj/kern/kernel.asm	/^f010596d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105974	obj/kern/kernel.asm	/^f0105974:	e8 44 e5 ff ff       	call   f0103ebd <envid2env>$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	be fe ff ff ff       	mov    $0xfffffffe,%esi$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	85 c0                	test   %eax,%eax$/;"	l
f0105980	obj/kern/kernel.asm	/^f0105980:	78 48                	js     f01059ca <syscall+0x63a>$/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105989	obj/kern/kernel.asm	/^f0105989:	00 $/;"	l
f010598a	obj/kern/kernel.asm	/^f010598a:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0105991	obj/kern/kernel.asm	/^f0105991:	00 $/;"	l
f0105992	obj/kern/kernel.asm	/^f0105992:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105996	obj/kern/kernel.asm	/^f0105996:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105999	obj/kern/kernel.asm	/^f0105999:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010599c	obj/kern/kernel.asm	/^f010599c:	e8 44 e4 ff ff       	call   f0103de5 <user_mem_assert>$/;"	l
f01059a1	obj/kern/kernel.asm	/^f01059a1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01059a4	obj/kern/kernel.asm	/^f01059a4:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	89 c7                	mov    %eax,%edi$/;"	l
f01059ab	obj/kern/kernel.asm	/^f01059ab:	89 de                	mov    %ebx,%esi$/;"	l
f01059ad	obj/kern/kernel.asm	/^f01059ad:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	66 83 48 34 03       	orw    $0x3,0x34(%eax)$/;"	l
f01059b7	obj/kern/kernel.asm	/^f01059b7:	81 48 38 00 02 00 00 	orl    $0x200,0x38(%eax)$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01059c3	obj/kern/kernel.asm	/^f01059c3:	eb 05                	jmp    f01059ca <syscall+0x63a>$/;"	l
f01059c5	obj/kern/kernel.asm	/^f01059c5:	be fd ff ff ff       	mov    $0xfffffffd,%esi$/;"	l
f01059ca	obj/kern/kernel.asm	/^f01059ca:	89 f0                	mov    %esi,%eax$/;"	l
f01059cc	obj/kern/kernel.asm	/^f01059cc:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01059d2	obj/kern/kernel.asm	/^f01059d2:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01059d5	obj/kern/kernel.asm	/^f01059d5:	89 ec                	mov    %ebp,%esp$/;"	l
f01059d7	obj/kern/kernel.asm	/^f01059d7:	5d                   	pop    %ebp$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	c3                   	ret    $/;"	l
f01059d9	obj/kern/kernel.asm	/^f01059d9:	00 00                	add    %al,(%eax)$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc <stab_binsearch>:$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	55                   	push   %ebp$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	89 e5                	mov    %esp,%ebp$/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	57                   	push   %edi$/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	56                   	push   %esi$/;"	l
f01059e1	obj/kern/kernel.asm	/^f01059e1:	53                   	push   %ebx$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01059e5	obj/kern/kernel.asm	/^f01059e5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01059e8	obj/kern/kernel.asm	/^f01059e8:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f01059eb	obj/kern/kernel.asm	/^f01059eb:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	8b 1a                	mov    (%edx),%ebx$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	8b 01                	mov    (%ecx),%eax$/;"	l
f01059f5	obj/kern/kernel.asm	/^f01059f5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01059f8	obj/kern/kernel.asm	/^f01059f8:	39 c3                	cmp    %eax,%ebx$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	0f 8f 9c 00 00 00    	jg     f0105a9c <stab_binsearch+0xc0>$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	01 d8                	add    %ebx,%eax$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	89 c7                	mov    %eax,%edi$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	01 c7                	add    %eax,%edi$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	d1 ff                	sar    %edi$/;"	d
f0105a15	obj/kern/kernel.asm	/^f0105a15:	39 df                	cmp    %ebx,%edi$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	7c 33                	jl     f0105a4c <stab_binsearch+0x70>$/;"	l
f0105a19	obj/kern/kernel.asm	/^f0105a19:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0105a1f	obj/kern/kernel.asm	/^f0105a1f:	0f b6 44 82 04       	movzbl 0x4(%edx,%eax,4),%eax$/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	39 f0                	cmp    %esi,%eax$/;"	l
f0105a26	obj/kern/kernel.asm	/^f0105a26:	0f 84 bc 00 00 00    	je     f0105ae8 <stab_binsearch+0x10c>$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	8d 44 7f fd          	lea    -0x3(%edi,%edi,2),%eax$/;"	l
f0105a30	obj/kern/kernel.asm	/^f0105a30:	8d 54 82 04          	lea    0x4(%edx,%eax,4),%edx$/;"	l
f0105a34	obj/kern/kernel.asm	/^f0105a34:	89 f8                	mov    %edi,%eax$/;"	l
f0105a36	obj/kern/kernel.asm	/^f0105a36:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	7c 0f                	jl     f0105a4c <stab_binsearch+0x70>$/;"	l
f0105a3d	obj/kern/kernel.asm	/^f0105a3d:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105a43	obj/kern/kernel.asm	/^f0105a43:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	75 ef                	jne    f0105a36 <stab_binsearch+0x5a>$/;"	l
f0105a47	obj/kern/kernel.asm	/^f0105a47:	e9 9e 00 00 00       	jmp    f0105aea <stab_binsearch+0x10e>$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	eb 3c                	jmp    f0105a8d <stab_binsearch+0xb1>$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105a54	obj/kern/kernel.asm	/^f0105a54:	89 02                	mov    %eax,(%edx)$/;"	l
f0105a56	obj/kern/kernel.asm	/^f0105a56:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	eb 2b                	jmp    f0105a8d <stab_binsearch+0xb1>$/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0105a65	obj/kern/kernel.asm	/^f0105a65:	76 14                	jbe    f0105a7b <stab_binsearch+0x9f>$/;"	l
f0105a67	obj/kern/kernel.asm	/^f0105a67:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105a6d	obj/kern/kernel.asm	/^f0105a6d:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105a70	obj/kern/kernel.asm	/^f0105a70:	89 01                	mov    %eax,(%ecx)$/;"	l
f0105a72	obj/kern/kernel.asm	/^f0105a72:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	eb 12                	jmp    f0105a8d <stab_binsearch+0xb1>$/;"	l
f0105a7b	obj/kern/kernel.asm	/^f0105a7b:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105a7e	obj/kern/kernel.asm	/^f0105a7e:	89 02                	mov    %eax,(%edx)$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	89 c3                	mov    %eax,%ebx$/;"	l
f0105a86	obj/kern/kernel.asm	/^f0105a86:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	39 5d ec             	cmp    %ebx,-0x14(%ebp)$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	0f 8d 71 ff ff ff    	jge    f0105a07 <stab_binsearch+0x2b>$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	75 0f                	jne    f0105aab <stab_binsearch+0xcf>$/;"	l
f0105a9c	obj/kern/kernel.asm	/^f0105a9c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105a9f	obj/kern/kernel.asm	/^f0105a9f:	8b 02                	mov    (%edx),%eax$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	89 01                	mov    %eax,(%ecx)$/;"	l
f0105aa9	obj/kern/kernel.asm	/^f0105aa9:	eb 57                	jmp    f0105b02 <stab_binsearch+0x126>$/;"	l
f0105aab	obj/kern/kernel.asm	/^f0105aab:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105aae	obj/kern/kernel.asm	/^f0105aae:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105ab0	obj/kern/kernel.asm	/^f0105ab0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0105ab5	obj/kern/kernel.asm	/^f0105ab5:	39 c1                	cmp    %eax,%ecx$/;"	l
f0105ab7	obj/kern/kernel.asm	/^f0105ab7:	7d 28                	jge    f0105ae1 <stab_binsearch+0x105>$/;"	l
f0105ab9	obj/kern/kernel.asm	/^f0105ab9:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
f0105abf	obj/kern/kernel.asm	/^f0105abf:	0f b6 54 93 04       	movzbl 0x4(%ebx,%edx,4),%edx$/;"	l
f0105ac4	obj/kern/kernel.asm	/^f0105ac4:	39 f2                	cmp    %esi,%edx$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	74 19                	je     f0105ae1 <stab_binsearch+0x105>$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0105acc	obj/kern/kernel.asm	/^f0105acc:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f0105ad0	obj/kern/kernel.asm	/^f0105ad0:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105ad3	obj/kern/kernel.asm	/^f0105ad3:	39 c1                	cmp    %eax,%ecx$/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5:	7d 0a                	jge    f0105ae1 <stab_binsearch+0x105>$/;"	l
f0105ad7	obj/kern/kernel.asm	/^f0105ad7:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0105ada	obj/kern/kernel.asm	/^f0105ada:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105add	obj/kern/kernel.asm	/^f0105add:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	75 ef                	jne    f0105ad0 <stab_binsearch+0xf4>$/;"	l
f0105ae1	obj/kern/kernel.asm	/^f0105ae1:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105ae4	obj/kern/kernel.asm	/^f0105ae4:	89 02                	mov    %eax,(%edx)$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	eb 1a                	jmp    f0105b02 <stab_binsearch+0x126>$/;"	l
f0105ae8	obj/kern/kernel.asm	/^f0105ae8:	89 f8                	mov    %edi,%eax$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105aed	obj/kern/kernel.asm	/^f0105aed:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f0105af7	obj/kern/kernel.asm	/^f0105af7:	0f 82 54 ff ff ff    	jb     f0105a51 <stab_binsearch+0x75>$/;"	l
f0105afd	obj/kern/kernel.asm	/^f0105afd:	e9 60 ff ff ff       	jmp    f0105a62 <stab_binsearch+0x86>$/;"	l
f0105b02	obj/kern/kernel.asm	/^f0105b02:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105b05	obj/kern/kernel.asm	/^f0105b05:	5b                   	pop    %ebx$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	5e                   	pop    %esi$/;"	l
f0105b07	obj/kern/kernel.asm	/^f0105b07:	5f                   	pop    %edi$/;"	l
f0105b08	obj/kern/kernel.asm	/^f0105b08:	5d                   	pop    %ebp$/;"	l
f0105b09	obj/kern/kernel.asm	/^f0105b09:	c3                   	ret    $/;"	l
f0105b0a	obj/kern/kernel.asm	/^f0105b0a <debuginfo_eip>:$/;"	l
f0105b0a	obj/kern/kernel.asm	/^f0105b0a:	55                   	push   %ebp$/;"	l
f0105b0b	obj/kern/kernel.asm	/^f0105b0b:	89 e5                	mov    %esp,%ebp$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	57                   	push   %edi$/;"	l
f0105b0e	obj/kern/kernel.asm	/^f0105b0e:	56                   	push   %esi$/;"	l
f0105b0f	obj/kern/kernel.asm	/^f0105b0f:	53                   	push   %ebx$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105b19	obj/kern/kernel.asm	/^f0105b19:	c7 03 bc 8e 10 f0    	movl   $0xf0108ebc,(%ebx)$/;"	l
f0105b1f	obj/kern/kernel.asm	/^f0105b1f:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f0105b26	obj/kern/kernel.asm	/^f0105b26:	c7 43 08 bc 8e 10 f0 	movl   $0xf0108ebc,0x8(%ebx)$/;"	l
f0105b2d	obj/kern/kernel.asm	/^f0105b2d:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f0105b34	obj/kern/kernel.asm	/^f0105b34:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105b37	obj/kern/kernel.asm	/^f0105b37:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0105b44	obj/kern/kernel.asm	/^f0105b44:	0f 87 de 00 00 00    	ja     f0105c28 <debuginfo_eip+0x11e>$/;"	l
f0105b4a	obj/kern/kernel.asm	/^f0105b4a:	e8 01 12 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105b4f	obj/kern/kernel.asm	/^f0105b4f:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	00 $/;"	l
f0105b57	obj/kern/kernel.asm	/^f0105b57:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e:	00 $/;"	l
f0105b5f	obj/kern/kernel.asm	/^f0105b5f:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f0105b66	obj/kern/kernel.asm	/^f0105b66:	00 $/;"	l
f0105b67	obj/kern/kernel.asm	/^f0105b67:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	e8 b3 e1 ff ff       	call   f0103d2b <user_mem_check>$/;"	l
f0105b78	obj/kern/kernel.asm	/^f0105b78:	89 c2                	mov    %eax,%edx$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105b7f	obj/kern/kernel.asm	/^f0105b7f:	85 d2                	test   %edx,%edx$/;"	l
f0105b81	obj/kern/kernel.asm	/^f0105b81:	0f 88 b4 02 00 00    	js     f0105e3b <debuginfo_eip+0x331>$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	8b 3d 00 00 20 00    	mov    0x200000,%edi$/;"	l
f0105b8d	obj/kern/kernel.asm	/^f0105b8d:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
f0105b90	obj/kern/kernel.asm	/^f0105b90:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	a1 08 00 20 00       	mov    0x200008,%eax$/;"	l
f0105b9b	obj/kern/kernel.asm	/^f0105b9b:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	89 f9                	mov    %edi,%ecx$/;"	l
f0105ba9	obj/kern/kernel.asm	/^f0105ba9:	2b 4d c4             	sub    -0x3c(%ebp),%ecx$/;"	l
f0105bac	obj/kern/kernel.asm	/^f0105bac:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f0105baf	obj/kern/kernel.asm	/^f0105baf:	e8 9c 11 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	00 $/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0105bbf	obj/kern/kernel.asm	/^f0105bbf:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105bc3	obj/kern/kernel.asm	/^f0105bc3:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0105bc6	obj/kern/kernel.asm	/^f0105bc6:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105bca	obj/kern/kernel.asm	/^f0105bca:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105bd3	obj/kern/kernel.asm	/^f0105bd3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bd6	obj/kern/kernel.asm	/^f0105bd6:	e8 50 e1 ff ff       	call   f0103d2b <user_mem_check>$/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	89 c2                	mov    %eax,%edx$/;"	l
f0105bdd	obj/kern/kernel.asm	/^f0105bdd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105be2	obj/kern/kernel.asm	/^f0105be2:	85 d2                	test   %edx,%edx$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	0f 88 51 02 00 00    	js     f0105e3b <debuginfo_eip+0x331>$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0105bed	obj/kern/kernel.asm	/^f0105bed:	2b 45 b8             	sub    -0x48(%ebp),%eax$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f0105bf3	obj/kern/kernel.asm	/^f0105bf3:	e8 58 11 00 00       	call   f0106d50 <cpunum>$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f0105bff	obj/kern/kernel.asm	/^f0105bff:	00 $/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f0105c03	obj/kern/kernel.asm	/^f0105c03:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0105c0a	obj/kern/kernel.asm	/^f0105c0a:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105c11	obj/kern/kernel.asm	/^f0105c11:	8b 80 28 80 20 f0    	mov    -0xfdf7fd8(%eax),%eax$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c1a	obj/kern/kernel.asm	/^f0105c1a:	e8 0c e1 ff ff       	call   f0103d2b <user_mem_check>$/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f:	85 c0                	test   %eax,%eax$/;"	l
f0105c21	obj/kern/kernel.asm	/^f0105c21:	79 1f                	jns    f0105c42 <debuginfo_eip+0x138>$/;"	l
f0105c23	obj/kern/kernel.asm	/^f0105c23:	e9 07 02 00 00       	jmp    f0105e2f <debuginfo_eip+0x325>$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	c7 45 bc 95 89 11 f0 	movl   $0xf0118995,-0x44(%ebp)$/;"	l
f0105c2f	obj/kern/kernel.asm	/^f0105c2f:	c7 45 b8 f9 4e 11 f0 	movl   $0xf0114ef9,-0x48(%ebp)$/;"	l
f0105c36	obj/kern/kernel.asm	/^f0105c36:	bf f8 4e 11 f0       	mov    $0xf0114ef8,%edi$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	c7 45 c4 50 94 10 f0 	movl   $0xf0109450,-0x3c(%ebp)$/;"	l
f0105c42	obj/kern/kernel.asm	/^f0105c42:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105c4a	obj/kern/kernel.asm	/^f0105c4a:	39 55 b8             	cmp    %edx,-0x48(%ebp)$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	0f 83 e8 01 00 00    	jae    f0105e3b <debuginfo_eip+0x331>$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	80 7a ff 00          	cmpb   $0x0,-0x1(%edx)$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	0f 85 de 01 00 00    	jne    f0105e3b <debuginfo_eip+0x331>$/;"	l
f0105c5d	obj/kern/kernel.asm	/^f0105c5d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	2b 7d c4             	sub    -0x3c(%ebp),%edi$/;"	l
f0105c67	obj/kern/kernel.asm	/^f0105c67:	c1 ff 02             	sar    $0x2,%edi$/;"	l
f0105c6a	obj/kern/kernel.asm	/^f0105c6a:	69 c7 ab aa aa aa    	imul   $0xaaaaaaab,%edi,%eax$/;"	l
f0105c70	obj/kern/kernel.asm	/^f0105c70:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105c7a	obj/kern/kernel.asm	/^f0105c7a:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105c81	obj/kern/kernel.asm	/^f0105c81:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105c87	obj/kern/kernel.asm	/^f0105c87:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	e8 4d fd ff ff       	call   f01059dc <stab_binsearch>$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	85 d2                	test   %edx,%edx$/;"	l
f0105c99	obj/kern/kernel.asm	/^f0105c99:	0f 84 9c 01 00 00    	je     f0105e3b <debuginfo_eip+0x331>$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f0105ca2	obj/kern/kernel.asm	/^f0105ca2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105cac	obj/kern/kernel.asm	/^f0105cac:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0105cb3	obj/kern/kernel.asm	/^f0105cb3:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0105cb6	obj/kern/kernel.asm	/^f0105cb6:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105cb9	obj/kern/kernel.asm	/^f0105cb9:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105cbc	obj/kern/kernel.asm	/^f0105cbc:	e8 1b fd ff ff       	call   f01059dc <stab_binsearch>$/;"	l
f0105cc1	obj/kern/kernel.asm	/^f0105cc1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0105cc7	obj/kern/kernel.asm	/^f0105cc7:	39 d0                	cmp    %edx,%eax$/;"	l
f0105cc9	obj/kern/kernel.asm	/^f0105cc9:	7f 32                	jg     f0105cfd <debuginfo_eip+0x1f3>$/;"	l
f0105ccb	obj/kern/kernel.asm	/^f0105ccb:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f0105cce	obj/kern/kernel.asm	/^f0105cce:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	8d 0c 8f             	lea    (%edi,%ecx,4),%ecx$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	8b 39                	mov    (%ecx),%edi$/;"	l
f0105cd6	obj/kern/kernel.asm	/^f0105cd6:	89 7d b4             	mov    %edi,-0x4c(%ebp)$/;"	l
f0105cd9	obj/kern/kernel.asm	/^f0105cd9:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f0105cdc	obj/kern/kernel.asm	/^f0105cdc:	2b 7d b8             	sub    -0x48(%ebp),%edi$/;"	l
f0105cdf	obj/kern/kernel.asm	/^f0105cdf:	39 7d b4             	cmp    %edi,-0x4c(%ebp)$/;"	l
f0105ce2	obj/kern/kernel.asm	/^f0105ce2:	73 09                	jae    f0105ced <debuginfo_eip+0x1e3>$/;"	l
f0105ce4	obj/kern/kernel.asm	/^f0105ce4:	8b 7d b4             	mov    -0x4c(%ebp),%edi$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7:	03 7d b8             	add    -0x48(%ebp),%edi$/;"	l
f0105cea	obj/kern/kernel.asm	/^f0105cea:	89 7b 08             	mov    %edi,0x8(%ebx)$/;"	l
f0105ced	obj/kern/kernel.asm	/^f0105ced:	8b 49 08             	mov    0x8(%ecx),%ecx$/;"	l
f0105cf0	obj/kern/kernel.asm	/^f0105cf0:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f0105cf3	obj/kern/kernel.asm	/^f0105cf3:	29 ce                	sub    %ecx,%esi$/;"	l
f0105cf5	obj/kern/kernel.asm	/^f0105cf5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105cf8	obj/kern/kernel.asm	/^f0105cf8:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0105cfb	obj/kern/kernel.asm	/^f0105cfb:	eb 0f                	jmp    f0105d0c <debuginfo_eip+0x202>$/;"	l
f0105cfd	obj/kern/kernel.asm	/^f0105cfd:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f0105d00	obj/kern/kernel.asm	/^f0105d00:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105d03	obj/kern/kernel.asm	/^f0105d03:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105d06	obj/kern/kernel.asm	/^f0105d06:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105d09	obj/kern/kernel.asm	/^f0105d09:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0105d13	obj/kern/kernel.asm	/^f0105d13:	00 $/;"	l
f0105d14	obj/kern/kernel.asm	/^f0105d14:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0105d17	obj/kern/kernel.asm	/^f0105d17:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105d1a	obj/kern/kernel.asm	/^f0105d1a:	e8 7b 09 00 00       	call   f010669a <strfind>$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0105d30	obj/kern/kernel.asm	/^f0105d30:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0105d36	obj/kern/kernel.asm	/^f0105d36:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105d39	obj/kern/kernel.asm	/^f0105d39:	e8 9e fc ff ff       	call   f01059dc <stab_binsearch>$/;"	l
f0105d3e	obj/kern/kernel.asm	/^f0105d3e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105d41	obj/kern/kernel.asm	/^f0105d41:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f0105d44	obj/kern/kernel.asm	/^f0105d44:	7f 10                	jg     f0105d56 <debuginfo_eip+0x24c>$/;"	l
f0105d46	obj/kern/kernel.asm	/^f0105d46:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	0f b7 44 86 06       	movzwl 0x6(%esi,%eax,4),%eax$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f0105d54	obj/kern/kernel.asm	/^f0105d54:	eb 07                	jmp    f0105d5d <debuginfo_eip+0x253>$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	c7 43 04 ff ff ff ff 	movl   $0xffffffff,0x4(%ebx)$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	89 7d c0             	mov    %edi,-0x40(%ebp)$/;"	l
f0105d66	obj/kern/kernel.asm	/^f0105d66:	39 f8                	cmp    %edi,%eax$/;"	l
f0105d68	obj/kern/kernel.asm	/^f0105d68:	7c 75                	jl     f0105ddf <debuginfo_eip+0x2d5>$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105d6d	obj/kern/kernel.asm	/^f0105d6d:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105d70	obj/kern/kernel.asm	/^f0105d70:	8d 34 97             	lea    (%edi,%edx,4),%esi$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	0f b6 4e 04          	movzbl 0x4(%esi),%ecx$/;"	l
f0105d77	obj/kern/kernel.asm	/^f0105d77:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105d7a	obj/kern/kernel.asm	/^f0105d7a:	74 46                	je     f0105dc2 <debuginfo_eip+0x2b8>$/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0105d80	obj/kern/kernel.asm	/^f0105d80:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105d83	obj/kern/kernel.asm	/^f0105d83:	89 c7                	mov    %eax,%edi$/;"	l
f0105d85	obj/kern/kernel.asm	/^f0105d85:	89 5d b4             	mov    %ebx,-0x4c(%ebp)$/;"	l
f0105d88	obj/kern/kernel.asm	/^f0105d88:	8b 5d c0             	mov    -0x40(%ebp),%ebx$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	eb 1f                	jmp    f0105dac <debuginfo_eip+0x2a2>$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105d90	obj/kern/kernel.asm	/^f0105d90:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	7f 48                	jg     f0105ddc <debuginfo_eip+0x2d2>$/;"	l
f0105d94	obj/kern/kernel.asm	/^f0105d94:	89 d6                	mov    %edx,%esi$/;"	l
f0105d96	obj/kern/kernel.asm	/^f0105d96:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	0f b6 4a 10          	movzbl 0x10(%edx),%ecx$/;"	l
f0105d9d	obj/kern/kernel.asm	/^f0105d9d:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	75 08                	jne    f0105daa <debuginfo_eip+0x2a0>$/;"	l
f0105da2	obj/kern/kernel.asm	/^f0105da2:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8:	eb 18                	jmp    f0105dc2 <debuginfo_eip+0x2b8>$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	89 c7                	mov    %eax,%edi$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	75 dc                	jne    f0105d8d <debuginfo_eip+0x283>$/;"	l
f0105db1	obj/kern/kernel.asm	/^f0105db1:	83 7e 08 00          	cmpl   $0x0,0x8(%esi)$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	74 d6                	je     f0105d8d <debuginfo_eip+0x283>$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f0105dba	obj/kern/kernel.asm	/^f0105dba:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0105dbd	obj/kern/kernel.asm	/^f0105dbd:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
f0105dc0	obj/kern/kernel.asm	/^f0105dc0:	7c 1d                	jl     f0105ddf <debuginfo_eip+0x2d5>$/;"	l
f0105dc2	obj/kern/kernel.asm	/^f0105dc2:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105dc5	obj/kern/kernel.asm	/^f0105dc5:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105dc8	obj/kern/kernel.asm	/^f0105dc8:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f0105dcb	obj/kern/kernel.asm	/^f0105dcb:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105dce	obj/kern/kernel.asm	/^f0105dce:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f0105dd1	obj/kern/kernel.asm	/^f0105dd1:	39 d0                	cmp    %edx,%eax$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	73 0a                	jae    f0105ddf <debuginfo_eip+0x2d5>$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	03 45 b8             	add    -0x48(%ebp),%eax$/;"	l
f0105dd8	obj/kern/kernel.asm	/^f0105dd8:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105dda	obj/kern/kernel.asm	/^f0105dda:	eb 03                	jmp    f0105ddf <debuginfo_eip+0x2d5>$/;"	l
f0105ddc	obj/kern/kernel.asm	/^f0105ddc:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0105de2	obj/kern/kernel.asm	/^f0105de2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0105de5	obj/kern/kernel.asm	/^f0105de5:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0105de8	obj/kern/kernel.asm	/^f0105de8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ded	obj/kern/kernel.asm	/^f0105ded:	3b 7d bc             	cmp    -0x44(%ebp),%edi$/;"	l
f0105df0	obj/kern/kernel.asm	/^f0105df0:	7d 49                	jge    f0105e3b <debuginfo_eip+0x331>$/;"	l
f0105df2	obj/kern/kernel.asm	/^f0105df2:	8d 57 01             	lea    0x1(%edi),%edx$/;"	l
f0105df5	obj/kern/kernel.asm	/^f0105df5:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105df8	obj/kern/kernel.asm	/^f0105df8:	39 55 bc             	cmp    %edx,-0x44(%ebp)$/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	7e 3e                	jle    f0105e3b <debuginfo_eip+0x331>$/;"	l
f0105dfd	obj/kern/kernel.asm	/^f0105dfd:	8d 0c 52             	lea    (%edx,%edx,2),%ecx$/;"	l
f0105e00	obj/kern/kernel.asm	/^f0105e00:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105e03	obj/kern/kernel.asm	/^f0105e03:	80 7c 8e 04 a0       	cmpb   $0xa0,0x4(%esi,%ecx,4)$/;"	l
f0105e08	obj/kern/kernel.asm	/^f0105e08:	75 31                	jne    f0105e3b <debuginfo_eip+0x331>$/;"	l
f0105e0a	obj/kern/kernel.asm	/^f0105e0a:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	8d 44 86 1c          	lea    0x1c(%esi,%eax,4),%eax$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0105e18	obj/kern/kernel.asm	/^f0105e18:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b:	39 d1                	cmp    %edx,%ecx$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	7e 17                	jle    f0105e36 <debuginfo_eip+0x32c>$/;"	l
f0105e1f	obj/kern/kernel.asm	/^f0105e1f:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0105e22	obj/kern/kernel.asm	/^f0105e22:	80 78 f4 a0          	cmpb   $0xa0,-0xc(%eax)$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	74 ec                	je     f0105e14 <debuginfo_eip+0x30a>$/;"	l
f0105e28	obj/kern/kernel.asm	/^f0105e28:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e2d	obj/kern/kernel.asm	/^f0105e2d:	eb 0c                	jmp    f0105e3b <debuginfo_eip+0x331>$/;"	l
f0105e2f	obj/kern/kernel.asm	/^f0105e2f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	eb 05                	jmp    f0105e3b <debuginfo_eip+0x331>$/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e3b	obj/kern/kernel.asm	/^f0105e3b:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0105e3e	obj/kern/kernel.asm	/^f0105e3e:	5b                   	pop    %ebx$/;"	l
f0105e3f	obj/kern/kernel.asm	/^f0105e3f:	5e                   	pop    %esi$/;"	l
f0105e40	obj/kern/kernel.asm	/^f0105e40:	5f                   	pop    %edi$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	5d                   	pop    %ebp$/;"	l
f0105e42	obj/kern/kernel.asm	/^f0105e42:	c3                   	ret    $/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50 <printnum>:$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	55                   	push   %ebp$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e53	obj/kern/kernel.asm	/^f0105e53:	57                   	push   %edi$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	56                   	push   %esi$/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	53                   	push   %ebx$/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105e5c	obj/kern/kernel.asm	/^f0105e5c:	89 d7                	mov    %edx,%edi$/;"	l
f0105e5e	obj/kern/kernel.asm	/^f0105e5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105e67	obj/kern/kernel.asm	/^f0105e67:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f0105e6d	obj/kern/kernel.asm	/^f0105e6d:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f0105e70	obj/kern/kernel.asm	/^f0105e70:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e75	obj/kern/kernel.asm	/^f0105e75:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0105e78	obj/kern/kernel.asm	/^f0105e78:	72 11                	jb     f0105e8b <printnum+0x3b>$/;"	l
f0105e7a	obj/kern/kernel.asm	/^f0105e7a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105e7d	obj/kern/kernel.asm	/^f0105e7d:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0105e80	obj/kern/kernel.asm	/^f0105e80:	76 09                	jbe    f0105e8b <printnum+0x3b>$/;"	l
f0105e82	obj/kern/kernel.asm	/^f0105e82:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105e85	obj/kern/kernel.asm	/^f0105e85:	85 db                	test   %ebx,%ebx$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	7f 51                	jg     f0105eda <printnum+0x8a>$/;"	l
f0105e89	obj/kern/kernel.asm	/^f0105e89:	eb 5e                	jmp    f0105ee9 <printnum+0x99>$/;"	l
f0105e8b	obj/kern/kernel.asm	/^f0105e8b:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0105e8f	obj/kern/kernel.asm	/^f0105e8f:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0105e96	obj/kern/kernel.asm	/^f0105e96:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105e99	obj/kern/kernel.asm	/^f0105e99:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105e9d	obj/kern/kernel.asm	/^f0105e9d:	8b 5c 24 08          	mov    0x8(%esp),%ebx$/;"	l
f0105ea1	obj/kern/kernel.asm	/^f0105ea1:	8b 74 24 0c          	mov    0xc(%esp),%esi$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	00 $/;"	l
f0105ead	obj/kern/kernel.asm	/^f0105ead:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105eb0	obj/kern/kernel.asm	/^f0105eb0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105eba	obj/kern/kernel.asm	/^f0105eba:	e8 21 13 00 00       	call   f01071e0 <__udivdi3>$/;"	l
f0105ebf	obj/kern/kernel.asm	/^f0105ebf:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105eca	obj/kern/kernel.asm	/^f0105eca:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece:	89 fa                	mov    %edi,%edx$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105ed3	obj/kern/kernel.asm	/^f0105ed3:	e8 78 ff ff ff       	call   f0105e50 <printnum>$/;"	l
f0105ed8	obj/kern/kernel.asm	/^f0105ed8:	eb 0f                	jmp    f0105ee9 <printnum+0x99>$/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105ede	obj/kern/kernel.asm	/^f0105ede:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105ee7	obj/kern/kernel.asm	/^f0105ee7:	75 f1                	jne    f0105eda <printnum+0x8a>$/;"	l
f0105ee9	obj/kern/kernel.asm	/^f0105ee9:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105eed	obj/kern/kernel.asm	/^f0105eed:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0105ef1	obj/kern/kernel.asm	/^f0105ef1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105ef8	obj/kern/kernel.asm	/^f0105ef8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	00 $/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f06	obj/kern/kernel.asm	/^f0105f06:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105f09	obj/kern/kernel.asm	/^f0105f09:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105f0d	obj/kern/kernel.asm	/^f0105f0d:	e8 fe 13 00 00       	call   f0107310 <__umoddi3>$/;"	l
f0105f12	obj/kern/kernel.asm	/^f0105f12:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	0f be 80 c6 8e 10 f0 	movsbl -0xfef713a(%eax),%eax$/;"	l
f0105f1d	obj/kern/kernel.asm	/^f0105f1d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f20	obj/kern/kernel.asm	/^f0105f20:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0105f23	obj/kern/kernel.asm	/^f0105f23:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105f26	obj/kern/kernel.asm	/^f0105f26:	5b                   	pop    %ebx$/;"	l
f0105f27	obj/kern/kernel.asm	/^f0105f27:	5e                   	pop    %esi$/;"	l
f0105f28	obj/kern/kernel.asm	/^f0105f28:	5f                   	pop    %edi$/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	5d                   	pop    %ebp$/;"	l
f0105f2a	obj/kern/kernel.asm	/^f0105f2a:	c3                   	ret    $/;"	l
f0105f2b	obj/kern/kernel.asm	/^f0105f2b <getuint>:$/;"	l
f0105f2b	obj/kern/kernel.asm	/^f0105f2b:	55                   	push   %ebp$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105f31	obj/kern/kernel.asm	/^f0105f31:	7e 0e                	jle    f0105f41 <getuint+0x16>$/;"	l
f0105f33	obj/kern/kernel.asm	/^f0105f33:	8b 10                	mov    (%eax),%edx$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	8b 02                	mov    (%edx),%eax$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105f3f	obj/kern/kernel.asm	/^f0105f3f:	eb 22                	jmp    f0105f63 <getuint+0x38>$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	85 d2                	test   %edx,%edx$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	74 10                	je     f0105f55 <getuint+0x2a>$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	8b 10                	mov    (%eax),%edx$/;"	l
f0105f47	obj/kern/kernel.asm	/^f0105f47:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105f4a	obj/kern/kernel.asm	/^f0105f4a:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	8b 02                	mov    (%edx),%eax$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53:	eb 0e                	jmp    f0105f63 <getuint+0x38>$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	8b 10                	mov    (%eax),%edx$/;"	l
f0105f57	obj/kern/kernel.asm	/^f0105f57:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105f5a	obj/kern/kernel.asm	/^f0105f5a:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105f5c	obj/kern/kernel.asm	/^f0105f5c:	8b 02                	mov    (%edx),%eax$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	5d                   	pop    %ebp$/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	c3                   	ret    $/;"	l
f0105f65	obj/kern/kernel.asm	/^f0105f65 <sprintputch>:$/;"	l
f0105f65	obj/kern/kernel.asm	/^f0105f65:	55                   	push   %ebp$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f68	obj/kern/kernel.asm	/^f0105f68:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105f6b	obj/kern/kernel.asm	/^f0105f6b:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105f6f	obj/kern/kernel.asm	/^f0105f6f:	8b 10                	mov    (%eax),%edx$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	73 0a                	jae    f0105f80 <sprintputch+0x1b>$/;"	l
f0105f76	obj/kern/kernel.asm	/^f0105f76:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	88 0a                	mov    %cl,(%edx)$/;"	l
f0105f7b	obj/kern/kernel.asm	/^f0105f7b:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105f7e	obj/kern/kernel.asm	/^f0105f7e:	89 10                	mov    %edx,(%eax)$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	5d                   	pop    %ebp$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	c3                   	ret    $/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82 <printfmt>:$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	55                   	push   %ebp$/;"	l
f0105f83	obj/kern/kernel.asm	/^f0105f83:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f85	obj/kern/kernel.asm	/^f0105f85:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105f88	obj/kern/kernel.asm	/^f0105f88:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105f8b	obj/kern/kernel.asm	/^f0105f8b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105f8f	obj/kern/kernel.asm	/^f0105f8f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105fa0	obj/kern/kernel.asm	/^f0105fa0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105fa3	obj/kern/kernel.asm	/^f0105fa3:	e8 02 00 00 00       	call   f0105faa <vprintfmt>$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	c9                   	leave  $/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	c3                   	ret    $/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa <vprintfmt>:$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	55                   	push   %ebp$/;"	l
f0105fab	obj/kern/kernel.asm	/^f0105fab:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	57                   	push   %edi$/;"	l
f0105fae	obj/kern/kernel.asm	/^f0105fae:	56                   	push   %esi$/;"	l
f0105faf	obj/kern/kernel.asm	/^f0105faf:	53                   	push   %ebx$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105fb9	obj/kern/kernel.asm	/^f0105fb9:	eb 12                	jmp    f0105fcd <vprintfmt+0x23>$/;"	l
f0105fbb	obj/kern/kernel.asm	/^f0105fbb:	85 c0                	test   %eax,%eax$/;"	l
f0105fbd	obj/kern/kernel.asm	/^f0105fbd:	0f 84 a9 03 00 00    	je     f010636c <vprintfmt+0x3c2>$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105fc7	obj/kern/kernel.asm	/^f0105fc7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105fcd	obj/kern/kernel.asm	/^f0105fcd:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105fd0	obj/kern/kernel.asm	/^f0105fd0:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	75 e3                	jne    f0105fbb <vprintfmt+0x11>$/;"	l
f0105fd8	obj/kern/kernel.asm	/^f0105fd8:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105ff4	obj/kern/kernel.asm	/^f0105ff4:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0105ff7	obj/kern/kernel.asm	/^f0105ff7:	eb 2b                	jmp    f0106024 <vprintfmt+0x7a>$/;"	l
f0105ff9	obj/kern/kernel.asm	/^f0105ff9:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	eb 22                	jmp    f0106024 <vprintfmt+0x7a>$/;"	l
f0106002	obj/kern/kernel.asm	/^f0106002:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0106009	obj/kern/kernel.asm	/^f0106009:	eb 19                	jmp    f0106024 <vprintfmt+0x7a>$/;"	l
f010600b	obj/kern/kernel.asm	/^f010600b:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010600e	obj/kern/kernel.asm	/^f010600e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	eb 0d                	jmp    f0106024 <vprintfmt+0x7a>$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010601a	obj/kern/kernel.asm	/^f010601a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010601d	obj/kern/kernel.asm	/^f010601d:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0106024	obj/kern/kernel.asm	/^f0106024:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0106027	obj/kern/kernel.asm	/^f0106027:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010602a	obj/kern/kernel.asm	/^f010602a:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	89 7d e0             	mov    %edi,-0x20(%ebp)$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033:	3c 55                	cmp    $0x55,%al$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	0f 87 0b 03 00 00    	ja     f0106346 <vprintfmt+0x39c>$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010603e	obj/kern/kernel.asm	/^f010603e:	ff 24 85 00 90 10 f0 	jmp    *-0xfef7000(,%eax,4)$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0106048	obj/kern/kernel.asm	/^f0106048:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	0f be 46 01          	movsbl 0x1(%esi),%eax$/;"	l
f010604f	obj/kern/kernel.asm	/^f010604f:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0106055	obj/kern/kernel.asm	/^f0106055:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	77 4a                	ja     f01060a4 <vprintfmt+0xfa>$/;"	l
f010605a	obj/kern/kernel.asm	/^f010605a:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	8d 14 bf             	lea    (%edi,%edi,4),%edx$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	8d 7c 50 d0          	lea    -0x30(%eax,%edx,2),%edi$/;"	l
f0106067	obj/kern/kernel.asm	/^f0106067:	0f be 06             	movsbl (%esi),%eax$/;"	l
f010606a	obj/kern/kernel.asm	/^f010606a:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f010606d	obj/kern/kernel.asm	/^f010606d:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0106070	obj/kern/kernel.asm	/^f0106070:	76 eb                	jbe    f010605d <vprintfmt+0xb3>$/;"	l
f0106072	obj/kern/kernel.asm	/^f0106072:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	eb 2d                	jmp    f01060a4 <vprintfmt+0xfa>$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010607a	obj/kern/kernel.asm	/^f010607a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106080	obj/kern/kernel.asm	/^f0106080:	8b 00                	mov    (%eax),%eax$/;"	l
f0106082	obj/kern/kernel.asm	/^f0106082:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0106085	obj/kern/kernel.asm	/^f0106085:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	eb 1a                	jmp    f01060a4 <vprintfmt+0xfa>$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	79 91                	jns    f0106024 <vprintfmt+0x7a>$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	e9 73 ff ff ff       	jmp    f010600b <vprintfmt+0x61>$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	eb 80                	jmp    f0106024 <vprintfmt+0x7a>$/;"	l
f01060a4	obj/kern/kernel.asm	/^f01060a4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01060a8	obj/kern/kernel.asm	/^f01060a8:	0f 89 76 ff ff ff    	jns    f0106024 <vprintfmt+0x7a>$/;"	l
f01060ae	obj/kern/kernel.asm	/^f01060ae:	e9 64 ff ff ff       	jmp    f0106017 <vprintfmt+0x6d>$/;"	l
f01060b3	obj/kern/kernel.asm	/^f01060b3:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01060b6	obj/kern/kernel.asm	/^f01060b6:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	e9 66 ff ff ff       	jmp    f0106024 <vprintfmt+0x7a>$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01060c4	obj/kern/kernel.asm	/^f01060c4:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01060c7	obj/kern/kernel.asm	/^f01060c7:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	8b 00                	mov    (%eax),%eax$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01060d0	obj/kern/kernel.asm	/^f01060d0:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01060d3	obj/kern/kernel.asm	/^f01060d3:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	e9 f2 fe ff ff       	jmp    f0105fcd <vprintfmt+0x23>$/;"	l
f01060db	obj/kern/kernel.asm	/^f01060db:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01060de	obj/kern/kernel.asm	/^f01060de:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01060e1	obj/kern/kernel.asm	/^f01060e1:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	8b 00                	mov    (%eax),%eax$/;"	l
f01060e6	obj/kern/kernel.asm	/^f01060e6:	89 c2                	mov    %eax,%edx$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	31 d0                	xor    %edx,%eax$/;"	l
f01060ed	obj/kern/kernel.asm	/^f01060ed:	29 d0                	sub    %edx,%eax$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f01060f2	obj/kern/kernel.asm	/^f01060f2:	7f 0b                	jg     f01060ff <vprintfmt+0x155>$/;"	l
f01060f4	obj/kern/kernel.asm	/^f01060f4:	8b 14 85 60 91 10 f0 	mov    -0xfef6ea0(,%eax,4),%edx$/;"	l
f01060fb	obj/kern/kernel.asm	/^f01060fb:	85 d2                	test   %edx,%edx$/;"	l
f01060fd	obj/kern/kernel.asm	/^f01060fd:	75 23                	jne    f0106122 <vprintfmt+0x178>$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106103	obj/kern/kernel.asm	/^f0106103:	c7 44 24 08 de 8e 10 	movl   $0xf0108ede,0x8(%esp)$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	f0 $/;"	l
f010610b	obj/kern/kernel.asm	/^f010610b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010610f	obj/kern/kernel.asm	/^f010610f:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106115	obj/kern/kernel.asm	/^f0106115:	e8 68 fe ff ff       	call   f0105f82 <printfmt>$/;"	l
f010611a	obj/kern/kernel.asm	/^f010611a:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010611d	obj/kern/kernel.asm	/^f010611d:	e9 ab fe ff ff       	jmp    f0105fcd <vprintfmt+0x23>$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106126	obj/kern/kernel.asm	/^f0106126:	c7 44 24 08 35 87 10 	movl   $0xf0108735,0x8(%esp)$/;"	l
f010612d	obj/kern/kernel.asm	/^f010612d:	f0 $/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106138	obj/kern/kernel.asm	/^f0106138:	e8 45 fe ff ff       	call   f0105f82 <printfmt>$/;"	l
f010613d	obj/kern/kernel.asm	/^f010613d:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0106140	obj/kern/kernel.asm	/^f0106140:	e9 88 fe ff ff       	jmp    f0105fcd <vprintfmt+0x23>$/;"	l
f0106145	obj/kern/kernel.asm	/^f0106145:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0106148	obj/kern/kernel.asm	/^f0106148:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010614e	obj/kern/kernel.asm	/^f010614e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106154	obj/kern/kernel.asm	/^f0106154:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106157	obj/kern/kernel.asm	/^f0106157:	8b 30                	mov    (%eax),%esi$/;"	l
f0106159	obj/kern/kernel.asm	/^f0106159:	85 f6                	test   %esi,%esi$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	ba d7 8e 10 f0       	mov    $0xf0108ed7,%edx$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160:	0f 44 f2             	cmove  %edx,%esi$/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0106167	obj/kern/kernel.asm	/^f0106167:	7e 06                	jle    f010616f <vprintfmt+0x1c5>$/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d:	75 10                	jne    f010617f <vprintfmt+0x1d5>$/;"	l
f010616f	obj/kern/kernel.asm	/^f010616f:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0106172	obj/kern/kernel.asm	/^f0106172:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106175	obj/kern/kernel.asm	/^f0106175:	85 c0                	test   %eax,%eax$/;"	l
f0106177	obj/kern/kernel.asm	/^f0106177:	0f 85 86 00 00 00    	jne    f0106203 <vprintfmt+0x259>$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	eb 76                	jmp    f01061f5 <vprintfmt+0x24b>$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0106186	obj/kern/kernel.asm	/^f0106186:	e8 70 03 00 00       	call   f01064fb <strnlen>$/;"	l
f010618b	obj/kern/kernel.asm	/^f010618b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	29 c2                	sub    %eax,%edx$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0106193	obj/kern/kernel.asm	/^f0106193:	85 d2                	test   %edx,%edx$/;"	l
f0106195	obj/kern/kernel.asm	/^f0106195:	7e d8                	jle    f010616f <vprintfmt+0x1c5>$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f010619b	obj/kern/kernel.asm	/^f010619b:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f010619e	obj/kern/kernel.asm	/^f010619e:	89 d6                	mov    %edx,%esi$/;"	l
f01061a0	obj/kern/kernel.asm	/^f01061a0:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f01061a3	obj/kern/kernel.asm	/^f01061a3:	89 c7                	mov    %eax,%edi$/;"	l
f01061a5	obj/kern/kernel.asm	/^f01061a5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01061a9	obj/kern/kernel.asm	/^f01061a9:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01061ac	obj/kern/kernel.asm	/^f01061ac:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01061af	obj/kern/kernel.asm	/^f01061af:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	75 f1                	jne    f01061a5 <vprintfmt+0x1fb>$/;"	l
f01061b4	obj/kern/kernel.asm	/^f01061b4:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	8b 7d d0             	mov    -0x30(%ebp),%edi$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	eb b0                	jmp    f010616f <vprintfmt+0x1c5>$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01061c3	obj/kern/kernel.asm	/^f01061c3:	74 18                	je     f01061dd <vprintfmt+0x233>$/;"	l
f01061c5	obj/kern/kernel.asm	/^f01061c5:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	76 10                	jbe    f01061dd <vprintfmt+0x233>$/;"	l
f01061cd	obj/kern/kernel.asm	/^f01061cd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01061d1	obj/kern/kernel.asm	/^f01061d1:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	eb 0a                	jmp    f01061e7 <vprintfmt+0x23d>$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01061e4	obj/kern/kernel.asm	/^f01061e4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01061e7	obj/kern/kernel.asm	/^f01061e7:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
f01061eb	obj/kern/kernel.asm	/^f01061eb:	0f be 06             	movsbl (%esi),%eax$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	83 c6 01             	add    $0x1,%esi$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	85 c0                	test   %eax,%eax$/;"	l
f01061f3	obj/kern/kernel.asm	/^f01061f3:	75 0e                	jne    f0106203 <vprintfmt+0x259>$/;"	l
f01061f5	obj/kern/kernel.asm	/^f01061f5:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01061fc	obj/kern/kernel.asm	/^f01061fc:	7f 16                	jg     f0106214 <vprintfmt+0x26a>$/;"	l
f01061fe	obj/kern/kernel.asm	/^f01061fe:	e9 ca fd ff ff       	jmp    f0105fcd <vprintfmt+0x23>$/;"	l
f0106203	obj/kern/kernel.asm	/^f0106203:	85 ff                	test   %edi,%edi$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	78 b8                	js     f01061bf <vprintfmt+0x215>$/;"	l
f0106207	obj/kern/kernel.asm	/^f0106207:	83 ef 01             	sub    $0x1,%edi$/;"	l
f010620a	obj/kern/kernel.asm	/^f010620a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106210	obj/kern/kernel.asm	/^f0106210:	79 ad                	jns    f01061bf <vprintfmt+0x215>$/;"	l
f0106212	obj/kern/kernel.asm	/^f0106212:	eb e1                	jmp    f01061f5 <vprintfmt+0x24b>$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010621a	obj/kern/kernel.asm	/^f010621a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	ff d7                	call   *%edi$/;"	l
f0106227	obj/kern/kernel.asm	/^f0106227:	83 ee 01             	sub    $0x1,%esi$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	75 ee                	jne    f010621a <vprintfmt+0x270>$/;"	l
f010622c	obj/kern/kernel.asm	/^f010622c:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010622f	obj/kern/kernel.asm	/^f010622f:	e9 99 fd ff ff       	jmp    f0105fcd <vprintfmt+0x23>$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0106237	obj/kern/kernel.asm	/^f0106237:	7e 10                	jle    f0106249 <vprintfmt+0x29f>$/;"	l
f0106239	obj/kern/kernel.asm	/^f0106239:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f010623f	obj/kern/kernel.asm	/^f010623f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106242	obj/kern/kernel.asm	/^f0106242:	8b 30                	mov    (%eax),%esi$/;"	l
f0106244	obj/kern/kernel.asm	/^f0106244:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	eb 26                	jmp    f010626f <vprintfmt+0x2c5>$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	85 c9                	test   %ecx,%ecx$/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	74 12                	je     f010625f <vprintfmt+0x2b5>$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106256	obj/kern/kernel.asm	/^f0106256:	8b 30                	mov    (%eax),%esi$/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258:	89 f7                	mov    %esi,%edi$/;"	l
f010625a	obj/kern/kernel.asm	/^f010625a:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f010625d	obj/kern/kernel.asm	/^f010625d:	eb 10                	jmp    f010626f <vprintfmt+0x2c5>$/;"	l
f010625f	obj/kern/kernel.asm	/^f010625f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106262	obj/kern/kernel.asm	/^f0106262:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106268	obj/kern/kernel.asm	/^f0106268:	8b 30                	mov    (%eax),%esi$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	89 f7                	mov    %esi,%edi$/;"	l
f010626c	obj/kern/kernel.asm	/^f010626c:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f010626f	obj/kern/kernel.asm	/^f010626f:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106274	obj/kern/kernel.asm	/^f0106274:	85 ff                	test   %edi,%edi$/;"	l
f0106276	obj/kern/kernel.asm	/^f0106276:	0f 89 8c 00 00 00    	jns    f0106308 <vprintfmt+0x35e>$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010628a	obj/kern/kernel.asm	/^f010628a:	f7 de                	neg    %esi$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	83 d7 00             	adc    $0x0,%edi$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	f7 df                	neg    %edi$/;"	l
f0106291	obj/kern/kernel.asm	/^f0106291:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106296	obj/kern/kernel.asm	/^f0106296:	eb 70                	jmp    f0106308 <vprintfmt+0x35e>$/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	89 ca                	mov    %ecx,%edx$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f010629d	obj/kern/kernel.asm	/^f010629d:	e8 89 fc ff ff       	call   f0105f2b <getuint>$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	89 c6                	mov    %eax,%esi$/;"	l
f01062a4	obj/kern/kernel.asm	/^f01062a4:	89 d7                	mov    %edx,%edi$/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01062ab	obj/kern/kernel.asm	/^f01062ab:	eb 5b                	jmp    f0106308 <vprintfmt+0x35e>$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	89 ca                	mov    %ecx,%edx$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01062b2	obj/kern/kernel.asm	/^f01062b2:	e8 74 fc ff ff       	call   f0105f2b <getuint>$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	89 c6                	mov    %eax,%esi$/;"	l
f01062b9	obj/kern/kernel.asm	/^f01062b9:	89 d7                	mov    %edx,%edi$/;"	l
f01062bb	obj/kern/kernel.asm	/^f01062bb:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	eb 46                	jmp    f0106308 <vprintfmt+0x35e>$/;"	l
f01062c2	obj/kern/kernel.asm	/^f01062c2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01062c6	obj/kern/kernel.asm	/^f01062c6:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01062e4	obj/kern/kernel.asm	/^f01062e4:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01062e7	obj/kern/kernel.asm	/^f01062e7:	8b 30                	mov    (%eax),%esi$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01062ee	obj/kern/kernel.asm	/^f01062ee:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	eb 13                	jmp    f0106308 <vprintfmt+0x35e>$/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5:	89 ca                	mov    %ecx,%edx$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01062fa	obj/kern/kernel.asm	/^f01062fa:	e8 2c fc ff ff       	call   f0105f2b <getuint>$/;"	l
f01062ff	obj/kern/kernel.asm	/^f01062ff:	89 c6                	mov    %eax,%esi$/;"	l
f0106301	obj/kern/kernel.asm	/^f0106301:	89 d7                	mov    %edx,%edi$/;"	l
f0106303	obj/kern/kernel.asm	/^f0106303:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	0f be 55 d8          	movsbl -0x28(%ebp),%edx$/;"	l
f010630c	obj/kern/kernel.asm	/^f010630c:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0106313	obj/kern/kernel.asm	/^f0106313:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106317	obj/kern/kernel.asm	/^f0106317:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010631b	obj/kern/kernel.asm	/^f010631b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322:	89 da                	mov    %ebx,%edx$/;"	l
f0106324	obj/kern/kernel.asm	/^f0106324:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106327	obj/kern/kernel.asm	/^f0106327:	e8 24 fb ff ff       	call   f0105e50 <printnum>$/;"	l
f010632c	obj/kern/kernel.asm	/^f010632c:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f010632f	obj/kern/kernel.asm	/^f010632f:	e9 99 fc ff ff       	jmp    f0105fcd <vprintfmt+0x23>$/;"	l
f0106334	obj/kern/kernel.asm	/^f0106334:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0106338	obj/kern/kernel.asm	/^f0106338:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010633b	obj/kern/kernel.asm	/^f010633b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	e9 87 fc ff ff       	jmp    f0105fcd <vprintfmt+0x23>$/;"	l
f0106346	obj/kern/kernel.asm	/^f0106346:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010634a	obj/kern/kernel.asm	/^f010634a:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106354	obj/kern/kernel.asm	/^f0106354:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0106358	obj/kern/kernel.asm	/^f0106358:	0f 84 6f fc ff ff    	je     f0105fcd <vprintfmt+0x23>$/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0106365	obj/kern/kernel.asm	/^f0106365:	75 f7                	jne    f010635e <vprintfmt+0x3b4>$/;"	l
f0106367	obj/kern/kernel.asm	/^f0106367:	e9 61 fc ff ff       	jmp    f0105fcd <vprintfmt+0x23>$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010636f	obj/kern/kernel.asm	/^f010636f:	5b                   	pop    %ebx$/;"	l
f0106370	obj/kern/kernel.asm	/^f0106370:	5e                   	pop    %esi$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	5f                   	pop    %edi$/;"	l
f0106372	obj/kern/kernel.asm	/^f0106372:	5d                   	pop    %ebp$/;"	l
f0106373	obj/kern/kernel.asm	/^f0106373:	c3                   	ret    $/;"	l
f0106374	obj/kern/kernel.asm	/^f0106374 <vsnprintf>:$/;"	l
f0106374	obj/kern/kernel.asm	/^f0106374:	55                   	push   %ebp$/;"	l
f0106375	obj/kern/kernel.asm	/^f0106375:	89 e5                	mov    %esp,%ebp$/;"	l
f0106377	obj/kern/kernel.asm	/^f0106377:	83 ec 28             	sub    $0x28,%esp$/;"	l
f010637a	obj/kern/kernel.asm	/^f010637a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0106387	obj/kern/kernel.asm	/^f0106387:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f010638a	obj/kern/kernel.asm	/^f010638a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	85 c0                	test   %eax,%eax$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	74 30                	je     f01063c5 <vsnprintf+0x51>$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	85 d2                	test   %edx,%edx$/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	7e 2c                	jle    f01063c5 <vsnprintf+0x51>$/;"	l
f0106399	obj/kern/kernel.asm	/^f0106399:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010639c	obj/kern/kernel.asm	/^f010639c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01063aa	obj/kern/kernel.asm	/^f01063aa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01063ae	obj/kern/kernel.asm	/^f01063ae:	c7 04 24 65 5f 10 f0 	movl   $0xf0105f65,(%esp)$/;"	l
f01063b5	obj/kern/kernel.asm	/^f01063b5:	e8 f0 fb ff ff       	call   f0105faa <vprintfmt>$/;"	l
f01063ba	obj/kern/kernel.asm	/^f01063ba:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01063bd	obj/kern/kernel.asm	/^f01063bd:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01063c0	obj/kern/kernel.asm	/^f01063c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	eb 05                	jmp    f01063ca <vsnprintf+0x56>$/;"	l
f01063c5	obj/kern/kernel.asm	/^f01063c5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01063ca	obj/kern/kernel.asm	/^f01063ca:	c9                   	leave  $/;"	l
f01063cb	obj/kern/kernel.asm	/^f01063cb:	c3                   	ret    $/;"	l
f01063cc	obj/kern/kernel.asm	/^f01063cc <snprintf>:$/;"	l
f01063cc	obj/kern/kernel.asm	/^f01063cc:	55                   	push   %ebp$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	89 e5                	mov    %esp,%ebp$/;"	l
f01063cf	obj/kern/kernel.asm	/^f01063cf:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01063d5	obj/kern/kernel.asm	/^f01063d5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01063d9	obj/kern/kernel.asm	/^f01063d9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01063dc	obj/kern/kernel.asm	/^f01063dc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01063e7	obj/kern/kernel.asm	/^f01063e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	e8 82 ff ff ff       	call   f0106374 <vsnprintf>$/;"	l
f01063f2	obj/kern/kernel.asm	/^f01063f2:	c9                   	leave  $/;"	l
f01063f3	obj/kern/kernel.asm	/^f01063f3:	c3                   	ret    $/;"	l
f0106400	obj/kern/kernel.asm	/^f0106400 <readline>:$/;"	l
f0106400	obj/kern/kernel.asm	/^f0106400:	55                   	push   %ebp$/;"	l
f0106401	obj/kern/kernel.asm	/^f0106401:	89 e5                	mov    %esp,%ebp$/;"	l
f0106403	obj/kern/kernel.asm	/^f0106403:	57                   	push   %edi$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	56                   	push   %esi$/;"	l
f0106405	obj/kern/kernel.asm	/^f0106405:	53                   	push   %ebx$/;"	l
f0106406	obj/kern/kernel.asm	/^f0106406:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010640c	obj/kern/kernel.asm	/^f010640c:	85 c0                	test   %eax,%eax$/;"	l
f010640e	obj/kern/kernel.asm	/^f010640e:	74 10                	je     f0106420 <readline+0x20>$/;"	l
f0106410	obj/kern/kernel.asm	/^f0106410:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106414	obj/kern/kernel.asm	/^f0106414:	c7 04 24 35 87 10 f0 	movl   $0xf0108735,(%esp)$/;"	l
f010641b	obj/kern/kernel.asm	/^f010641b:	e8 6e e3 ff ff       	call   f010478e <cprintf>$/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	e8 d4 a3 ff ff       	call   f0100800 <iscons>$/;"	l
f010642c	obj/kern/kernel.asm	/^f010642c:	89 c7                	mov    %eax,%edi$/;"	l
f010642e	obj/kern/kernel.asm	/^f010642e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106433	obj/kern/kernel.asm	/^f0106433:	e8 b7 a3 ff ff       	call   f01007ef <getchar>$/;"	l
f0106438	obj/kern/kernel.asm	/^f0106438:	89 c3                	mov    %eax,%ebx$/;"	l
f010643a	obj/kern/kernel.asm	/^f010643a:	85 c0                	test   %eax,%eax$/;"	l
f010643c	obj/kern/kernel.asm	/^f010643c:	79 25                	jns    f0106463 <readline+0x63>$/;"	l
f010643e	obj/kern/kernel.asm	/^f010643e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106443	obj/kern/kernel.asm	/^f0106443:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f0106446	obj/kern/kernel.asm	/^f0106446:	0f 84 89 00 00 00    	je     f01064d5 <readline+0xd5>$/;"	l
f010644c	obj/kern/kernel.asm	/^f010644c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0106450	obj/kern/kernel.asm	/^f0106450:	c7 04 24 bf 91 10 f0 	movl   $0xf01091bf,(%esp)$/;"	l
f0106457	obj/kern/kernel.asm	/^f0106457:	e8 32 e3 ff ff       	call   f010478e <cprintf>$/;"	l
f010645c	obj/kern/kernel.asm	/^f010645c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	eb 72                	jmp    f01064d5 <readline+0xd5>$/;"	l
f0106463	obj/kern/kernel.asm	/^f0106463:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0106466	obj/kern/kernel.asm	/^f0106466:	74 05                	je     f010646d <readline+0x6d>$/;"	l
f0106468	obj/kern/kernel.asm	/^f0106468:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f010646b	obj/kern/kernel.asm	/^f010646b:	75 1a                	jne    f0106487 <readline+0x87>$/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	85 f6                	test   %esi,%esi$/;"	l
f010646f	obj/kern/kernel.asm	/^f010646f:	90                   	nop$/;"	l
f0106470	obj/kern/kernel.asm	/^f0106470:	7e 15                	jle    f0106487 <readline+0x87>$/;"	l
f0106472	obj/kern/kernel.asm	/^f0106472:	85 ff                	test   %edi,%edi$/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474:	74 0c                	je     f0106482 <readline+0x82>$/;"	l
f0106476	obj/kern/kernel.asm	/^f0106476:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f010647d	obj/kern/kernel.asm	/^f010647d:	e8 5d a3 ff ff       	call   f01007df <cputchar>$/;"	l
f0106482	obj/kern/kernel.asm	/^f0106482:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106485	obj/kern/kernel.asm	/^f0106485:	eb ac                	jmp    f0106433 <readline+0x33>$/;"	l
f0106487	obj/kern/kernel.asm	/^f0106487:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	7e 1f                	jle    f01064ab <readline+0xab>$/;"	l
f010648c	obj/kern/kernel.asm	/^f010648c:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492:	7f 17                	jg     f01064ab <readline+0xab>$/;"	l
f0106494	obj/kern/kernel.asm	/^f0106494:	85 ff                	test   %edi,%edi$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	74 08                	je     f01064a0 <readline+0xa0>$/;"	l
f0106498	obj/kern/kernel.asm	/^f0106498:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010649b	obj/kern/kernel.asm	/^f010649b:	e8 3f a3 ff ff       	call   f01007df <cputchar>$/;"	l
f01064a0	obj/kern/kernel.asm	/^f01064a0:	88 9e 80 7a 20 f0    	mov    %bl,-0xfdf8580(%esi)$/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	83 c6 01             	add    $0x1,%esi$/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	eb 88                	jmp    f0106433 <readline+0x33>$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f01064ae	obj/kern/kernel.asm	/^f01064ae:	74 09                	je     f01064b9 <readline+0xb9>$/;"	l
f01064b0	obj/kern/kernel.asm	/^f01064b0:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01064b3	obj/kern/kernel.asm	/^f01064b3:	0f 85 7a ff ff ff    	jne    f0106433 <readline+0x33>$/;"	l
f01064b9	obj/kern/kernel.asm	/^f01064b9:	85 ff                	test   %edi,%edi$/;"	l
f01064bb	obj/kern/kernel.asm	/^f01064bb:	74 0c                	je     f01064c9 <readline+0xc9>$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f01064c4	obj/kern/kernel.asm	/^f01064c4:	e8 16 a3 ff ff       	call   f01007df <cputchar>$/;"	l
f01064c9	obj/kern/kernel.asm	/^f01064c9:	c6 86 80 7a 20 f0 00 	movb   $0x0,-0xfdf8580(%esi)$/;"	l
f01064d0	obj/kern/kernel.asm	/^f01064d0:	b8 80 7a 20 f0       	mov    $0xf0207a80,%eax$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	5b                   	pop    %ebx$/;"	l
f01064d9	obj/kern/kernel.asm	/^f01064d9:	5e                   	pop    %esi$/;"	l
f01064da	obj/kern/kernel.asm	/^f01064da:	5f                   	pop    %edi$/;"	l
f01064db	obj/kern/kernel.asm	/^f01064db:	5d                   	pop    %ebp$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	c3                   	ret    $/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	00 00                	add    %al,(%eax)$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0 <strlen>:$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	55                   	push   %ebp$/;"	l
f01064e1	obj/kern/kernel.asm	/^f01064e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01064e3	obj/kern/kernel.asm	/^f01064e3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01064e6	obj/kern/kernel.asm	/^f01064e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01064eb	obj/kern/kernel.asm	/^f01064eb:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f01064ee	obj/kern/kernel.asm	/^f01064ee:	74 09                	je     f01064f9 <strlen+0x19>$/;"	l
f01064f0	obj/kern/kernel.asm	/^f01064f0:	83 c0 01             	add    $0x1,%eax$/;"	l
f01064f3	obj/kern/kernel.asm	/^f01064f3:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f01064f7	obj/kern/kernel.asm	/^f01064f7:	75 f7                	jne    f01064f0 <strlen+0x10>$/;"	l
f01064f9	obj/kern/kernel.asm	/^f01064f9:	5d                   	pop    %ebp$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	c3                   	ret    $/;"	l
f01064fb	obj/kern/kernel.asm	/^f01064fb <strnlen>:$/;"	l
f01064fb	obj/kern/kernel.asm	/^f01064fb:	55                   	push   %ebp$/;"	l
f01064fc	obj/kern/kernel.asm	/^f01064fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01064fe	obj/kern/kernel.asm	/^f01064fe:	53                   	push   %ebx$/;"	l
f01064ff	obj/kern/kernel.asm	/^f01064ff:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106502	obj/kern/kernel.asm	/^f0106502:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010650a	obj/kern/kernel.asm	/^f010650a:	85 c9                	test   %ecx,%ecx$/;"	l
f010650c	obj/kern/kernel.asm	/^f010650c:	74 1a                	je     f0106528 <strnlen+0x2d>$/;"	l
f010650e	obj/kern/kernel.asm	/^f010650e:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0106511	obj/kern/kernel.asm	/^f0106511:	74 15                	je     f0106528 <strnlen+0x2d>$/;"	l
f0106513	obj/kern/kernel.asm	/^f0106513:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0106518	obj/kern/kernel.asm	/^f0106518:	89 d0                	mov    %edx,%eax$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	39 ca                	cmp    %ecx,%edx$/;"	l
f010651c	obj/kern/kernel.asm	/^f010651c:	74 0a                	je     f0106528 <strnlen+0x2d>$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106521	obj/kern/kernel.asm	/^f0106521:	80 7c 13 ff 00       	cmpb   $0x0,-0x1(%ebx,%edx,1)$/;"	l
f0106526	obj/kern/kernel.asm	/^f0106526:	75 f0                	jne    f0106518 <strnlen+0x1d>$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528:	5b                   	pop    %ebx$/;"	l
f0106529	obj/kern/kernel.asm	/^f0106529:	5d                   	pop    %ebp$/;"	l
f010652a	obj/kern/kernel.asm	/^f010652a:	c3                   	ret    $/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b <strcpy>:$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	55                   	push   %ebp$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	89 e5                	mov    %esp,%ebp$/;"	l
f010652e	obj/kern/kernel.asm	/^f010652e:	53                   	push   %ebx$/;"	l
f010652f	obj/kern/kernel.asm	/^f010652f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106532	obj/kern/kernel.asm	/^f0106532:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106535	obj/kern/kernel.asm	/^f0106535:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010653a	obj/kern/kernel.asm	/^f010653a:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f010653e	obj/kern/kernel.asm	/^f010653e:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106544	obj/kern/kernel.asm	/^f0106544:	84 c9                	test   %cl,%cl$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	75 f2                	jne    f010653a <strcpy+0xf>$/;"	l
f0106548	obj/kern/kernel.asm	/^f0106548:	5b                   	pop    %ebx$/;"	l
f0106549	obj/kern/kernel.asm	/^f0106549:	5d                   	pop    %ebp$/;"	l
f010654a	obj/kern/kernel.asm	/^f010654a:	c3                   	ret    $/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b <strcat>:$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	55                   	push   %ebp$/;"	l
f010654c	obj/kern/kernel.asm	/^f010654c:	89 e5                	mov    %esp,%ebp$/;"	l
f010654e	obj/kern/kernel.asm	/^f010654e:	53                   	push   %ebx$/;"	l
f010654f	obj/kern/kernel.asm	/^f010654f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106552	obj/kern/kernel.asm	/^f0106552:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106555	obj/kern/kernel.asm	/^f0106555:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	e8 83 ff ff ff       	call   f01064e0 <strlen>$/;"	l
f010655d	obj/kern/kernel.asm	/^f010655d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106560	obj/kern/kernel.asm	/^f0106560:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	01 d8                	add    %ebx,%eax$/;"	l
f0106566	obj/kern/kernel.asm	/^f0106566:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106569	obj/kern/kernel.asm	/^f0106569:	e8 bd ff ff ff       	call   f010652b <strcpy>$/;"	l
f010656e	obj/kern/kernel.asm	/^f010656e:	89 d8                	mov    %ebx,%eax$/;"	l
f0106570	obj/kern/kernel.asm	/^f0106570:	83 c4 08             	add    $0x8,%esp$/;"	l
f0106573	obj/kern/kernel.asm	/^f0106573:	5b                   	pop    %ebx$/;"	l
f0106574	obj/kern/kernel.asm	/^f0106574:	5d                   	pop    %ebp$/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	c3                   	ret    $/;"	l
f0106576	obj/kern/kernel.asm	/^f0106576 <strncpy>:$/;"	l
f0106576	obj/kern/kernel.asm	/^f0106576:	55                   	push   %ebp$/;"	l
f0106577	obj/kern/kernel.asm	/^f0106577:	89 e5                	mov    %esp,%ebp$/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	56                   	push   %esi$/;"	l
f010657a	obj/kern/kernel.asm	/^f010657a:	53                   	push   %ebx$/;"	l
f010657b	obj/kern/kernel.asm	/^f010657b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010657e	obj/kern/kernel.asm	/^f010657e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0106584	obj/kern/kernel.asm	/^f0106584:	85 f6                	test   %esi,%esi$/;"	l
f0106586	obj/kern/kernel.asm	/^f0106586:	74 18                	je     f01065a0 <strncpy+0x2a>$/;"	l
f0106588	obj/kern/kernel.asm	/^f0106588:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010658d	obj/kern/kernel.asm	/^f010658d:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0106590	obj/kern/kernel.asm	/^f0106590:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0106593	obj/kern/kernel.asm	/^f0106593:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0106596	obj/kern/kernel.asm	/^f0106596:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0106599	obj/kern/kernel.asm	/^f0106599:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010659c	obj/kern/kernel.asm	/^f010659c:	39 f1                	cmp    %esi,%ecx$/;"	l
f010659e	obj/kern/kernel.asm	/^f010659e:	75 ed                	jne    f010658d <strncpy+0x17>$/;"	l
f01065a0	obj/kern/kernel.asm	/^f01065a0:	5b                   	pop    %ebx$/;"	l
f01065a1	obj/kern/kernel.asm	/^f01065a1:	5e                   	pop    %esi$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	5d                   	pop    %ebp$/;"	l
f01065a3	obj/kern/kernel.asm	/^f01065a3:	c3                   	ret    $/;"	l
f01065a4	obj/kern/kernel.asm	/^f01065a4 <strlcpy>:$/;"	l
f01065a4	obj/kern/kernel.asm	/^f01065a4:	55                   	push   %ebp$/;"	l
f01065a5	obj/kern/kernel.asm	/^f01065a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01065a7	obj/kern/kernel.asm	/^f01065a7:	57                   	push   %edi$/;"	l
f01065a8	obj/kern/kernel.asm	/^f01065a8:	56                   	push   %esi$/;"	l
f01065a9	obj/kern/kernel.asm	/^f01065a9:	53                   	push   %ebx$/;"	l
f01065aa	obj/kern/kernel.asm	/^f01065aa:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01065b0	obj/kern/kernel.asm	/^f01065b0:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f01065b3	obj/kern/kernel.asm	/^f01065b3:	89 f8                	mov    %edi,%eax$/;"	l
f01065b5	obj/kern/kernel.asm	/^f01065b5:	85 f6                	test   %esi,%esi$/;"	l
f01065b7	obj/kern/kernel.asm	/^f01065b7:	74 2b                	je     f01065e4 <strlcpy+0x40>$/;"	l
f01065b9	obj/kern/kernel.asm	/^f01065b9:	83 fe 01             	cmp    $0x1,%esi$/;"	l
f01065bc	obj/kern/kernel.asm	/^f01065bc:	74 23                	je     f01065e1 <strlcpy+0x3d>$/;"	l
f01065be	obj/kern/kernel.asm	/^f01065be:	0f b6 0b             	movzbl (%ebx),%ecx$/;"	l
f01065c1	obj/kern/kernel.asm	/^f01065c1:	84 c9                	test   %cl,%cl$/;"	l
f01065c3	obj/kern/kernel.asm	/^f01065c3:	74 1c                	je     f01065e1 <strlcpy+0x3d>$/;"	l
f01065c5	obj/kern/kernel.asm	/^f01065c5:	83 ee 02             	sub    $0x2,%esi$/;"	l
f01065c8	obj/kern/kernel.asm	/^f01065c8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01065cd	obj/kern/kernel.asm	/^f01065cd:	88 08                	mov    %cl,(%eax)$/;"	l
f01065cf	obj/kern/kernel.asm	/^f01065cf:	83 c0 01             	add    $0x1,%eax$/;"	l
f01065d2	obj/kern/kernel.asm	/^f01065d2:	39 f2                	cmp    %esi,%edx$/;"	l
f01065d4	obj/kern/kernel.asm	/^f01065d4:	74 0b                	je     f01065e1 <strlcpy+0x3d>$/;"	l
f01065d6	obj/kern/kernel.asm	/^f01065d6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01065d9	obj/kern/kernel.asm	/^f01065d9:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f01065dd	obj/kern/kernel.asm	/^f01065dd:	84 c9                	test   %cl,%cl$/;"	l
f01065df	obj/kern/kernel.asm	/^f01065df:	75 ec                	jne    f01065cd <strlcpy+0x29>$/;"	l
f01065e1	obj/kern/kernel.asm	/^f01065e1:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01065e4	obj/kern/kernel.asm	/^f01065e4:	29 f8                	sub    %edi,%eax$/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6:	5b                   	pop    %ebx$/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	5e                   	pop    %esi$/;"	l
f01065e8	obj/kern/kernel.asm	/^f01065e8:	5f                   	pop    %edi$/;"	l
f01065e9	obj/kern/kernel.asm	/^f01065e9:	5d                   	pop    %ebp$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	c3                   	ret    $/;"	l
f01065eb	obj/kern/kernel.asm	/^f01065eb <strcmp>:$/;"	l
f01065eb	obj/kern/kernel.asm	/^f01065eb:	55                   	push   %ebp$/;"	l
f01065ec	obj/kern/kernel.asm	/^f01065ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01065ee	obj/kern/kernel.asm	/^f01065ee:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01065f1	obj/kern/kernel.asm	/^f01065f1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01065f4	obj/kern/kernel.asm	/^f01065f4:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01065f7	obj/kern/kernel.asm	/^f01065f7:	84 c0                	test   %al,%al$/;"	l
f01065f9	obj/kern/kernel.asm	/^f01065f9:	74 16                	je     f0106611 <strcmp+0x26>$/;"	l
f01065fb	obj/kern/kernel.asm	/^f01065fb:	3a 02                	cmp    (%edx),%al$/;"	l
f01065fd	obj/kern/kernel.asm	/^f01065fd:	75 12                	jne    f0106611 <strcmp+0x26>$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106602	obj/kern/kernel.asm	/^f0106602:	0f b6 41 01          	movzbl 0x1(%ecx),%eax$/;"	l
f0106606	obj/kern/kernel.asm	/^f0106606:	84 c0                	test   %al,%al$/;"	l
f0106608	obj/kern/kernel.asm	/^f0106608:	74 07                	je     f0106611 <strcmp+0x26>$/;"	l
f010660a	obj/kern/kernel.asm	/^f010660a:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010660d	obj/kern/kernel.asm	/^f010660d:	3a 02                	cmp    (%edx),%al$/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	74 ee                	je     f01065ff <strcmp+0x14>$/;"	l
f0106611	obj/kern/kernel.asm	/^f0106611:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0106617	obj/kern/kernel.asm	/^f0106617:	29 d0                	sub    %edx,%eax$/;"	l
f0106619	obj/kern/kernel.asm	/^f0106619:	5d                   	pop    %ebp$/;"	l
f010661a	obj/kern/kernel.asm	/^f010661a:	c3                   	ret    $/;"	l
f010661b	obj/kern/kernel.asm	/^f010661b <strncmp>:$/;"	l
f010661b	obj/kern/kernel.asm	/^f010661b:	55                   	push   %ebp$/;"	l
f010661c	obj/kern/kernel.asm	/^f010661c:	89 e5                	mov    %esp,%ebp$/;"	l
f010661e	obj/kern/kernel.asm	/^f010661e:	53                   	push   %ebx$/;"	l
f010661f	obj/kern/kernel.asm	/^f010661f:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0106622	obj/kern/kernel.asm	/^f0106622:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0106628	obj/kern/kernel.asm	/^f0106628:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	85 d2                	test   %edx,%edx$/;"	l
f010662f	obj/kern/kernel.asm	/^f010662f:	74 28                	je     f0106659 <strncmp+0x3e>$/;"	l
f0106631	obj/kern/kernel.asm	/^f0106631:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106634	obj/kern/kernel.asm	/^f0106634:	84 c0                	test   %al,%al$/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636:	74 24                	je     f010665c <strncmp+0x41>$/;"	l
f0106638	obj/kern/kernel.asm	/^f0106638:	3a 03                	cmp    (%ebx),%al$/;"	l
f010663a	obj/kern/kernel.asm	/^f010663a:	75 20                	jne    f010665c <strncmp+0x41>$/;"	l
f010663c	obj/kern/kernel.asm	/^f010663c:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	74 13                	je     f0106654 <strncmp+0x39>$/;"	l
f0106641	obj/kern/kernel.asm	/^f0106641:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106644	obj/kern/kernel.asm	/^f0106644:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106647	obj/kern/kernel.asm	/^f0106647:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010664a	obj/kern/kernel.asm	/^f010664a:	84 c0                	test   %al,%al$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	74 0e                	je     f010665c <strncmp+0x41>$/;"	l
f010664e	obj/kern/kernel.asm	/^f010664e:	3a 03                	cmp    (%ebx),%al$/;"	l
f0106650	obj/kern/kernel.asm	/^f0106650:	74 ea                	je     f010663c <strncmp+0x21>$/;"	l
f0106652	obj/kern/kernel.asm	/^f0106652:	eb 08                	jmp    f010665c <strncmp+0x41>$/;"	l
f0106654	obj/kern/kernel.asm	/^f0106654:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	5b                   	pop    %ebx$/;"	l
f010665a	obj/kern/kernel.asm	/^f010665a:	5d                   	pop    %ebp$/;"	l
f010665b	obj/kern/kernel.asm	/^f010665b:	c3                   	ret    $/;"	l
f010665c	obj/kern/kernel.asm	/^f010665c:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010665f	obj/kern/kernel.asm	/^f010665f:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0106662	obj/kern/kernel.asm	/^f0106662:	29 d0                	sub    %edx,%eax$/;"	l
f0106664	obj/kern/kernel.asm	/^f0106664:	eb f3                	jmp    f0106659 <strncmp+0x3e>$/;"	l
f0106666	obj/kern/kernel.asm	/^f0106666 <strchr>:$/;"	l
f0106666	obj/kern/kernel.asm	/^f0106666:	55                   	push   %ebp$/;"	l
f0106667	obj/kern/kernel.asm	/^f0106667:	89 e5                	mov    %esp,%ebp$/;"	l
f0106669	obj/kern/kernel.asm	/^f0106669:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010666c	obj/kern/kernel.asm	/^f010666c:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106670	obj/kern/kernel.asm	/^f0106670:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106673	obj/kern/kernel.asm	/^f0106673:	84 d2                	test   %dl,%dl$/;"	l
f0106675	obj/kern/kernel.asm	/^f0106675:	74 1c                	je     f0106693 <strchr+0x2d>$/;"	l
f0106677	obj/kern/kernel.asm	/^f0106677:	38 ca                	cmp    %cl,%dl$/;"	l
f0106679	obj/kern/kernel.asm	/^f0106679:	75 09                	jne    f0106684 <strchr+0x1e>$/;"	l
f010667b	obj/kern/kernel.asm	/^f010667b:	eb 1b                	jmp    f0106698 <strchr+0x32>$/;"	l
f010667d	obj/kern/kernel.asm	/^f010667d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	38 ca                	cmp    %cl,%dl$/;"	l
f0106682	obj/kern/kernel.asm	/^f0106682:	74 14                	je     f0106698 <strchr+0x32>$/;"	l
f0106684	obj/kern/kernel.asm	/^f0106684:	0f b6 50 01          	movzbl 0x1(%eax),%edx$/;"	l
f0106688	obj/kern/kernel.asm	/^f0106688:	84 d2                	test   %dl,%dl$/;"	l
f010668a	obj/kern/kernel.asm	/^f010668a:	75 f1                	jne    f010667d <strchr+0x17>$/;"	l
f010668c	obj/kern/kernel.asm	/^f010668c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	eb 05                	jmp    f0106698 <strchr+0x32>$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106698	obj/kern/kernel.asm	/^f0106698:	5d                   	pop    %ebp$/;"	l
f0106699	obj/kern/kernel.asm	/^f0106699:	c3                   	ret    $/;"	l
f010669a	obj/kern/kernel.asm	/^f010669a <strfind>:$/;"	l
f010669a	obj/kern/kernel.asm	/^f010669a:	55                   	push   %ebp$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	89 e5                	mov    %esp,%ebp$/;"	l
f010669d	obj/kern/kernel.asm	/^f010669d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01066a0	obj/kern/kernel.asm	/^f01066a0:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01066a4	obj/kern/kernel.asm	/^f01066a4:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01066a7	obj/kern/kernel.asm	/^f01066a7:	84 d2                	test   %dl,%dl$/;"	l
f01066a9	obj/kern/kernel.asm	/^f01066a9:	74 14                	je     f01066bf <strfind+0x25>$/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	38 ca                	cmp    %cl,%dl$/;"	l
f01066ad	obj/kern/kernel.asm	/^f01066ad:	75 06                	jne    f01066b5 <strfind+0x1b>$/;"	l
f01066af	obj/kern/kernel.asm	/^f01066af:	eb 0e                	jmp    f01066bf <strfind+0x25>$/;"	l
f01066b1	obj/kern/kernel.asm	/^f01066b1:	38 ca                	cmp    %cl,%dl$/;"	l
f01066b3	obj/kern/kernel.asm	/^f01066b3:	74 0a                	je     f01066bf <strfind+0x25>$/;"	l
f01066b5	obj/kern/kernel.asm	/^f01066b5:	83 c0 01             	add    $0x1,%eax$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01066bb	obj/kern/kernel.asm	/^f01066bb:	84 d2                	test   %dl,%dl$/;"	l
f01066bd	obj/kern/kernel.asm	/^f01066bd:	75 f2                	jne    f01066b1 <strfind+0x17>$/;"	l
f01066bf	obj/kern/kernel.asm	/^f01066bf:	5d                   	pop    %ebp$/;"	l
f01066c0	obj/kern/kernel.asm	/^f01066c0:	c3                   	ret    $/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1 <memset>:$/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1:	55                   	push   %ebp$/;"	l
f01066c2	obj/kern/kernel.asm	/^f01066c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01066ca	obj/kern/kernel.asm	/^f01066ca:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01066cd	obj/kern/kernel.asm	/^f01066cd:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01066d0	obj/kern/kernel.asm	/^f01066d0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01066d3	obj/kern/kernel.asm	/^f01066d3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01066d6	obj/kern/kernel.asm	/^f01066d6:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01066d9	obj/kern/kernel.asm	/^f01066d9:	85 c9                	test   %ecx,%ecx$/;"	l
f01066db	obj/kern/kernel.asm	/^f01066db:	74 30                	je     f010670d <memset+0x4c>$/;"	l
f01066dd	obj/kern/kernel.asm	/^f01066dd:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01066e3	obj/kern/kernel.asm	/^f01066e3:	75 25                	jne    f010670a <memset+0x49>$/;"	l
f01066e5	obj/kern/kernel.asm	/^f01066e5:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8:	75 20                	jne    f010670a <memset+0x49>$/;"	l
f01066ea	obj/kern/kernel.asm	/^f01066ea:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01066ed	obj/kern/kernel.asm	/^f01066ed:	89 d3                	mov    %edx,%ebx$/;"	l
f01066ef	obj/kern/kernel.asm	/^f01066ef:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01066f2	obj/kern/kernel.asm	/^f01066f2:	89 d6                	mov    %edx,%esi$/;"	l
f01066f4	obj/kern/kernel.asm	/^f01066f4:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01066f7	obj/kern/kernel.asm	/^f01066f7:	89 d0                	mov    %edx,%eax$/;"	l
f01066f9	obj/kern/kernel.asm	/^f01066f9:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01066fc	obj/kern/kernel.asm	/^f01066fc:	09 f0                	or     %esi,%eax$/;"	l
f01066fe	obj/kern/kernel.asm	/^f01066fe:	09 d0                	or     %edx,%eax$/;"	l
f0106700	obj/kern/kernel.asm	/^f0106700:	09 d8                	or     %ebx,%eax$/;"	l
f0106702	obj/kern/kernel.asm	/^f0106702:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106705	obj/kern/kernel.asm	/^f0106705:	fc                   	cld    $/;"	l
f0106706	obj/kern/kernel.asm	/^f0106706:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f0106708	obj/kern/kernel.asm	/^f0106708:	eb 03                	jmp    f010670d <memset+0x4c>$/;"	l
f010670a	obj/kern/kernel.asm	/^f010670a:	fc                   	cld    $/;"	l
f010670b	obj/kern/kernel.asm	/^f010670b:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f010670d	obj/kern/kernel.asm	/^f010670d:	89 f8                	mov    %edi,%eax$/;"	l
f010670f	obj/kern/kernel.asm	/^f010670f:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0106712	obj/kern/kernel.asm	/^f0106712:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0106715	obj/kern/kernel.asm	/^f0106715:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0106718	obj/kern/kernel.asm	/^f0106718:	89 ec                	mov    %ebp,%esp$/;"	l
f010671a	obj/kern/kernel.asm	/^f010671a:	5d                   	pop    %ebp$/;"	l
f010671b	obj/kern/kernel.asm	/^f010671b:	c3                   	ret    $/;"	l
f010671c	obj/kern/kernel.asm	/^f010671c <memmove>:$/;"	l
f010671c	obj/kern/kernel.asm	/^f010671c:	55                   	push   %ebp$/;"	l
f010671d	obj/kern/kernel.asm	/^f010671d:	89 e5                	mov    %esp,%ebp$/;"	l
f010671f	obj/kern/kernel.asm	/^f010671f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106722	obj/kern/kernel.asm	/^f0106722:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0106725	obj/kern/kernel.asm	/^f0106725:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010672e	obj/kern/kernel.asm	/^f010672e:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106731	obj/kern/kernel.asm	/^f0106731:	39 c6                	cmp    %eax,%esi$/;"	l
f0106733	obj/kern/kernel.asm	/^f0106733:	73 36                	jae    f010676b <memmove+0x4f>$/;"	l
f0106735	obj/kern/kernel.asm	/^f0106735:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0106738	obj/kern/kernel.asm	/^f0106738:	39 d0                	cmp    %edx,%eax$/;"	l
f010673a	obj/kern/kernel.asm	/^f010673a:	73 2f                	jae    f010676b <memmove+0x4f>$/;"	l
f010673c	obj/kern/kernel.asm	/^f010673c:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f010673f	obj/kern/kernel.asm	/^f010673f:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0106742	obj/kern/kernel.asm	/^f0106742:	75 1b                	jne    f010675f <memmove+0x43>$/;"	l
f0106744	obj/kern/kernel.asm	/^f0106744:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010674a	obj/kern/kernel.asm	/^f010674a:	75 13                	jne    f010675f <memmove+0x43>$/;"	l
f010674c	obj/kern/kernel.asm	/^f010674c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010674f	obj/kern/kernel.asm	/^f010674f:	75 0e                	jne    f010675f <memmove+0x43>$/;"	l
f0106751	obj/kern/kernel.asm	/^f0106751:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0106754	obj/kern/kernel.asm	/^f0106754:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0106757	obj/kern/kernel.asm	/^f0106757:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010675a	obj/kern/kernel.asm	/^f010675a:	fd                   	std    $/;"	l
f010675b	obj/kern/kernel.asm	/^f010675b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010675d	obj/kern/kernel.asm	/^f010675d:	eb 09                	jmp    f0106768 <memmove+0x4c>$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106762	obj/kern/kernel.asm	/^f0106762:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106765	obj/kern/kernel.asm	/^f0106765:	fd                   	std    $/;"	l
f0106766	obj/kern/kernel.asm	/^f0106766:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768:	fc                   	cld    $/;"	l
f0106769	obj/kern/kernel.asm	/^f0106769:	eb 20                	jmp    f010678b <memmove+0x6f>$/;"	l
f010676b	obj/kern/kernel.asm	/^f010676b:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0106771	obj/kern/kernel.asm	/^f0106771:	75 13                	jne    f0106786 <memmove+0x6a>$/;"	l
f0106773	obj/kern/kernel.asm	/^f0106773:	a8 03                	test   $0x3,%al$/;"	l
f0106775	obj/kern/kernel.asm	/^f0106775:	75 0f                	jne    f0106786 <memmove+0x6a>$/;"	l
f0106777	obj/kern/kernel.asm	/^f0106777:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010677a	obj/kern/kernel.asm	/^f010677a:	75 0a                	jne    f0106786 <memmove+0x6a>$/;"	l
f010677c	obj/kern/kernel.asm	/^f010677c:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010677f	obj/kern/kernel.asm	/^f010677f:	89 c7                	mov    %eax,%edi$/;"	l
f0106781	obj/kern/kernel.asm	/^f0106781:	fc                   	cld    $/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106784	obj/kern/kernel.asm	/^f0106784:	eb 05                	jmp    f010678b <memmove+0x6f>$/;"	l
f0106786	obj/kern/kernel.asm	/^f0106786:	89 c7                	mov    %eax,%edi$/;"	l
f0106788	obj/kern/kernel.asm	/^f0106788:	fc                   	cld    $/;"	l
f0106789	obj/kern/kernel.asm	/^f0106789:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010678b	obj/kern/kernel.asm	/^f010678b:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f010678e	obj/kern/kernel.asm	/^f010678e:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0106791	obj/kern/kernel.asm	/^f0106791:	89 ec                	mov    %ebp,%esp$/;"	l
f0106793	obj/kern/kernel.asm	/^f0106793:	5d                   	pop    %ebp$/;"	l
f0106794	obj/kern/kernel.asm	/^f0106794:	c3                   	ret    $/;"	l
f0106795	obj/kern/kernel.asm	/^f0106795 <memcpy>:$/;"	l
f0106795	obj/kern/kernel.asm	/^f0106795:	55                   	push   %ebp$/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	89 e5                	mov    %esp,%ebp$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010679b	obj/kern/kernel.asm	/^f010679b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010679e	obj/kern/kernel.asm	/^f010679e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01067a2	obj/kern/kernel.asm	/^f01067a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01067a5	obj/kern/kernel.asm	/^f01067a5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01067a9	obj/kern/kernel.asm	/^f01067a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01067ac	obj/kern/kernel.asm	/^f01067ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01067af	obj/kern/kernel.asm	/^f01067af:	e8 68 ff ff ff       	call   f010671c <memmove>$/;"	l
f01067b4	obj/kern/kernel.asm	/^f01067b4:	c9                   	leave  $/;"	l
f01067b5	obj/kern/kernel.asm	/^f01067b5:	c3                   	ret    $/;"	l
f01067b6	obj/kern/kernel.asm	/^f01067b6 <memcmp>:$/;"	l
f01067b6	obj/kern/kernel.asm	/^f01067b6:	55                   	push   %ebp$/;"	l
f01067b7	obj/kern/kernel.asm	/^f01067b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01067b9	obj/kern/kernel.asm	/^f01067b9:	57                   	push   %edi$/;"	l
f01067ba	obj/kern/kernel.asm	/^f01067ba:	56                   	push   %esi$/;"	l
f01067bb	obj/kern/kernel.asm	/^f01067bb:	53                   	push   %ebx$/;"	l
f01067bc	obj/kern/kernel.asm	/^f01067bc:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01067bf	obj/kern/kernel.asm	/^f01067bf:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f01067c5	obj/kern/kernel.asm	/^f01067c5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01067ca	obj/kern/kernel.asm	/^f01067ca:	85 ff                	test   %edi,%edi$/;"	l
f01067cc	obj/kern/kernel.asm	/^f01067cc:	74 37                	je     f0106805 <memcmp+0x4f>$/;"	l
f01067ce	obj/kern/kernel.asm	/^f01067ce:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01067d1	obj/kern/kernel.asm	/^f01067d1:	0f b6 0e             	movzbl (%esi),%ecx$/;"	l
f01067d4	obj/kern/kernel.asm	/^f01067d4:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01067d7	obj/kern/kernel.asm	/^f01067d7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01067dc	obj/kern/kernel.asm	/^f01067dc:	38 c8                	cmp    %cl,%al$/;"	l
f01067de	obj/kern/kernel.asm	/^f01067de:	74 1c                	je     f01067fc <memcmp+0x46>$/;"	l
f01067e0	obj/kern/kernel.asm	/^f01067e0:	eb 10                	jmp    f01067f2 <memcmp+0x3c>$/;"	l
f01067e2	obj/kern/kernel.asm	/^f01067e2:	0f b6 44 13 01       	movzbl 0x1(%ebx,%edx,1),%eax$/;"	l
f01067e7	obj/kern/kernel.asm	/^f01067e7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01067ea	obj/kern/kernel.asm	/^f01067ea:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx$/;"	l
f01067ee	obj/kern/kernel.asm	/^f01067ee:	38 c8                	cmp    %cl,%al$/;"	l
f01067f0	obj/kern/kernel.asm	/^f01067f0:	74 0a                	je     f01067fc <memcmp+0x46>$/;"	l
f01067f2	obj/kern/kernel.asm	/^f01067f2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01067f5	obj/kern/kernel.asm	/^f01067f5:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f01067f8	obj/kern/kernel.asm	/^f01067f8:	29 c8                	sub    %ecx,%eax$/;"	l
f01067fa	obj/kern/kernel.asm	/^f01067fa:	eb 09                	jmp    f0106805 <memcmp+0x4f>$/;"	l
f01067fc	obj/kern/kernel.asm	/^f01067fc:	39 fa                	cmp    %edi,%edx$/;"	l
f01067fe	obj/kern/kernel.asm	/^f01067fe:	75 e2                	jne    f01067e2 <memcmp+0x2c>$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106805	obj/kern/kernel.asm	/^f0106805:	5b                   	pop    %ebx$/;"	l
f0106806	obj/kern/kernel.asm	/^f0106806:	5e                   	pop    %esi$/;"	l
f0106807	obj/kern/kernel.asm	/^f0106807:	5f                   	pop    %edi$/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808:	5d                   	pop    %ebp$/;"	l
f0106809	obj/kern/kernel.asm	/^f0106809:	c3                   	ret    $/;"	l
f010680a	obj/kern/kernel.asm	/^f010680a <memfind>:$/;"	l
f010680a	obj/kern/kernel.asm	/^f010680a:	55                   	push   %ebp$/;"	l
f010680b	obj/kern/kernel.asm	/^f010680b:	89 e5                	mov    %esp,%ebp$/;"	l
f010680d	obj/kern/kernel.asm	/^f010680d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106810	obj/kern/kernel.asm	/^f0106810:	89 c2                	mov    %eax,%edx$/;"	l
f0106812	obj/kern/kernel.asm	/^f0106812:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0106815	obj/kern/kernel.asm	/^f0106815:	39 d0                	cmp    %edx,%eax$/;"	l
f0106817	obj/kern/kernel.asm	/^f0106817:	73 19                	jae    f0106832 <memfind+0x28>$/;"	l
f0106819	obj/kern/kernel.asm	/^f0106819:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f010681d	obj/kern/kernel.asm	/^f010681d:	38 08                	cmp    %cl,(%eax)$/;"	l
f010681f	obj/kern/kernel.asm	/^f010681f:	75 06                	jne    f0106827 <memfind+0x1d>$/;"	l
f0106821	obj/kern/kernel.asm	/^f0106821:	eb 0f                	jmp    f0106832 <memfind+0x28>$/;"	l
f0106823	obj/kern/kernel.asm	/^f0106823:	38 08                	cmp    %cl,(%eax)$/;"	l
f0106825	obj/kern/kernel.asm	/^f0106825:	74 0b                	je     f0106832 <memfind+0x28>$/;"	l
f0106827	obj/kern/kernel.asm	/^f0106827:	83 c0 01             	add    $0x1,%eax$/;"	l
f010682a	obj/kern/kernel.asm	/^f010682a:	39 d0                	cmp    %edx,%eax$/;"	l
f010682c	obj/kern/kernel.asm	/^f010682c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106830	obj/kern/kernel.asm	/^f0106830:	75 f1                	jne    f0106823 <memfind+0x19>$/;"	l
f0106832	obj/kern/kernel.asm	/^f0106832:	5d                   	pop    %ebp$/;"	l
f0106833	obj/kern/kernel.asm	/^f0106833:	c3                   	ret    $/;"	l
f0106834	obj/kern/kernel.asm	/^f0106834 <strtol>:$/;"	l
f0106834	obj/kern/kernel.asm	/^f0106834:	55                   	push   %ebp$/;"	l
f0106835	obj/kern/kernel.asm	/^f0106835:	89 e5                	mov    %esp,%ebp$/;"	l
f0106837	obj/kern/kernel.asm	/^f0106837:	57                   	push   %edi$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	56                   	push   %esi$/;"	l
f0106839	obj/kern/kernel.asm	/^f0106839:	53                   	push   %ebx$/;"	l
f010683a	obj/kern/kernel.asm	/^f010683a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010683d	obj/kern/kernel.asm	/^f010683d:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106840	obj/kern/kernel.asm	/^f0106840:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	3c 20                	cmp    $0x20,%al$/;"	l
f0106845	obj/kern/kernel.asm	/^f0106845:	74 04                	je     f010684b <strtol+0x17>$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	3c 09                	cmp    $0x9,%al$/;"	l
f0106849	obj/kern/kernel.asm	/^f0106849:	75 0e                	jne    f0106859 <strtol+0x25>$/;"	l
f010684b	obj/kern/kernel.asm	/^f010684b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010684e	obj/kern/kernel.asm	/^f010684e:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106851	obj/kern/kernel.asm	/^f0106851:	3c 20                	cmp    $0x20,%al$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	74 f6                	je     f010684b <strtol+0x17>$/;"	l
f0106855	obj/kern/kernel.asm	/^f0106855:	3c 09                	cmp    $0x9,%al$/;"	l
f0106857	obj/kern/kernel.asm	/^f0106857:	74 f2                	je     f010684b <strtol+0x17>$/;"	l
f0106859	obj/kern/kernel.asm	/^f0106859:	3c 2b                	cmp    $0x2b,%al$/;"	l
f010685b	obj/kern/kernel.asm	/^f010685b:	75 0a                	jne    f0106867 <strtol+0x33>$/;"	l
f010685d	obj/kern/kernel.asm	/^f010685d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106860	obj/kern/kernel.asm	/^f0106860:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106865	obj/kern/kernel.asm	/^f0106865:	eb 10                	jmp    f0106877 <strtol+0x43>$/;"	l
f0106867	obj/kern/kernel.asm	/^f0106867:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010686c	obj/kern/kernel.asm	/^f010686c:	3c 2d                	cmp    $0x2d,%al$/;"	l
f010686e	obj/kern/kernel.asm	/^f010686e:	75 07                	jne    f0106877 <strtol+0x43>$/;"	l
f0106870	obj/kern/kernel.asm	/^f0106870:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106873	obj/kern/kernel.asm	/^f0106873:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0106877	obj/kern/kernel.asm	/^f0106877:	85 db                	test   %ebx,%ebx$/;"	l
f0106879	obj/kern/kernel.asm	/^f0106879:	0f 94 c0             	sete   %al$/;"	l
f010687c	obj/kern/kernel.asm	/^f010687c:	74 05                	je     f0106883 <strtol+0x4f>$/;"	l
f010687e	obj/kern/kernel.asm	/^f010687e:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	75 15                	jne    f0106898 <strtol+0x64>$/;"	l
f0106883	obj/kern/kernel.asm	/^f0106883:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106886	obj/kern/kernel.asm	/^f0106886:	75 10                	jne    f0106898 <strtol+0x64>$/;"	l
f0106888	obj/kern/kernel.asm	/^f0106888:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f010688c	obj/kern/kernel.asm	/^f010688c:	75 0a                	jne    f0106898 <strtol+0x64>$/;"	l
f010688e	obj/kern/kernel.asm	/^f010688e:	83 c2 02             	add    $0x2,%edx$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0106896	obj/kern/kernel.asm	/^f0106896:	eb 13                	jmp    f01068ab <strtol+0x77>$/;"	l
f0106898	obj/kern/kernel.asm	/^f0106898:	84 c0                	test   %al,%al$/;"	l
f010689a	obj/kern/kernel.asm	/^f010689a:	74 0f                	je     f01068ab <strtol+0x77>$/;"	l
f010689c	obj/kern/kernel.asm	/^f010689c:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f01068a1	obj/kern/kernel.asm	/^f01068a1:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f01068a4	obj/kern/kernel.asm	/^f01068a4:	75 05                	jne    f01068ab <strtol+0x77>$/;"	l
f01068a6	obj/kern/kernel.asm	/^f01068a6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	b3 08                	mov    $0x8,%bl$/;"	l
f01068ab	obj/kern/kernel.asm	/^f01068ab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01068b0	obj/kern/kernel.asm	/^f01068b0:	89 de                	mov    %ebx,%esi$/;"	l
f01068b2	obj/kern/kernel.asm	/^f01068b2:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01068b5	obj/kern/kernel.asm	/^f01068b5:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f01068b8	obj/kern/kernel.asm	/^f01068b8:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f01068bb	obj/kern/kernel.asm	/^f01068bb:	77 08                	ja     f01068c5 <strtol+0x91>$/;"	l
f01068bd	obj/kern/kernel.asm	/^f01068bd:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01068c0	obj/kern/kernel.asm	/^f01068c0:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f01068c3	obj/kern/kernel.asm	/^f01068c3:	eb 1e                	jmp    f01068e3 <strtol+0xaf>$/;"	l
f01068c5	obj/kern/kernel.asm	/^f01068c5:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f01068c8	obj/kern/kernel.asm	/^f01068c8:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01068cb	obj/kern/kernel.asm	/^f01068cb:	77 08                	ja     f01068d5 <strtol+0xa1>$/;"	l
f01068cd	obj/kern/kernel.asm	/^f01068cd:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f01068d3	obj/kern/kernel.asm	/^f01068d3:	eb 0e                	jmp    f01068e3 <strtol+0xaf>$/;"	l
f01068d5	obj/kern/kernel.asm	/^f01068d5:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f01068d8	obj/kern/kernel.asm	/^f01068d8:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01068db	obj/kern/kernel.asm	/^f01068db:	77 14                	ja     f01068f1 <strtol+0xbd>$/;"	l
f01068dd	obj/kern/kernel.asm	/^f01068dd:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f01068e3	obj/kern/kernel.asm	/^f01068e3:	39 f1                	cmp    %esi,%ecx$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	7d 0e                	jge    f01068f5 <strtol+0xc1>$/;"	l
f01068e7	obj/kern/kernel.asm	/^f01068e7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01068ea	obj/kern/kernel.asm	/^f01068ea:	0f af c6             	imul   %esi,%eax$/;"	l
f01068ed	obj/kern/kernel.asm	/^f01068ed:	01 c8                	add    %ecx,%eax$/;"	l
f01068ef	obj/kern/kernel.asm	/^f01068ef:	eb c1                	jmp    f01068b2 <strtol+0x7e>$/;"	l
f01068f1	obj/kern/kernel.asm	/^f01068f1:	89 c1                	mov    %eax,%ecx$/;"	l
f01068f3	obj/kern/kernel.asm	/^f01068f3:	eb 02                	jmp    f01068f7 <strtol+0xc3>$/;"	l
f01068f5	obj/kern/kernel.asm	/^f01068f5:	89 c1                	mov    %eax,%ecx$/;"	l
f01068f7	obj/kern/kernel.asm	/^f01068f7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01068fb	obj/kern/kernel.asm	/^f01068fb:	74 05                	je     f0106902 <strtol+0xce>$/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106900	obj/kern/kernel.asm	/^f0106900:	89 13                	mov    %edx,(%ebx)$/;"	l
f0106902	obj/kern/kernel.asm	/^f0106902:	89 ca                	mov    %ecx,%edx$/;"	l
f0106904	obj/kern/kernel.asm	/^f0106904:	f7 da                	neg    %edx$/;"	l
f0106906	obj/kern/kernel.asm	/^f0106906:	85 ff                	test   %edi,%edi$/;"	l
f0106908	obj/kern/kernel.asm	/^f0106908:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f010690b	obj/kern/kernel.asm	/^f010690b:	5b                   	pop    %ebx$/;"	l
f010690c	obj/kern/kernel.asm	/^f010690c:	5e                   	pop    %esi$/;"	l
f010690d	obj/kern/kernel.asm	/^f010690d:	5f                   	pop    %edi$/;"	l
f010690e	obj/kern/kernel.asm	/^f010690e:	5d                   	pop    %ebp$/;"	l
f010690f	obj/kern/kernel.asm	/^f010690f:	c3                   	ret    $/;"	l
f0106910	obj/kern/kernel.asm	/^f0106910 <mpentry_start>:$/;"	l
f0106910	obj/kern/kernel.asm	/^f0106910:	fa                   	cli    $/;"	l
f0106911	obj/kern/kernel.asm	/^f0106911:	31 c0                	xor    %eax,%eax$/;"	l
f0106913	obj/kern/kernel.asm	/^f0106913:	8e d8                	mov    %eax,%ds$/;"	l
f0106915	obj/kern/kernel.asm	/^f0106915:	8e c0                	mov    %eax,%es$/;"	l
f0106917	obj/kern/kernel.asm	/^f0106917:	8e d0                	mov    %eax,%ss$/;"	l
f0106919	obj/kern/kernel.asm	/^f0106919:	0f 01 16             	lgdtl  (%esi)$/;"	l
f010691c	obj/kern/kernel.asm	/^f010691c:	74 70                	je     f010698e <mpentry_end+0x4>$/;"	l
f010691e	obj/kern/kernel.asm	/^f010691e:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106921	obj/kern/kernel.asm	/^f0106921:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0106925	obj/kern/kernel.asm	/^f0106925:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106928	obj/kern/kernel.asm	/^f0106928:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f010692e	obj/kern/kernel.asm	/^f010692e:	08 00                	or     %al,(%eax)$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930 <start32>:$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0106934	obj/kern/kernel.asm	/^f0106934:	8e d8                	mov    %eax,%ds$/;"	l
f0106936	obj/kern/kernel.asm	/^f0106936:	8e c0                	mov    %eax,%es$/;"	l
f0106938	obj/kern/kernel.asm	/^f0106938:	8e d0                	mov    %eax,%ss$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f010693e	obj/kern/kernel.asm	/^f010693e:	8e e0                	mov    %eax,%fs$/;"	l
f0106940	obj/kern/kernel.asm	/^f0106940:	8e e8                	mov    %eax,%gs$/;"	l
f0106942	obj/kern/kernel.asm	/^f0106942:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f0106947	obj/kern/kernel.asm	/^f0106947:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010694a	obj/kern/kernel.asm	/^f010694a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f010694d	obj/kern/kernel.asm	/^f010694d:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0106952	obj/kern/kernel.asm	/^f0106952:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106955	obj/kern/kernel.asm	/^f0106955:	8b 25 84 7e 20 f0    	mov    0xf0207e84,%esp$/;"	l
f010695b	obj/kern/kernel.asm	/^f010695b:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	b8 a8 00 10 f0       	mov    $0xf01000a8,%eax$/;"	l
f0106965	obj/kern/kernel.asm	/^f0106965:	ff d0                	call   *%eax$/;"	l
f0106967	obj/kern/kernel.asm	/^f0106967 <spin>:$/;"	l
f0106967	obj/kern/kernel.asm	/^f0106967:	eb fe                	jmp    f0106967 <spin>$/;"	l
f0106969	obj/kern/kernel.asm	/^f0106969:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f010696c	obj/kern/kernel.asm	/^f010696c <gdt>:$/;"	l
f0106974	obj/kern/kernel.asm	/^f0106974:	ff                   	(bad)  $/;"	l
f0106975	obj/kern/kernel.asm	/^f0106975:	ff 00                	incl   (%eax)$/;"	l
f0106977	obj/kern/kernel.asm	/^f0106977:	00 00                	add    %al,(%eax)$/;"	l
f0106979	obj/kern/kernel.asm	/^f0106979:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106980	obj/kern/kernel.asm	/^f0106980:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0106984	obj/kern/kernel.asm	/^f0106984 <gdtdesc>:$/;"	l
f0106984	obj/kern/kernel.asm	/^f0106984:	17                   	pop    %ss$/;"	l
f0106985	obj/kern/kernel.asm	/^f0106985:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f010698a	obj/kern/kernel.asm	/^f010698a <mpentry_end>:$/;"	l
f010698a	obj/kern/kernel.asm	/^f010698a:	90                   	nop$/;"	l
f010698b	obj/kern/kernel.asm	/^f010698b:	00 00                	add    %al,(%eax)$/;"	l
f010698d	obj/kern/kernel.asm	/^f010698d:	00 00                	add    %al,(%eax)$/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990 <sum>:$/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990:	55                   	push   %ebp$/;"	l
f0106991	obj/kern/kernel.asm	/^f0106991:	89 e5                	mov    %esp,%ebp$/;"	l
f0106993	obj/kern/kernel.asm	/^f0106993:	56                   	push   %esi$/;"	l
f0106994	obj/kern/kernel.asm	/^f0106994:	53                   	push   %ebx$/;"	l
f0106995	obj/kern/kernel.asm	/^f0106995:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010699a	obj/kern/kernel.asm	/^f010699a:	85 d2                	test   %edx,%edx$/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c:	7e 12                	jle    f01069b0 <sum+0x20>$/;"	l
f010699e	obj/kern/kernel.asm	/^f010699e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01069a3	obj/kern/kernel.asm	/^f01069a3:	0f b6 34 08          	movzbl (%eax,%ecx,1),%esi$/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7:	01 f3                	add    %esi,%ebx$/;"	l
f01069a9	obj/kern/kernel.asm	/^f01069a9:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01069ac	obj/kern/kernel.asm	/^f01069ac:	39 d1                	cmp    %edx,%ecx$/;"	l
f01069ae	obj/kern/kernel.asm	/^f01069ae:	75 f3                	jne    f01069a3 <sum+0x13>$/;"	l
f01069b0	obj/kern/kernel.asm	/^f01069b0:	89 d8                	mov    %ebx,%eax$/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	5b                   	pop    %ebx$/;"	l
f01069b3	obj/kern/kernel.asm	/^f01069b3:	5e                   	pop    %esi$/;"	l
f01069b4	obj/kern/kernel.asm	/^f01069b4:	5d                   	pop    %ebp$/;"	l
f01069b5	obj/kern/kernel.asm	/^f01069b5:	c3                   	ret    $/;"	l
f01069b6	obj/kern/kernel.asm	/^f01069b6 <mpsearch1>:$/;"	l
f01069b6	obj/kern/kernel.asm	/^f01069b6:	55                   	push   %ebp$/;"	l
f01069b7	obj/kern/kernel.asm	/^f01069b7:	89 e5                	mov    %esp,%ebp$/;"	l
f01069b9	obj/kern/kernel.asm	/^f01069b9:	56                   	push   %esi$/;"	l
f01069ba	obj/kern/kernel.asm	/^f01069ba:	53                   	push   %ebx$/;"	l
f01069bb	obj/kern/kernel.asm	/^f01069bb:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01069be	obj/kern/kernel.asm	/^f01069be:	8b 0d 88 7e 20 f0    	mov    0xf0207e88,%ecx$/;"	l
f01069c4	obj/kern/kernel.asm	/^f01069c4:	89 c3                	mov    %eax,%ebx$/;"	l
f01069c6	obj/kern/kernel.asm	/^f01069c6:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01069c9	obj/kern/kernel.asm	/^f01069c9:	39 cb                	cmp    %ecx,%ebx$/;"	l
f01069cb	obj/kern/kernel.asm	/^f01069cb:	72 20                	jb     f01069ed <mpsearch1+0x37>$/;"	l
f01069cd	obj/kern/kernel.asm	/^f01069cd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01069d1	obj/kern/kernel.asm	/^f01069d1:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	f0 $/;"	l
f01069d9	obj/kern/kernel.asm	/^f01069d9:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01069e0	obj/kern/kernel.asm	/^f01069e0:	00 $/;"	l
f01069e1	obj/kern/kernel.asm	/^f01069e1:	c7 04 24 5d 93 10 f0 	movl   $0xf010935d,(%esp)$/;"	l
f01069e8	obj/kern/kernel.asm	/^f01069e8:	e8 53 96 ff ff       	call   f0100040 <_panic>$/;"	l
f01069ed	obj/kern/kernel.asm	/^f01069ed:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f01069f0	obj/kern/kernel.asm	/^f01069f0:	89 f2                	mov    %esi,%edx$/;"	l
f01069f2	obj/kern/kernel.asm	/^f01069f2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01069f5	obj/kern/kernel.asm	/^f01069f5:	39 d1                	cmp    %edx,%ecx$/;"	l
f01069f7	obj/kern/kernel.asm	/^f01069f7:	77 20                	ja     f0106a19 <mpsearch1+0x63>$/;"	l
f01069f9	obj/kern/kernel.asm	/^f01069f9:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01069fd	obj/kern/kernel.asm	/^f01069fd:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0106a04	obj/kern/kernel.asm	/^f0106a04:	f0 $/;"	l
f0106a05	obj/kern/kernel.asm	/^f0106a05:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0106a0c	obj/kern/kernel.asm	/^f0106a0c:	00 $/;"	l
f0106a0d	obj/kern/kernel.asm	/^f0106a0d:	c7 04 24 5d 93 10 f0 	movl   $0xf010935d,(%esp)$/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	e8 27 96 ff ff       	call   f0100040 <_panic>$/;"	l
f0106a19	obj/kern/kernel.asm	/^f0106a19:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f0106a25	obj/kern/kernel.asm	/^f0106a25:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106a27	obj/kern/kernel.asm	/^f0106a27:	73 3a                	jae    f0106a63 <mpsearch1+0xad>$/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106a30	obj/kern/kernel.asm	/^f0106a30:	00 $/;"	l
f0106a31	obj/kern/kernel.asm	/^f0106a31:	c7 44 24 04 6d 93 10 	movl   $0xf010936d,0x4(%esp)$/;"	l
f0106a38	obj/kern/kernel.asm	/^f0106a38:	f0 $/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106a3c	obj/kern/kernel.asm	/^f0106a3c:	e8 75 fd ff ff       	call   f01067b6 <memcmp>$/;"	l
f0106a41	obj/kern/kernel.asm	/^f0106a41:	85 c0                	test   %eax,%eax$/;"	l
f0106a43	obj/kern/kernel.asm	/^f0106a43:	75 10                	jne    f0106a55 <mpsearch1+0x9f>$/;"	l
f0106a45	obj/kern/kernel.asm	/^f0106a45:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f0106a4a	obj/kern/kernel.asm	/^f0106a4a:	89 d8                	mov    %ebx,%eax$/;"	l
f0106a4c	obj/kern/kernel.asm	/^f0106a4c:	e8 3f ff ff ff       	call   f0106990 <sum>$/;"	l
f0106a51	obj/kern/kernel.asm	/^f0106a51:	84 c0                	test   %al,%al$/;"	l
f0106a53	obj/kern/kernel.asm	/^f0106a53:	74 13                	je     f0106a68 <mpsearch1+0xb2>$/;"	l
f0106a55	obj/kern/kernel.asm	/^f0106a55:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106a58	obj/kern/kernel.asm	/^f0106a58:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106a5a	obj/kern/kernel.asm	/^f0106a5a:	72 cd                	jb     f0106a29 <mpsearch1+0x73>$/;"	l
f0106a5c	obj/kern/kernel.asm	/^f0106a5c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106a61	obj/kern/kernel.asm	/^f0106a61:	eb 05                	jmp    f0106a68 <mpsearch1+0xb2>$/;"	l
f0106a63	obj/kern/kernel.asm	/^f0106a63:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106a68	obj/kern/kernel.asm	/^f0106a68:	89 d8                	mov    %ebx,%eax$/;"	l
f0106a6a	obj/kern/kernel.asm	/^f0106a6a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d:	5b                   	pop    %ebx$/;"	l
f0106a6e	obj/kern/kernel.asm	/^f0106a6e:	5e                   	pop    %esi$/;"	l
f0106a6f	obj/kern/kernel.asm	/^f0106a6f:	5d                   	pop    %ebp$/;"	l
f0106a70	obj/kern/kernel.asm	/^f0106a70:	c3                   	ret    $/;"	l
f0106a71	obj/kern/kernel.asm	/^f0106a71 <mp_init>:$/;"	l
f0106a71	obj/kern/kernel.asm	/^f0106a71:	55                   	push   %ebp$/;"	l
f0106a72	obj/kern/kernel.asm	/^f0106a72:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a74	obj/kern/kernel.asm	/^f0106a74:	57                   	push   %edi$/;"	l
f0106a75	obj/kern/kernel.asm	/^f0106a75:	56                   	push   %esi$/;"	l
f0106a76	obj/kern/kernel.asm	/^f0106a76:	53                   	push   %ebx$/;"	l
f0106a77	obj/kern/kernel.asm	/^f0106a77:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106a7a	obj/kern/kernel.asm	/^f0106a7a:	c7 05 c0 83 20 f0 20 	movl   $0xf0208020,0xf02083c0$/;"	l
f0106a81	obj/kern/kernel.asm	/^f0106a81:	80 20 f0 $/;"	l
f0106a84	obj/kern/kernel.asm	/^f0106a84:	83 3d 88 7e 20 f0 00 	cmpl   $0x0,0xf0207e88$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	75 24                	jne    f0106ab1 <mp_init+0x40>$/;"	l
f0106a8d	obj/kern/kernel.asm	/^f0106a8d:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0106a94	obj/kern/kernel.asm	/^f0106a94:	00 $/;"	l
f0106a95	obj/kern/kernel.asm	/^f0106a95:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0106a9c	obj/kern/kernel.asm	/^f0106a9c:	f0 $/;"	l
f0106a9d	obj/kern/kernel.asm	/^f0106a9d:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0106aa4	obj/kern/kernel.asm	/^f0106aa4:	00 $/;"	l
f0106aa5	obj/kern/kernel.asm	/^f0106aa5:	c7 04 24 5d 93 10 f0 	movl   $0xf010935d,(%esp)$/;"	l
f0106aac	obj/kern/kernel.asm	/^f0106aac:	e8 8f 95 ff ff       	call   f0100040 <_panic>$/;"	l
f0106ab1	obj/kern/kernel.asm	/^f0106ab1:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106ab8	obj/kern/kernel.asm	/^f0106ab8:	85 c0                	test   %eax,%eax$/;"	l
f0106aba	obj/kern/kernel.asm	/^f0106aba:	74 16                	je     f0106ad2 <mp_init+0x61>$/;"	l
f0106abc	obj/kern/kernel.asm	/^f0106abc:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106abf	obj/kern/kernel.asm	/^f0106abf:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106ac4	obj/kern/kernel.asm	/^f0106ac4:	e8 ed fe ff ff       	call   f01069b6 <mpsearch1>$/;"	l
f0106ac9	obj/kern/kernel.asm	/^f0106ac9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106acc	obj/kern/kernel.asm	/^f0106acc:	85 c0                	test   %eax,%eax$/;"	l
f0106ace	obj/kern/kernel.asm	/^f0106ace:	75 3c                	jne    f0106b0c <mp_init+0x9b>$/;"	l
f0106ad0	obj/kern/kernel.asm	/^f0106ad0:	eb 20                	jmp    f0106af2 <mp_init+0x81>$/;"	l
f0106ad2	obj/kern/kernel.asm	/^f0106ad2:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0106ad9	obj/kern/kernel.asm	/^f0106ad9:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0106adc	obj/kern/kernel.asm	/^f0106adc:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0106ae1	obj/kern/kernel.asm	/^f0106ae1:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106ae6	obj/kern/kernel.asm	/^f0106ae6:	e8 cb fe ff ff       	call   f01069b6 <mpsearch1>$/;"	l
f0106aeb	obj/kern/kernel.asm	/^f0106aeb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106aee	obj/kern/kernel.asm	/^f0106aee:	85 c0                	test   %eax,%eax$/;"	l
f0106af0	obj/kern/kernel.asm	/^f0106af0:	75 1a                	jne    f0106b0c <mp_init+0x9b>$/;"	l
f0106af2	obj/kern/kernel.asm	/^f0106af2:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106af7	obj/kern/kernel.asm	/^f0106af7:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106afc	obj/kern/kernel.asm	/^f0106afc:	e8 b5 fe ff ff       	call   f01069b6 <mpsearch1>$/;"	l
f0106b01	obj/kern/kernel.asm	/^f0106b01:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106b04	obj/kern/kernel.asm	/^f0106b04:	85 c0                	test   %eax,%eax$/;"	l
f0106b06	obj/kern/kernel.asm	/^f0106b06:	0f 84 24 02 00 00    	je     f0106d30 <mp_init+0x2bf>$/;"	l
f0106b0c	obj/kern/kernel.asm	/^f0106b0c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106b0f	obj/kern/kernel.asm	/^f0106b0f:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0106b12	obj/kern/kernel.asm	/^f0106b12:	85 ff                	test   %edi,%edi$/;"	l
f0106b14	obj/kern/kernel.asm	/^f0106b14:	74 06                	je     f0106b1c <mp_init+0xab>$/;"	l
f0106b16	obj/kern/kernel.asm	/^f0106b16:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106b1a	obj/kern/kernel.asm	/^f0106b1a:	74 11                	je     f0106b2d <mp_init+0xbc>$/;"	l
f0106b1c	obj/kern/kernel.asm	/^f0106b1c:	c7 04 24 d0 91 10 f0 	movl   $0xf01091d0,(%esp)$/;"	l
f0106b23	obj/kern/kernel.asm	/^f0106b23:	e8 66 dc ff ff       	call   f010478e <cprintf>$/;"	l
f0106b28	obj/kern/kernel.asm	/^f0106b28:	e9 03 02 00 00       	jmp    f0106d30 <mp_init+0x2bf>$/;"	l
f0106b2d	obj/kern/kernel.asm	/^f0106b2d:	89 f8                	mov    %edi,%eax$/;"	l
f0106b2f	obj/kern/kernel.asm	/^f0106b2f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0106b32	obj/kern/kernel.asm	/^f0106b32:	3b 05 88 7e 20 f0    	cmp    0xf0207e88,%eax$/;"	l
f0106b38	obj/kern/kernel.asm	/^f0106b38:	72 20                	jb     f0106b5a <mp_init+0xe9>$/;"	l
f0106b3a	obj/kern/kernel.asm	/^f0106b3a:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106b3e	obj/kern/kernel.asm	/^f0106b3e:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0106b45	obj/kern/kernel.asm	/^f0106b45:	f0 $/;"	l
f0106b46	obj/kern/kernel.asm	/^f0106b46:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0106b4d	obj/kern/kernel.asm	/^f0106b4d:	00 $/;"	l
f0106b4e	obj/kern/kernel.asm	/^f0106b4e:	c7 04 24 5d 93 10 f0 	movl   $0xf010935d,(%esp)$/;"	l
f0106b55	obj/kern/kernel.asm	/^f0106b55:	e8 e6 94 ff ff       	call   f0100040 <_panic>$/;"	l
f0106b5a	obj/kern/kernel.asm	/^f0106b5a:	81 ef 00 00 00 10    	sub    $0x10000000,%edi$/;"	l
f0106b60	obj/kern/kernel.asm	/^f0106b60:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106b67	obj/kern/kernel.asm	/^f0106b67:	00 $/;"	l
f0106b68	obj/kern/kernel.asm	/^f0106b68:	c7 44 24 04 72 93 10 	movl   $0xf0109372,0x4(%esp)$/;"	l
f0106b6f	obj/kern/kernel.asm	/^f0106b6f:	f0 $/;"	l
f0106b70	obj/kern/kernel.asm	/^f0106b70:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106b73	obj/kern/kernel.asm	/^f0106b73:	e8 3e fc ff ff       	call   f01067b6 <memcmp>$/;"	l
f0106b78	obj/kern/kernel.asm	/^f0106b78:	85 c0                	test   %eax,%eax$/;"	l
f0106b7a	obj/kern/kernel.asm	/^f0106b7a:	74 11                	je     f0106b8d <mp_init+0x11c>$/;"	l
f0106b7c	obj/kern/kernel.asm	/^f0106b7c:	c7 04 24 00 92 10 f0 	movl   $0xf0109200,(%esp)$/;"	l
f0106b83	obj/kern/kernel.asm	/^f0106b83:	e8 06 dc ff ff       	call   f010478e <cprintf>$/;"	l
f0106b88	obj/kern/kernel.asm	/^f0106b88:	e9 a3 01 00 00       	jmp    f0106d30 <mp_init+0x2bf>$/;"	l
f0106b8d	obj/kern/kernel.asm	/^f0106b8d:	0f b7 5f 04          	movzwl 0x4(%edi),%ebx$/;"	l
f0106b91	obj/kern/kernel.asm	/^f0106b91:	0f b7 d3             	movzwl %bx,%edx$/;"	l
f0106b94	obj/kern/kernel.asm	/^f0106b94:	89 f8                	mov    %edi,%eax$/;"	l
f0106b96	obj/kern/kernel.asm	/^f0106b96:	e8 f5 fd ff ff       	call   f0106990 <sum>$/;"	l
f0106b9b	obj/kern/kernel.asm	/^f0106b9b:	84 c0                	test   %al,%al$/;"	l
f0106b9d	obj/kern/kernel.asm	/^f0106b9d:	74 11                	je     f0106bb0 <mp_init+0x13f>$/;"	l
f0106b9f	obj/kern/kernel.asm	/^f0106b9f:	c7 04 24 34 92 10 f0 	movl   $0xf0109234,(%esp)$/;"	l
f0106ba6	obj/kern/kernel.asm	/^f0106ba6:	e8 e3 db ff ff       	call   f010478e <cprintf>$/;"	l
f0106bab	obj/kern/kernel.asm	/^f0106bab:	e9 80 01 00 00       	jmp    f0106d30 <mp_init+0x2bf>$/;"	l
f0106bb0	obj/kern/kernel.asm	/^f0106bb0:	0f b6 47 06          	movzbl 0x6(%edi),%eax$/;"	l
f0106bb4	obj/kern/kernel.asm	/^f0106bb4:	3c 01                	cmp    $0x1,%al$/;"	l
f0106bb6	obj/kern/kernel.asm	/^f0106bb6:	74 1c                	je     f0106bd4 <mp_init+0x163>$/;"	l
f0106bb8	obj/kern/kernel.asm	/^f0106bb8:	3c 04                	cmp    $0x4,%al$/;"	l
f0106bba	obj/kern/kernel.asm	/^f0106bba:	74 18                	je     f0106bd4 <mp_init+0x163>$/;"	l
f0106bbc	obj/kern/kernel.asm	/^f0106bbc:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106bbf	obj/kern/kernel.asm	/^f0106bbf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106bc3	obj/kern/kernel.asm	/^f0106bc3:	c7 04 24 58 92 10 f0 	movl   $0xf0109258,(%esp)$/;"	l
f0106bca	obj/kern/kernel.asm	/^f0106bca:	e8 bf db ff ff       	call   f010478e <cprintf>$/;"	l
f0106bcf	obj/kern/kernel.asm	/^f0106bcf:	e9 5c 01 00 00       	jmp    f0106d30 <mp_init+0x2bf>$/;"	l
f0106bd4	obj/kern/kernel.asm	/^f0106bd4:	0f b7 57 28          	movzwl 0x28(%edi),%edx$/;"	l
f0106bd8	obj/kern/kernel.asm	/^f0106bd8:	0f b7 db             	movzwl %bx,%ebx$/;"	l
f0106bdb	obj/kern/kernel.asm	/^f0106bdb:	8d 04 1f             	lea    (%edi,%ebx,1),%eax$/;"	l
f0106bde	obj/kern/kernel.asm	/^f0106bde:	e8 ad fd ff ff       	call   f0106990 <sum>$/;"	l
f0106be3	obj/kern/kernel.asm	/^f0106be3:	3a 47 2a             	cmp    0x2a(%edi),%al$/;"	l
f0106be6	obj/kern/kernel.asm	/^f0106be6:	74 11                	je     f0106bf9 <mp_init+0x188>$/;"	l
f0106be8	obj/kern/kernel.asm	/^f0106be8:	c7 04 24 78 92 10 f0 	movl   $0xf0109278,(%esp)$/;"	l
f0106bef	obj/kern/kernel.asm	/^f0106bef:	e8 9a db ff ff       	call   f010478e <cprintf>$/;"	l
f0106bf4	obj/kern/kernel.asm	/^f0106bf4:	e9 37 01 00 00       	jmp    f0106d30 <mp_init+0x2bf>$/;"	l
f0106bf9	obj/kern/kernel.asm	/^f0106bf9:	85 ff                	test   %edi,%edi$/;"	l
f0106bfb	obj/kern/kernel.asm	/^f0106bfb:	0f 84 2f 01 00 00    	je     f0106d30 <mp_init+0x2bf>$/;"	l
f0106c01	obj/kern/kernel.asm	/^f0106c01:	c7 05 00 80 20 f0 01 	movl   $0x1,0xf0208000$/;"	l
f0106c08	obj/kern/kernel.asm	/^f0106c08:	00 00 00 $/;"	l
f0106c0b	obj/kern/kernel.asm	/^f0106c0b:	8b 47 24             	mov    0x24(%edi),%eax$/;"	l
f0106c0e	obj/kern/kernel.asm	/^f0106c0e:	a3 00 90 24 f0       	mov    %eax,0xf0249000$/;"	l
f0106c13	obj/kern/kernel.asm	/^f0106c13:	66 83 7f 22 00       	cmpw   $0x0,0x22(%edi)$/;"	l
f0106c18	obj/kern/kernel.asm	/^f0106c18:	0f 84 97 00 00 00    	je     f0106cb5 <mp_init+0x244>$/;"	l
f0106c1e	obj/kern/kernel.asm	/^f0106c1e:	8d 77 2c             	lea    0x2c(%edi),%esi$/;"	l
f0106c21	obj/kern/kernel.asm	/^f0106c21:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106c26	obj/kern/kernel.asm	/^f0106c26:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0106c29	obj/kern/kernel.asm	/^f0106c29:	84 c0                	test   %al,%al$/;"	l
f0106c2b	obj/kern/kernel.asm	/^f0106c2b:	74 06                	je     f0106c33 <mp_init+0x1c2>$/;"	l
f0106c2d	obj/kern/kernel.asm	/^f0106c2d:	3c 04                	cmp    $0x4,%al$/;"	l
f0106c2f	obj/kern/kernel.asm	/^f0106c2f:	77 54                	ja     f0106c85 <mp_init+0x214>$/;"	l
f0106c31	obj/kern/kernel.asm	/^f0106c31:	eb 4d                	jmp    f0106c80 <mp_init+0x20f>$/;"	l
f0106c33	obj/kern/kernel.asm	/^f0106c33:	f6 46 03 02          	testb  $0x2,0x3(%esi)$/;"	l
f0106c37	obj/kern/kernel.asm	/^f0106c37:	74 11                	je     f0106c4a <mp_init+0x1d9>$/;"	l
f0106c39	obj/kern/kernel.asm	/^f0106c39:	6b 05 c4 83 20 f0 74 	imul   $0x74,0xf02083c4,%eax$/;"	l
f0106c40	obj/kern/kernel.asm	/^f0106c40:	05 20 80 20 f0       	add    $0xf0208020,%eax$/;"	l
f0106c45	obj/kern/kernel.asm	/^f0106c45:	a3 c0 83 20 f0       	mov    %eax,0xf02083c0$/;"	l
f0106c4a	obj/kern/kernel.asm	/^f0106c4a:	a1 c4 83 20 f0       	mov    0xf02083c4,%eax$/;"	l
f0106c4f	obj/kern/kernel.asm	/^f0106c4f:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106c52	obj/kern/kernel.asm	/^f0106c52:	7f 13                	jg     f0106c67 <mp_init+0x1f6>$/;"	l
f0106c54	obj/kern/kernel.asm	/^f0106c54:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0106c57	obj/kern/kernel.asm	/^f0106c57:	88 82 20 80 20 f0    	mov    %al,-0xfdf7fe0(%edx)$/;"	l
f0106c5d	obj/kern/kernel.asm	/^f0106c5d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106c60	obj/kern/kernel.asm	/^f0106c60:	a3 c4 83 20 f0       	mov    %eax,0xf02083c4$/;"	l
f0106c65	obj/kern/kernel.asm	/^f0106c65:	eb 14                	jmp    f0106c7b <mp_init+0x20a>$/;"	l
f0106c67	obj/kern/kernel.asm	/^f0106c67:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f0106c6b	obj/kern/kernel.asm	/^f0106c6b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106c6f	obj/kern/kernel.asm	/^f0106c6f:	c7 04 24 a8 92 10 f0 	movl   $0xf01092a8,(%esp)$/;"	l
f0106c76	obj/kern/kernel.asm	/^f0106c76:	e8 13 db ff ff       	call   f010478e <cprintf>$/;"	l
f0106c7b	obj/kern/kernel.asm	/^f0106c7b:	83 c6 14             	add    $0x14,%esi$/;"	l
f0106c7e	obj/kern/kernel.asm	/^f0106c7e:	eb 26                	jmp    f0106ca6 <mp_init+0x235>$/;"	l
f0106c80	obj/kern/kernel.asm	/^f0106c80:	83 c6 08             	add    $0x8,%esi$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	eb 21                	jmp    f0106ca6 <mp_init+0x235>$/;"	l
f0106c85	obj/kern/kernel.asm	/^f0106c85:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106c88	obj/kern/kernel.asm	/^f0106c88:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106c8c	obj/kern/kernel.asm	/^f0106c8c:	c7 04 24 d0 92 10 f0 	movl   $0xf01092d0,(%esp)$/;"	l
f0106c93	obj/kern/kernel.asm	/^f0106c93:	e8 f6 da ff ff       	call   f010478e <cprintf>$/;"	l
f0106c98	obj/kern/kernel.asm	/^f0106c98:	c7 05 00 80 20 f0 00 	movl   $0x0,0xf0208000$/;"	l
f0106c9f	obj/kern/kernel.asm	/^f0106c9f:	00 00 00 $/;"	l
f0106ca2	obj/kern/kernel.asm	/^f0106ca2:	0f b7 5f 22          	movzwl 0x22(%edi),%ebx$/;"	l
f0106ca6	obj/kern/kernel.asm	/^f0106ca6:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106ca9	obj/kern/kernel.asm	/^f0106ca9:	0f b7 47 22          	movzwl 0x22(%edi),%eax$/;"	l
f0106cad	obj/kern/kernel.asm	/^f0106cad:	39 d8                	cmp    %ebx,%eax$/;"	l
f0106caf	obj/kern/kernel.asm	/^f0106caf:	0f 87 71 ff ff ff    	ja     f0106c26 <mp_init+0x1b5>$/;"	l
f0106cb5	obj/kern/kernel.asm	/^f0106cb5:	a1 c0 83 20 f0       	mov    0xf02083c0,%eax$/;"	l
f0106cba	obj/kern/kernel.asm	/^f0106cba:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106cc1	obj/kern/kernel.asm	/^f0106cc1:	83 3d 00 80 20 f0 00 	cmpl   $0x0,0xf0208000$/;"	l
f0106cc8	obj/kern/kernel.asm	/^f0106cc8:	75 22                	jne    f0106cec <mp_init+0x27b>$/;"	l
f0106cca	obj/kern/kernel.asm	/^f0106cca:	c7 05 c4 83 20 f0 01 	movl   $0x1,0xf02083c4$/;"	l
f0106cd1	obj/kern/kernel.asm	/^f0106cd1:	00 00 00 $/;"	l
f0106cd4	obj/kern/kernel.asm	/^f0106cd4:	c7 05 00 90 24 f0 00 	movl   $0x0,0xf0249000$/;"	l
f0106cdb	obj/kern/kernel.asm	/^f0106cdb:	00 00 00 $/;"	l
f0106cde	obj/kern/kernel.asm	/^f0106cde:	c7 04 24 f0 92 10 f0 	movl   $0xf01092f0,(%esp)$/;"	l
f0106ce5	obj/kern/kernel.asm	/^f0106ce5:	e8 a4 da ff ff       	call   f010478e <cprintf>$/;"	l
f0106cea	obj/kern/kernel.asm	/^f0106cea:	eb 44                	jmp    f0106d30 <mp_init+0x2bf>$/;"	l
f0106cec	obj/kern/kernel.asm	/^f0106cec:	8b 15 c4 83 20 f0    	mov    0xf02083c4,%edx$/;"	l
f0106cf2	obj/kern/kernel.asm	/^f0106cf2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106cf9	obj/kern/kernel.asm	/^f0106cf9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106cfd	obj/kern/kernel.asm	/^f0106cfd:	c7 04 24 77 93 10 f0 	movl   $0xf0109377,(%esp)$/;"	l
f0106d04	obj/kern/kernel.asm	/^f0106d04:	e8 85 da ff ff       	call   f010478e <cprintf>$/;"	l
f0106d09	obj/kern/kernel.asm	/^f0106d09:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106d0c	obj/kern/kernel.asm	/^f0106d0c:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106d10	obj/kern/kernel.asm	/^f0106d10:	74 1e                	je     f0106d30 <mp_init+0x2bf>$/;"	l
f0106d12	obj/kern/kernel.asm	/^f0106d12:	c7 04 24 1c 93 10 f0 	movl   $0xf010931c,(%esp)$/;"	l
f0106d19	obj/kern/kernel.asm	/^f0106d19:	e8 70 da ff ff       	call   f010478e <cprintf>$/;"	l
f0106d1e	obj/kern/kernel.asm	/^f0106d1e:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0106d23	obj/kern/kernel.asm	/^f0106d23:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106d28	obj/kern/kernel.asm	/^f0106d28:	ee                   	out    %al,(%dx)$/;"	l
f0106d29	obj/kern/kernel.asm	/^f0106d29:	b2 23                	mov    $0x23,%dl$/;"	l
f0106d2b	obj/kern/kernel.asm	/^f0106d2b:	ec                   	in     (%dx),%al$/;"	l
f0106d2c	obj/kern/kernel.asm	/^f0106d2c:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106d2f	obj/kern/kernel.asm	/^f0106d2f:	ee                   	out    %al,(%dx)$/;"	l
f0106d30	obj/kern/kernel.asm	/^f0106d30:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106d33	obj/kern/kernel.asm	/^f0106d33:	5b                   	pop    %ebx$/;"	l
f0106d34	obj/kern/kernel.asm	/^f0106d34:	5e                   	pop    %esi$/;"	l
f0106d35	obj/kern/kernel.asm	/^f0106d35:	5f                   	pop    %edi$/;"	l
f0106d36	obj/kern/kernel.asm	/^f0106d36:	5d                   	pop    %ebp$/;"	l
f0106d37	obj/kern/kernel.asm	/^f0106d37:	c3                   	ret    $/;"	l
f0106d38	obj/kern/kernel.asm	/^f0106d38 <lapicw>:$/;"	l
f0106d38	obj/kern/kernel.asm	/^f0106d38:	55                   	push   %ebp$/;"	l
f0106d39	obj/kern/kernel.asm	/^f0106d39:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d3b	obj/kern/kernel.asm	/^f0106d3b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106d3e	obj/kern/kernel.asm	/^f0106d3e:	03 05 04 90 24 f0    	add    0xf0249004,%eax$/;"	l
f0106d44	obj/kern/kernel.asm	/^f0106d44:	89 10                	mov    %edx,(%eax)$/;"	l
f0106d46	obj/kern/kernel.asm	/^f0106d46:	a1 04 90 24 f0       	mov    0xf0249004,%eax$/;"	l
f0106d4b	obj/kern/kernel.asm	/^f0106d4b:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106d4e	obj/kern/kernel.asm	/^f0106d4e:	5d                   	pop    %ebp$/;"	l
f0106d4f	obj/kern/kernel.asm	/^f0106d4f:	c3                   	ret    $/;"	l
f0106d50	obj/kern/kernel.asm	/^f0106d50 <cpunum>:$/;"	l
f0106d50	obj/kern/kernel.asm	/^f0106d50:	55                   	push   %ebp$/;"	l
f0106d51	obj/kern/kernel.asm	/^f0106d51:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d53	obj/kern/kernel.asm	/^f0106d53:	8b 15 04 90 24 f0    	mov    0xf0249004,%edx$/;"	l
f0106d59	obj/kern/kernel.asm	/^f0106d59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106d5e	obj/kern/kernel.asm	/^f0106d5e:	85 d2                	test   %edx,%edx$/;"	l
f0106d60	obj/kern/kernel.asm	/^f0106d60:	74 06                	je     f0106d68 <cpunum+0x18>$/;"	l
f0106d62	obj/kern/kernel.asm	/^f0106d62:	8b 42 20             	mov    0x20(%edx),%eax$/;"	l
f0106d65	obj/kern/kernel.asm	/^f0106d65:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106d68	obj/kern/kernel.asm	/^f0106d68:	5d                   	pop    %ebp$/;"	l
f0106d69	obj/kern/kernel.asm	/^f0106d69:	c3                   	ret    $/;"	l
f0106d6a	obj/kern/kernel.asm	/^f0106d6a <lapic_init>:$/;"	l
f0106d6a	obj/kern/kernel.asm	/^f0106d6a:	55                   	push   %ebp$/;"	l
f0106d6b	obj/kern/kernel.asm	/^f0106d6b:	89 e5                	mov    %esp,%ebp$/;"	l
f0106d6d	obj/kern/kernel.asm	/^f0106d6d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106d70	obj/kern/kernel.asm	/^f0106d70:	a1 00 90 24 f0       	mov    0xf0249000,%eax$/;"	l
f0106d75	obj/kern/kernel.asm	/^f0106d75:	85 c0                	test   %eax,%eax$/;"	l
f0106d77	obj/kern/kernel.asm	/^f0106d77:	0f 84 1c 01 00 00    	je     f0106e99 <lapic_init+0x12f>$/;"	l
f0106d7d	obj/kern/kernel.asm	/^f0106d7d:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0106d84	obj/kern/kernel.asm	/^f0106d84:	00 $/;"	l
f0106d85	obj/kern/kernel.asm	/^f0106d85:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106d88	obj/kern/kernel.asm	/^f0106d88:	e8 12 af ff ff       	call   f0101c9f <mmio_map_region>$/;"	l
f0106d8d	obj/kern/kernel.asm	/^f0106d8d:	a3 04 90 24 f0       	mov    %eax,0xf0249004$/;"	l
f0106d92	obj/kern/kernel.asm	/^f0106d92:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0106d97	obj/kern/kernel.asm	/^f0106d97:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0106d9c	obj/kern/kernel.asm	/^f0106d9c:	e8 97 ff ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106da1	obj/kern/kernel.asm	/^f0106da1:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0106da6	obj/kern/kernel.asm	/^f0106da6:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0106dab	obj/kern/kernel.asm	/^f0106dab:	e8 88 ff ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106db0	obj/kern/kernel.asm	/^f0106db0:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0106db5	obj/kern/kernel.asm	/^f0106db5:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0106dba	obj/kern/kernel.asm	/^f0106dba:	e8 79 ff ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106dbf	obj/kern/kernel.asm	/^f0106dbf:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0106dc4	obj/kern/kernel.asm	/^f0106dc4:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106dc9	obj/kern/kernel.asm	/^f0106dc9:	e8 6a ff ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106dce	obj/kern/kernel.asm	/^f0106dce:	e8 7d ff ff ff       	call   f0106d50 <cpunum>$/;"	l
f0106dd3	obj/kern/kernel.asm	/^f0106dd3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106dd6	obj/kern/kernel.asm	/^f0106dd6:	05 20 80 20 f0       	add    $0xf0208020,%eax$/;"	l
f0106ddb	obj/kern/kernel.asm	/^f0106ddb:	39 05 c0 83 20 f0    	cmp    %eax,0xf02083c0$/;"	l
f0106de1	obj/kern/kernel.asm	/^f0106de1:	74 0f                	je     f0106df2 <lapic_init+0x88>$/;"	l
f0106de3	obj/kern/kernel.asm	/^f0106de3:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106de8	obj/kern/kernel.asm	/^f0106de8:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f0106ded	obj/kern/kernel.asm	/^f0106ded:	e8 46 ff ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106df2	obj/kern/kernel.asm	/^f0106df2:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106df7	obj/kern/kernel.asm	/^f0106df7:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0106dfc	obj/kern/kernel.asm	/^f0106dfc:	e8 37 ff ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106e01	obj/kern/kernel.asm	/^f0106e01:	a1 04 90 24 f0       	mov    0xf0249004,%eax$/;"	l
f0106e06	obj/kern/kernel.asm	/^f0106e06:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f0106e09	obj/kern/kernel.asm	/^f0106e09:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0106e0c	obj/kern/kernel.asm	/^f0106e0c:	3c 03                	cmp    $0x3,%al$/;"	l
f0106e0e	obj/kern/kernel.asm	/^f0106e0e:	76 0f                	jbe    f0106e1f <lapic_init+0xb5>$/;"	l
f0106e10	obj/kern/kernel.asm	/^f0106e10:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106e15	obj/kern/kernel.asm	/^f0106e15:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f0106e1a	obj/kern/kernel.asm	/^f0106e1a:	e8 19 ff ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106e1f	obj/kern/kernel.asm	/^f0106e1f:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f0106e24	obj/kern/kernel.asm	/^f0106e24:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f0106e29	obj/kern/kernel.asm	/^f0106e29:	e8 0a ff ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106e2e	obj/kern/kernel.asm	/^f0106e2e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e33	obj/kern/kernel.asm	/^f0106e33:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106e38	obj/kern/kernel.asm	/^f0106e38:	e8 fb fe ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106e3d	obj/kern/kernel.asm	/^f0106e3d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e42	obj/kern/kernel.asm	/^f0106e42:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106e47	obj/kern/kernel.asm	/^f0106e47:	e8 ec fe ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106e4c	obj/kern/kernel.asm	/^f0106e4c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e51	obj/kern/kernel.asm	/^f0106e51:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106e56	obj/kern/kernel.asm	/^f0106e56:	e8 dd fe ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106e5b	obj/kern/kernel.asm	/^f0106e5b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e60	obj/kern/kernel.asm	/^f0106e60:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106e65	obj/kern/kernel.asm	/^f0106e65:	e8 ce fe ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106e6a	obj/kern/kernel.asm	/^f0106e6a:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f0106e6f	obj/kern/kernel.asm	/^f0106e6f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106e74	obj/kern/kernel.asm	/^f0106e74:	e8 bf fe ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106e79	obj/kern/kernel.asm	/^f0106e79:	8b 15 04 90 24 f0    	mov    0xf0249004,%edx$/;"	l
f0106e7f	obj/kern/kernel.asm	/^f0106e7f:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106e85	obj/kern/kernel.asm	/^f0106e85:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106e88	obj/kern/kernel.asm	/^f0106e88:	75 f5                	jne    f0106e7f <lapic_init+0x115>$/;"	l
f0106e8a	obj/kern/kernel.asm	/^f0106e8a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e8f	obj/kern/kernel.asm	/^f0106e8f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106e94	obj/kern/kernel.asm	/^f0106e94:	e8 9f fe ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106e99	obj/kern/kernel.asm	/^f0106e99:	c9                   	leave  $/;"	l
f0106e9a	obj/kern/kernel.asm	/^f0106e9a:	c3                   	ret    $/;"	l
f0106e9b	obj/kern/kernel.asm	/^f0106e9b <lapic_eoi>:$/;"	l
f0106e9b	obj/kern/kernel.asm	/^f0106e9b:	55                   	push   %ebp$/;"	l
f0106e9c	obj/kern/kernel.asm	/^f0106e9c:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e9e	obj/kern/kernel.asm	/^f0106e9e:	83 3d 04 90 24 f0 00 	cmpl   $0x0,0xf0249004$/;"	l
f0106ea5	obj/kern/kernel.asm	/^f0106ea5:	74 0f                	je     f0106eb6 <lapic_eoi+0x1b>$/;"	l
f0106ea7	obj/kern/kernel.asm	/^f0106ea7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106eac	obj/kern/kernel.asm	/^f0106eac:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106eb1	obj/kern/kernel.asm	/^f0106eb1:	e8 82 fe ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106eb6	obj/kern/kernel.asm	/^f0106eb6:	5d                   	pop    %ebp$/;"	l
f0106eb7	obj/kern/kernel.asm	/^f0106eb7:	c3                   	ret    $/;"	l
f0106eb8	obj/kern/kernel.asm	/^f0106eb8 <lapic_startap>:$/;"	l
f0106eb8	obj/kern/kernel.asm	/^f0106eb8:	55                   	push   %ebp$/;"	l
f0106eb9	obj/kern/kernel.asm	/^f0106eb9:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ebb	obj/kern/kernel.asm	/^f0106ebb:	56                   	push   %esi$/;"	l
f0106ebc	obj/kern/kernel.asm	/^f0106ebc:	53                   	push   %ebx$/;"	l
f0106ebd	obj/kern/kernel.asm	/^f0106ebd:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106ec0	obj/kern/kernel.asm	/^f0106ec0:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106ec3	obj/kern/kernel.asm	/^f0106ec3:	0f b6 5d 08          	movzbl 0x8(%ebp),%ebx$/;"	l
f0106ec7	obj/kern/kernel.asm	/^f0106ec7:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0106ecc	obj/kern/kernel.asm	/^f0106ecc:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0106ed1	obj/kern/kernel.asm	/^f0106ed1:	ee                   	out    %al,(%dx)$/;"	l
f0106ed2	obj/kern/kernel.asm	/^f0106ed2:	b2 71                	mov    $0x71,%dl$/;"	l
f0106ed4	obj/kern/kernel.asm	/^f0106ed4:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0106ed9	obj/kern/kernel.asm	/^f0106ed9:	ee                   	out    %al,(%dx)$/;"	l
f0106eda	obj/kern/kernel.asm	/^f0106eda:	83 3d 88 7e 20 f0 00 	cmpl   $0x0,0xf0207e88$/;"	l
f0106ee1	obj/kern/kernel.asm	/^f0106ee1:	75 24                	jne    f0106f07 <lapic_startap+0x4f>$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0106eea	obj/kern/kernel.asm	/^f0106eea:	00 $/;"	l
f0106eeb	obj/kern/kernel.asm	/^f0106eeb:	c7 44 24 08 e8 74 10 	movl   $0xf01074e8,0x8(%esp)$/;"	l
f0106ef2	obj/kern/kernel.asm	/^f0106ef2:	f0 $/;"	l
f0106ef3	obj/kern/kernel.asm	/^f0106ef3:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f0106efa	obj/kern/kernel.asm	/^f0106efa:	00 $/;"	l
f0106efb	obj/kern/kernel.asm	/^f0106efb:	c7 04 24 94 93 10 f0 	movl   $0xf0109394,(%esp)$/;"	l
f0106f02	obj/kern/kernel.asm	/^f0106f02:	e8 39 91 ff ff       	call   f0100040 <_panic>$/;"	l
f0106f07	obj/kern/kernel.asm	/^f0106f07:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f0106f0e	obj/kern/kernel.asm	/^f0106f0e:	00 00 $/;"	l
f0106f10	obj/kern/kernel.asm	/^f0106f10:	89 f0                	mov    %esi,%eax$/;"	l
f0106f12	obj/kern/kernel.asm	/^f0106f12:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f0106f15	obj/kern/kernel.asm	/^f0106f15:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f0106f1b	obj/kern/kernel.asm	/^f0106f1b:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f0106f1e	obj/kern/kernel.asm	/^f0106f1e:	89 da                	mov    %ebx,%edx$/;"	l
f0106f20	obj/kern/kernel.asm	/^f0106f20:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106f25	obj/kern/kernel.asm	/^f0106f25:	e8 0e fe ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106f2a	obj/kern/kernel.asm	/^f0106f2a:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f0106f2f	obj/kern/kernel.asm	/^f0106f2f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106f34	obj/kern/kernel.asm	/^f0106f34:	e8 ff fd ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106f39	obj/kern/kernel.asm	/^f0106f39:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0106f3e	obj/kern/kernel.asm	/^f0106f3e:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106f43	obj/kern/kernel.asm	/^f0106f43:	e8 f0 fd ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106f48	obj/kern/kernel.asm	/^f0106f48:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0106f4b	obj/kern/kernel.asm	/^f0106f4b:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f0106f51	obj/kern/kernel.asm	/^f0106f51:	89 da                	mov    %ebx,%edx$/;"	l
f0106f53	obj/kern/kernel.asm	/^f0106f53:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106f58	obj/kern/kernel.asm	/^f0106f58:	e8 db fd ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106f5d	obj/kern/kernel.asm	/^f0106f5d:	89 f2                	mov    %esi,%edx$/;"	l
f0106f5f	obj/kern/kernel.asm	/^f0106f5f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106f64	obj/kern/kernel.asm	/^f0106f64:	e8 cf fd ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106f69	obj/kern/kernel.asm	/^f0106f69:	89 da                	mov    %ebx,%edx$/;"	l
f0106f6b	obj/kern/kernel.asm	/^f0106f6b:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106f70	obj/kern/kernel.asm	/^f0106f70:	e8 c3 fd ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106f75	obj/kern/kernel.asm	/^f0106f75:	89 f2                	mov    %esi,%edx$/;"	l
f0106f77	obj/kern/kernel.asm	/^f0106f77:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106f7c	obj/kern/kernel.asm	/^f0106f7c:	e8 b7 fd ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106f81	obj/kern/kernel.asm	/^f0106f81:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106f84	obj/kern/kernel.asm	/^f0106f84:	5b                   	pop    %ebx$/;"	l
f0106f85	obj/kern/kernel.asm	/^f0106f85:	5e                   	pop    %esi$/;"	l
f0106f86	obj/kern/kernel.asm	/^f0106f86:	5d                   	pop    %ebp$/;"	l
f0106f87	obj/kern/kernel.asm	/^f0106f87:	c3                   	ret    $/;"	l
f0106f88	obj/kern/kernel.asm	/^f0106f88 <lapic_ipi>:$/;"	l
f0106f88	obj/kern/kernel.asm	/^f0106f88:	55                   	push   %ebp$/;"	l
f0106f89	obj/kern/kernel.asm	/^f0106f89:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f8b	obj/kern/kernel.asm	/^f0106f8b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106f8e	obj/kern/kernel.asm	/^f0106f8e:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106f99	obj/kern/kernel.asm	/^f0106f99:	e8 9a fd ff ff       	call   f0106d38 <lapicw>$/;"	l
f0106f9e	obj/kern/kernel.asm	/^f0106f9e:	8b 15 04 90 24 f0    	mov    0xf0249004,%edx$/;"	l
f0106fa4	obj/kern/kernel.asm	/^f0106fa4:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106faa	obj/kern/kernel.asm	/^f0106faa:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106fad	obj/kern/kernel.asm	/^f0106fad:	75 f5                	jne    f0106fa4 <lapic_ipi+0x1c>$/;"	l
f0106faf	obj/kern/kernel.asm	/^f0106faf:	5d                   	pop    %ebp$/;"	l
f0106fb0	obj/kern/kernel.asm	/^f0106fb0:	c3                   	ret    $/;"	l
f0106fb1	obj/kern/kernel.asm	/^f0106fb1:	00 00                	add    %al,(%eax)$/;"	l
f0106fb4	obj/kern/kernel.asm	/^f0106fb4 <holding>:$/;"	l
f0106fb4	obj/kern/kernel.asm	/^f0106fb4:	55                   	push   %ebp$/;"	l
f0106fb5	obj/kern/kernel.asm	/^f0106fb5:	89 e5                	mov    %esp,%ebp$/;"	l
f0106fb7	obj/kern/kernel.asm	/^f0106fb7:	53                   	push   %ebx$/;"	l
f0106fb8	obj/kern/kernel.asm	/^f0106fb8:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106fbb	obj/kern/kernel.asm	/^f0106fbb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106fc0	obj/kern/kernel.asm	/^f0106fc0:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0106fc3	obj/kern/kernel.asm	/^f0106fc3:	74 18                	je     f0106fdd <holding+0x29>$/;"	l
f0106fc5	obj/kern/kernel.asm	/^f0106fc5:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
f0106fc8	obj/kern/kernel.asm	/^f0106fc8:	e8 83 fd ff ff       	call   f0106d50 <cpunum>$/;"	l
f0106fcd	obj/kern/kernel.asm	/^f0106fcd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106fd0	obj/kern/kernel.asm	/^f0106fd0:	05 20 80 20 f0       	add    $0xf0208020,%eax$/;"	l
f0106fd5	obj/kern/kernel.asm	/^f0106fd5:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106fd7	obj/kern/kernel.asm	/^f0106fd7:	0f 94 c2             	sete   %dl$/;"	l
f0106fda	obj/kern/kernel.asm	/^f0106fda:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0106fdd	obj/kern/kernel.asm	/^f0106fdd:	89 d0                	mov    %edx,%eax$/;"	l
f0106fdf	obj/kern/kernel.asm	/^f0106fdf:	83 c4 04             	add    $0x4,%esp$/;"	l
f0106fe2	obj/kern/kernel.asm	/^f0106fe2:	5b                   	pop    %ebx$/;"	l
f0106fe3	obj/kern/kernel.asm	/^f0106fe3:	5d                   	pop    %ebp$/;"	l
f0106fe4	obj/kern/kernel.asm	/^f0106fe4:	c3                   	ret    $/;"	l
f0106fe5	obj/kern/kernel.asm	/^f0106fe5 <__spin_initlock>:$/;"	l
f0106fe5	obj/kern/kernel.asm	/^f0106fe5:	55                   	push   %ebp$/;"	l
f0106fe6	obj/kern/kernel.asm	/^f0106fe6:	89 e5                	mov    %esp,%ebp$/;"	l
f0106fe8	obj/kern/kernel.asm	/^f0106fe8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106feb	obj/kern/kernel.asm	/^f0106feb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106ff1	obj/kern/kernel.asm	/^f0106ff1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106ff4	obj/kern/kernel.asm	/^f0106ff4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106ff7	obj/kern/kernel.asm	/^f0106ff7:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106ffe	obj/kern/kernel.asm	/^f0106ffe:	5d                   	pop    %ebp$/;"	l
f0106fff	obj/kern/kernel.asm	/^f0106fff:	c3                   	ret    $/;"	l
f0107000	obj/kern/kernel.asm	/^f0107000 <spin_lock>:$/;"	l
f0107000	obj/kern/kernel.asm	/^f0107000:	55                   	push   %ebp$/;"	l
f0107001	obj/kern/kernel.asm	/^f0107001:	89 e5                	mov    %esp,%ebp$/;"	l
f0107003	obj/kern/kernel.asm	/^f0107003:	53                   	push   %ebx$/;"	l
f0107004	obj/kern/kernel.asm	/^f0107004:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0107007	obj/kern/kernel.asm	/^f0107007:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010700a	obj/kern/kernel.asm	/^f010700a:	89 d8                	mov    %ebx,%eax$/;"	l
f010700c	obj/kern/kernel.asm	/^f010700c:	e8 a3 ff ff ff       	call   f0106fb4 <holding>$/;"	l
f0107011	obj/kern/kernel.asm	/^f0107011:	85 c0                	test   %eax,%eax$/;"	l
f0107013	obj/kern/kernel.asm	/^f0107013:	75 12                	jne    f0107027 <spin_lock+0x27>$/;"	l
f0107015	obj/kern/kernel.asm	/^f0107015:	89 da                	mov    %ebx,%edx$/;"	l
f0107017	obj/kern/kernel.asm	/^f0107017:	b0 01                	mov    $0x1,%al$/;"	l
f0107019	obj/kern/kernel.asm	/^f0107019:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f010701c	obj/kern/kernel.asm	/^f010701c:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0107021	obj/kern/kernel.asm	/^f0107021:	85 c0                	test   %eax,%eax$/;"	l
f0107023	obj/kern/kernel.asm	/^f0107023:	75 2e                	jne    f0107053 <spin_lock+0x53>$/;"	l
f0107025	obj/kern/kernel.asm	/^f0107025:	eb 37                	jmp    f010705e <spin_lock+0x5e>$/;"	l
f0107027	obj/kern/kernel.asm	/^f0107027:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f010702a	obj/kern/kernel.asm	/^f010702a:	e8 21 fd ff ff       	call   f0106d50 <cpunum>$/;"	l
f010702f	obj/kern/kernel.asm	/^f010702f:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0107033	obj/kern/kernel.asm	/^f0107033:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0107037	obj/kern/kernel.asm	/^f0107037:	c7 44 24 08 a4 93 10 	movl   $0xf01093a4,0x8(%esp)$/;"	l
f010703e	obj/kern/kernel.asm	/^f010703e:	f0 $/;"	l
f010703f	obj/kern/kernel.asm	/^f010703f:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0107046	obj/kern/kernel.asm	/^f0107046:	00 $/;"	l
f0107047	obj/kern/kernel.asm	/^f0107047:	c7 04 24 08 94 10 f0 	movl   $0xf0109408,(%esp)$/;"	l
f010704e	obj/kern/kernel.asm	/^f010704e:	e8 ed 8f ff ff       	call   f0100040 <_panic>$/;"	l
f0107053	obj/kern/kernel.asm	/^f0107053:	f3 90                	pause  $/;"	l
f0107055	obj/kern/kernel.asm	/^f0107055:	89 c8                	mov    %ecx,%eax$/;"	l
f0107057	obj/kern/kernel.asm	/^f0107057:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f010705a	obj/kern/kernel.asm	/^f010705a:	85 c0                	test   %eax,%eax$/;"	l
f010705c	obj/kern/kernel.asm	/^f010705c:	75 f5                	jne    f0107053 <spin_lock+0x53>$/;"	l
f010705e	obj/kern/kernel.asm	/^f010705e:	e8 ed fc ff ff       	call   f0106d50 <cpunum>$/;"	l
f0107063	obj/kern/kernel.asm	/^f0107063:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107066	obj/kern/kernel.asm	/^f0107066:	05 20 80 20 f0       	add    $0xf0208020,%eax$/;"	l
f010706b	obj/kern/kernel.asm	/^f010706b:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f010706e	obj/kern/kernel.asm	/^f010706e:	8d 4b 0c             	lea    0xc(%ebx),%ecx$/;"	l
f0107071	obj/kern/kernel.asm	/^f0107071:	89 e8                	mov    %ebp,%eax$/;"	l
f0107073	obj/kern/kernel.asm	/^f0107073:	3d ff ff 7f ef       	cmp    $0xef7fffff,%eax$/;"	l
f0107078	obj/kern/kernel.asm	/^f0107078:	77 34                	ja     f01070ae <spin_lock+0xae>$/;"	l
f010707a	obj/kern/kernel.asm	/^f010707a:	eb 2b                	jmp    f01070a7 <spin_lock+0xa7>$/;"	l
f010707c	obj/kern/kernel.asm	/^f010707c:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0107082	obj/kern/kernel.asm	/^f0107082:	76 12                	jbe    f0107096 <spin_lock+0x96>$/;"	l
f0107084	obj/kern/kernel.asm	/^f0107084:	8b 5a 04             	mov    0x4(%edx),%ebx$/;"	l
f0107087	obj/kern/kernel.asm	/^f0107087:	89 1c 81             	mov    %ebx,(%ecx,%eax,4)$/;"	l
f010708a	obj/kern/kernel.asm	/^f010708a:	8b 12                	mov    (%edx),%edx$/;"	l
f010708c	obj/kern/kernel.asm	/^f010708c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010708f	obj/kern/kernel.asm	/^f010708f:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0107092	obj/kern/kernel.asm	/^f0107092:	75 e8                	jne    f010707c <spin_lock+0x7c>$/;"	l
f0107094	obj/kern/kernel.asm	/^f0107094:	eb 27                	jmp    f01070bd <spin_lock+0xbd>$/;"	l
f0107096	obj/kern/kernel.asm	/^f0107096:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)$/;"	l
f010709d	obj/kern/kernel.asm	/^f010709d:	83 c0 01             	add    $0x1,%eax$/;"	l
f01070a0	obj/kern/kernel.asm	/^f01070a0:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01070a3	obj/kern/kernel.asm	/^f01070a3:	7e f1                	jle    f0107096 <spin_lock+0x96>$/;"	l
f01070a5	obj/kern/kernel.asm	/^f01070a5:	eb 16                	jmp    f01070bd <spin_lock+0xbd>$/;"	l
f01070a7	obj/kern/kernel.asm	/^f01070a7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01070ac	obj/kern/kernel.asm	/^f01070ac:	eb e8                	jmp    f0107096 <spin_lock+0x96>$/;"	l
f01070ae	obj/kern/kernel.asm	/^f01070ae:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f01070b1	obj/kern/kernel.asm	/^f01070b1:	89 53 0c             	mov    %edx,0xc(%ebx)$/;"	l
f01070b4	obj/kern/kernel.asm	/^f01070b4:	8b 10                	mov    (%eax),%edx$/;"	l
f01070b6	obj/kern/kernel.asm	/^f01070b6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01070bb	obj/kern/kernel.asm	/^f01070bb:	eb bf                	jmp    f010707c <spin_lock+0x7c>$/;"	l
f01070bd	obj/kern/kernel.asm	/^f01070bd:	83 c4 24             	add    $0x24,%esp$/;"	l
f01070c0	obj/kern/kernel.asm	/^f01070c0:	5b                   	pop    %ebx$/;"	l
f01070c1	obj/kern/kernel.asm	/^f01070c1:	5d                   	pop    %ebp$/;"	l
f01070c2	obj/kern/kernel.asm	/^f01070c2:	c3                   	ret    $/;"	l
f01070c3	obj/kern/kernel.asm	/^f01070c3 <spin_unlock>:$/;"	l
f01070c3	obj/kern/kernel.asm	/^f01070c3:	55                   	push   %ebp$/;"	l
f01070c4	obj/kern/kernel.asm	/^f01070c4:	89 e5                	mov    %esp,%ebp$/;"	l
f01070c6	obj/kern/kernel.asm	/^f01070c6:	83 ec 78             	sub    $0x78,%esp$/;"	l
f01070c9	obj/kern/kernel.asm	/^f01070c9:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01070cc	obj/kern/kernel.asm	/^f01070cc:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01070cf	obj/kern/kernel.asm	/^f01070cf:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01070d2	obj/kern/kernel.asm	/^f01070d2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01070d5	obj/kern/kernel.asm	/^f01070d5:	89 d8                	mov    %ebx,%eax$/;"	l
f01070d7	obj/kern/kernel.asm	/^f01070d7:	e8 d8 fe ff ff       	call   f0106fb4 <holding>$/;"	l
f01070dc	obj/kern/kernel.asm	/^f01070dc:	85 c0                	test   %eax,%eax$/;"	l
f01070de	obj/kern/kernel.asm	/^f01070de:	0f 85 d4 00 00 00    	jne    f01071b8 <spin_unlock+0xf5>$/;"	l
f01070e4	obj/kern/kernel.asm	/^f01070e4:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f01070eb	obj/kern/kernel.asm	/^f01070eb:	00 $/;"	l
f01070ec	obj/kern/kernel.asm	/^f01070ec:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f01070ef	obj/kern/kernel.asm	/^f01070ef:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01070f3	obj/kern/kernel.asm	/^f01070f3:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f01070f6	obj/kern/kernel.asm	/^f01070f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01070f9	obj/kern/kernel.asm	/^f01070f9:	e8 1e f6 ff ff       	call   f010671c <memmove>$/;"	l
f01070fe	obj/kern/kernel.asm	/^f01070fe:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0107101	obj/kern/kernel.asm	/^f0107101:	0f b6 30             	movzbl (%eax),%esi$/;"	l
f0107104	obj/kern/kernel.asm	/^f0107104:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0107107	obj/kern/kernel.asm	/^f0107107:	e8 44 fc ff ff       	call   f0106d50 <cpunum>$/;"	l
f010710c	obj/kern/kernel.asm	/^f010710c:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0107110	obj/kern/kernel.asm	/^f0107110:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0107114	obj/kern/kernel.asm	/^f0107114:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107118	obj/kern/kernel.asm	/^f0107118:	c7 04 24 d0 93 10 f0 	movl   $0xf01093d0,(%esp)$/;"	l
f010711f	obj/kern/kernel.asm	/^f010711f:	e8 6a d6 ff ff       	call   f010478e <cprintf>$/;"	l
f0107124	obj/kern/kernel.asm	/^f0107124:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0107127	obj/kern/kernel.asm	/^f0107127:	85 c0                	test   %eax,%eax$/;"	l
f0107129	obj/kern/kernel.asm	/^f0107129:	74 71                	je     f010719c <spin_unlock+0xd9>$/;"	l
f010712b	obj/kern/kernel.asm	/^f010712b:	8d 5d a8             	lea    -0x58(%ebp),%ebx$/;"	l
f010712e	obj/kern/kernel.asm	/^f010712e:	8d 7d cc             	lea    -0x34(%ebp),%edi$/;"	l
f0107131	obj/kern/kernel.asm	/^f0107131:	8d 75 d0             	lea    -0x30(%ebp),%esi$/;"	l
f0107134	obj/kern/kernel.asm	/^f0107134:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0107138	obj/kern/kernel.asm	/^f0107138:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010713b	obj/kern/kernel.asm	/^f010713b:	e8 ca e9 ff ff       	call   f0105b0a <debuginfo_eip>$/;"	l
f0107140	obj/kern/kernel.asm	/^f0107140:	85 c0                	test   %eax,%eax$/;"	l
f0107142	obj/kern/kernel.asm	/^f0107142:	78 39                	js     f010717d <spin_unlock+0xba>$/;"	l
f0107144	obj/kern/kernel.asm	/^f0107144:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107146	obj/kern/kernel.asm	/^f0107146:	89 c2                	mov    %eax,%edx$/;"	l
f0107148	obj/kern/kernel.asm	/^f0107148:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
f010714b	obj/kern/kernel.asm	/^f010714b:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f010714f	obj/kern/kernel.asm	/^f010714f:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0107152	obj/kern/kernel.asm	/^f0107152:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0107156	obj/kern/kernel.asm	/^f0107156:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0107159	obj/kern/kernel.asm	/^f0107159:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f010715d	obj/kern/kernel.asm	/^f010715d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0107160	obj/kern/kernel.asm	/^f0107160:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0107164	obj/kern/kernel.asm	/^f0107164:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0107167	obj/kern/kernel.asm	/^f0107167:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010716b	obj/kern/kernel.asm	/^f010716b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010716f	obj/kern/kernel.asm	/^f010716f:	c7 04 24 18 94 10 f0 	movl   $0xf0109418,(%esp)$/;"	l
f0107176	obj/kern/kernel.asm	/^f0107176:	e8 13 d6 ff ff       	call   f010478e <cprintf>$/;"	l
f010717b	obj/kern/kernel.asm	/^f010717b:	eb 12                	jmp    f010718f <spin_unlock+0xcc>$/;"	l
f010717d	obj/kern/kernel.asm	/^f010717d:	8b 03                	mov    (%ebx),%eax$/;"	l
f010717f	obj/kern/kernel.asm	/^f010717f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107183	obj/kern/kernel.asm	/^f0107183:	c7 04 24 2f 94 10 f0 	movl   $0xf010942f,(%esp)$/;"	l
f010718a	obj/kern/kernel.asm	/^f010718a:	e8 ff d5 ff ff       	call   f010478e <cprintf>$/;"	l
f010718f	obj/kern/kernel.asm	/^f010718f:	39 fb                	cmp    %edi,%ebx$/;"	l
f0107191	obj/kern/kernel.asm	/^f0107191:	74 09                	je     f010719c <spin_unlock+0xd9>$/;"	l
f0107193	obj/kern/kernel.asm	/^f0107193:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0107196	obj/kern/kernel.asm	/^f0107196:	8b 03                	mov    (%ebx),%eax$/;"	l
f0107198	obj/kern/kernel.asm	/^f0107198:	85 c0                	test   %eax,%eax$/;"	l
f010719a	obj/kern/kernel.asm	/^f010719a:	75 98                	jne    f0107134 <spin_unlock+0x71>$/;"	l
f010719c	obj/kern/kernel.asm	/^f010719c:	c7 44 24 08 37 94 10 	movl   $0xf0109437,0x8(%esp)$/;"	l
f01071a3	obj/kern/kernel.asm	/^f01071a3:	f0 $/;"	l
f01071a4	obj/kern/kernel.asm	/^f01071a4:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f01071ab	obj/kern/kernel.asm	/^f01071ab:	00 $/;"	l
f01071ac	obj/kern/kernel.asm	/^f01071ac:	c7 04 24 08 94 10 f0 	movl   $0xf0109408,(%esp)$/;"	l
f01071b3	obj/kern/kernel.asm	/^f01071b3:	e8 88 8e ff ff       	call   f0100040 <_panic>$/;"	l
f01071b8	obj/kern/kernel.asm	/^f01071b8:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f01071bf	obj/kern/kernel.asm	/^f01071bf:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)$/;"	l
f01071c6	obj/kern/kernel.asm	/^f01071c6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01071cb	obj/kern/kernel.asm	/^f01071cb:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01071ce	obj/kern/kernel.asm	/^f01071ce:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01071d1	obj/kern/kernel.asm	/^f01071d1:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01071d4	obj/kern/kernel.asm	/^f01071d4:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01071d7	obj/kern/kernel.asm	/^f01071d7:	89 ec                	mov    %ebp,%esp$/;"	l
f01071d9	obj/kern/kernel.asm	/^f01071d9:	5d                   	pop    %ebp$/;"	l
f01071da	obj/kern/kernel.asm	/^f01071da:	c3                   	ret    $/;"	l
f01071db	obj/kern/kernel.asm	/^f01071db:	00 00                	add    %al,(%eax)$/;"	l
f01071dd	obj/kern/kernel.asm	/^f01071dd:	00 00                	add    %al,(%eax)$/;"	l
f01071e0	obj/kern/kernel.asm	/^f01071e0 <__udivdi3>:$/;"	l
f01071e0	obj/kern/kernel.asm	/^f01071e0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01071e3	obj/kern/kernel.asm	/^f01071e3:	89 7c 24 14          	mov    %edi,0x14(%esp)$/;"	l
f01071e7	obj/kern/kernel.asm	/^f01071e7:	8b 7c 24 2c          	mov    0x2c(%esp),%edi$/;"	l
f01071eb	obj/kern/kernel.asm	/^f01071eb:	8b 44 24 20          	mov    0x20(%esp),%eax$/;"	l
f01071ef	obj/kern/kernel.asm	/^f01071ef:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f01071f3	obj/kern/kernel.asm	/^f01071f3:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f01071f7	obj/kern/kernel.asm	/^f01071f7:	8b 74 24 24          	mov    0x24(%esp),%esi$/;"	l
f01071fb	obj/kern/kernel.asm	/^f01071fb:	85 ff                	test   %edi,%edi$/;"	l
f01071fd	obj/kern/kernel.asm	/^f01071fd:	89 6c 24 18          	mov    %ebp,0x18(%esp)$/;"	l
f0107201	obj/kern/kernel.asm	/^f0107201:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107205	obj/kern/kernel.asm	/^f0107205:	89 cd                	mov    %ecx,%ebp$/;"	l
f0107207	obj/kern/kernel.asm	/^f0107207:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010720b	obj/kern/kernel.asm	/^f010720b:	75 33                	jne    f0107240 <__udivdi3+0x60>$/;"	l
f010720d	obj/kern/kernel.asm	/^f010720d:	39 f1                	cmp    %esi,%ecx$/;"	l
f010720f	obj/kern/kernel.asm	/^f010720f:	77 57                	ja     f0107268 <__udivdi3+0x88>$/;"	l
f0107211	obj/kern/kernel.asm	/^f0107211:	85 c9                	test   %ecx,%ecx$/;"	l
f0107213	obj/kern/kernel.asm	/^f0107213:	75 0b                	jne    f0107220 <__udivdi3+0x40>$/;"	l
f0107215	obj/kern/kernel.asm	/^f0107215:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010721a	obj/kern/kernel.asm	/^f010721a:	31 d2                	xor    %edx,%edx$/;"	l
f010721c	obj/kern/kernel.asm	/^f010721c:	f7 f1                	div    %ecx$/;"	l
f010721e	obj/kern/kernel.asm	/^f010721e:	89 c1                	mov    %eax,%ecx$/;"	l
f0107220	obj/kern/kernel.asm	/^f0107220:	89 f0                	mov    %esi,%eax$/;"	l
f0107222	obj/kern/kernel.asm	/^f0107222:	31 d2                	xor    %edx,%edx$/;"	l
f0107224	obj/kern/kernel.asm	/^f0107224:	f7 f1                	div    %ecx$/;"	l
f0107226	obj/kern/kernel.asm	/^f0107226:	89 c6                	mov    %eax,%esi$/;"	l
f0107228	obj/kern/kernel.asm	/^f0107228:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f010722c	obj/kern/kernel.asm	/^f010722c:	f7 f1                	div    %ecx$/;"	l
f010722e	obj/kern/kernel.asm	/^f010722e:	89 f2                	mov    %esi,%edx$/;"	l
f0107230	obj/kern/kernel.asm	/^f0107230:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0107234	obj/kern/kernel.asm	/^f0107234:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0107238	obj/kern/kernel.asm	/^f0107238:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f010723c	obj/kern/kernel.asm	/^f010723c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010723f	obj/kern/kernel.asm	/^f010723f:	c3                   	ret    $/;"	l
f0107240	obj/kern/kernel.asm	/^f0107240:	31 d2                	xor    %edx,%edx$/;"	l
f0107242	obj/kern/kernel.asm	/^f0107242:	31 c0                	xor    %eax,%eax$/;"	l
f0107244	obj/kern/kernel.asm	/^f0107244:	39 f7                	cmp    %esi,%edi$/;"	l
f0107246	obj/kern/kernel.asm	/^f0107246:	77 e8                	ja     f0107230 <__udivdi3+0x50>$/;"	l
f0107248	obj/kern/kernel.asm	/^f0107248:	0f bd cf             	bsr    %edi,%ecx$/;"	l
f010724b	obj/kern/kernel.asm	/^f010724b:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f010724e	obj/kern/kernel.asm	/^f010724e:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0107252	obj/kern/kernel.asm	/^f0107252:	75 2c                	jne    f0107280 <__udivdi3+0xa0>$/;"	l
f0107254	obj/kern/kernel.asm	/^f0107254:	3b 6c 24 08          	cmp    0x8(%esp),%ebp$/;"	l
f0107258	obj/kern/kernel.asm	/^f0107258:	76 04                	jbe    f010725e <__udivdi3+0x7e>$/;"	l
f010725a	obj/kern/kernel.asm	/^f010725a:	39 f7                	cmp    %esi,%edi$/;"	l
f010725c	obj/kern/kernel.asm	/^f010725c:	73 d2                	jae    f0107230 <__udivdi3+0x50>$/;"	l
f010725e	obj/kern/kernel.asm	/^f010725e:	31 d2                	xor    %edx,%edx$/;"	l
f0107260	obj/kern/kernel.asm	/^f0107260:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107265	obj/kern/kernel.asm	/^f0107265:	eb c9                	jmp    f0107230 <__udivdi3+0x50>$/;"	l
f0107267	obj/kern/kernel.asm	/^f0107267:	90                   	nop$/;"	l
f0107268	obj/kern/kernel.asm	/^f0107268:	89 f2                	mov    %esi,%edx$/;"	l
f010726a	obj/kern/kernel.asm	/^f010726a:	f7 f1                	div    %ecx$/;"	l
f010726c	obj/kern/kernel.asm	/^f010726c:	31 d2                	xor    %edx,%edx$/;"	l
f010726e	obj/kern/kernel.asm	/^f010726e:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0107272	obj/kern/kernel.asm	/^f0107272:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0107276	obj/kern/kernel.asm	/^f0107276:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f010727a	obj/kern/kernel.asm	/^f010727a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010727d	obj/kern/kernel.asm	/^f010727d:	c3                   	ret    $/;"	l
f010727e	obj/kern/kernel.asm	/^f010727e:	66 90                	xchg   %ax,%ax$/;"	l
f0107280	obj/kern/kernel.asm	/^f0107280:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0107285	obj/kern/kernel.asm	/^f0107285:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010728a	obj/kern/kernel.asm	/^f010728a:	89 ea                	mov    %ebp,%edx$/;"	l
f010728c	obj/kern/kernel.asm	/^f010728c:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0107290	obj/kern/kernel.asm	/^f0107290:	d3 e7                	shl    %cl,%edi$/;"	d
f0107292	obj/kern/kernel.asm	/^f0107292:	89 c1                	mov    %eax,%ecx$/;"	l
f0107294	obj/kern/kernel.asm	/^f0107294:	d3 ea                	shr    %cl,%edx$/;"	d
f0107296	obj/kern/kernel.asm	/^f0107296:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f010729b	obj/kern/kernel.asm	/^f010729b:	09 fa                	or     %edi,%edx$/;"	l
f010729d	obj/kern/kernel.asm	/^f010729d:	89 f7                	mov    %esi,%edi$/;"	l
f010729f	obj/kern/kernel.asm	/^f010729f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01072a3	obj/kern/kernel.asm	/^f01072a3:	89 f2                	mov    %esi,%edx$/;"	l
f01072a5	obj/kern/kernel.asm	/^f01072a5:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f01072a9	obj/kern/kernel.asm	/^f01072a9:	d3 e5                	shl    %cl,%ebp$/;"	d
f01072ab	obj/kern/kernel.asm	/^f01072ab:	89 c1                	mov    %eax,%ecx$/;"	l
f01072ad	obj/kern/kernel.asm	/^f01072ad:	d3 ef                	shr    %cl,%edi$/;"	d
f01072af	obj/kern/kernel.asm	/^f01072af:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f01072b4	obj/kern/kernel.asm	/^f01072b4:	d3 e2                	shl    %cl,%edx$/;"	d
f01072b6	obj/kern/kernel.asm	/^f01072b6:	89 c1                	mov    %eax,%ecx$/;"	l
f01072b8	obj/kern/kernel.asm	/^f01072b8:	d3 ee                	shr    %cl,%esi$/;"	d
f01072ba	obj/kern/kernel.asm	/^f01072ba:	09 d6                	or     %edx,%esi$/;"	l
f01072bc	obj/kern/kernel.asm	/^f01072bc:	89 fa                	mov    %edi,%edx$/;"	l
f01072be	obj/kern/kernel.asm	/^f01072be:	89 f0                	mov    %esi,%eax$/;"	l
f01072c0	obj/kern/kernel.asm	/^f01072c0:	f7 74 24 0c          	divl   0xc(%esp)$/;"	l
f01072c4	obj/kern/kernel.asm	/^f01072c4:	89 d7                	mov    %edx,%edi$/;"	l
f01072c6	obj/kern/kernel.asm	/^f01072c6:	89 c6                	mov    %eax,%esi$/;"	l
f01072c8	obj/kern/kernel.asm	/^f01072c8:	f7 e5                	mul    %ebp$/;"	l
f01072ca	obj/kern/kernel.asm	/^f01072ca:	39 d7                	cmp    %edx,%edi$/;"	l
f01072cc	obj/kern/kernel.asm	/^f01072cc:	72 22                	jb     f01072f0 <__udivdi3+0x110>$/;"	l
f01072ce	obj/kern/kernel.asm	/^f01072ce:	8b 6c 24 08          	mov    0x8(%esp),%ebp$/;"	l
f01072d2	obj/kern/kernel.asm	/^f01072d2:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f01072d7	obj/kern/kernel.asm	/^f01072d7:	d3 e5                	shl    %cl,%ebp$/;"	d
f01072d9	obj/kern/kernel.asm	/^f01072d9:	39 c5                	cmp    %eax,%ebp$/;"	l
f01072db	obj/kern/kernel.asm	/^f01072db:	73 04                	jae    f01072e1 <__udivdi3+0x101>$/;"	l
f01072dd	obj/kern/kernel.asm	/^f01072dd:	39 d7                	cmp    %edx,%edi$/;"	l
f01072df	obj/kern/kernel.asm	/^f01072df:	74 0f                	je     f01072f0 <__udivdi3+0x110>$/;"	l
f01072e1	obj/kern/kernel.asm	/^f01072e1:	89 f0                	mov    %esi,%eax$/;"	l
f01072e3	obj/kern/kernel.asm	/^f01072e3:	31 d2                	xor    %edx,%edx$/;"	l
f01072e5	obj/kern/kernel.asm	/^f01072e5:	e9 46 ff ff ff       	jmp    f0107230 <__udivdi3+0x50>$/;"	l
f01072ea	obj/kern/kernel.asm	/^f01072ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01072f0	obj/kern/kernel.asm	/^f01072f0:	8d 46 ff             	lea    -0x1(%esi),%eax$/;"	l
f01072f3	obj/kern/kernel.asm	/^f01072f3:	31 d2                	xor    %edx,%edx$/;"	l
f01072f5	obj/kern/kernel.asm	/^f01072f5:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f01072f9	obj/kern/kernel.asm	/^f01072f9:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f01072fd	obj/kern/kernel.asm	/^f01072fd:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0107301	obj/kern/kernel.asm	/^f0107301:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107304	obj/kern/kernel.asm	/^f0107304:	c3                   	ret    $/;"	l
f0107310	obj/kern/kernel.asm	/^f0107310 <__umoddi3>:$/;"	l
f0107310	obj/kern/kernel.asm	/^f0107310:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0107313	obj/kern/kernel.asm	/^f0107313:	89 6c 24 18          	mov    %ebp,0x18(%esp)$/;"	l
f0107317	obj/kern/kernel.asm	/^f0107317:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp$/;"	l
f010731b	obj/kern/kernel.asm	/^f010731b:	8b 44 24 20          	mov    0x20(%esp),%eax$/;"	l
f010731f	obj/kern/kernel.asm	/^f010731f:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0107323	obj/kern/kernel.asm	/^f0107323:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f0107327	obj/kern/kernel.asm	/^f0107327:	8b 74 24 24          	mov    0x24(%esp),%esi$/;"	l
f010732b	obj/kern/kernel.asm	/^f010732b:	85 ed                	test   %ebp,%ebp$/;"	l
f010732d	obj/kern/kernel.asm	/^f010732d:	89 7c 24 14          	mov    %edi,0x14(%esp)$/;"	l
f0107331	obj/kern/kernel.asm	/^f0107331:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107335	obj/kern/kernel.asm	/^f0107335:	89 cf                	mov    %ecx,%edi$/;"	l
f0107337	obj/kern/kernel.asm	/^f0107337:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010733a	obj/kern/kernel.asm	/^f010733a:	89 f2                	mov    %esi,%edx$/;"	l
f010733c	obj/kern/kernel.asm	/^f010733c:	75 1a                	jne    f0107358 <__umoddi3+0x48>$/;"	l
f010733e	obj/kern/kernel.asm	/^f010733e:	39 f1                	cmp    %esi,%ecx$/;"	l
f0107340	obj/kern/kernel.asm	/^f0107340:	76 4e                	jbe    f0107390 <__umoddi3+0x80>$/;"	l
f0107342	obj/kern/kernel.asm	/^f0107342:	f7 f1                	div    %ecx$/;"	l
f0107344	obj/kern/kernel.asm	/^f0107344:	89 d0                	mov    %edx,%eax$/;"	l
f0107346	obj/kern/kernel.asm	/^f0107346:	31 d2                	xor    %edx,%edx$/;"	l
f0107348	obj/kern/kernel.asm	/^f0107348:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f010734c	obj/kern/kernel.asm	/^f010734c:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0107350	obj/kern/kernel.asm	/^f0107350:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0107354	obj/kern/kernel.asm	/^f0107354:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0107357	obj/kern/kernel.asm	/^f0107357:	c3                   	ret    $/;"	l
f0107358	obj/kern/kernel.asm	/^f0107358:	39 f5                	cmp    %esi,%ebp$/;"	l
f010735a	obj/kern/kernel.asm	/^f010735a:	77 54                	ja     f01073b0 <__umoddi3+0xa0>$/;"	l
f010735c	obj/kern/kernel.asm	/^f010735c:	0f bd c5             	bsr    %ebp,%eax$/;"	l
f010735f	obj/kern/kernel.asm	/^f010735f:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f0107362	obj/kern/kernel.asm	/^f0107362:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107366	obj/kern/kernel.asm	/^f0107366:	75 60                	jne    f01073c8 <__umoddi3+0xb8>$/;"	l
f0107368	obj/kern/kernel.asm	/^f0107368:	3b 0c 24             	cmp    (%esp),%ecx$/;"	l
f010736b	obj/kern/kernel.asm	/^f010736b:	0f 87 07 01 00 00    	ja     f0107478 <__umoddi3+0x168>$/;"	l
f0107371	obj/kern/kernel.asm	/^f0107371:	89 f2                	mov    %esi,%edx$/;"	l
f0107373	obj/kern/kernel.asm	/^f0107373:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0107376	obj/kern/kernel.asm	/^f0107376:	29 ce                	sub    %ecx,%esi$/;"	l
f0107378	obj/kern/kernel.asm	/^f0107378:	19 ea                	sbb    %ebp,%edx$/;"	l
f010737a	obj/kern/kernel.asm	/^f010737a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010737d	obj/kern/kernel.asm	/^f010737d:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0107380	obj/kern/kernel.asm	/^f0107380:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0107384	obj/kern/kernel.asm	/^f0107384:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0107388	obj/kern/kernel.asm	/^f0107388:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f010738c	obj/kern/kernel.asm	/^f010738c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010738f	obj/kern/kernel.asm	/^f010738f:	c3                   	ret    $/;"	l
f0107390	obj/kern/kernel.asm	/^f0107390:	85 c9                	test   %ecx,%ecx$/;"	l
f0107392	obj/kern/kernel.asm	/^f0107392:	75 0b                	jne    f010739f <__umoddi3+0x8f>$/;"	l
f0107394	obj/kern/kernel.asm	/^f0107394:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107399	obj/kern/kernel.asm	/^f0107399:	31 d2                	xor    %edx,%edx$/;"	l
f010739b	obj/kern/kernel.asm	/^f010739b:	f7 f1                	div    %ecx$/;"	l
f010739d	obj/kern/kernel.asm	/^f010739d:	89 c1                	mov    %eax,%ecx$/;"	l
f010739f	obj/kern/kernel.asm	/^f010739f:	89 f0                	mov    %esi,%eax$/;"	l
f01073a1	obj/kern/kernel.asm	/^f01073a1:	31 d2                	xor    %edx,%edx$/;"	l
f01073a3	obj/kern/kernel.asm	/^f01073a3:	f7 f1                	div    %ecx$/;"	l
f01073a5	obj/kern/kernel.asm	/^f01073a5:	8b 04 24             	mov    (%esp),%eax$/;"	l
f01073a8	obj/kern/kernel.asm	/^f01073a8:	f7 f1                	div    %ecx$/;"	l
f01073aa	obj/kern/kernel.asm	/^f01073aa:	eb 98                	jmp    f0107344 <__umoddi3+0x34>$/;"	l
f01073ac	obj/kern/kernel.asm	/^f01073ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01073b0	obj/kern/kernel.asm	/^f01073b0:	89 f2                	mov    %esi,%edx$/;"	l
f01073b2	obj/kern/kernel.asm	/^f01073b2:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f01073b6	obj/kern/kernel.asm	/^f01073b6:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f01073ba	obj/kern/kernel.asm	/^f01073ba:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f01073be	obj/kern/kernel.asm	/^f01073be:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01073c1	obj/kern/kernel.asm	/^f01073c1:	c3                   	ret    $/;"	l
f01073c2	obj/kern/kernel.asm	/^f01073c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f01073c8	obj/kern/kernel.asm	/^f01073c8:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f01073cd	obj/kern/kernel.asm	/^f01073cd:	89 e8                	mov    %ebp,%eax$/;"	l
f01073cf	obj/kern/kernel.asm	/^f01073cf:	bd 20 00 00 00       	mov    $0x20,%ebp$/;"	l
f01073d4	obj/kern/kernel.asm	/^f01073d4:	2b 6c 24 04          	sub    0x4(%esp),%ebp$/;"	l
f01073d8	obj/kern/kernel.asm	/^f01073d8:	89 fa                	mov    %edi,%edx$/;"	l
f01073da	obj/kern/kernel.asm	/^f01073da:	d3 e0                	shl    %cl,%eax$/;"	d
f01073dc	obj/kern/kernel.asm	/^f01073dc:	89 e9                	mov    %ebp,%ecx$/;"	l
f01073de	obj/kern/kernel.asm	/^f01073de:	d3 ea                	shr    %cl,%edx$/;"	d
f01073e0	obj/kern/kernel.asm	/^f01073e0:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f01073e5	obj/kern/kernel.asm	/^f01073e5:	09 c2                	or     %eax,%edx$/;"	l
f01073e7	obj/kern/kernel.asm	/^f01073e7:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f01073eb	obj/kern/kernel.asm	/^f01073eb:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01073ee	obj/kern/kernel.asm	/^f01073ee:	89 f2                	mov    %esi,%edx$/;"	l
f01073f0	obj/kern/kernel.asm	/^f01073f0:	d3 e7                	shl    %cl,%edi$/;"	d
f01073f2	obj/kern/kernel.asm	/^f01073f2:	89 e9                	mov    %ebp,%ecx$/;"	l
f01073f4	obj/kern/kernel.asm	/^f01073f4:	d3 ea                	shr    %cl,%edx$/;"	d
f01073f6	obj/kern/kernel.asm	/^f01073f6:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f01073fb	obj/kern/kernel.asm	/^f01073fb:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01073ff	obj/kern/kernel.asm	/^f01073ff:	d3 e6                	shl    %cl,%esi$/;"	d
f0107401	obj/kern/kernel.asm	/^f0107401:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107403	obj/kern/kernel.asm	/^f0107403:	d3 e8                	shr    %cl,%eax$/;"	d
f0107405	obj/kern/kernel.asm	/^f0107405:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f010740a	obj/kern/kernel.asm	/^f010740a:	09 f0                	or     %esi,%eax$/;"	l
f010740c	obj/kern/kernel.asm	/^f010740c:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0107410	obj/kern/kernel.asm	/^f0107410:	f7 34 24             	divl   (%esp)$/;"	l
f0107413	obj/kern/kernel.asm	/^f0107413:	d3 e6                	shl    %cl,%esi$/;"	d
f0107415	obj/kern/kernel.asm	/^f0107415:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0107419	obj/kern/kernel.asm	/^f0107419:	89 d6                	mov    %edx,%esi$/;"	l
f010741b	obj/kern/kernel.asm	/^f010741b:	f7 e7                	mul    %edi$/;"	l
f010741d	obj/kern/kernel.asm	/^f010741d:	39 d6                	cmp    %edx,%esi$/;"	l
f010741f	obj/kern/kernel.asm	/^f010741f:	89 c1                	mov    %eax,%ecx$/;"	l
f0107421	obj/kern/kernel.asm	/^f0107421:	89 d7                	mov    %edx,%edi$/;"	l
f0107423	obj/kern/kernel.asm	/^f0107423:	72 3f                	jb     f0107464 <__umoddi3+0x154>$/;"	l
f0107425	obj/kern/kernel.asm	/^f0107425:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f0107429	obj/kern/kernel.asm	/^f0107429:	72 35                	jb     f0107460 <__umoddi3+0x150>$/;"	l
f010742b	obj/kern/kernel.asm	/^f010742b:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010742f	obj/kern/kernel.asm	/^f010742f:	29 c8                	sub    %ecx,%eax$/;"	l
f0107431	obj/kern/kernel.asm	/^f0107431:	19 fe                	sbb    %edi,%esi$/;"	l
f0107433	obj/kern/kernel.asm	/^f0107433:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0107438	obj/kern/kernel.asm	/^f0107438:	89 f2                	mov    %esi,%edx$/;"	l
f010743a	obj/kern/kernel.asm	/^f010743a:	d3 e8                	shr    %cl,%eax$/;"	d
f010743c	obj/kern/kernel.asm	/^f010743c:	89 e9                	mov    %ebp,%ecx$/;"	l
f010743e	obj/kern/kernel.asm	/^f010743e:	d3 e2                	shl    %cl,%edx$/;"	d
f0107440	obj/kern/kernel.asm	/^f0107440:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0107445	obj/kern/kernel.asm	/^f0107445:	09 d0                	or     %edx,%eax$/;"	l
f0107447	obj/kern/kernel.asm	/^f0107447:	89 f2                	mov    %esi,%edx$/;"	l
f0107449	obj/kern/kernel.asm	/^f0107449:	d3 ea                	shr    %cl,%edx$/;"	d
f010744b	obj/kern/kernel.asm	/^f010744b:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f010744f	obj/kern/kernel.asm	/^f010744f:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0107453	obj/kern/kernel.asm	/^f0107453:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0107457	obj/kern/kernel.asm	/^f0107457:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010745a	obj/kern/kernel.asm	/^f010745a:	c3                   	ret    $/;"	l
f010745b	obj/kern/kernel.asm	/^f010745b:	90                   	nop$/;"	l
f010745c	obj/kern/kernel.asm	/^f010745c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107460	obj/kern/kernel.asm	/^f0107460:	39 d6                	cmp    %edx,%esi$/;"	l
f0107462	obj/kern/kernel.asm	/^f0107462:	75 c7                	jne    f010742b <__umoddi3+0x11b>$/;"	l
f0107464	obj/kern/kernel.asm	/^f0107464:	89 d7                	mov    %edx,%edi$/;"	l
f0107466	obj/kern/kernel.asm	/^f0107466:	89 c1                	mov    %eax,%ecx$/;"	l
f0107468	obj/kern/kernel.asm	/^f0107468:	2b 4c 24 0c          	sub    0xc(%esp),%ecx$/;"	l
f010746c	obj/kern/kernel.asm	/^f010746c:	1b 3c 24             	sbb    (%esp),%edi$/;"	l
f010746f	obj/kern/kernel.asm	/^f010746f:	eb ba                	jmp    f010742b <__umoddi3+0x11b>$/;"	l
f0107471	obj/kern/kernel.asm	/^f0107471:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107478	obj/kern/kernel.asm	/^f0107478:	39 f5                	cmp    %esi,%ebp$/;"	l
f010747a	obj/kern/kernel.asm	/^f010747a:	0f 82 f1 fe ff ff    	jb     f0107371 <__umoddi3+0x61>$/;"	l
f0107480	obj/kern/kernel.asm	/^f0107480:	e9 f8 fe ff ff       	jmp    f010737d <__umoddi3+0x6d>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File	access:public
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File	access:public
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File	access:public
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File	access:public
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File	access:public
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File	access:public
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:	access:public
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = -1;$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = -1;$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = -1;$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = -1;$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = -1;$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	inc/fd.h	/^char*	fd2data(struct Fd *fd);$/;"	p	signature:(struct Fd *fd)
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f	signature:(struct Fd *fd)
fd2num	inc/fd.h	/^int	fd2num(struct Fd *fd);$/;"	p	signature:(struct Fd *fd)
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f	signature:(struct Fd *fd)
fd_alloc	inc/fd.h	/^int	fd_alloc(struct Fd **fd_store);$/;"	p	signature:(struct Fd **fd_store)
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f	signature:(struct Fd **fd_store)
fd_close	inc/fd.h	/^int	fd_close(struct Fd *fd, bool must_exist);$/;"	p	signature:(struct Fd *fd, bool must_exist)
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f	signature:(struct Fd *fd, bool must_exist)
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd	access:public
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon3	typeref:struct:Fd::__anon3::FdFile	access:public
fd_lookup	inc/fd.h	/^int	fd_lookup(int fdnum, struct Fd **fd_store);$/;"	p	signature:(int fdnum, struct Fd **fd_store)
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f	signature:(int fdnum, struct Fd **fd_store)
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd	access:public
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd	access:public
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:	signature:(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)
file_create	fs/fs.h	/^int	file_create(const char *path, struct File **f);$/;"	p	signature:(const char *path, struct File **f)
file_flush	fs/fs.h	/^void	file_flush(struct File *f);$/;"	p	signature:(struct File *f)
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f	signature:(struct File *f, uint32_t filebno, char **blk)
file_get_block	fs/fs.h	/^int	file_get_block(struct File *f, uint32_t file_blockno, char **pblk);$/;"	p	signature:(struct File *f, uint32_t file_blockno, char **pblk)
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f	signature:(const char *path, struct File **pf)
file_open	fs/fs.h	/^int	file_open(const char *path, struct File **f);$/;"	p	signature:(const char *path, struct File **f)
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f	signature:(struct File *f, void *buf, size_t count, off_t offset)
file_read	fs/fs.h	/^ssize_t	file_read(struct File *f, void *buf, size_t count, off_t offset);$/;"	p	signature:(struct File *f, void *buf, size_t count, off_t offset)
file_remove	fs/fs.h	/^int	file_remove(const char *path);$/;"	p	signature:(const char *path)
file_set_size	fs/fs.h	/^int	file_set_size(struct File *f, off_t newsize);$/;"	p	signature:(struct File *f, off_t newsize)
file_write	fs/fs.h	/^int	file_write(struct File *f, const void *buf, size_t count, off_t offset);$/;"	p	signature:(struct File *f, const void *buf, size_t count, off_t offset)
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient	access:public
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f	signature:(struct Dir *d)
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f	signature:(void)
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f	signature:(struct File *f, uint32_t start, uint32_t len)
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush	access:public
flush_block	fs/fs.h	/^void	flush_block(void *addr);$/;"	p	signature:(void *addr)
fork	inc/lib.h	/^envid_t	fork(void);$/;"	p	signature:(void)
fork	lib/fork.c	/^fork(void)$/;"	f	signature:(void)
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f	signature:(const char *cur, char branch)
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f	signature:(const char *cur)
forktree	user/forktree.c	/^void forktree(const char *cur);$/;"	p	file:	signature:(const char *cur)
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f	signature:(int fd, const char *fmt, ...)
fs_init	fs/fs.c	/^fs_init(void)$/;"	f	signature:(void)
fs_init	fs/fs.h	/^void	fs_init(void);$/;"	p	signature:(void)
fs_sync	fs/fs.h	/^void	fs_sync(void);$/;"	p	signature:(void)
fs_test	fs/fs.h	/^void	fs_test(void);$/;"	p	signature:(void)
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:	signature:(unsigned type, void *dstva)
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	inc/lib.h	/^int	fstat(int fd, struct Stat *statbuf);$/;"	p	signature:(int fd, struct Stat *statbuf)
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f	signature:(int fdnum, struct Stat *stat)
ftruncate	inc/lib.h	/^int	ftruncate(int fd, off_t size);$/;"	p	signature:(int fd, off_t size)
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f	signature:(int fdnum, off_t newsize)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f	access:public
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:	signature:(uint32_t pcs[])
get_current_test	gradelib.py	/^def get_current_test():$/;"	f	access:public
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f	access:public
getchar	inc/lib.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getchar	lib/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f	signature:(char *s, char **p1)
gettoken	user/sh.c	/^int gettoken(char *s, char **token);$/;"	p	file:	signature:(char *s, char **token)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient	access:public
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:	signature:(struct spinlock *lock)
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/kern/kernel.asm	/^	i = page_lookup(e1->env_pgdir, srcva, &pte);$/;"	d
i	obj/user/hello.asm	/^	i = fork();$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:	signature:(void)
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile	access:public
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
ide_probe_disk1	fs/fs.h	/^bool	ide_probe_disk1(void);$/;"	p	signature:(void)
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f	signature:(void)
ide_read	fs/fs.h	/^int	ide_read(uint32_t secno, void *dst, size_t nsecs);$/;"	p	signature:(uint32_t secno, void *dst, size_t nsecs)
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f	signature:(uint32_t secno, void *dst, size_t nsecs)
ide_set_disk	fs/fs.h	/^void	ide_set_disk(int diskno);$/;"	p	signature:(int diskno)
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f	signature:(int d)
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:	signature:(bool check_error)
ide_write	fs/fs.h	/^int	ide_write(uint32_t secno, const void *src, size_t nsecs);$/;"	p	signature:(uint32_t secno, const void *src, size_t nsecs)
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f	signature:(uint32_t secno, const void *src, size_t nsecs)
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:	signature:(envid_t child, const char **argv, uintptr_t *init_esp)
init_stack	lib/spawn.c	/^static int init_stack(envid_t child, const char **argv, uintptr_t *init_esp);$/;"	p	file:	signature:(envid_t child, const char **argv, uintptr_t *init_esp)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int mon_changePermission(int argc, char **argv, struct Trapframe *tf) $/;"	l
int	obj/kern/kernel.asm	/^int mon_continue(int argc, char **argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int mon_dump(int argc, char **argv, struct Trapframe *tf) {$/;"	l
int	obj/kern/kernel.asm	/^int mon_setcolor(int argc, char **argv, struct Trapframe *tf) {$/;"	l
int	obj/kern/kernel.asm	/^int mon_showPT(int argc, char **argv, struct Trapframe *tf) {$/;"	l
int	obj/kern/kernel.asm	/^int mon_showmapping(int argc, char **argv, struct Trapframe *tf) $/;"	l
int	obj/kern/kernel.asm	/^int mon_si(int argc, char **argv, struct Trapframe *tf) {$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
ipc_find_env	inc/lib.h	/^envid_t	ipc_find_env(enum EnvType type);$/;"	p	signature:(enum EnvType type)
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f	signature:(enum EnvType type)
ipc_recv	inc/lib.h	/^int32_t ipc_recv(envid_t *from_env_store, void *pg, int *perm_store);$/;"	p	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_send	inc/lib.h	/^void	ipc_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f	signature:(envid_t to_env, uint32_t val, void *pg, int perm)
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f	signature:(uint16_t mask)
irq_setmask_8259A	kern/picirq.h	/^void irq_setmask_8259A(uint16_t mask);$/;"	p	signature:(uint16_t mask)
iscons	inc/lib.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
j	obj/kern/kernel.asm	/^			j = now;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	m	class:GDBClient	access:public
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
l	obj/kern/kernel.asm	/^		l = 0;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/cpu.h	/^void lapic_eoi(void);$/;"	p	signature:(void)
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f	signature:(void)
lapic_init	kern/cpu.h	/^void lapic_init(void);$/;"	p	signature:(void)
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f	signature:(void)
lapic_ipi	kern/cpu.h	/^void lapic_ipi(int vector);$/;"	p	signature:(int vector)
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f	signature:(int vector)
lapic_startap	kern/cpu.h	/^void lapic_startap(uint8_t apicid, uint32_t addr);$/;"	p	signature:(uint8_t apicid, uint32_t addr)
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f	signature:(uint8_t apicid, uint32_t addr)
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:	signature:(int index, int value)
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
line	user/num.c	/^int line = 0;$/;"	v
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:	signature:(struct Env *e, uint8_t *binary, size_t size)
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f	signature:(void)
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f	signature:(const char *path, const char *prefix)
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f	signature:(const char *prefix, bool isdir, off_t size, const char *name)
ls1	user/ls.c	/^void ls1(const char*, bool, off_t, const char*);$/;"	p	file:	signature:(const char*, bool, off_t, const char*)
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f	signature:(const char *path, const char *prefix)
lsdir	user/ls.c	/^void lsdir(const char*, const char*);$/;"	p	file:	signature:(const char*, const char*)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
make	gradelib.py	/^def make(*target):$/;"	f	access:public
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:	signature:(envid_t child, uintptr_t va, size_t memsz, int fd, size_t filesz, off_t fileoffset, int perm)
map_segment	lib/spawn.c	/^static int map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	p	file:	signature:(envid_t child, uintptr_t va, size_t memsz, int fd, size_t filesz, off_t fileoffset, int perm)
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner	access:public
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f	access:public
max	obj/kern/kernel.asm	/^			max = envs[now].priority;$/;"	d
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f	access:public
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	signature:(unsigned reg)
mc146818_read	kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	signature:(unsigned reg, unsigned datum)
mc146818_write	kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	signature:(void)
mem_init	kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:	signature:(void)
mem_init_mp	kern/pmap.c	/^static void mem_init_mp(void);$/;"	p	file:	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:	signature:(int us)
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f	signature:(physaddr_t pa, size_t size)
mmio_map_region	kern/pmap.h	/^void *	mmio_map_region(physaddr_t pa, size_t size);$/;"	p	signature:(physaddr_t pa, size_t size)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_changePermission	kern/monitor.c	/^int mon_changePermission(int argc, char **argv, struct Trapframe *tf) $/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_changePermission	kern/monitor.h	/^int mon_changePermission(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_continue	kern/monitor.c	/^int mon_continue(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_continue	kern/monitor.h	/^int mon_continue(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_dump	kern/monitor.c	/^int mon_dump(int argc, char **argv, struct Trapframe *tf) {$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_dump	kern/monitor.h	/^int mon_dump(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_setcolor	kern/monitor.c	/^int mon_setcolor(int argc, char **argv, struct Trapframe *tf) {$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_setcolor	kern/monitor.h	/^int mon_setcolor(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_showPT	kern/monitor.c	/^int mon_showPT(int argc, char **argv, struct Trapframe *tf) {$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_showPT	kern/monitor.h	/^int mon_showPT(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_showmapping	kern/monitor.c	/^int mon_showmapping(int argc, char **argv, struct Trapframe *tf) $/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_showmapping	kern/monitor.h	/^int mon_showmapping(int argc, char **argv, struct Trapframe *tf); $/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_si	kern/monitor.c	/^int mon_si(int argc, char **argv, struct Trapframe *tf) {$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_si	kern/monitor.h	/^int mon_si(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
mp::imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
mp::length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
mp::physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
mp::reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
mp::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
mp::specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
mp::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
mp_init	kern/cpu.h	/^void mp_init(void);$/;"	p	signature:(void)
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f	signature:(void)
mp_main	kern/init.c	/^mp_main(void)$/;"	f	signature:(void)
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconf::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
mpconf::entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
mpconf::entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
mpconf::lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
mpconf::length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
mpconf::product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
mpconf::reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
mpconf::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
mpconf::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
mpconf::xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
mpconf::xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:	signature:(struct mp **pmp)
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpproc::apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
mpproc::feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
mpproc::flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
mpproc::reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
mpproc::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
mpproc::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
mpproc::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:	signature:(void)
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:	signature:(physaddr_t a, int len)
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon7	file:	access:public
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon7	file:	access:public
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:	access:public
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP(nextfree, PGSIZE);$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/kern/kernel.asm	/^		now = (ENVX(curenv->env_id) + 1)% NENV;$/;"	d
now	obj/kern/kernel.asm	/^		now = 0;$/;"	d
now	obj/kern/kernel.asm	/^		now = pgdir_walk(env->env_pgdir, (void*)begin, 0);$/;"	d
now	obj/kern/kernel.asm	/^		now = pgdir_walk(pgdir, (void*)va, 1);$/;"	d
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f	signature:(int f, const char *s)
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:	signature:(int r)
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:	access:public
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:	access:public
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:	access:public
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:	access:public
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	71;"	d
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open	access:public
open	inc/lib.h	/^int	open(const char *path, int mode);$/;"	p	signature:(const char *path, int mode)
open	lib/file.c	/^open(const char *path, int mode)$/;"	f	signature:(const char *path, int mode)
opencons	inc/lib.h	/^int	opencons(void);$/;"	p	signature:(void)
opencons	lib/console.c	/^opencons(void)$/;"	f	signature:(void)
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f	signature:(const char *name)
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f	signature:(struct OpenFile **o)
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f	signature:(envid_t envid, uint32_t fileid, struct OpenFile **po)
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
os	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:	access:public
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_alloc	kern/pmap.h	/^struct PageInfo *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	signature:(struct PageInfo* pp)
page_decref	kern/pmap.h	/^void	page_decref(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
page_fault_handler	kern/trap.h	/^void page_fault_handler(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_free	kern/pmap.h	/^void	page_free(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	signature:(void)
page_init	kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_insert	kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_lookup	kern/pmap.h	/^struct PageInfo *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
page_remove	kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pageref	inc/lib.h	/^int	pageref(void *addr);$/;"	p	signature:(void *addr)
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f	signature:(void *v)
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo*) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	signature:(pde_t *pgdir, const void *va, int create)
pgdir_walk	kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((uint8_t *) now + now->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f	signature:(void)
pic_init	kern/picirq.h	/^void pic_init(void);$/;"	p	signature:(void)
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	inc/lib.h	/^int	pipe(int pipefds[2]);$/;"	p	signature:(int pipefds[2])
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f	signature:(int pfd[2])
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipeisclosed	inc/lib.h	/^int	pipeisclosed(int pipefd);$/;"	p	signature:(int pipefd)
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f	signature:(int fdnum)
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f	access:public
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f	access:public
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f	signature:(void)
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f	signature:(int fd)
printPermission	kern/monitor.c	/^void printPermission(pte_t now) {$/;"	f	signature:(pte_t now)
print_function	gradelib.py	/^from __future__ import print_function$/;"	i
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	signature:(struct PushRegs *regs)
print_regs	kern/trap.h	/^void print_regs(struct PushRegs *regs);$/;"	p	signature:(struct PushRegs *regs)
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
print_trapframe	kern/trap.h	/^void print_trapframe(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printbuf::buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
printbuf::buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
printbuf::cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
printbuf::error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:	access:public
printbuf::fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:	access:public
printbuf::idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
printbuf::idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
printbuf::result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:	access:public
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
priority	inc/env.h	/^	int priority;$/;"	m	struct:Env	access:public
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
ptdir	obj/kern/kernel.asm	/^			ptdir = (pte_t*) KADDR(page2pa(temp));$/;"	d
ptdir	obj/kern/kernel.asm	/^		ptdir = (pte_t*) KADDR(PTE_ADDR(pgdir[PDX(va)]));$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
ptr	obj/fs/fs.asm	/^		ptr = &f->f_direct[filebno];$/;"	d
ptr	obj/fs/fs.asm	/^		ptr = (uint32_t*)diskaddr(f->f_indirect) + filebno - NDIRECT;$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:	signature:(int ch, void *thunk)
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:	signature:(int ch, struct printbuf *b)
pxtoi	kern/monitor.c	/^bool pxtoi(uint32_t *va, char *origin) {$/;"	f	signature:(uint32_t *va, char *origin)
quote	gradelib.py	/^    from pipes import quote$/;"	i
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = ide_read(blockno * BLKSECTS , addr , BLKSECTS);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/fs/fs.asm	/^	r = sys_page_alloc(0, addr, PTE_W | PTE_U | PTE_P);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^			r = syscall(tf->tf_regs.reg_eax, tf->tf_regs.reg_edx, tf->tf_regs.reg_ecx, tf->tf_regs.reg_ebx, tf->tf_regs.reg_edi, tf->tf_regs.reg_esi);$/;"	d
r	obj/kern/kernel.asm	/^	r = envid2env(dstenvid , &e2 , 1);$/;"	d
r	obj/kern/kernel.asm	/^	r = envid2env(envid, &e, 1);$/;"	d
r	obj/kern/kernel.asm	/^	r = envid2env(srcenvid, &e1, 1);$/;"	d
r	obj/kern/kernel.asm	/^                        r = page_insert(e->env_pgdir, pg, e->env_ipc_dstva, perm);$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/forktree.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/forktree.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/forktree.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/forktree.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/hello.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/hello.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/hello.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/hello.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/hello.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/hello.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/hello.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/hello.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/hello.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^			r = sys_page_map (0, (void *)i, child , (void *)i, uvpt[i \/ PGSIZE] &PTE_SYSCALL);$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^			r = sys_page_map (0, (void *)i, child , (void *)i, uvpt[i \/ PGSIZE] &PTE_SYSCALL);$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/pingpong.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/pingpong.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/pingpong.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/pingpong.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/pingpongs.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/pingpongs.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/pingpongs.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/pingpongs.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/primes.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/primes.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/primes.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/primes.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/primespipe.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/primespipe.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/primespipe.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/primespipe.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^			r = sys_page_map (0, (void *)i, child , (void *)i, uvpt[i \/ PGSIZE] &PTE_SYSCALL);$/;"	d
r	obj/user/sh.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/sh.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/sh.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/sh.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/sh.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^			r = sys_page_map (0, (void *)i, child , (void *)i, uvpt[i \/ PGSIZE] &PTE_SYSCALL);$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/spin.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/spin.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/spin.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/spin.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/stresssched.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/stresssched.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/stresssched.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/stresssched.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/testfdsharing.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/testfdsharing.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/testfdsharing.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/testfdsharing.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/testpipe.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/testpipe.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/testpipe.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/testpipe.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/testpiperace.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/testpiperace.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/testpiperace.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/testpiperace.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/testpiperace2.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/testpiperace2.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/testpiperace2.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/testpiperace2.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^			r = sys_page_map (0, (void *)i, child , (void *)i, uvpt[i \/ PGSIZE] &PTE_SYSCALL);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/testpteshare.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/testpteshare.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/testpteshare.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/testpteshare.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^			r = sys_page_map (0, (void *)i, child , (void *)i, uvpt[i \/ PGSIZE] &PTE_SYSCALL);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_env_set_pgfault_upcall(0, _pgfault_upcall);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map (0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), uvpt[pn] & PTE_SYSCALL);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), 0, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P | PTE_COW);$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_map(0, (void*) (pn * PGSIZE), envid, (void*) (pn * PGSIZE), PTE_U | PTE_P);$/;"	d
r	obj/user/testshell.asm	/^	 	r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/testshell.asm	/^	 	r = sys_env_set_status(envid, ENV_RUNNABLE);$/;"	d
r	obj/user/testshell.asm	/^	 	r = sys_page_alloc(envid, (void *)(UXSTACKTOP - PGSIZE), PTE_U |PTE_W | PTE_P);$/;"	d
r	obj/user/testshell.asm	/^	r =	sys_page_map(0, (void*) PFTEMP, 0, addr, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^	r = sys_page_alloc(0, (void*)PFTEMP, PTE_P | PTE_W | PTE_U);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
re	grade-lab1	/^import re$/;"	i
re	grade-lab4	/^import re$/;"	i
re	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read	access:public
read	inc/lib.h	/^ssize_t	read(int fd, void *buf, size_t nbytes);$/;"	p	signature:(int fd, void *buf, size_t nbytes)
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f	signature:(int fdnum, void *buf, size_t n)
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read	access:public
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/lib.h	/^char*	readline(const char *buf);$/;"	p	signature:(const char *buf)
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f	signature:(int f, void *out, size_t n)
readn	inc/lib.h	/^ssize_t	readn(int fd, void *buf, size_t nbytes);$/;"	p	signature:(int fd, void *buf, size_t nbytes)
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f	signature:(int fdnum, void *buf, size_t n)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:	signature:(struct Env *e, void *va, size_t len)
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	access:public
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
regs	user/faultregs.c	/^struct regs$/;"	s	file:
regs::eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
regs::eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
regs::esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
regs::regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove	access:public
remove	inc/lib.h	/^int	remove(const char *path);$/;"	p	signature:(const char *path)
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write	access:public
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush	access:public
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read	access:public
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat	access:public
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write	access:public
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read	access:public
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write	access:public
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open	access:public
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open	access:public
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove	access:public
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
reset_fs	gradelib.py	/^def reset_fs():$/;"	f	access:public
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:	access:public
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read	access:public
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat	access:public
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat	access:public
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat	access:public
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon8	file:	access:public
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner	access:public
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu	access:public
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	access:public
run_tests	gradelib.py	/^def run_tests():$/;"	f	access:public
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f	signature:(char* s)
runit	obj/user/sh.asm	/^runit:$/;"	l
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super	access:public
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super	access:public
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File	access:public
save	gradelib.py	/^def save(path):$/;"	f	access:public
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	access:public
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f	signature:(void)
sched_halt	kern/sched.c	/^void sched_halt(void);$/;"	p	file:	signature:(void)
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f	signature:(void)
sched_yield	kern/sched.h	/^void sched_yield(void) __attribute__((noreturn));$/;"	p	signature:(void)
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
seek	inc/lib.h	/^int	seek(int fd, off_t offset);$/;"	p	signature:(int fd, off_t offset)
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f	signature:(int fdnum, off_t offset)
select	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
serve	fs/serv.c	/^serve(void)$/;"	f	signature:(void)
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f	signature:(envid_t envid, struct Fsreq_flush *req)
serve_init	fs/serv.c	/^serve_init(void)$/;"	f	signature:(void)
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f	signature:(envid_t envid, struct Fsreq_open *req, void **pg_store, int *perm_store)
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f	signature:(envid_t envid, union Fsipc *ipc)
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f	signature:(envid_t envid, union Fsipc *ipc)
set_attribute_color	kern/console.c	/^void set_attribute_color(uint16_t back, uint16_t fore) {$/;"	f	signature:(uint16_t back, uint16_t fore)
set_attribute_color	kern/console.h	/^void set_attribute_color(uint16_t back, uint16_t fore);$/;"	p	signature:(uint16_t back, uint16_t fore)
set_pgfault_handler	inc/lib.h	/^void	set_pgfault_handler(void (*handler)(struct UTrapframe *utf));$/;"	p	signature:(void (*handler)(struct UTrapframe *utf))
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f	signature:(void (*handler)(struct UTrapframe *utf))
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size	access:public
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	access:public
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	access:public
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	access:public
sfork	inc/lib.h	/^envid_t	sfork(void);	\/\/ Challenge!$/;"	p	signature:(void)
sfork	lib/fork.c	/^sfork(void)$/;"	f	signature:(void)
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f	access:public
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	access:public
shutil	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
size	obj/kern/kernel.asm	/^	size = ROUNDUP(pa+size, PGSIZE);$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:	signature:(const char *p)
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
socket	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
spawn	inc/lib.h	/^envid_t	spawn(const char *program, const char **argv);$/;"	p	signature:(const char *program, const char **argv)
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f	signature:(const char *prog, const char **argv)
spawnl	inc/lib.h	/^envid_t	spawnl(const char *program, const char *arg0, ...);$/;"	p	signature:(const char *program, const char *arg0, ...)
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f	signature:(const char *prog, const char *arg0, ...)
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_lock	kern/spinlock.h	/^void spin_lock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.h	/^void spin_unlock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock::cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
spinlock::locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
spinlock::name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
spinlock::pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev	access:public
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat	access:public
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat	access:public
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat	access:public
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f	signature:(struct File *f, struct Dir *dout)
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat	access:public
stat	inc/lib.h	/^int	stat(const char *path, struct Stat *statbuf);$/;"	p	signature:(const char *path, struct Stat *statbuf)
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f	signature:(const char *path, struct Stat *stat)
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat	access:public
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void sys_change_priority(envid_t envid, int p) {$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	access:public
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f	access:public
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f	access:public
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
subprocess	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:	signature:(void *addr, int len)
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f	signature:(const char *s, int n)
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sync	inc/lib.h	/^int	sync(void);$/;"	p	signature:(void)
sys	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sys_cgetc	inc/lib.h	/^int	sys_cgetc(void);$/;"	p	signature:(void)
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:	signature:(void)
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	signature:(void)
sys_change_priority	inc/lib.h	/^void sys_change_priority(envid_t envid, int p);$/;"	p	signature:(envid_t envid, int p)
sys_change_priority	kern/syscall.c	/^static void sys_change_priority(envid_t envid, int p) {$/;"	f	file:	signature:(envid_t envid, int p)
sys_change_priority	lib/syscall.c	/^sys_change_priority(envid_t envid, int p) $/;"	f	signature:(envid_t envid, int p)
sys_cputs	inc/lib.h	/^void	sys_cputs(const char *string, size_t len);$/;"	p	signature:(const char *string, size_t len)
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:	signature:(const char *s, size_t len)
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	signature:(const char *s, size_t len)
sys_env_destroy	inc/lib.h	/^int	sys_env_destroy(envid_t);$/;"	p	signature:(envid_t)
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:	signature:(envid_t envid)
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	signature:(envid_t envid)
sys_env_set_pgfault_upcall	inc/lib.h	/^int	sys_env_set_pgfault_upcall(envid_t env, void *upcall);$/;"	p	signature:(envid_t env, void *upcall)
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:	signature:(envid_t envid, void *func)
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f	signature:(envid_t envid, void *upcall)
sys_env_set_status	inc/lib.h	/^int	sys_env_set_status(envid_t env, int status);$/;"	p	signature:(envid_t env, int status)
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:	signature:(envid_t envid, int status)
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	signature:(envid_t envid, int status)
sys_env_set_trapframe	inc/lib.h	/^int	sys_env_set_trapframe(envid_t env, struct Trapframe *tf);$/;"	p	signature:(envid_t env, struct Trapframe *tf)
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:	signature:(envid_t envid, struct Trapframe *tf)
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	signature:(envid_t envid, struct Trapframe *tf)
sys_exofork	inc/lib.h	/^static envid_t sys_exofork(void);$/;"	p	signature:(void)
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f	signature:(void)
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:	signature:(void)
sys_getenvid	inc/lib.h	/^envid_t	sys_getenvid(void);$/;"	p	signature:(void)
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:	signature:(void)
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	signature:(void)
sys_ipc_recv	inc/lib.h	/^int	sys_ipc_recv(void *rcv_pg);$/;"	p	signature:(void *rcv_pg)
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:	signature:(void *dstva)
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	signature:(void *dstva)
sys_ipc_try_send	inc/lib.h	/^int	sys_ipc_try_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:	signature:(envid_t envid, uint32_t value, void *srcva, unsigned perm)
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f	signature:(envid_t envid, uint32_t value, void *srcva, int perm)
sys_page_alloc	inc/lib.h	/^int	sys_page_alloc(envid_t env, void *pg, int perm);$/;"	p	signature:(envid_t env, void *pg, int perm)
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:	signature:(envid_t envid, void *va, int perm)
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	signature:(envid_t envid, void *va, int perm)
sys_page_map	inc/lib.h	/^int	sys_page_map(envid_t src_env, void *src_pg,$/;"	p	signature:(envid_t src_env, void *src_pg, envid_t dst_env, void *dst_pg, int perm)
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:	signature:(envid_t srcenvid, void *srcva, envid_t dstenvid, void *dstva, int perm)
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f	signature:(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)
sys_page_unmap	inc/lib.h	/^int	sys_page_unmap(envid_t env, void *pg);$/;"	p	signature:(envid_t env, void *pg)
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:	signature:(envid_t envid, void *va)
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	signature:(envid_t envid, void *va)
sys_yield	inc/lib.h	/^void	sys_yield(void);$/;"	p	signature:(void)
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:	signature:(void)
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f	signature:(void)
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	signature:(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	kern/syscall.h	/^int32_t syscall(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5);$/;"	p	signature:(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:	signature:(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f	access:public
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f	access:public
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f	access:public
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f	access:public
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f	access:public
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f	access:public
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f	access:public
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f	access:public
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f	access:public
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f	access:public
test_check_page	grade-lab2	/^def test_check_page():$/;"	f	access:public
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f	access:public
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f	access:public
test_divzero	grade-lab3	/^def test_divzero():$/;"	f	access:public
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f	access:public
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f	access:public
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f	access:public
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f	access:public
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f	access:public
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f	access:public
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f	access:public
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f	access:public
test_faultread	grade-lab3	/^def test_faultread():$/;"	f	access:public
test_faultread	grade-lab4	/^def test_faultread():$/;"	f	access:public
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f	access:public
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f	access:public
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f	access:public
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f	access:public
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f	access:public
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f	access:public
test_forktree	grade-lab4	/^def test_forktree():$/;"	f	access:public
test_fs	grade-lab5	/^def test_fs():$/;"	f	access:public
test_hello	grade-lab3	/^def test_hello():$/;"	f	access:public
test_icode	grade-lab5	/^def test_icode():$/;"	f	access:public
test_jos	grade-lab1	/^def test_jos():$/;"	f	access:public
test_jos	grade-lab2	/^def test_jos():$/;"	f	access:public
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f	access:public
test_primes	grade-lab4	/^def test_primes():$/;"	f	access:public
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f	access:public
test_printf	grade-lab1	/^def test_printf():$/;"	f	access:public
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f	access:public
test_softint	grade-lab3	/^def test_softint():$/;"	f	access:public
test_spawn	grade-lab5	/^def test_spawn():$/;"	f	access:public
test_spin	grade-lab4	/^def test_spin():$/;"	f	access:public
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f	access:public
test_testbss	grade-lab3	/^def test_testbss():$/;"	f	access:public
test_testshell	grade-lab5	/^def test_testshell():$/;"	f	access:public
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/hello.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
time	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
tlb_invalidate	kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:	signature:(struct Trapframe *tf)
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	signature:(void)
trap_init	kern/trap.h	/^void trap_init(void);$/;"	p	signature:(void)
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	signature:(void)
trap_init_percpu	kern/trap.h	/^void trap_init_percpu(void);$/;"	p	signature:(void)
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:	signature:(int trapno)
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
uetf	obj/kern/kernel.asm	/^		uetf = (struct UTrapframe *) add;$/;"	d
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/kern/kernel.asm	/^uint32_t xtoi(char* origin, bool* check) {$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	inc/lib.h	/^void	umain(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
umain	lib/libmain.c	/^extern void umain(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f	signature:(void)
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
usage	fs/fsformat.c	/^usage(void)$/;"	f	signature:(void)
usage	user/ls.c	/^usage(void)$/;"	f	signature:(void)
usage	user/lsfd.c	/^usage(void)$/;"	f	signature:(void)
usage	user/sh.c	/^usage(void)$/;"	f	signature:(void)
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_assert	kern/pmap.h	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.h	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = begin; return -E_FAULT;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = begin;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner	access:public
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_is_dirty	fs/fs.h	/^bool	va_is_dirty(void *va);$/;"	p	signature:(void *va)
va_is_mapped	fs/fs.h	/^bool	va_is_mapped(void *va);$/;"	p	signature:(void *va)
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vectors	kern/trapentry.S	/^vectors:$/;"	l
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f	signature:(int fd, const char *fmt, va_list ap)
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printPermission(pte_t now) {$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void set_attribute_color(uint16_t back, uint16_t fore) {$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
wait	gradelib.py	/^    def wait(self):$/;"	f	access:public
wait	inc/lib.h	/^void	wait(envid_t env);$/;"	p	signature:(envid_t env)
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f	signature:(envid_t envid)
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:	signature:(const char *path, struct File **pdir, struct File **pf, char *lastelem)
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon8	file:	access:public
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write	access:public
write	inc/lib.h	/^ssize_t	write(int fd, const void *buf, size_t nbytes);$/;"	p	signature:(int fd, const void *buf, size_t nbytes)
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f	signature:(int fdnum, const void *buf, size_t n)
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:	signature:(struct printbuf *b)
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f	signature:(struct Dir *dir, const char *name)
wrong	user/testshell.c	/^void wrong(int, int, int);$/;"	p	file:	signature:(int, int, int)
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f	signature:(int rfd, int kfd, int off)
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:	signature:(const char *path, int mode)
xtoi	kern/monitor.c	/^uint32_t xtoi(char* origin, bool* check) {$/;"	f	signature:(char* origin, bool* check)
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
