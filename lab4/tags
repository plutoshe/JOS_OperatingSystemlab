!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon6
ALT	kern/console.c	224;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	291;"	d	file:
CAPSLOCK	kern/console.c	226;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	17;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COLOR_BLK	kern/monitor.c	19;"	d	file:
COLOR_BLU	kern/monitor.c	20;"	d	file:
COLOR_CYN	kern/monitor.c	27;"	d	file:
COLOR_GRN	kern/monitor.c	21;"	d	file:
COLOR_GRY	kern/monitor.c	23;"	d	file:
COLOR_ORG	kern/monitor.c	25;"	d	file:
COLOR_PUR	kern/monitor.c	26;"	d	file:
COLOR_RED	kern/monitor.c	22;"	d	file:
COLOR_WHT	kern/monitor.c	18;"	d	file:
COLOR_YLW	kern/monitor.c	24;"	d	file:
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	390;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon7
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon7
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon7
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	223;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Command::desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
Command::func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
Command::name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
CpuInfo::cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
CpuInfo::cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f	access:public
E0ESC	kern/console.c	230;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon3
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon3
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon3
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon3
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon3
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon2
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon2
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon2
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon2
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon2
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon2
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon2
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon2
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Env	inc/env.h	/^struct Env {$/;"	s
Env::env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
Env::env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
Env::env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
Env::env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
Env::env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
Env::env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
Env::env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
Env::env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
Env::env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
Env::env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
Env::env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
Env::env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
Env::env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
Env::env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
Env::env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c	inherits:object
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	324;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon2
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MYHANDLER	kern/trapentry.S	/^#define MYHANDLER(name, num)						\\$/;"	d
MYHANDLER_NOEC	kern/trapentry.S	/^#define MYHANDLER_NOEC(name, num)					\\$/;"	d
MYHANDLER_NULL	kern/trapentry.S	/^#define MYHANDLER_NULL() \\$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	48;"	d	file:
NCOMMANDS	obj/kern/kernel.asm	/^#define NCOMMANDS (sizeof(commands)\/sizeof(commands[0]))$/;"	d
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	220;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon4
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	227;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	86;"	d
O_CREAT	inc/lib.h	88;"	d
O_EXCL	inc/lib.h	90;"	d
O_MKDIR	inc/lib.h	91;"	d
O_RDONLY	inc/lib.h	83;"	d
O_RDWR	inc/lib.h	85;"	d
O_TRUNC	inc/lib.h	89;"	d
O_WRONLY	inc/lib.h	84;"	d
OptionParser	gradelib.py	/^from optparse import OptionParser$/;"	i
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Sun Oct 14 22:00:07 EDT 2012$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
POINT_SIZE	kern/monitor.c	223;"	d	file:
POINT_SIZE	obj/kern/kernel.asm	/^#define POINT_SIZE 4$/;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	76;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
PageInfo::pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
PageInfo::pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
Popen	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
PushRegs::reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c	inherits:object
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c	inherits:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	228;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	222;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon4
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon4
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon4
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon4
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon4
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon4
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon4
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon4
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon4
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon4
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon4
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon4
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon4
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c	inherits:Exception
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
Trapframe::tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
Trapframe::tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UTrapframe::utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
UserStabData::stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
UserStabData::stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
UserStabData::stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WHITESPACE	kern/monitor.c	323;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__anon5::buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon5	file:	access:public
__anon5::rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon5	file:	access:public
__anon5::wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon5	file:	access:public
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner	access:public
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU	access:public
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient	access:public
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:	access:private
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:	access:private
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:	access:private
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:	access:private
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f	signature:(struct spinlock *lk, char *name)
__spin_initlock	kern/spinlock.h	/^void __spin_initlock(struct spinlock *lk, char *name);$/;"	p	signature:(struct spinlock *lk, char *name)
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f	signature:(const char *file, int line, const char *fmt, ...)
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	lib/pgfault.c	/^extern void _pgfault_upcall(void);$/;"	p	file:	signature:(void)
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	user/faultnostack.c	/^void _pgfault_upcall();$/;"	p	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f	signature:(const char *file, int line, const char *fmt,...)
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f	access:public
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f	access:public
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match	access:public
attribute_color	kern/console.h	/^static uint16_t attribute_color = 0x0700;$/;"	v
attribute_color	obj/kern/kernel.asm	/^	attribute_color = (back << 12) | (fore << 8);$/;"	d
backtrace	kern/trap.h	/^void backtrace(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
begin	obj/kern/kernel.asm	/^	begin = ROUNDUP(begin, PGSIZE); $/;"	d
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/kern/kernel.asm	/^bool pxtoi(uint32_t *va, char *origin) {$/;"	l
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:	signature:(uint32_t n)
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:	signature:(void)
boot_aps	kern/init.c	/^static void boot_aps(void);$/;"	p	file:	signature:(void)
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
boot_map_region	kern/pmap.c	/^static void boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f	signature:(void)
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient	access:public
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon5	file:	access:public
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = c + attribute_color;$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f	access:public
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:	signature:(void)
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:	signature:(int c)
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_call	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:	signature:(void)
check_kern_pgdir	kern/pmap.c	/^static void check_kern_pgdir(void);$/;"	p	file:	signature:(void)
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:	signature:(void)
check_page	kern/pmap.c	/^static void check_page(void);$/;"	p	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:	signature:(void)
check_page_alloc	kern/pmap.c	/^static void check_page_alloc(void);$/;"	p	file:	signature:(void)
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:	signature:(bool only_low_memory)
check_page_free_list	kern/pmap.c	/^static void check_page_free_list(bool only_low_memory);$/;"	p	file:	signature:(bool only_low_memory)
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:	signature:(void)
check_page_installed_pgdir	kern/pmap.c	/^static void check_page_installed_pgdir(void);$/;"	p	file:	signature:(void)
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:	signature:(struct regs* a, const char *an, struct regs* b, const char *bn, const char *testname)
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:	signature:(pde_t *pgdir, uintptr_t va)
check_va2pa	kern/pmap.c	/^static physaddr_t check_va2pa(pde_t *pgdir, uintptr_t va);$/;"	p	file:	signature:(pde_t *pgdir, uintptr_t va)
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient	access:public
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f	access:public
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon5	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f	signature:(void)
cons_getc	kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	kern/console.c	/^cons_init(void)$/;"	f	signature:(void)
cons_init	kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:	signature:(int (*proc)(void))
cons_intr	kern/console.c	/^static void cons_intr(int (*proc)(void));$/;"	p	file:	signature:(int (*proc)(void))
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:	signature:(int c)
cons_putc	kern/console.c	/^static void cons_putc(int c);$/;"	p	file:	signature:(int c)
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient	access:public
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f	signature:(const char *fmt, ...)
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpunum	kern/cpu.h	/^int cpunum(void);$/;"	p	signature:(void)
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f	signature:(void)
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	kern/console.c	/^cputchar(int c)$/;"	f	signature:(int c)
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f	signature:(int ch)
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f	signature:(uintptr_t addr, struct Eipdebuginfo *info)
debuginfo_eip	kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:	signature:(void)
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:	access:public
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f	signature:(void)
dumbfork	user/dumbfork.c	/^envid_t dumbfork(void);$/;"	p	file:	signature:(void)
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:	signature:(envid_t envid, unsigned pn)
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f	signature:(envid_t dstenv, void *addr)
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t*) read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
eip	obj/kern/kernel.asm	/^	eip = (uint32_t*) ebp[1];$/;"	d
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
end	obj/kern/kernel.asm	/^	end   = ROUNDUP(end, PGSIZE);$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f	access:public
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f	signature:(struct Env **newenv_store, envid_t parent_id)
env_alloc	kern/env.h	/^int	env_alloc(struct Env **e, envid_t parent_id);$/;"	p	signature:(struct Env **e, envid_t parent_id)
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f	signature:(uint8_t *binary, size_t size, enum EnvType type)
env_create	kern/env.h	/^void	env_create(uint8_t *binary, size_t size, enum EnvType type);$/;"	p	signature:(uint8_t *binary, size_t size, enum EnvType type)
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f	signature:(struct Env *e)
env_destroy	kern/env.h	/^void	env_destroy(struct Env *e);	\/\/ Does not return if e == curenv$/;"	p	signature:(struct Env *e)
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f	signature:(struct Env *e)
env_free	kern/env.h	/^void	env_free(struct Env *e);$/;"	p	signature:(struct Env *e)
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = NULL;	$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
env_init	kern/env.c	/^env_init(void)$/;"	f	signature:(void)
env_init	kern/env.h	/^void	env_init(void);$/;"	p	signature:(void)
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f	signature:(void)
env_init_percpu	kern/env.h	/^void	env_init_percpu(void);$/;"	p	signature:(void)
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
env_pop_tf	kern/env.h	/^void	env_pop_tf(struct Trapframe *tf) __attribute__((noreturn));$/;"	p	signature:(struct Trapframe *tf)
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f	signature:(struct Env *e)
env_run	kern/env.h	/^void	env_run(struct Env *e) __attribute__((noreturn));$/;"	p	signature:(struct Env *e)
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:	signature:(struct Env *e)
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid2env	kern/env.h	/^int	envid2env(envid_t envid, struct Env **env_store, bool checkperm);$/;"	p	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env*) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + now->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
errno	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
exit	inc/lib.h	/^void	exit(void);$/;"	p	signature:(void)
exit	lib/exit.c	/^exit(void)$/;"	f	signature:(void)
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 00 12 00       	mov    $0x120000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 00 12 f0       	mov    $0xf0120000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 f0 00 00 00       	call   f010012e <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 80 4e 22 f0 00 	cmpl   $0x0,0xf0224e80$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 80 4e 22 f0    	mov    %esi,0xf0224e80$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 bc 67 00 00       	call   f0106820 <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 60 6f 10 f0 	movl   $0xf0106f60,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 30 47 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 f1 46 00 00       	call   f010477f <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 96 84 10 f0 	movl   $0xf0108496,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 18 47 00 00       	call   f01047b2 <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 65 11 00 00       	call   f010120b <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <mp_main>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	77 20                	ja     f01000da <mp_main+0x32>$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01000be	obj/kern/kernel.asm	/^f01000be:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	f0 $/;"	l
f01000c6	obj/kern/kernel.asm	/^f01000c6:	c7 44 24 04 73 00 00 	movl   $0x73,0x4(%esp)$/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	00 $/;"	l
f01000ce	obj/kern/kernel.asm	/^f01000ce:	c7 04 24 cb 6f 10 f0 	movl   $0xf0106fcb,(%esp)$/;"	l
f01000d5	obj/kern/kernel.asm	/^f01000d5:	e8 66 ff ff ff       	call   f0100040 <_panic>$/;"	l
f01000da	obj/kern/kernel.asm	/^f01000da:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	e8 39 67 00 00       	call   f0106820 <cpunum>$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01000eb	obj/kern/kernel.asm	/^f01000eb:	c7 04 24 d7 6f 10 f0 	movl   $0xf0106fd7,(%esp)$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 bb 46 00 00       	call   f01047b2 <cprintf>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	e8 3e 67 00 00       	call   f010683a <lapic_init>$/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	e8 24 3e 00 00       	call   f0103f25 <env_init_percpu>$/;"	l
f0100101	obj/kern/kernel.asm	/^f0100101:	e8 ca 46 00 00       	call   f01047d0 <trap_init_percpu>$/;"	l
f0100106	obj/kern/kernel.asm	/^f0100106:	e8 15 67 00 00       	call   f0106820 <cpunum>$/;"	l
f010010b	obj/kern/kernel.asm	/^f010010b:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010010e	obj/kern/kernel.asm	/^f010010e:	81 c2 20 50 22 f0    	add    $0xf0225020,%edx$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100119	obj/kern/kernel.asm	/^f0100119:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	c7 04 24 40 24 12 f0 	movl   $0xf0122440,(%esp)$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	e8 a7 69 00 00       	call   f0106ad0 <spin_lock>$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	e8 e2 4e 00 00       	call   f0105010 <sched_yield>$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e <i386_init>:$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	55                   	push   %ebp$/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	89 e5                	mov    %esp,%ebp$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	53                   	push   %ebx$/;"	l
f0100132	obj/kern/kernel.asm	/^f0100132:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100135	obj/kern/kernel.asm	/^f0100135:	b8 08 60 26 f0       	mov    $0xf0266008,%eax$/;"	l
f010013a	obj/kern/kernel.asm	/^f010013a:	2d 00 3d 22 f0       	sub    $0xf0223d00,%eax$/;"	l
f010013f	obj/kern/kernel.asm	/^f010013f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010014a	obj/kern/kernel.asm	/^f010014a:	00 $/;"	l
f010014b	obj/kern/kernel.asm	/^f010014b:	c7 04 24 00 3d 22 f0 	movl   $0xf0223d00,(%esp)$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	e8 3a 60 00 00       	call   f0106191 <memset>$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	e8 38 05 00 00       	call   f0100694 <cons_init>$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f0100163	obj/kern/kernel.asm	/^f0100163:	00 $/;"	l
f0100164	obj/kern/kernel.asm	/^f0100164:	c7 04 24 ed 6f 10 f0 	movl   $0xf0106fed,(%esp)$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	e8 42 46 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	e8 61 1b 00 00       	call   f0101cd6 <mem_init>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	e8 d5 3d 00 00       	call   f0103f4f <env_init>$/;"	l
f010017a	obj/kern/kernel.asm	/^f010017a:	e8 1a 47 00 00       	call   f0104899 <trap_init>$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	90                   	nop$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	e8 bc 63 00 00       	call   f0106541 <mp_init>$/;"	l
f0100185	obj/kern/kernel.asm	/^f0100185:	e8 b0 66 00 00       	call   f010683a <lapic_init>$/;"	l
f010018a	obj/kern/kernel.asm	/^f010018a:	e8 52 45 00 00       	call   f01046e1 <pic_init>$/;"	l
f010018f	obj/kern/kernel.asm	/^f010018f:	c7 04 24 40 24 12 f0 	movl   $0xf0122440,(%esp)$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	e8 35 69 00 00       	call   f0106ad0 <spin_lock>$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	83 3d 88 4e 22 f0 07 	cmpl   $0x7,0xf0224e88$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	77 24                	ja     f01001c8 <i386_init+0x9a>$/;"	l
f01001a4	obj/kern/kernel.asm	/^f01001a4:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	00 $/;"	l
f01001ac	obj/kern/kernel.asm	/^f01001ac:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f01001b3	obj/kern/kernel.asm	/^f01001b3:	f0 $/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	c7 44 24 04 5c 00 00 	movl   $0x5c,0x4(%esp)$/;"	l
f01001bb	obj/kern/kernel.asm	/^f01001bb:	00 $/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	c7 04 24 cb 6f 10 f0 	movl   $0xf0106fcb,(%esp)$/;"	l
f01001c3	obj/kern/kernel.asm	/^f01001c3:	e8 78 fe ff ff       	call   f0100040 <_panic>$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	b8 5a 64 10 f0       	mov    $0xf010645a,%eax$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	2d e0 63 10 f0       	sub    $0xf01063e0,%eax$/;"	l
f01001d2	obj/kern/kernel.asm	/^f01001d2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01001d6	obj/kern/kernel.asm	/^f01001d6:	c7 44 24 04 e0 63 10 	movl   $0xf01063e0,0x4(%esp)$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	f0 $/;"	l
f01001de	obj/kern/kernel.asm	/^f01001de:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	e8 02 60 00 00       	call   f01061ec <memmove>$/;"	l
f01001ea	obj/kern/kernel.asm	/^f01001ea:	6b 05 c4 53 22 f0 74 	imul   $0x74,0xf02253c4,%eax$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	3d 20 50 22 f0       	cmp    $0xf0225020,%eax$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	76 62                	jbe    f010025f <i386_init+0x131>$/;"	l
f01001fd	obj/kern/kernel.asm	/^f01001fd:	bb 20 50 22 f0       	mov    $0xf0225020,%ebx$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	e8 19 66 00 00       	call   f0106820 <cpunum>$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010020a	obj/kern/kernel.asm	/^f010020a:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f010020f	obj/kern/kernel.asm	/^f010020f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	74 39                	je     f010024c <i386_init+0x11e>$/;"	l
f0100213	obj/kern/kernel.asm	/^f0100213:	89 d8                	mov    %ebx,%eax$/;"	l
f0100215	obj/kern/kernel.asm	/^f0100215:	2d 20 50 22 f0       	sub    $0xf0225020,%eax$/;"	l
f010021a	obj/kern/kernel.asm	/^f010021a:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010021d	obj/kern/kernel.asm	/^f010021d:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100226	obj/kern/kernel.asm	/^f0100226:	8d 80 00 e0 22 f0    	lea    -0xfdd2000(%eax),%eax$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	a3 84 4e 22 f0       	mov    %eax,0xf0224e84$/;"	l
f0100231	obj/kern/kernel.asm	/^f0100231:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	00 $/;"	l
f0100239	obj/kern/kernel.asm	/^f0100239:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010023c	obj/kern/kernel.asm	/^f010023c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	e8 44 67 00 00       	call   f0106988 <lapic_startap>$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	75 f8                	jne    f0100244 <i386_init+0x116>$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	83 c3 74             	add    $0x74,%ebx$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	6b 05 c4 53 22 f0 74 	imul   $0x74,0xf02253c4,%eax$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	39 c3                	cmp    %eax,%ebx$/;"	l
f010025d	obj/kern/kernel.asm	/^f010025d:	72 a3                	jb     f0100202 <i386_init+0xd4>$/;"	l
f010025f	obj/kern/kernel.asm	/^f010025f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0100266	obj/kern/kernel.asm	/^f0100266:	00 $/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	c7 44 24 04 63 89 00 	movl   $0x8963,0x4(%esp)$/;"	l
f010026e	obj/kern/kernel.asm	/^f010026e:	00 $/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	c7 04 24 8d 2d 1a f0 	movl   $0xf01a2d8d,(%esp)$/;"	l
f0100276	obj/kern/kernel.asm	/^f0100276:	e8 e7 3e 00 00       	call   f0104162 <env_create>$/;"	l
f010027b	obj/kern/kernel.asm	/^f010027b:	e8 90 4d 00 00       	call   f0105010 <sched_yield>$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280 <_warn>:$/;"	l
f0100280	obj/kern/kernel.asm	/^f0100280:	55                   	push   %ebp$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	89 e5                	mov    %esp,%ebp$/;"	l
f0100283	obj/kern/kernel.asm	/^f0100283:	53                   	push   %ebx$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010028d	obj/kern/kernel.asm	/^f010028d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100291	obj/kern/kernel.asm	/^f0100291:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100294	obj/kern/kernel.asm	/^f0100294:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	c7 04 24 08 70 10 f0 	movl   $0xf0107008,(%esp)$/;"	l
f010029f	obj/kern/kernel.asm	/^f010029f:	e8 0e 45 00 00       	call   f01047b2 <cprintf>$/;"	l
f01002a4	obj/kern/kernel.asm	/^f01002a4:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002a8	obj/kern/kernel.asm	/^f01002a8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002ab	obj/kern/kernel.asm	/^f01002ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	e8 cc 44 00 00       	call   f010477f <vcprintf>$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	c7 04 24 96 84 10 f0 	movl   $0xf0108496,(%esp)$/;"	l
f01002ba	obj/kern/kernel.asm	/^f01002ba:	e8 f3 44 00 00       	call   f01047b2 <cprintf>$/;"	l
f01002bf	obj/kern/kernel.asm	/^f01002bf:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002c2	obj/kern/kernel.asm	/^f01002c2:	5b                   	pop    %ebx$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	5d                   	pop    %ebp$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	c3                   	ret    $/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0 <delay>:$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	55                   	push   %ebp$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	ba 84 00 00 00       	mov    $0x84,%edx$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	ec                   	in     (%dx),%al$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	ec                   	in     (%dx),%al$/;"	l
f01002da	obj/kern/kernel.asm	/^f01002da:	ec                   	in     (%dx),%al$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	ec                   	in     (%dx),%al$/;"	l
f01002dc	obj/kern/kernel.asm	/^f01002dc:	5d                   	pop    %ebp$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	c3                   	ret    $/;"	l
f01002de	obj/kern/kernel.asm	/^f01002de <serial_proc_data>:$/;"	l
f01002de	obj/kern/kernel.asm	/^f01002de:	55                   	push   %ebp$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	89 e5                	mov    %esp,%ebp$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	ec                   	in     (%dx),%al$/;"	l
f01002e7	obj/kern/kernel.asm	/^f01002e7:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	a8 01                	test   $0x1,%al$/;"	l
f01002ee	obj/kern/kernel.asm	/^f01002ee:	74 06                	je     f01002f6 <serial_proc_data+0x18>$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	b2 f8                	mov    $0xf8,%dl$/;"	l
f01002f2	obj/kern/kernel.asm	/^f01002f2:	ec                   	in     (%dx),%al$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f01002f6	obj/kern/kernel.asm	/^f01002f6:	89 c8                	mov    %ecx,%eax$/;"	l
f01002f8	obj/kern/kernel.asm	/^f01002f8:	5d                   	pop    %ebp$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	c3                   	ret    $/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa <cons_intr>:$/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	55                   	push   %ebp$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01002fd	obj/kern/kernel.asm	/^f01002fd:	53                   	push   %ebx$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	89 c3                	mov    %eax,%ebx$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	eb 25                	jmp    f010032a <cons_intr+0x30>$/;"	l
f0100305	obj/kern/kernel.asm	/^f0100305:	85 c0                	test   %eax,%eax$/;"	l
f0100307	obj/kern/kernel.asm	/^f0100307:	74 21                	je     f010032a <cons_intr+0x30>$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	8b 15 24 42 22 f0    	mov    0xf0224224,%edx$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	88 82 20 40 22 f0    	mov    %al,-0xfddbfe0(%edx)$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	8d 42 01             	lea    0x1(%edx),%eax$/;"	l
f0100318	obj/kern/kernel.asm	/^f0100318:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100322	obj/kern/kernel.asm	/^f0100322:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	a3 24 42 22 f0       	mov    %eax,0xf0224224$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	ff d3                	call   *%ebx$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	75 d4                	jne    f0100305 <cons_intr+0xb>$/;"	l
f0100331	obj/kern/kernel.asm	/^f0100331:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	5b                   	pop    %ebx$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	5d                   	pop    %ebp$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	c3                   	ret    $/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337 <cons_putc>:$/;"	l
f0100337	obj/kern/kernel.asm	/^f0100337:	55                   	push   %ebp$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	89 e5                	mov    %esp,%ebp$/;"	l
f010033a	obj/kern/kernel.asm	/^f010033a:	57                   	push   %edi$/;"	l
f010033b	obj/kern/kernel.asm	/^f010033b:	56                   	push   %esi$/;"	l
f010033c	obj/kern/kernel.asm	/^f010033c:	53                   	push   %ebx$/;"	l
f010033d	obj/kern/kernel.asm	/^f010033d:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f0100348	obj/kern/kernel.asm	/^f0100348:	ec                   	in     (%dx),%al$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	a8 20                	test   $0x20,%al$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	75 1b                	jne    f0100368 <cons_putc+0x31>$/;"	l
f010034d	obj/kern/kernel.asm	/^f010034d:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f0100352	obj/kern/kernel.asm	/^f0100352:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	e8 74 ff ff ff       	call   f01002d0 <delay>$/;"	l
f010035c	obj/kern/kernel.asm	/^f010035c:	89 f2                	mov    %esi,%edx$/;"	l
f010035e	obj/kern/kernel.asm	/^f010035e:	ec                   	in     (%dx),%al$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	a8 20                	test   $0x20,%al$/;"	l
f0100361	obj/kern/kernel.asm	/^f0100361:	75 05                	jne    f0100368 <cons_putc+0x31>$/;"	l
f0100363	obj/kern/kernel.asm	/^f0100363:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100366	obj/kern/kernel.asm	/^f0100366:	75 ef                	jne    f0100357 <cons_putc+0x20>$/;"	l
f0100368	obj/kern/kernel.asm	/^f0100368:	0f b6 7d e4          	movzbl -0x1c(%ebp),%edi$/;"	l
f010036c	obj/kern/kernel.asm	/^f010036c:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100371	obj/kern/kernel.asm	/^f0100371:	89 f8                	mov    %edi,%eax$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	ee                   	out    %al,(%dx)$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	b2 79                	mov    $0x79,%dl$/;"	l
f0100376	obj/kern/kernel.asm	/^f0100376:	ec                   	in     (%dx),%al$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	84 c0                	test   %al,%al$/;"	l
f0100379	obj/kern/kernel.asm	/^f0100379:	78 1b                	js     f0100396 <cons_putc+0x5f>$/;"	l
f010037b	obj/kern/kernel.asm	/^f010037b:	bb 00 32 00 00       	mov    $0x3200,%ebx$/;"	l
f0100380	obj/kern/kernel.asm	/^f0100380:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f0100385	obj/kern/kernel.asm	/^f0100385:	e8 46 ff ff ff       	call   f01002d0 <delay>$/;"	l
f010038a	obj/kern/kernel.asm	/^f010038a:	89 f2                	mov    %esi,%edx$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	ec                   	in     (%dx),%al$/;"	l
f010038d	obj/kern/kernel.asm	/^f010038d:	84 c0                	test   %al,%al$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	78 05                	js     f0100396 <cons_putc+0x5f>$/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100394	obj/kern/kernel.asm	/^f0100394:	75 ef                	jne    f0100385 <cons_putc+0x4e>$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010039b	obj/kern/kernel.asm	/^f010039b:	89 f8                	mov    %edi,%eax$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	ee                   	out    %al,(%dx)$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01003a0	obj/kern/kernel.asm	/^f01003a0:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	ee                   	out    %al,(%dx)$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01003ab	obj/kern/kernel.asm	/^f01003ab:	ee                   	out    %al,(%dx)$/;"	l
f01003ac	obj/kern/kernel.asm	/^f01003ac:	0f b7 15 00 20 12 f0 	movzwl 0xf0122000,%edx$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	03 55 e4             	add    -0x1c(%ebp),%edx$/;"	l
f01003b6	obj/kern/kernel.asm	/^f01003b6:	0f b6 c2             	movzbl %dl,%eax$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	74 77                	je     f0100435 <cons_putc+0xfe>$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	7f 0f                	jg     f01003d2 <cons_putc+0x9b>$/;"	l
f01003c3	obj/kern/kernel.asm	/^f01003c3:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	0f 85 9d 00 00 00    	jne    f0100469 <cons_putc+0x132>$/;"	l
f01003cc	obj/kern/kernel.asm	/^f01003cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01003d0	obj/kern/kernel.asm	/^f01003d0:	eb 10                	jmp    f01003e2 <cons_putc+0xab>$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01003d5	obj/kern/kernel.asm	/^f01003d5:	74 38                	je     f010040f <cons_putc+0xd8>$/;"	l
f01003d7	obj/kern/kernel.asm	/^f01003d7:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01003da	obj/kern/kernel.asm	/^f01003da:	0f 85 89 00 00 00    	jne    f0100469 <cons_putc+0x132>$/;"	l
f01003e0	obj/kern/kernel.asm	/^f01003e0:	eb 35                	jmp    f0100417 <cons_putc+0xe0>$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	0f b7 05 34 42 22 f0 	movzwl 0xf0224234,%eax$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	66 85 c0             	test   %ax,%ax$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	0f 84 e1 00 00 00    	je     f01004d3 <cons_putc+0x19c>$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	66 a3 34 42 22 f0    	mov    %ax,0xf0224234$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01003fe	obj/kern/kernel.asm	/^f01003fe:	b2 00                	mov    $0x0,%dl$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	83 ca 20             	or     $0x20,%edx$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	8b 0d 30 42 22 f0    	mov    0xf0224230,%ecx$/;"	l
f0100409	obj/kern/kernel.asm	/^f0100409:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)$/;"	l
f010040d	obj/kern/kernel.asm	/^f010040d:	eb 77                	jmp    f0100486 <cons_putc+0x14f>$/;"	l
f010040f	obj/kern/kernel.asm	/^f010040f:	66 83 05 34 42 22 f0 	addw   $0x50,0xf0224234$/;"	l
f0100416	obj/kern/kernel.asm	/^f0100416:	50 $/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	0f b7 05 34 42 22 f0 	movzwl 0xf0224234,%eax$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100424	obj/kern/kernel.asm	/^f0100424:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100427	obj/kern/kernel.asm	/^f0100427:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	66 a3 34 42 22 f0    	mov    %ax,0xf0224234$/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	eb 51                	jmp    f0100486 <cons_putc+0x14f>$/;"	l
f0100435	obj/kern/kernel.asm	/^f0100435:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	e8 f8 fe ff ff       	call   f0100337 <cons_putc>$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	e8 ee fe ff ff       	call   f0100337 <cons_putc>$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	e8 e4 fe ff ff       	call   f0100337 <cons_putc>$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	e8 da fe ff ff       	call   f0100337 <cons_putc>$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	e8 d0 fe ff ff       	call   f0100337 <cons_putc>$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	eb 1d                	jmp    f0100486 <cons_putc+0x14f>$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	0f b7 05 34 42 22 f0 	movzwl 0xf0224234,%eax$/;"	l
f0100470	obj/kern/kernel.asm	/^f0100470:	0f b7 d8             	movzwl %ax,%ebx$/;"	l
f0100473	obj/kern/kernel.asm	/^f0100473:	8b 0d 30 42 22 f0    	mov    0xf0224230,%ecx$/;"	l
f0100479	obj/kern/kernel.asm	/^f0100479:	66 89 14 59          	mov    %dx,(%ecx,%ebx,2)$/;"	l
f010047d	obj/kern/kernel.asm	/^f010047d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100480	obj/kern/kernel.asm	/^f0100480:	66 a3 34 42 22 f0    	mov    %ax,0xf0224234$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	66 81 3d 34 42 22 f0 	cmpw   $0x7cf,0xf0224234$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	cf 07 $/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	76 42                	jbe    f01004d3 <cons_putc+0x19c>$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	a1 30 42 22 f0       	mov    0xf0224230,%eax$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	00 $/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01004ab	obj/kern/kernel.asm	/^f01004ab:	e8 3c 5d 00 00       	call   f01061ec <memmove>$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	8b 15 30 42 22 f0    	mov    0xf0224230,%edx$/;"	l
f01004b6	obj/kern/kernel.asm	/^f01004b6:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01004bb	obj/kern/kernel.asm	/^f01004bb:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01004c1	obj/kern/kernel.asm	/^f01004c1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	75 f0                	jne    f01004bb <cons_putc+0x184>$/;"	l
f01004cb	obj/kern/kernel.asm	/^f01004cb:	66 83 2d 34 42 22 f0 	subw   $0x50,0xf0224234$/;"	l
f01004d2	obj/kern/kernel.asm	/^f01004d2:	50 $/;"	l
f01004d3	obj/kern/kernel.asm	/^f01004d3:	8b 0d 2c 42 22 f0    	mov    0xf022422c,%ecx$/;"	l
f01004d9	obj/kern/kernel.asm	/^f01004d9:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01004de	obj/kern/kernel.asm	/^f01004de:	89 ca                	mov    %ecx,%edx$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	ee                   	out    %al,(%dx)$/;"	l
f01004e1	obj/kern/kernel.asm	/^f01004e1:	0f b7 35 34 42 22 f0 	movzwl 0xf0224234,%esi$/;"	l
f01004e8	obj/kern/kernel.asm	/^f01004e8:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01004eb	obj/kern/kernel.asm	/^f01004eb:	89 f0                	mov    %esi,%eax$/;"	l
f01004ed	obj/kern/kernel.asm	/^f01004ed:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	89 da                	mov    %ebx,%edx$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	ee                   	out    %al,(%dx)$/;"	l
f01004f4	obj/kern/kernel.asm	/^f01004f4:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01004f9	obj/kern/kernel.asm	/^f01004f9:	89 ca                	mov    %ecx,%edx$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	ee                   	out    %al,(%dx)$/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	89 f0                	mov    %esi,%eax$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	89 da                	mov    %ebx,%edx$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	ee                   	out    %al,(%dx)$/;"	l
f0100501	obj/kern/kernel.asm	/^f0100501:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100504	obj/kern/kernel.asm	/^f0100504:	5b                   	pop    %ebx$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	5e                   	pop    %esi$/;"	l
f0100506	obj/kern/kernel.asm	/^f0100506:	5f                   	pop    %edi$/;"	l
f0100507	obj/kern/kernel.asm	/^f0100507:	5d                   	pop    %ebp$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	c3                   	ret    $/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509 <kbd_proc_data>:$/;"	l
f0100509	obj/kern/kernel.asm	/^f0100509:	55                   	push   %ebp$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	89 e5                	mov    %esp,%ebp$/;"	l
f010050c	obj/kern/kernel.asm	/^f010050c:	53                   	push   %ebx$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100515	obj/kern/kernel.asm	/^f0100515:	ec                   	in     (%dx),%al$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	bb ff ff ff ff       	mov    $0xffffffff,%ebx$/;"	l
f010051b	obj/kern/kernel.asm	/^f010051b:	a8 01                	test   $0x1,%al$/;"	l
f010051d	obj/kern/kernel.asm	/^f010051d:	0f 84 de 00 00 00    	je     f0100601 <kbd_proc_data+0xf8>$/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523:	b2 60                	mov    $0x60,%dl$/;"	l
f0100525	obj/kern/kernel.asm	/^f0100525:	ec                   	in     (%dx),%al$/;"	l
f0100526	obj/kern/kernel.asm	/^f0100526:	89 c2                	mov    %eax,%edx$/;"	l
f0100528	obj/kern/kernel.asm	/^f0100528:	3c e0                	cmp    $0xe0,%al$/;"	l
f010052a	obj/kern/kernel.asm	/^f010052a:	75 11                	jne    f010053d <kbd_proc_data+0x34>$/;"	l
f010052c	obj/kern/kernel.asm	/^f010052c:	83 0d 28 42 22 f0 40 	orl    $0x40,0xf0224228$/;"	l
f0100533	obj/kern/kernel.asm	/^f0100533:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100538	obj/kern/kernel.asm	/^f0100538:	e9 c4 00 00 00       	jmp    f0100601 <kbd_proc_data+0xf8>$/;"	l
f010053d	obj/kern/kernel.asm	/^f010053d:	84 c0                	test   %al,%al$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	79 37                	jns    f0100578 <kbd_proc_data+0x6f>$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	8b 0d 28 42 22 f0    	mov    0xf0224228,%ecx$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100549	obj/kern/kernel.asm	/^f0100549:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010054f	obj/kern/kernel.asm	/^f010054f:	85 db                	test   %ebx,%ebx$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100554	obj/kern/kernel.asm	/^f0100554:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100557	obj/kern/kernel.asm	/^f0100557:	0f b6 82 60 70 10 f0 	movzbl -0xfef8fa0(%edx),%eax$/;"	l
f010055e	obj/kern/kernel.asm	/^f010055e:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100561	obj/kern/kernel.asm	/^f0100561:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100564	obj/kern/kernel.asm	/^f0100564:	f7 d0                	not    %eax$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	21 c1                	and    %eax,%ecx$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	89 0d 28 42 22 f0    	mov    %ecx,0xf0224228$/;"	l
f010056e	obj/kern/kernel.asm	/^f010056e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	e9 89 00 00 00       	jmp    f0100601 <kbd_proc_data+0xf8>$/;"	l
f0100578	obj/kern/kernel.asm	/^f0100578:	8b 0d 28 42 22 f0    	mov    0xf0224228,%ecx$/;"	l
f010057e	obj/kern/kernel.asm	/^f010057e:	f6 c1 40             	test   $0x40,%cl$/;"	l
f0100581	obj/kern/kernel.asm	/^f0100581:	74 0e                	je     f0100591 <kbd_proc_data+0x88>$/;"	l
f0100583	obj/kern/kernel.asm	/^f0100583:	89 c2                	mov    %eax,%edx$/;"	l
f0100585	obj/kern/kernel.asm	/^f0100585:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
f0100588	obj/kern/kernel.asm	/^f0100588:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f010058b	obj/kern/kernel.asm	/^f010058b:	89 0d 28 42 22 f0    	mov    %ecx,0xf0224228$/;"	l
f0100591	obj/kern/kernel.asm	/^f0100591:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	0f b6 82 60 70 10 f0 	movzbl -0xfef8fa0(%edx),%eax$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	0b 05 28 42 22 f0    	or     0xf0224228,%eax$/;"	l
f01005a1	obj/kern/kernel.asm	/^f01005a1:	0f b6 8a 60 71 10 f0 	movzbl -0xfef8ea0(%edx),%ecx$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	31 c8                	xor    %ecx,%eax$/;"	l
f01005aa	obj/kern/kernel.asm	/^f01005aa:	a3 28 42 22 f0       	mov    %eax,0xf0224228$/;"	l
f01005af	obj/kern/kernel.asm	/^f01005af:	89 c1                	mov    %eax,%ecx$/;"	l
f01005b1	obj/kern/kernel.asm	/^f01005b1:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01005b4	obj/kern/kernel.asm	/^f01005b4:	8b 0c 8d 60 72 10 f0 	mov    -0xfef8da0(,%ecx,4),%ecx$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	0f b6 1c 11          	movzbl (%ecx,%edx,1),%ebx$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	a8 08                	test   $0x8,%al$/;"	l
f01005c1	obj/kern/kernel.asm	/^f01005c1:	74 19                	je     f01005dc <kbd_proc_data+0xd3>$/;"	l
f01005c3	obj/kern/kernel.asm	/^f01005c3:	8d 53 9f             	lea    -0x61(%ebx),%edx$/;"	l
f01005c6	obj/kern/kernel.asm	/^f01005c6:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	77 05                	ja     f01005d0 <kbd_proc_data+0xc7>$/;"	l
f01005cb	obj/kern/kernel.asm	/^f01005cb:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01005ce	obj/kern/kernel.asm	/^f01005ce:	eb 0c                	jmp    f01005dc <kbd_proc_data+0xd3>$/;"	l
f01005d0	obj/kern/kernel.asm	/^f01005d0:	8d 4b bf             	lea    -0x41(%ebx),%ecx$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	8d 53 20             	lea    0x20(%ebx),%edx$/;"	l
f01005d6	obj/kern/kernel.asm	/^f01005d6:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	0f 46 da             	cmovbe %edx,%ebx$/;"	l
f01005dc	obj/kern/kernel.asm	/^f01005dc:	f7 d0                	not    %eax$/;"	l
f01005de	obj/kern/kernel.asm	/^f01005de:	a8 06                	test   $0x6,%al$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	75 1f                	jne    f0100601 <kbd_proc_data+0xf8>$/;"	l
f01005e2	obj/kern/kernel.asm	/^f01005e2:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f01005e8	obj/kern/kernel.asm	/^f01005e8:	75 17                	jne    f0100601 <kbd_proc_data+0xf8>$/;"	l
f01005ea	obj/kern/kernel.asm	/^f01005ea:	c7 04 24 22 70 10 f0 	movl   $0xf0107022,(%esp)$/;"	l
f01005f1	obj/kern/kernel.asm	/^f01005f1:	e8 bc 41 00 00       	call   f01047b2 <cprintf>$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100600	obj/kern/kernel.asm	/^f0100600:	ee                   	out    %al,(%dx)$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	89 d8                	mov    %ebx,%eax$/;"	l
f0100603	obj/kern/kernel.asm	/^f0100603:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100606	obj/kern/kernel.asm	/^f0100606:	5b                   	pop    %ebx$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	5d                   	pop    %ebp$/;"	l
f0100608	obj/kern/kernel.asm	/^f0100608:	c3                   	ret    $/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609 <set_attribute_color>:$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	55                   	push   %ebp$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	89 e5                	mov    %esp,%ebp$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	0f b7 55 0c          	movzwl 0xc(%ebp),%edx$/;"	l
f0100610	obj/kern/kernel.asm	/^f0100610:	c1 e2 08             	shl    $0x8,%edx$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	0f b7 45 08          	movzwl 0x8(%ebp),%eax$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010061a	obj/kern/kernel.asm	/^f010061a:	09 d0                	or     %edx,%eax$/;"	l
f010061c	obj/kern/kernel.asm	/^f010061c:	66 a3 00 20 12 f0    	mov    %ax,0xf0122000$/;"	l
f0100622	obj/kern/kernel.asm	/^f0100622:	5d                   	pop    %ebp$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	c3                   	ret    $/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624 <serial_intr>:$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	55                   	push   %ebp$/;"	l
f0100625	obj/kern/kernel.asm	/^f0100625:	89 e5                	mov    %esp,%ebp$/;"	l
f0100627	obj/kern/kernel.asm	/^f0100627:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010062a	obj/kern/kernel.asm	/^f010062a:	80 3d 00 40 22 f0 00 	cmpb   $0x0,0xf0224000$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	74 0a                	je     f010063d <serial_intr+0x19>$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	b8 de 02 10 f0       	mov    $0xf01002de,%eax$/;"	l
f0100638	obj/kern/kernel.asm	/^f0100638:	e8 bd fc ff ff       	call   f01002fa <cons_intr>$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	c9                   	leave  $/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	c3                   	ret    $/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f <kbd_intr>:$/;"	l
f010063f	obj/kern/kernel.asm	/^f010063f:	55                   	push   %ebp$/;"	l
f0100640	obj/kern/kernel.asm	/^f0100640:	89 e5                	mov    %esp,%ebp$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	b8 09 05 10 f0       	mov    $0xf0100509,%eax$/;"	l
f010064a	obj/kern/kernel.asm	/^f010064a:	e8 ab fc ff ff       	call   f01002fa <cons_intr>$/;"	l
f010064f	obj/kern/kernel.asm	/^f010064f:	c9                   	leave  $/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	c3                   	ret    $/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651 <cons_getc>:$/;"	l
f0100651	obj/kern/kernel.asm	/^f0100651:	55                   	push   %ebp$/;"	l
f0100652	obj/kern/kernel.asm	/^f0100652:	89 e5                	mov    %esp,%ebp$/;"	l
f0100654	obj/kern/kernel.asm	/^f0100654:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100657	obj/kern/kernel.asm	/^f0100657:	e8 c8 ff ff ff       	call   f0100624 <serial_intr>$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	e8 de ff ff ff       	call   f010063f <kbd_intr>$/;"	l
f0100661	obj/kern/kernel.asm	/^f0100661:	8b 15 20 42 22 f0    	mov    0xf0224220,%edx$/;"	l
f0100667	obj/kern/kernel.asm	/^f0100667:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010066c	obj/kern/kernel.asm	/^f010066c:	3b 15 24 42 22 f0    	cmp    0xf0224224,%edx$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	74 1e                	je     f0100692 <cons_getc+0x41>$/;"	l
f0100674	obj/kern/kernel.asm	/^f0100674:	0f b6 82 20 40 22 f0 	movzbl -0xfddbfe0(%edx),%eax$/;"	l
f010067b	obj/kern/kernel.asm	/^f010067b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010067e	obj/kern/kernel.asm	/^f010067e:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f0100684	obj/kern/kernel.asm	/^f0100684:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0100689	obj/kern/kernel.asm	/^f0100689:	0f 44 d1             	cmove  %ecx,%edx$/;"	l
f010068c	obj/kern/kernel.asm	/^f010068c:	89 15 20 42 22 f0    	mov    %edx,0xf0224220$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	c9                   	leave  $/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	c3                   	ret    $/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694 <cons_init>:$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	55                   	push   %ebp$/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	89 e5                	mov    %esp,%ebp$/;"	l
f0100697	obj/kern/kernel.asm	/^f0100697:	57                   	push   %edi$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	56                   	push   %esi$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	53                   	push   %ebx$/;"	l
f010069a	obj/kern/kernel.asm	/^f010069a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010069d	obj/kern/kernel.asm	/^f010069d:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f01006a4	obj/kern/kernel.asm	/^f01006a4:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006ab	obj/kern/kernel.asm	/^f01006ab:	5a a5 $/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006b4	obj/kern/kernel.asm	/^f01006b4:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006b8	obj/kern/kernel.asm	/^f01006b8:	74 11                	je     f01006cb <cons_init+0x37>$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	c7 05 2c 42 22 f0 b4 	movl   $0x3b4,0xf022422c$/;"	l
f01006c1	obj/kern/kernel.asm	/^f01006c1:	03 00 00 $/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	be 00 00 0b f0       	mov    $0xf00b0000,%esi$/;"	l
f01006c9	obj/kern/kernel.asm	/^f01006c9:	eb 16                	jmp    f01006e1 <cons_init+0x4d>$/;"	l
f01006cb	obj/kern/kernel.asm	/^f01006cb:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	c7 05 2c 42 22 f0 d4 	movl   $0x3d4,0xf022422c$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	03 00 00 $/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	be 00 80 0b f0       	mov    $0xf00b8000,%esi$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	8b 0d 2c 42 22 f0    	mov    0xf022422c,%ecx$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01006ec	obj/kern/kernel.asm	/^f01006ec:	89 ca                	mov    %ecx,%edx$/;"	l
f01006ee	obj/kern/kernel.asm	/^f01006ee:	ee                   	out    %al,(%dx)$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01006f2	obj/kern/kernel.asm	/^f01006f2:	89 da                	mov    %ebx,%edx$/;"	l
f01006f4	obj/kern/kernel.asm	/^f01006f4:	ec                   	in     (%dx),%al$/;"	l
f01006f5	obj/kern/kernel.asm	/^f01006f5:	0f b6 f8             	movzbl %al,%edi$/;"	l
f01006f8	obj/kern/kernel.asm	/^f01006f8:	c1 e7 08             	shl    $0x8,%edi$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	89 ca                	mov    %ecx,%edx$/;"	l
f0100702	obj/kern/kernel.asm	/^f0100702:	ee                   	out    %al,(%dx)$/;"	l
f0100703	obj/kern/kernel.asm	/^f0100703:	89 da                	mov    %ebx,%edx$/;"	l
f0100705	obj/kern/kernel.asm	/^f0100705:	ec                   	in     (%dx),%al$/;"	l
f0100706	obj/kern/kernel.asm	/^f0100706:	89 35 30 42 22 f0    	mov    %esi,0xf0224230$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010070f	obj/kern/kernel.asm	/^f010070f:	09 df                	or     %ebx,%edi$/;"	l
f0100711	obj/kern/kernel.asm	/^f0100711:	66 89 3d 34 42 22 f0 	mov    %di,0xf0224234$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	e8 22 ff ff ff       	call   f010063f <kbd_intr>$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	0f b7 05 c8 23 12 f0 	movzwl 0xf01223c8,%eax$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100729	obj/kern/kernel.asm	/^f0100729:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	e8 3f 3f 00 00       	call   f0104670 <irq_setmask_8259A>$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	bb fa 03 00 00       	mov    $0x3fa,%ebx$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	89 da                	mov    %ebx,%edx$/;"	l
f010073d	obj/kern/kernel.asm	/^f010073d:	ee                   	out    %al,(%dx)$/;"	l
f010073e	obj/kern/kernel.asm	/^f010073e:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100745	obj/kern/kernel.asm	/^f0100745:	ee                   	out    %al,(%dx)$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	b9 f8 03 00 00       	mov    $0x3f8,%ecx$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	89 ca                	mov    %ecx,%edx$/;"	l
f0100752	obj/kern/kernel.asm	/^f0100752:	ee                   	out    %al,(%dx)$/;"	l
f0100753	obj/kern/kernel.asm	/^f0100753:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	ee                   	out    %al,(%dx)$/;"	l
f010075b	obj/kern/kernel.asm	/^f010075b:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100762	obj/kern/kernel.asm	/^f0100762:	ee                   	out    %al,(%dx)$/;"	l
f0100763	obj/kern/kernel.asm	/^f0100763:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010076a	obj/kern/kernel.asm	/^f010076a:	ee                   	out    %al,(%dx)$/;"	l
f010076b	obj/kern/kernel.asm	/^f010076b:	b2 f9                	mov    $0xf9,%dl$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100772	obj/kern/kernel.asm	/^f0100772:	ee                   	out    %al,(%dx)$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100775	obj/kern/kernel.asm	/^f0100775:	ec                   	in     (%dx),%al$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	3c ff                	cmp    $0xff,%al$/;"	l
f0100778	obj/kern/kernel.asm	/^f0100778:	0f 95 c0             	setne  %al$/;"	l
f010077b	obj/kern/kernel.asm	/^f010077b:	89 c6                	mov    %eax,%esi$/;"	l
f010077d	obj/kern/kernel.asm	/^f010077d:	a2 00 40 22 f0       	mov    %al,0xf0224000$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	89 da                	mov    %ebx,%edx$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	ec                   	in     (%dx),%al$/;"	l
f0100785	obj/kern/kernel.asm	/^f0100785:	89 ca                	mov    %ecx,%edx$/;"	l
f0100787	obj/kern/kernel.asm	/^f0100787:	ec                   	in     (%dx),%al$/;"	l
f0100788	obj/kern/kernel.asm	/^f0100788:	89 f0                	mov    %esi,%eax$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	84 c0                	test   %al,%al$/;"	l
f010078c	obj/kern/kernel.asm	/^f010078c:	75 0c                	jne    f010079a <cons_init+0x106>$/;"	l
f010078e	obj/kern/kernel.asm	/^f010078e:	c7 04 24 2e 70 10 f0 	movl   $0xf010702e,(%esp)$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	e8 18 40 00 00       	call   f01047b2 <cprintf>$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010079d	obj/kern/kernel.asm	/^f010079d:	5b                   	pop    %ebx$/;"	l
f010079e	obj/kern/kernel.asm	/^f010079e:	5e                   	pop    %esi$/;"	l
f010079f	obj/kern/kernel.asm	/^f010079f:	5f                   	pop    %edi$/;"	l
f01007a0	obj/kern/kernel.asm	/^f01007a0:	5d                   	pop    %ebp$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	c3                   	ret    $/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2 <cputchar>:$/;"	l
f01007a2	obj/kern/kernel.asm	/^f01007a2:	55                   	push   %ebp$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	89 e5                	mov    %esp,%ebp$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007a8	obj/kern/kernel.asm	/^f01007a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007ab	obj/kern/kernel.asm	/^f01007ab:	e8 87 fb ff ff       	call   f0100337 <cons_putc>$/;"	l
f01007b0	obj/kern/kernel.asm	/^f01007b0:	c9                   	leave  $/;"	l
f01007b1	obj/kern/kernel.asm	/^f01007b1:	c3                   	ret    $/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2 <getchar>:$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	55                   	push   %ebp$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	e8 94 fe ff ff       	call   f0100651 <cons_getc>$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	85 c0                	test   %eax,%eax$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	74 f7                	je     f01007b8 <getchar+0x6>$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	c9                   	leave  $/;"	l
f01007c2	obj/kern/kernel.asm	/^f01007c2:	c3                   	ret    $/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3 <iscons>:$/;"	l
f01007c3	obj/kern/kernel.asm	/^f01007c3:	55                   	push   %ebp$/;"	l
f01007c4	obj/kern/kernel.asm	/^f01007c4:	89 e5                	mov    %esp,%ebp$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007cb	obj/kern/kernel.asm	/^f01007cb:	5d                   	pop    %ebp$/;"	l
f01007cc	obj/kern/kernel.asm	/^f01007cc:	c3                   	ret    $/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	00 00                	add    %al,(%eax)$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0 <mon_kerninfo>:$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	55                   	push   %ebp$/;"	l
f01007d1	obj/kern/kernel.asm	/^f01007d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01007d3	obj/kern/kernel.asm	/^f01007d3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	c7 04 24 70 72 10 f0 	movl   $0xf0107270,(%esp)$/;"	l
f01007dd	obj/kern/kernel.asm	/^f01007dd:	e8 d0 3f 00 00       	call   f01047b2 <cprintf>$/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f01007e9	obj/kern/kernel.asm	/^f01007e9:	00 $/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	c7 04 24 c4 74 10 f0 	movl   $0xf01074c4,(%esp)$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	e8 bc 3f 00 00       	call   f01047b2 <cprintf>$/;"	l
f01007f6	obj/kern/kernel.asm	/^f01007f6:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f01007fd	obj/kern/kernel.asm	/^f01007fd:	00 $/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f0100805	obj/kern/kernel.asm	/^f0100805:	f0 $/;"	l
f0100806	obj/kern/kernel.asm	/^f0100806:	c7 04 24 ec 74 10 f0 	movl   $0xf01074ec,(%esp)$/;"	l
f010080d	obj/kern/kernel.asm	/^f010080d:	e8 a0 3f 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	c7 44 24 08 55 6f 10 	movl   $0x106f55,0x8(%esp)$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	00 $/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	c7 44 24 04 55 6f 10 	movl   $0xf0106f55,0x4(%esp)$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	f0 $/;"	l
f0100822	obj/kern/kernel.asm	/^f0100822:	c7 04 24 10 75 10 f0 	movl   $0xf0107510,(%esp)$/;"	l
f0100829	obj/kern/kernel.asm	/^f0100829:	e8 84 3f 00 00       	call   f01047b2 <cprintf>$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	c7 44 24 08 00 3d 22 	movl   $0x223d00,0x8(%esp)$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	00 $/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	c7 44 24 04 00 3d 22 	movl   $0xf0223d00,0x4(%esp)$/;"	l
f010083d	obj/kern/kernel.asm	/^f010083d:	f0 $/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	c7 04 24 34 75 10 f0 	movl   $0xf0107534,(%esp)$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	e8 68 3f 00 00       	call   f01047b2 <cprintf>$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	c7 44 24 08 08 60 26 	movl   $0x266008,0x8(%esp)$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	00 $/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	c7 44 24 04 08 60 26 	movl   $0xf0266008,0x4(%esp)$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	f0 $/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	c7 04 24 58 75 10 f0 	movl   $0xf0107558,(%esp)$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	e8 4c 3f 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	b8 07 64 26 f0       	mov    $0xf0266407,%eax$/;"	l
f010086b	obj/kern/kernel.asm	/^f010086b:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f010087b	obj/kern/kernel.asm	/^f010087b:	85 c0                	test   %eax,%eax$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	c7 04 24 7c 75 10 f0 	movl   $0xf010757c,(%esp)$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	e8 1f 3f 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	c9                   	leave  $/;"	l
f0100899	obj/kern/kernel.asm	/^f0100899:	c3                   	ret    $/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a <mon_help>:$/;"	l
f010089a	obj/kern/kernel.asm	/^f010089a:	55                   	push   %ebp$/;"	l
f010089b	obj/kern/kernel.asm	/^f010089b:	89 e5                	mov    %esp,%ebp$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	56                   	push   %esi$/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	53                   	push   %ebx$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01008a2	obj/kern/kernel.asm	/^f01008a2:	bb 84 78 10 f0       	mov    $0xf0107884,%ebx$/;"	l
f01008a7	obj/kern/kernel.asm	/^f01008a7:	be fc 78 10 f0       	mov    $0xf01078fc,%esi$/;"	l
f01008ac	obj/kern/kernel.asm	/^f01008ac:	8b 03                	mov    (%ebx),%eax$/;"	l
f01008ae	obj/kern/kernel.asm	/^f01008ae:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	8b 43 fc             	mov    -0x4(%ebx),%eax$/;"	l
f01008b5	obj/kern/kernel.asm	/^f01008b5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	c7 04 24 89 72 10 f0 	movl   $0xf0107289,(%esp)$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	e8 ed 3e 00 00       	call   f01047b2 <cprintf>$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	39 f3                	cmp    %esi,%ebx$/;"	l
f01008ca	obj/kern/kernel.asm	/^f01008ca:	75 e0                	jne    f01008ac <mon_help+0x12>$/;"	l
f01008cc	obj/kern/kernel.asm	/^f01008cc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008d1	obj/kern/kernel.asm	/^f01008d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01008d4	obj/kern/kernel.asm	/^f01008d4:	5b                   	pop    %ebx$/;"	l
f01008d5	obj/kern/kernel.asm	/^f01008d5:	5e                   	pop    %esi$/;"	l
f01008d6	obj/kern/kernel.asm	/^f01008d6:	5d                   	pop    %ebp$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	c3                   	ret    $/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8 <mon_backtrace>:$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	55                   	push   %ebp$/;"	l
f01008d9	obj/kern/kernel.asm	/^f01008d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	57                   	push   %edi$/;"	l
f01008dc	obj/kern/kernel.asm	/^f01008dc:	56                   	push   %esi$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	53                   	push   %ebx$/;"	l
f01008de	obj/kern/kernel.asm	/^f01008de:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01008e1	obj/kern/kernel.asm	/^f01008e1:	89 eb                	mov    %ebp,%ebx$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	89 de                	mov    %ebx,%esi$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	8b 7b 04             	mov    0x4(%ebx),%edi$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	c7 04 24 92 72 10 f0 	movl   $0xf0107292,(%esp)$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	e8 be 3e 00 00       	call   f01047b2 <cprintf>$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	85 db                	test   %ebx,%ebx$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	0f 84 aa 00 00 00    	je     f01009a6 <mon_backtrace+0xce>$/;"	l
f01008fc	obj/kern/kernel.asm	/^f01008fc:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
f010090a	obj/kern/kernel.asm	/^f010090a:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0100911	obj/kern/kernel.asm	/^f0100911:	8b 46 0c             	mov    0xc(%esi),%eax$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f010091b	obj/kern/kernel.asm	/^f010091b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010091f	obj/kern/kernel.asm	/^f010091f:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0100923	obj/kern/kernel.asm	/^f0100923:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100927	obj/kern/kernel.asm	/^f0100927:	c7 04 24 a8 75 10 f0 	movl   $0xf01075a8,(%esp)$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	e8 7f 3e 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100933	obj/kern/kernel.asm	/^f0100933:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010093a	obj/kern/kernel.asm	/^f010093a:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	e8 b0 4c 00 00       	call   f01055f2 <debuginfo_eip>$/;"	l
f0100942	obj/kern/kernel.asm	/^f0100942:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100945	obj/kern/kernel.asm	/^f0100945:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100949	obj/kern/kernel.asm	/^f0100949:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010094c	obj/kern/kernel.asm	/^f010094c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100950	obj/kern/kernel.asm	/^f0100950:	c7 04 24 a3 72 10 f0 	movl   $0xf01072a3,(%esp)$/;"	l
f0100957	obj/kern/kernel.asm	/^f0100957:	e8 56 3e 00 00       	call   f01047b2 <cprintf>$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0100960	obj/kern/kernel.asm	/^f0100960:	74 24                	je     f0100986 <mon_backtrace+0xae>$/;"	l
f0100962	obj/kern/kernel.asm	/^f0100962:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100967	obj/kern/kernel.asm	/^f0100967:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	0f be 04 18          	movsbl (%eax,%ebx,1),%eax$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	c7 04 24 b2 72 10 f0 	movl   $0xf01072b2,(%esp)$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	e8 34 3e 00 00       	call   f01047b2 <cprintf>$/;"	l
f010097e	obj/kern/kernel.asm	/^f010097e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100981	obj/kern/kernel.asm	/^f0100981:	39 5d dc             	cmp    %ebx,-0x24(%ebp)$/;"	l
f0100984	obj/kern/kernel.asm	/^f0100984:	77 e1                	ja     f0100967 <mon_backtrace+0x8f>$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	2b 7d e0             	sub    -0x20(%ebp),%edi$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	c7 04 24 6e 8e 10 f0 	movl   $0xf0108e6e,(%esp)$/;"	l
f0100994	obj/kern/kernel.asm	/^f0100994:	e8 19 3e 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100999	obj/kern/kernel.asm	/^f0100999:	8b 36                	mov    (%esi),%esi$/;"	l
f010099b	obj/kern/kernel.asm	/^f010099b:	8b 7e 04             	mov    0x4(%esi),%edi$/;"	l
f010099e	obj/kern/kernel.asm	/^f010099e:	85 f6                	test   %esi,%esi$/;"	l
f01009a0	obj/kern/kernel.asm	/^f01009a0:	0f 85 56 ff ff ff    	jne    f01008fc <mon_backtrace+0x24>$/;"	l
f01009a6	obj/kern/kernel.asm	/^f01009a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f01009ae	obj/kern/kernel.asm	/^f01009ae:	5b                   	pop    %ebx$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	5e                   	pop    %esi$/;"	l
f01009b0	obj/kern/kernel.asm	/^f01009b0:	5f                   	pop    %edi$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	5d                   	pop    %ebp$/;"	l
f01009b2	obj/kern/kernel.asm	/^f01009b2:	c3                   	ret    $/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3 <mon_setcolor>:$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	55                   	push   %ebp$/;"	l
f01009b4	obj/kern/kernel.asm	/^f01009b4:	89 e5                	mov    %esp,%ebp$/;"	l
f01009b6	obj/kern/kernel.asm	/^f01009b6:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01009bc	obj/kern/kernel.asm	/^f01009bc:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01009c2	obj/kern/kernel.asm	/^f01009c2:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01009c5	obj/kern/kernel.asm	/^f01009c5:	c7 44 24 04 b5 72 10 	movl   $0xf01072b5,0x4(%esp)$/;"	l
f01009cc	obj/kern/kernel.asm	/^f01009cc:	f0 $/;"	l
f01009cd	obj/kern/kernel.asm	/^f01009cd:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01009d0	obj/kern/kernel.asm	/^f01009d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009d3	obj/kern/kernel.asm	/^f01009d3:	e8 e3 56 00 00       	call   f01060bb <strcmp>$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	85 c0                	test   %eax,%eax$/;"	l
f01009df	obj/kern/kernel.asm	/^f01009df:	0f 84 0e 01 00 00    	je     f0100af3 <mon_setcolor+0x140>$/;"	l
f01009e5	obj/kern/kernel.asm	/^f01009e5:	c7 44 24 04 b9 72 10 	movl   $0xf01072b9,0x4(%esp)$/;"	l
f01009ec	obj/kern/kernel.asm	/^f01009ec:	f0 $/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f01009f0	obj/kern/kernel.asm	/^f01009f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01009f3	obj/kern/kernel.asm	/^f01009f3:	e8 c3 56 00 00       	call   f01060bb <strcmp>$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	bf 07 00 00 00       	mov    $0x7,%edi$/;"	l
f01009fd	obj/kern/kernel.asm	/^f01009fd:	85 c0                	test   %eax,%eax$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	0f 84 ee 00 00 00    	je     f0100af3 <mon_setcolor+0x140>$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	c7 44 24 04 bd 72 10 	movl   $0xf01072bd,0x4(%esp)$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	f0 $/;"	l
f0100a0d	obj/kern/kernel.asm	/^f0100a0d:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	e8 a3 56 00 00       	call   f01060bb <strcmp>$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	85 c0                	test   %eax,%eax$/;"	l
f0100a1f	obj/kern/kernel.asm	/^f0100a1f:	0f 84 ce 00 00 00    	je     f0100af3 <mon_setcolor+0x140>$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	c7 44 24 04 c1 72 10 	movl   $0xf01072c1,0x4(%esp)$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	f0 $/;"	l
f0100a2d	obj/kern/kernel.asm	/^f0100a2d:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100a30	obj/kern/kernel.asm	/^f0100a30:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	e8 83 56 00 00       	call   f01060bb <strcmp>$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	bf 02 00 00 00       	mov    $0x2,%edi$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	85 c0                	test   %eax,%eax$/;"	l
f0100a3f	obj/kern/kernel.asm	/^f0100a3f:	0f 84 ae 00 00 00    	je     f0100af3 <mon_setcolor+0x140>$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	c7 44 24 04 c5 72 10 	movl   $0xf01072c5,0x4(%esp)$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	f0 $/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	e8 63 56 00 00       	call   f01060bb <strcmp>$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	bf 04 00 00 00       	mov    $0x4,%edi$/;"	l
f0100a5d	obj/kern/kernel.asm	/^f0100a5d:	85 c0                	test   %eax,%eax$/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	0f 84 8e 00 00 00    	je     f0100af3 <mon_setcolor+0x140>$/;"	l
f0100a65	obj/kern/kernel.asm	/^f0100a65:	c7 44 24 04 c9 72 10 	movl   $0xf01072c9,0x4(%esp)$/;"	l
f0100a6c	obj/kern/kernel.asm	/^f0100a6c:	f0 $/;"	l
f0100a6d	obj/kern/kernel.asm	/^f0100a6d:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	e8 43 56 00 00       	call   f01060bb <strcmp>$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	85 c0                	test   %eax,%eax$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	74 72                	je     f0100af3 <mon_setcolor+0x140>$/;"	l
f0100a81	obj/kern/kernel.asm	/^f0100a81:	c7 44 24 04 cd 72 10 	movl   $0xf01072cd,0x4(%esp)$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	f0 $/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	e8 27 56 00 00       	call   f01060bb <strcmp>$/;"	l
f0100a94	obj/kern/kernel.asm	/^f0100a94:	bf 0f 00 00 00       	mov    $0xf,%edi$/;"	l
f0100a99	obj/kern/kernel.asm	/^f0100a99:	85 c0                	test   %eax,%eax$/;"	l
f0100a9b	obj/kern/kernel.asm	/^f0100a9b:	74 56                	je     f0100af3 <mon_setcolor+0x140>$/;"	l
f0100a9d	obj/kern/kernel.asm	/^f0100a9d:	c7 44 24 04 d1 72 10 	movl   $0xf01072d1,0x4(%esp)$/;"	l
f0100aa4	obj/kern/kernel.asm	/^f0100aa4:	f0 $/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100aab	obj/kern/kernel.asm	/^f0100aab:	e8 0b 56 00 00       	call   f01060bb <strcmp>$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	bf 0c 00 00 00       	mov    $0xc,%edi$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	85 c0                	test   %eax,%eax$/;"	l
f0100ab7	obj/kern/kernel.asm	/^f0100ab7:	74 3a                	je     f0100af3 <mon_setcolor+0x140>$/;"	l
f0100ab9	obj/kern/kernel.asm	/^f0100ab9:	c7 44 24 04 d5 72 10 	movl   $0xf01072d5,0x4(%esp)$/;"	l
f0100ac0	obj/kern/kernel.asm	/^f0100ac0:	f0 $/;"	l
f0100ac1	obj/kern/kernel.asm	/^f0100ac1:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100ac4	obj/kern/kernel.asm	/^f0100ac4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	e8 ef 55 00 00       	call   f01060bb <strcmp>$/;"	l
f0100acc	obj/kern/kernel.asm	/^f0100acc:	bf 06 00 00 00       	mov    $0x6,%edi$/;"	l
f0100ad1	obj/kern/kernel.asm	/^f0100ad1:	85 c0                	test   %eax,%eax$/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	74 1e                	je     f0100af3 <mon_setcolor+0x140>$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	c7 44 24 04 d9 72 10 	movl   $0xf01072d9,0x4(%esp)$/;"	l
f0100adc	obj/kern/kernel.asm	/^f0100adc:	f0 $/;"	l
f0100add	obj/kern/kernel.asm	/^f0100add:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f0100ae0	obj/kern/kernel.asm	/^f0100ae0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ae3	obj/kern/kernel.asm	/^f0100ae3:	e8 d3 55 00 00       	call   f01060bb <strcmp>$/;"	l
f0100ae8	obj/kern/kernel.asm	/^f0100ae8:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	19 ff                	sbb    %edi,%edi$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	83 e7 04             	and    $0x4,%edi$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	83 c7 07             	add    $0x7,%edi$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	c7 44 24 04 b5 72 10 	movl   $0xf01072b5,0x4(%esp)$/;"	l
f0100afa	obj/kern/kernel.asm	/^f0100afa:	f0 $/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	e8 b5 55 00 00       	call   f01060bb <strcmp>$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100b0b	obj/kern/kernel.asm	/^f0100b0b:	85 c0                	test   %eax,%eax$/;"	l
f0100b0d	obj/kern/kernel.asm	/^f0100b0d:	0f 84 f6 00 00 00    	je     f0100c09 <mon_setcolor+0x256>$/;"	l
f0100b13	obj/kern/kernel.asm	/^f0100b13:	c7 44 24 04 b9 72 10 	movl   $0xf01072b9,0x4(%esp)$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	f0 $/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b21	obj/kern/kernel.asm	/^f0100b21:	e8 95 55 00 00       	call   f01060bb <strcmp>$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	b3 07                	mov    $0x7,%bl$/;"	l
f0100b28	obj/kern/kernel.asm	/^f0100b28:	85 c0                	test   %eax,%eax$/;"	l
f0100b2a	obj/kern/kernel.asm	/^f0100b2a:	0f 84 d9 00 00 00    	je     f0100c09 <mon_setcolor+0x256>$/;"	l
f0100b30	obj/kern/kernel.asm	/^f0100b30:	c7 44 24 04 bd 72 10 	movl   $0xf01072bd,0x4(%esp)$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	f0 $/;"	l
f0100b38	obj/kern/kernel.asm	/^f0100b38:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b3e	obj/kern/kernel.asm	/^f0100b3e:	e8 78 55 00 00       	call   f01060bb <strcmp>$/;"	l
f0100b43	obj/kern/kernel.asm	/^f0100b43:	b3 01                	mov    $0x1,%bl$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	85 c0                	test   %eax,%eax$/;"	l
f0100b47	obj/kern/kernel.asm	/^f0100b47:	0f 84 bc 00 00 00    	je     f0100c09 <mon_setcolor+0x256>$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	c7 44 24 04 c1 72 10 	movl   $0xf01072c1,0x4(%esp)$/;"	l
f0100b54	obj/kern/kernel.asm	/^f0100b54:	f0 $/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100b58	obj/kern/kernel.asm	/^f0100b58:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b5b	obj/kern/kernel.asm	/^f0100b5b:	e8 5b 55 00 00       	call   f01060bb <strcmp>$/;"	l
f0100b60	obj/kern/kernel.asm	/^f0100b60:	b3 02                	mov    $0x2,%bl$/;"	l
f0100b62	obj/kern/kernel.asm	/^f0100b62:	85 c0                	test   %eax,%eax$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	0f 84 9f 00 00 00    	je     f0100c09 <mon_setcolor+0x256>$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	c7 44 24 04 c5 72 10 	movl   $0xf01072c5,0x4(%esp)$/;"	l
f0100b71	obj/kern/kernel.asm	/^f0100b71:	f0 $/;"	l
f0100b72	obj/kern/kernel.asm	/^f0100b72:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b78	obj/kern/kernel.asm	/^f0100b78:	e8 3e 55 00 00       	call   f01060bb <strcmp>$/;"	l
f0100b7d	obj/kern/kernel.asm	/^f0100b7d:	b3 04                	mov    $0x4,%bl$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	85 c0                	test   %eax,%eax$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	0f 84 82 00 00 00    	je     f0100c09 <mon_setcolor+0x256>$/;"	l
f0100b87	obj/kern/kernel.asm	/^f0100b87:	c7 44 24 04 c9 72 10 	movl   $0xf01072c9,0x4(%esp)$/;"	l
f0100b8e	obj/kern/kernel.asm	/^f0100b8e:	f0 $/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	e8 21 55 00 00       	call   f01060bb <strcmp>$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	b3 08                	mov    $0x8,%bl$/;"	l
f0100b9c	obj/kern/kernel.asm	/^f0100b9c:	85 c0                	test   %eax,%eax$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	74 69                	je     f0100c09 <mon_setcolor+0x256>$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	c7 44 24 04 cd 72 10 	movl   $0xf01072cd,0x4(%esp)$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	f0 $/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	e8 08 55 00 00       	call   f01060bb <strcmp>$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	b3 0f                	mov    $0xf,%bl$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	85 c0                	test   %eax,%eax$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	74 50                	je     f0100c09 <mon_setcolor+0x256>$/;"	l
f0100bb9	obj/kern/kernel.asm	/^f0100bb9:	c7 44 24 04 d1 72 10 	movl   $0xf01072d1,0x4(%esp)$/;"	l
f0100bc0	obj/kern/kernel.asm	/^f0100bc0:	f0 $/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100bc4	obj/kern/kernel.asm	/^f0100bc4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100bc7	obj/kern/kernel.asm	/^f0100bc7:	e8 ef 54 00 00       	call   f01060bb <strcmp>$/;"	l
f0100bcc	obj/kern/kernel.asm	/^f0100bcc:	b3 0c                	mov    $0xc,%bl$/;"	l
f0100bce	obj/kern/kernel.asm	/^f0100bce:	85 c0                	test   %eax,%eax$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	74 37                	je     f0100c09 <mon_setcolor+0x256>$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	c7 44 24 04 d5 72 10 	movl   $0xf01072d5,0x4(%esp)$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	f0 $/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	e8 d6 54 00 00       	call   f01060bb <strcmp>$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	b3 06                	mov    $0x6,%bl$/;"	l
f0100be7	obj/kern/kernel.asm	/^f0100be7:	85 c0                	test   %eax,%eax$/;"	l
f0100be9	obj/kern/kernel.asm	/^f0100be9:	74 1e                	je     f0100c09 <mon_setcolor+0x256>$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	c7 44 24 04 d9 72 10 	movl   $0xf01072d9,0x4(%esp)$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	f0 $/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0100bf6	obj/kern/kernel.asm	/^f0100bf6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100bf9	obj/kern/kernel.asm	/^f0100bf9:	e8 bd 54 00 00       	call   f01060bb <strcmp>$/;"	l
f0100bfe	obj/kern/kernel.asm	/^f0100bfe:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	19 db                	sbb    %ebx,%ebx$/;"	l
f0100c03	obj/kern/kernel.asm	/^f0100c03:	83 e3 04             	and    $0x4,%ebx$/;"	l
f0100c06	obj/kern/kernel.asm	/^f0100c06:	83 c3 07             	add    $0x7,%ebx$/;"	l
f0100c09	obj/kern/kernel.asm	/^f0100c09:	0f b7 f7             	movzwl %di,%esi$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	0f b7 db             	movzwl %bx,%ebx$/;"	l
f0100c0f	obj/kern/kernel.asm	/^f0100c0f:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0100c13	obj/kern/kernel.asm	/^f0100c13:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	e8 ee f9 ff ff       	call   f0100609 <set_attribute_color>$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100c23	obj/kern/kernel.asm	/^f0100c23:	c7 04 24 dc 75 10 f0 	movl   $0xf01075dc,(%esp)$/;"	l
f0100c2a	obj/kern/kernel.asm	/^f0100c2a:	e8 83 3b 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100c2f	obj/kern/kernel.asm	/^f0100c2f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c34	obj/kern/kernel.asm	/^f0100c34:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	89 ec                	mov    %ebp,%esp$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	5d                   	pop    %ebp$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	c3                   	ret    $/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41 <mon_si>:$/;"	l
f0100c41	obj/kern/kernel.asm	/^f0100c41:	55                   	push   %ebp$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c44	obj/kern/kernel.asm	/^f0100c44:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100c4a	obj/kern/kernel.asm	/^f0100c4a:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100c4e	obj/kern/kernel.asm	/^f0100c4e:	7e 0e                	jle    f0100c5e <mon_si+0x1d>$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	c7 04 24 dd 72 10 f0 	movl   $0xf01072dd,(%esp)$/;"	l
f0100c57	obj/kern/kernel.asm	/^f0100c57:	e8 56 3b 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100c5c	obj/kern/kernel.asm	/^f0100c5c:	eb 2f                	jmp    f0100c8d <mon_si+0x4c>$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	85 c0                	test   %eax,%eax$/;"	l
f0100c60	obj/kern/kernel.asm	/^f0100c60:	75 0e                	jne    f0100c70 <mon_si+0x2f>$/;"	l
f0100c62	obj/kern/kernel.asm	/^f0100c62:	c7 04 24 fb 72 10 f0 	movl   $0xf01072fb,(%esp)$/;"	l
f0100c69	obj/kern/kernel.asm	/^f0100c69:	e8 44 3b 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100c6e	obj/kern/kernel.asm	/^f0100c6e:	eb 1d                	jmp    f0100c8d <mon_si+0x4c>$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	81 48 38 00 01 00 00 	orl    $0x100,0x38(%eax)$/;"	l
f0100c77	obj/kern/kernel.asm	/^f0100c77:	e8 a4 5b 00 00       	call   f0106820 <cpunum>$/;"	l
f0100c7c	obj/kern/kernel.asm	/^f0100c7c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0100c85	obj/kern/kernel.asm	/^f0100c85:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	e8 dc 38 00 00       	call   f0104569 <env_run>$/;"	l
f0100c8d	obj/kern/kernel.asm	/^f0100c8d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	c9                   	leave  $/;"	l
f0100c93	obj/kern/kernel.asm	/^f0100c93:	c3                   	ret    $/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94 <mon_continue>:$/;"	l
f0100c94	obj/kern/kernel.asm	/^f0100c94:	55                   	push   %ebp$/;"	l
f0100c95	obj/kern/kernel.asm	/^f0100c95:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100c9d	obj/kern/kernel.asm	/^f0100c9d:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
f0100ca1	obj/kern/kernel.asm	/^f0100ca1:	7e 0e                	jle    f0100cb1 <mon_continue+0x1d>$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	c7 04 24 dd 72 10 f0 	movl   $0xf01072dd,(%esp)$/;"	l
f0100caa	obj/kern/kernel.asm	/^f0100caa:	e8 03 3b 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100caf	obj/kern/kernel.asm	/^f0100caf:	eb 2f                	jmp    f0100ce0 <mon_continue+0x4c>$/;"	l
f0100cb1	obj/kern/kernel.asm	/^f0100cb1:	85 c0                	test   %eax,%eax$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	75 0e                	jne    f0100cc3 <mon_continue+0x2f>$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	c7 04 24 06 73 10 f0 	movl   $0xf0107306,(%esp)$/;"	l
f0100cbc	obj/kern/kernel.asm	/^f0100cbc:	e8 f1 3a 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	eb 1d                	jmp    f0100ce0 <mon_continue+0x4c>$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	81 60 38 ff fe ff ff 	andl   $0xfffffeff,0x38(%eax)$/;"	l
f0100cca	obj/kern/kernel.asm	/^f0100cca:	e8 51 5b 00 00       	call   f0106820 <cpunum>$/;"	l
f0100ccf	obj/kern/kernel.asm	/^f0100ccf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0100cd8	obj/kern/kernel.asm	/^f0100cd8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100cdb	obj/kern/kernel.asm	/^f0100cdb:	e8 89 38 00 00       	call   f0104569 <env_run>$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	c9                   	leave  $/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	c3                   	ret    $/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7 <printPermission>:$/;"	l
f0100ce7	obj/kern/kernel.asm	/^f0100ce7:	55                   	push   %ebp$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	89 e5                	mov    %esp,%ebp$/;"	l
f0100cea	obj/kern/kernel.asm	/^f0100cea:	53                   	push   %ebx$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100cee	obj/kern/kernel.asm	/^f0100cee:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	f6 c3 04             	test   $0x4,%bl$/;"	l
f0100cf4	obj/kern/kernel.asm	/^f0100cf4:	0f 95 c0             	setne  %al$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100cfa	obj/kern/kernel.asm	/^f0100cfa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	c7 04 24 17 73 10 f0 	movl   $0xf0107317,(%esp)$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	e8 a8 3a 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100d0a	obj/kern/kernel.asm	/^f0100d0a:	f6 c3 02             	test   $0x2,%bl$/;"	l
f0100d0d	obj/kern/kernel.asm	/^f0100d0d:	0f 95 c0             	setne  %al$/;"	l
f0100d10	obj/kern/kernel.asm	/^f0100d10:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100d13	obj/kern/kernel.asm	/^f0100d13:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100d17	obj/kern/kernel.asm	/^f0100d17:	c7 04 24 23 73 10 f0 	movl   $0xf0107323,(%esp)$/;"	l
f0100d1e	obj/kern/kernel.asm	/^f0100d1e:	e8 8f 3a 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100d23	obj/kern/kernel.asm	/^f0100d23:	83 e3 01             	and    $0x1,%ebx$/;"	l
f0100d26	obj/kern/kernel.asm	/^f0100d26:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100d2a	obj/kern/kernel.asm	/^f0100d2a:	c7 04 24 2f 73 10 f0 	movl   $0xf010732f,(%esp)$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	e8 7c 3a 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100d36	obj/kern/kernel.asm	/^f0100d36:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100d39	obj/kern/kernel.asm	/^f0100d39:	5b                   	pop    %ebx$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	5d                   	pop    %ebp$/;"	l
f0100d3b	obj/kern/kernel.asm	/^f0100d3b:	c3                   	ret    $/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c <xtoi>:$/;"	l
f0100d3c	obj/kern/kernel.asm	/^f0100d3c:	55                   	push   %ebp$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	83 ec 38             	sub    $0x38,%esp$/;"	l
f0100d42	obj/kern/kernel.asm	/^f0100d42:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0100d45	obj/kern/kernel.asm	/^f0100d45:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0100d48	obj/kern/kernel.asm	/^f0100d48:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0100d4b	obj/kern/kernel.asm	/^f0100d4b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100d4e	obj/kern/kernel.asm	/^f0100d4e:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0100d51	obj/kern/kernel.asm	/^f0100d51:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	e8 57 52 00 00       	call   f0105fb0 <strlen>$/;"	l
f0100d59	obj/kern/kernel.asm	/^f0100d59:	c6 06 01             	movb   $0x1,(%esi)$/;"	l
f0100d5c	obj/kern/kernel.asm	/^f0100d5c:	80 3b 30             	cmpb   $0x30,(%ebx)$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	75 1f                	jne    f0100d80 <xtoi+0x44>$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	0f b6 53 01          	movzbl 0x1(%ebx),%edx$/;"	l
f0100d65	obj/kern/kernel.asm	/^f0100d65:	80 fa 78             	cmp    $0x78,%dl$/;"	l
f0100d68	obj/kern/kernel.asm	/^f0100d68:	74 05                	je     f0100d6f <xtoi+0x33>$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	80 fa 58             	cmp    $0x58,%dl$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	75 11                	jne    f0100d80 <xtoi+0x44>$/;"	l
f0100d6f	obj/kern/kernel.asm	/^f0100d6f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	77 0c                	ja     f0100d8a <xtoi+0x4e>$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	eb 5d                	jmp    f0100ddd <xtoi+0xa1>$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	c6 06 00             	movb   $0x0,(%esi)$/;"	l
f0100d83	obj/kern/kernel.asm	/^f0100d83:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	eb 53                	jmp    f0100ddd <xtoi+0xa1>$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f0100d8d	obj/kern/kernel.asm	/^f0100d8d:	89 c6                	mov    %eax,%esi$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	c1 e7 04             	shl    $0x4,%edi$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	0f b6 04 13          	movzbl (%ebx,%edx,1),%eax$/;"	l
f0100d96	obj/kern/kernel.asm	/^f0100d96:	8d 48 d0             	lea    -0x30(%eax),%ecx$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	77 09                	ja     f0100da7 <xtoi+0x6b>$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	0f be c0             	movsbl %al,%eax$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	8d 7c 07 d0          	lea    -0x30(%edi,%eax,1),%edi$/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	eb 2f                	jmp    f0100dd6 <xtoi+0x9a>$/;"	l
f0100da7	obj/kern/kernel.asm	/^f0100da7:	8d 48 9f             	lea    -0x61(%eax),%ecx$/;"	l
f0100daa	obj/kern/kernel.asm	/^f0100daa:	80 f9 05             	cmp    $0x5,%cl$/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	77 09                	ja     f0100db8 <xtoi+0x7c>$/;"	l
f0100daf	obj/kern/kernel.asm	/^f0100daf:	0f be c0             	movsbl %al,%eax$/;"	l
f0100db2	obj/kern/kernel.asm	/^f0100db2:	8d 7c 07 a9          	lea    -0x57(%edi,%eax,1),%edi$/;"	l
f0100db6	obj/kern/kernel.asm	/^f0100db6:	eb 1e                	jmp    f0100dd6 <xtoi+0x9a>$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	8d 48 bf             	lea    -0x41(%eax),%ecx$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	80 f9 05             	cmp    $0x5,%cl$/;"	l
f0100dbe	obj/kern/kernel.asm	/^f0100dbe:	77 09                	ja     f0100dc9 <xtoi+0x8d>$/;"	l
f0100dc0	obj/kern/kernel.asm	/^f0100dc0:	0f be c0             	movsbl %al,%eax$/;"	l
f0100dc3	obj/kern/kernel.asm	/^f0100dc3:	8d 7c 07 c9          	lea    -0x37(%edi,%eax,1),%edi$/;"	l
f0100dc7	obj/kern/kernel.asm	/^f0100dc7:	eb 0d                	jmp    f0100dd6 <xtoi+0x9a>$/;"	l
f0100dc9	obj/kern/kernel.asm	/^f0100dc9:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	c6 06 00             	movb   $0x0,(%esi)$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	eb 07                	jmp    f0100ddd <xtoi+0xa1>$/;"	l
f0100dd6	obj/kern/kernel.asm	/^f0100dd6:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100dd9	obj/kern/kernel.asm	/^f0100dd9:	39 d6                	cmp    %edx,%esi$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	75 b2                	jne    f0100d8f <xtoi+0x53>$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	89 f8                	mov    %edi,%eax$/;"	l
f0100ddf	obj/kern/kernel.asm	/^f0100ddf:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0100de2	obj/kern/kernel.asm	/^f0100de2:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	89 ec                	mov    %ebp,%esp$/;"	l
f0100dea	obj/kern/kernel.asm	/^f0100dea:	5d                   	pop    %ebp$/;"	l
f0100deb	obj/kern/kernel.asm	/^f0100deb:	c3                   	ret    $/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec <pxtoi>:$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	55                   	push   %ebp$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	89 e5                	mov    %esp,%ebp$/;"	l
f0100def	obj/kern/kernel.asm	/^f0100def:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	c6 45 f7 01          	movb   $0x1,-0x9(%ebp)$/;"	l
f0100df6	obj/kern/kernel.asm	/^f0100df6:	8d 45 f7             	lea    -0x9(%ebp),%eax$/;"	l
f0100df9	obj/kern/kernel.asm	/^f0100df9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100e00	obj/kern/kernel.asm	/^f0100e00:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e03	obj/kern/kernel.asm	/^f0100e03:	e8 34 ff ff ff       	call   f0100d3c <xtoi>$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	89 02                	mov    %eax,(%edx)$/;"	l
f0100e0d	obj/kern/kernel.asm	/^f0100e0d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100e12	obj/kern/kernel.asm	/^f0100e12:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
f0100e16	obj/kern/kernel.asm	/^f0100e16:	75 11                	jne    f0100e29 <pxtoi+0x3d>$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	c7 04 24 3b 73 10 f0 	movl   $0xf010733b,(%esp)$/;"	l
f0100e1f	obj/kern/kernel.asm	/^f0100e1f:	e8 8e 39 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100e24	obj/kern/kernel.asm	/^f0100e24:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e29	obj/kern/kernel.asm	/^f0100e29:	c9                   	leave  $/;"	l
f0100e2a	obj/kern/kernel.asm	/^f0100e2a:	c3                   	ret    $/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b <mon_showmapping>:$/;"	l
f0100e2b	obj/kern/kernel.asm	/^f0100e2b:	55                   	push   %ebp$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e2e	obj/kern/kernel.asm	/^f0100e2e:	53                   	push   %ebx$/;"	l
f0100e2f	obj/kern/kernel.asm	/^f0100e2f:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100e38	obj/kern/kernel.asm	/^f0100e38:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e3c	obj/kern/kernel.asm	/^f0100e3c:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100e3f	obj/kern/kernel.asm	/^f0100e3f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	e8 a5 ff ff ff       	call   f0100dec <pxtoi>$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	84 c0                	test   %al,%al$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	0f 84 eb 00 00 00    	je     f0100f3a <mon_showmapping+0x10f>$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0100e59	obj/kern/kernel.asm	/^f0100e59:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e5c	obj/kern/kernel.asm	/^f0100e5c:	e8 8b ff ff ff       	call   f0100dec <pxtoi>$/;"	l
f0100e61	obj/kern/kernel.asm	/^f0100e61:	84 c0                	test   %al,%al$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	0f 84 d1 00 00 00    	je     f0100f3a <mon_showmapping+0x10f>$/;"	l
f0100e69	obj/kern/kernel.asm	/^f0100e69:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f0100e72	obj/kern/kernel.asm	/^f0100e72:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f0100e7e	obj/kern/kernel.asm	/^f0100e7e:	81 c1 ff 0f 00 00    	add    $0xfff,%ecx$/;"	l
f0100e84	obj/kern/kernel.asm	/^f0100e84:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	89 d0                	mov    %edx,%eax$/;"	l
f0100e8f	obj/kern/kernel.asm	/^f0100e8f:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100e91	obj/kern/kernel.asm	/^f0100e91:	0f 82 a3 00 00 00    	jb     f0100f3a <mon_showmapping+0x10f>$/;"	l
f0100e97	obj/kern/kernel.asm	/^f0100e97:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0100e9e	obj/kern/kernel.asm	/^f0100e9e:	00 $/;"	l
f0100e9f	obj/kern/kernel.asm	/^f0100e9f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ea3	obj/kern/kernel.asm	/^f0100ea3:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	e8 a2 0a 00 00       	call   f0101952 <pgdir_walk>$/;"	l
f0100eb0	obj/kern/kernel.asm	/^f0100eb0:	89 c3                	mov    %eax,%ebx$/;"	l
f0100eb2	obj/kern/kernel.asm	/^f0100eb2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	c7 04 24 51 73 10 f0 	movl   $0xf0107351,(%esp)$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	e8 ed 38 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100ec5	obj/kern/kernel.asm	/^f0100ec5:	85 db                	test   %ebx,%ebx$/;"	l
f0100ec7	obj/kern/kernel.asm	/^f0100ec7:	74 41                	je     f0100f0a <mon_showmapping+0xdf>$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100ecb	obj/kern/kernel.asm	/^f0100ecb:	a8 01                	test   $0x1,%al$/;"	l
f0100ecd	obj/kern/kernel.asm	/^f0100ecd:	74 2d                	je     f0100efc <mon_showmapping+0xd1>$/;"	l
f0100ecf	obj/kern/kernel.asm	/^f0100ecf:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ed8	obj/kern/kernel.asm	/^f0100ed8:	c7 04 24 5e 73 10 f0 	movl   $0xf010735e,(%esp)$/;"	l
f0100edf	obj/kern/kernel.asm	/^f0100edf:	e8 ce 38 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	8b 03                	mov    (%ebx),%eax$/;"	l
f0100ee6	obj/kern/kernel.asm	/^f0100ee6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100ee9	obj/kern/kernel.asm	/^f0100ee9:	e8 f9 fd ff ff       	call   f0100ce7 <printPermission>$/;"	l
f0100eee	obj/kern/kernel.asm	/^f0100eee:	c7 04 24 96 84 10 f0 	movl   $0xf0108496,(%esp)$/;"	l
f0100ef5	obj/kern/kernel.asm	/^f0100ef5:	e8 b8 38 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	eb 2a                	jmp    f0100f26 <mon_showmapping+0xfb>$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	c7 04 24 6e 73 10 f0 	movl   $0xf010736e,(%esp)$/;"	l
f0100f03	obj/kern/kernel.asm	/^f0100f03:	e8 aa 38 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100f08	obj/kern/kernel.asm	/^f0100f08:	eb 1c                	jmp    f0100f26 <mon_showmapping+0xfb>$/;"	l
f0100f0a	obj/kern/kernel.asm	/^f0100f0a:	c7 44 24 08 80 73 10 	movl   $0xf0107380,0x8(%esp)$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	f0 $/;"	l
f0100f12	obj/kern/kernel.asm	/^f0100f12:	c7 44 24 04 0b 01 00 	movl   $0x10b,0x4(%esp)$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	00 $/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	c7 04 24 95 73 10 f0 	movl   $0xf0107395,(%esp)$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	e8 1a f1 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0100f2e	obj/kern/kernel.asm	/^f0100f2e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
f0100f34	obj/kern/kernel.asm	/^f0100f34:	0f 83 5d ff ff ff    	jae    f0100e97 <mon_showmapping+0x6c>$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f3f	obj/kern/kernel.asm	/^f0100f3f:	83 c4 24             	add    $0x24,%esp$/;"	l
f0100f42	obj/kern/kernel.asm	/^f0100f42:	5b                   	pop    %ebx$/;"	l
f0100f43	obj/kern/kernel.asm	/^f0100f43:	5d                   	pop    %ebp$/;"	l
f0100f44	obj/kern/kernel.asm	/^f0100f44:	c3                   	ret    $/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45 <mon_dump>:$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	55                   	push   %ebp$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f48	obj/kern/kernel.asm	/^f0100f48:	53                   	push   %ebx$/;"	l
f0100f49	obj/kern/kernel.asm	/^f0100f49:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0100f4c	obj/kern/kernel.asm	/^f0100f4c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f0100f53	obj/kern/kernel.asm	/^f0100f53:	7f 11                	jg     f0100f66 <mon_dump+0x21>$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	c7 04 24 a4 73 10 f0 	movl   $0xf01073a4,(%esp)$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	e8 51 38 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	e9 10 01 00 00       	jmp    f0101076 <mon_dump+0x131>$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100f6d	obj/kern/kernel.asm	/^f0100f6d:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100f70	obj/kern/kernel.asm	/^f0100f70:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f73	obj/kern/kernel.asm	/^f0100f73:	e8 74 fe ff ff       	call   f0100dec <pxtoi>$/;"	l
f0100f78	obj/kern/kernel.asm	/^f0100f78:	84 c0                	test   %al,%al$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	0f 84 f6 00 00 00    	je     f0101076 <mon_dump+0x131>$/;"	l
f0100f80	obj/kern/kernel.asm	/^f0100f80:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100f8d	obj/kern/kernel.asm	/^f0100f8d:	e8 5a fe ff ff       	call   f0100dec <pxtoi>$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	84 c0                	test   %al,%al$/;"	l
f0100f94	obj/kern/kernel.asm	/^f0100f94:	0f 84 dc 00 00 00    	je     f0101076 <mon_dump+0x131>$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100f9d	obj/kern/kernel.asm	/^f0100f9d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0100fa0	obj/kern/kernel.asm	/^f0100fa0:	3c 70                	cmp    $0x70,%al$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	0f 85 90 00 00 00    	jne    f0101038 <mon_dump+0xf3>$/;"	l
f0100fa8	obj/kern/kernel.asm	/^f0100fa8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0100fab	obj/kern/kernel.asm	/^f0100fab:	8b 0d 88 4e 22 f0    	mov    0xf0224e88,%ecx$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1:	89 d0                	mov    %edx,%eax$/;"	l
f0100fb3	obj/kern/kernel.asm	/^f0100fb3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	39 c8                	cmp    %ecx,%eax$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	73 16                	jae    f0100fd0 <mon_dump+0x8b>$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100fbd	obj/kern/kernel.asm	/^f0100fbd:	39 c2                	cmp    %eax,%edx$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	0f 82 b1 00 00 00    	jb     f0101076 <mon_dump+0x131>$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	89 c2                	mov    %eax,%edx$/;"	l
f0100fc7	obj/kern/kernel.asm	/^f0100fc7:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	39 d1                	cmp    %edx,%ecx$/;"	l
f0100fcc	obj/kern/kernel.asm	/^f0100fcc:	77 40                	ja     f010100e <mon_dump+0xc9>$/;"	l
f0100fce	obj/kern/kernel.asm	/^f0100fce:	eb 1e                	jmp    f0100fee <mon_dump+0xa9>$/;"	l
f0100fd0	obj/kern/kernel.asm	/^f0100fd0:	c7 04 24 b5 73 10 f0 	movl   $0xf01073b5,(%esp)$/;"	l
f0100fd7	obj/kern/kernel.asm	/^f0100fd7:	e8 d6 37 00 00       	call   f01047b2 <cprintf>$/;"	l
f0100fdc	obj/kern/kernel.asm	/^f0100fdc:	e9 95 00 00 00       	jmp    f0101076 <mon_dump+0x131>$/;"	l
f0100fe1	obj/kern/kernel.asm	/^f0100fe1:	89 c2                	mov    %eax,%edx$/;"	l
f0100fe3	obj/kern/kernel.asm	/^f0100fe3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fe6	obj/kern/kernel.asm	/^f0100fe6:	3b 15 88 4e 22 f0    	cmp    0xf0224e88,%edx$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	72 20                	jb     f010100e <mon_dump+0xc9>$/;"	l
f0100fee	obj/kern/kernel.asm	/^f0100fee:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	f0 $/;"	l
f0100ffa	obj/kern/kernel.asm	/^f0100ffa:	c7 44 24 04 ee 00 00 	movl   $0xee,0x4(%esp)$/;"	l
f0101001	obj/kern/kernel.asm	/^f0101001:	00 $/;"	l
f0101002	obj/kern/kernel.asm	/^f0101002:	c7 04 24 95 73 10 f0 	movl   $0xf0107395,(%esp)$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	e8 32 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	8b 90 00 00 00 f0    	mov    -0x10000000(%eax),%edx$/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	c7 04 24 c4 73 10 f0 	movl   $0xf01073c4,(%esp)$/;"	l
f0101023	obj/kern/kernel.asm	/^f0101023:	e8 8a 37 00 00       	call   f01047b2 <cprintf>$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010102b	obj/kern/kernel.asm	/^f010102b:	83 c0 04             	add    $0x4,%eax$/;"	l
f010102e	obj/kern/kernel.asm	/^f010102e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101031	obj/kern/kernel.asm	/^f0101031:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	73 ab                	jae    f0100fe1 <mon_dump+0x9c>$/;"	l
f0101036	obj/kern/kernel.asm	/^f0101036:	eb 3e                	jmp    f0101076 <mon_dump+0x131>$/;"	l
f0101038	obj/kern/kernel.asm	/^f0101038:	3c 76                	cmp    $0x76,%al$/;"	l
f010103a	obj/kern/kernel.asm	/^f010103a:	75 2e                	jne    f010106a <mon_dump+0x125>$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	77 32                	ja     f0101076 <mon_dump+0x131>$/;"	l
f0101044	obj/kern/kernel.asm	/^f0101044:	8b 10                	mov    (%eax),%edx$/;"	l
f0101046	obj/kern/kernel.asm	/^f0101046:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010104a	obj/kern/kernel.asm	/^f010104a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	c7 04 24 d8 73 10 f0 	movl   $0xf01073d8,(%esp)$/;"	l
f0101055	obj/kern/kernel.asm	/^f0101055:	e8 58 37 00 00       	call   f01047b2 <cprintf>$/;"	l
f010105a	obj/kern/kernel.asm	/^f010105a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	83 c0 04             	add    $0x4,%eax$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
f0101066	obj/kern/kernel.asm	/^f0101066:	73 dc                	jae    f0101044 <mon_dump+0xff>$/;"	l
f0101068	obj/kern/kernel.asm	/^f0101068:	eb 0c                	jmp    f0101076 <mon_dump+0x131>$/;"	l
f010106a	obj/kern/kernel.asm	/^f010106a:	c7 04 24 a4 73 10 f0 	movl   $0xf01073a4,(%esp)$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	e8 3c 37 00 00       	call   f01047b2 <cprintf>$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010107b	obj/kern/kernel.asm	/^f010107b:	83 c4 24             	add    $0x24,%esp$/;"	l
f010107e	obj/kern/kernel.asm	/^f010107e:	5b                   	pop    %ebx$/;"	l
f010107f	obj/kern/kernel.asm	/^f010107f:	5d                   	pop    %ebp$/;"	l
f0101080	obj/kern/kernel.asm	/^f0101080:	c3                   	ret    $/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081 <mon_showPT>:$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	55                   	push   %ebp$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	89 e5                	mov    %esp,%ebp$/;"	l
f0101084	obj/kern/kernel.asm	/^f0101084:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101087	obj/kern/kernel.asm	/^f0101087:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010108d	obj/kern/kernel.asm	/^f010108d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101094	obj/kern/kernel.asm	/^f0101094:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101097	obj/kern/kernel.asm	/^f0101097:	e8 50 fd ff ff       	call   f0100dec <pxtoi>$/;"	l
f010109c	obj/kern/kernel.asm	/^f010109c:	84 c0                	test   %al,%al$/;"	l
f010109e	obj/kern/kernel.asm	/^f010109e:	74 31                	je     f01010d1 <mon_showPT+0x50>$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	00 $/;"	l
f01010a8	obj/kern/kernel.asm	/^f01010a8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01010ab	obj/kern/kernel.asm	/^f01010ab:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
f01010b0	obj/kern/kernel.asm	/^f01010b0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f01010b9	obj/kern/kernel.asm	/^f01010b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01010bc	obj/kern/kernel.asm	/^f01010bc:	e8 91 08 00 00       	call   f0101952 <pgdir_walk>$/;"	l
f01010c1	obj/kern/kernel.asm	/^f01010c1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	c7 04 24 10 76 10 f0 	movl   $0xf0107610,(%esp)$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	e8 e1 36 00 00       	call   f01047b2 <cprintf>$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010d6	obj/kern/kernel.asm	/^f01010d6:	c9                   	leave  $/;"	l
f01010d7	obj/kern/kernel.asm	/^f01010d7:	c3                   	ret    $/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8 <mon_changePermission>:$/;"	l
f01010d8	obj/kern/kernel.asm	/^f01010d8:	55                   	push   %ebp$/;"	l
f01010d9	obj/kern/kernel.asm	/^f01010d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01010db	obj/kern/kernel.asm	/^f01010db:	83 ec 38             	sub    $0x38,%esp$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	83 ff 01             	cmp    $0x1,%edi$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	7f 11                	jg     f0101103 <mon_changePermission+0x2b>$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	c7 04 24 dd 72 10 f0 	movl   $0xf01072dd,(%esp)$/;"	l
f01010f9	obj/kern/kernel.asm	/^f01010f9:	e8 b4 36 00 00       	call   f01047b2 <cprintf>$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	e9 f6 00 00 00       	jmp    f01011f9 <mon_changePermission+0x121>$/;"	l
f0101103	obj/kern/kernel.asm	/^f0101103:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010110a	obj/kern/kernel.asm	/^f010110a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	e8 d7 fc ff ff       	call   f0100dec <pxtoi>$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	84 c0                	test   %al,%al$/;"	l
f0101117	obj/kern/kernel.asm	/^f0101117:	0f 84 dc 00 00 00    	je     f01011f9 <mon_changePermission+0x121>$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101124	obj/kern/kernel.asm	/^f0101124:	00 $/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101128	obj/kern/kernel.asm	/^f0101128:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	e8 19 08 00 00       	call   f0101952 <pgdir_walk>$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	89 c6                	mov    %eax,%esi$/;"	l
f010113b	obj/kern/kernel.asm	/^f010113b:	85 c0                	test   %eax,%eax$/;"	l
f010113d	obj/kern/kernel.asm	/^f010113d:	75 1c                	jne    f010115b <mon_changePermission+0x83>$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	c7 44 24 08 80 73 10 	movl   $0xf0107380,0x8(%esp)$/;"	l
f0101146	obj/kern/kernel.asm	/^f0101146:	f0 $/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	c7 44 24 04 c1 00 00 	movl   $0xc1,0x4(%esp)$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	00 $/;"	l
f010114f	obj/kern/kernel.asm	/^f010114f:	c7 04 24 95 73 10 f0 	movl   $0xf0107395,(%esp)$/;"	l
f0101156	obj/kern/kernel.asm	/^f0101156:	e8 e5 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	83 ff 02             	cmp    $0x2,%edi$/;"	l
f010115e	obj/kern/kernel.asm	/^f010115e:	74 45                	je     f01011a5 <mon_changePermission+0xcd>$/;"	l
f0101160	obj/kern/kernel.asm	/^f0101160:	83 ff 05             	cmp    $0x5,%edi$/;"	l
f0101163	obj/kern/kernel.asm	/^f0101163:	74 11                	je     f0101176 <mon_changePermission+0x9e>$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	c7 04 24 dd 72 10 f0 	movl   $0xf01072dd,(%esp)$/;"	l
f010116c	obj/kern/kernel.asm	/^f010116c:	e8 41 36 00 00       	call   f01047b2 <cprintf>$/;"	l
f0101171	obj/kern/kernel.asm	/^f0101171:	e9 83 00 00 00       	jmp    f01011f9 <mon_changePermission+0x121>$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	80 38 31             	cmpb   $0x31,(%eax)$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	0f 94 c0             	sete   %al$/;"	l
f010117f	obj/kern/kernel.asm	/^f010117f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	89 c7                	mov    %eax,%edi$/;"	l
f0101184	obj/kern/kernel.asm	/^f0101184:	c1 e7 02             	shl    $0x2,%edi$/;"	l
f0101187	obj/kern/kernel.asm	/^f0101187:	8b 53 0c             	mov    0xc(%ebx),%edx$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	89 f8                	mov    %edi,%eax$/;"	l
f010118c	obj/kern/kernel.asm	/^f010118c:	83 c8 02             	or     $0x2,%eax$/;"	l
f010118f	obj/kern/kernel.asm	/^f010118f:	80 3a 31             	cmpb   $0x31,(%edx)$/;"	l
f0101192	obj/kern/kernel.asm	/^f0101192:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	8b 53 10             	mov    0x10(%ebx),%edx$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	89 f8                	mov    %edi,%eax$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	83 c8 01             	or     $0x1,%eax$/;"	l
f010119d	obj/kern/kernel.asm	/^f010119d:	80 3a 31             	cmpb   $0x31,(%edx)$/;"	l
f01011a0	obj/kern/kernel.asm	/^f01011a0:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	eb 05                	jmp    f01011aa <mon_changePermission+0xd2>$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	c7 04 24 ec 73 10 f0 	movl   $0xf01073ec,(%esp)$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	e8 fc 35 00 00       	call   f01047b2 <cprintf>$/;"	l
f01011b6	obj/kern/kernel.asm	/^f01011b6:	8b 06                	mov    (%esi),%eax$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011bb	obj/kern/kernel.asm	/^f01011bb:	e8 27 fb ff ff       	call   f0100ce7 <printPermission>$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	c7 04 24 96 84 10 f0 	movl   $0xf0108496,(%esp)$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	e8 e6 35 00 00       	call   f01047b2 <cprintf>$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	8b 06                	mov    (%esi),%eax$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	09 c7                	or     %eax,%edi$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	89 3e                	mov    %edi,(%esi)$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	c7 04 24 fb 73 10 f0 	movl   $0xf01073fb,(%esp)$/;"	l
f01011de	obj/kern/kernel.asm	/^f01011de:	e8 cf 35 00 00       	call   f01047b2 <cprintf>$/;"	l
f01011e3	obj/kern/kernel.asm	/^f01011e3:	8b 06                	mov    (%esi),%eax$/;"	l
f01011e5	obj/kern/kernel.asm	/^f01011e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01011e8	obj/kern/kernel.asm	/^f01011e8:	e8 fa fa ff ff       	call   f0100ce7 <printPermission>$/;"	l
f01011ed	obj/kern/kernel.asm	/^f01011ed:	c7 04 24 96 84 10 f0 	movl   $0xf0108496,(%esp)$/;"	l
f01011f4	obj/kern/kernel.asm	/^f01011f4:	e8 b9 35 00 00       	call   f01047b2 <cprintf>$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	89 ec                	mov    %ebp,%esp$/;"	l
f0101209	obj/kern/kernel.asm	/^f0101209:	5d                   	pop    %ebp$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	c3                   	ret    $/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b <monitor>:$/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	55                   	push   %ebp$/;"	l
f010120c	obj/kern/kernel.asm	/^f010120c:	89 e5                	mov    %esp,%ebp$/;"	l
f010120e	obj/kern/kernel.asm	/^f010120e:	57                   	push   %edi$/;"	l
f010120f	obj/kern/kernel.asm	/^f010120f:	56                   	push   %esi$/;"	l
f0101210	obj/kern/kernel.asm	/^f0101210:	53                   	push   %ebx$/;"	l
f0101211	obj/kern/kernel.asm	/^f0101211:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0101214	obj/kern/kernel.asm	/^f0101214:	c7 04 24 34 76 10 f0 	movl   $0xf0107634,(%esp)$/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	e8 92 35 00 00       	call   f01047b2 <cprintf>$/;"	l
f0101220	obj/kern/kernel.asm	/^f0101220:	c7 04 24 58 76 10 f0 	movl   $0xf0107658,(%esp)$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	e8 86 35 00 00       	call   f01047b2 <cprintf>$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	74 0b                	je     f010123d <monitor+0x32>$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	e8 bb 37 00 00       	call   f01049f8 <print_trapframe>$/;"	l
f010123d	obj/kern/kernel.asm	/^f010123d:	c7 04 24 09 74 10 f0 	movl   $0xf0107409,(%esp)$/;"	l
f0101244	obj/kern/kernel.asm	/^f0101244:	e8 97 4c 00 00       	call   f0105ee0 <readline>$/;"	l
f0101249	obj/kern/kernel.asm	/^f0101249:	89 c3                	mov    %eax,%ebx$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	85 c0                	test   %eax,%eax$/;"	l
f010124d	obj/kern/kernel.asm	/^f010124d:	74 ee                	je     f010123d <monitor+0x32>$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	eb 06                	jmp    f0101263 <monitor+0x58>$/;"	l
f010125d	obj/kern/kernel.asm	/^f010125d:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101263	obj/kern/kernel.asm	/^f0101263:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	84 c0                	test   %al,%al$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	74 6a                	je     f01012d4 <monitor+0xc9>$/;"	l
f010126a	obj/kern/kernel.asm	/^f010126a:	0f be c0             	movsbl %al,%eax$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101271	obj/kern/kernel.asm	/^f0101271:	c7 04 24 0d 74 10 f0 	movl   $0xf010740d,(%esp)$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	e8 b9 4e 00 00       	call   f0106136 <strchr>$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	85 c0                	test   %eax,%eax$/;"	l
f010127f	obj/kern/kernel.asm	/^f010127f:	75 dc                	jne    f010125d <monitor+0x52>$/;"	l
f0101281	obj/kern/kernel.asm	/^f0101281:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0101284	obj/kern/kernel.asm	/^f0101284:	74 4e                	je     f01012d4 <monitor+0xc9>$/;"	l
f0101286	obj/kern/kernel.asm	/^f0101286:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	75 16                	jne    f01012a1 <monitor+0x96>$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0101292	obj/kern/kernel.asm	/^f0101292:	00 $/;"	l
f0101293	obj/kern/kernel.asm	/^f0101293:	c7 04 24 12 74 10 f0 	movl   $0xf0107412,(%esp)$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	e8 13 35 00 00       	call   f01047b2 <cprintf>$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	eb 9c                	jmp    f010123d <monitor+0x32>$/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f01012a5	obj/kern/kernel.asm	/^f01012a5:	83 c6 01             	add    $0x1,%esi$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	84 c0                	test   %al,%al$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	75 0c                	jne    f01012bb <monitor+0xb0>$/;"	l
f01012af	obj/kern/kernel.asm	/^f01012af:	eb b2                	jmp    f0101263 <monitor+0x58>$/;"	l
f01012b1	obj/kern/kernel.asm	/^f01012b1:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	84 c0                	test   %al,%al$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	74 a8                	je     f0101263 <monitor+0x58>$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	0f be c0             	movsbl %al,%eax$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01012c2	obj/kern/kernel.asm	/^f01012c2:	c7 04 24 0d 74 10 f0 	movl   $0xf010740d,(%esp)$/;"	l
f01012c9	obj/kern/kernel.asm	/^f01012c9:	e8 68 4e 00 00       	call   f0106136 <strchr>$/;"	l
f01012ce	obj/kern/kernel.asm	/^f01012ce:	85 c0                	test   %eax,%eax$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	74 df                	je     f01012b1 <monitor+0xa6>$/;"	l
f01012d2	obj/kern/kernel.asm	/^f01012d2:	eb 8f                	jmp    f0101263 <monitor+0x58>$/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	00 $/;"	l
f01012dc	obj/kern/kernel.asm	/^f01012dc:	85 f6                	test   %esi,%esi$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	0f 84 59 ff ff ff    	je     f010123d <monitor+0x32>$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	bb 80 78 10 f0       	mov    $0xf0107880,%ebx$/;"	l
f01012e9	obj/kern/kernel.asm	/^f01012e9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	8b 03                	mov    (%ebx),%eax$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01012f4	obj/kern/kernel.asm	/^f01012f4:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01012fa	obj/kern/kernel.asm	/^f01012fa:	e8 bc 4d 00 00       	call   f01060bb <strcmp>$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	85 c0                	test   %eax,%eax$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	75 24                	jne    f0101327 <monitor+0x11c>$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0101306	obj/kern/kernel.asm	/^f0101306:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101309	obj/kern/kernel.asm	/^f0101309:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010130d	obj/kern/kernel.asm	/^f010130d:	8d 55 a8             	lea    -0x58(%ebp),%edx$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0101314	obj/kern/kernel.asm	/^f0101314:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101317	obj/kern/kernel.asm	/^f0101317:	ff 14 85 88 78 10 f0 	call   *-0xfef8778(,%eax,4)$/;"	l
f010131e	obj/kern/kernel.asm	/^f010131e:	85 c0                	test   %eax,%eax$/;"	l
f0101320	obj/kern/kernel.asm	/^f0101320:	78 28                	js     f010134a <monitor+0x13f>$/;"	l
f0101322	obj/kern/kernel.asm	/^f0101322:	e9 16 ff ff ff       	jmp    f010123d <monitor+0x32>$/;"	l
f0101327	obj/kern/kernel.asm	/^f0101327:	83 c7 01             	add    $0x1,%edi$/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f010132d	obj/kern/kernel.asm	/^f010132d:	83 ff 0a             	cmp    $0xa,%edi$/;"	l
f0101330	obj/kern/kernel.asm	/^f0101330:	75 bc                	jne    f01012ee <monitor+0xe3>$/;"	l
f0101332	obj/kern/kernel.asm	/^f0101332:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0101335	obj/kern/kernel.asm	/^f0101335:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	c7 04 24 2f 74 10 f0 	movl   $0xf010742f,(%esp)$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	e8 6d 34 00 00       	call   f01047b2 <cprintf>$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	e9 f3 fe ff ff       	jmp    f010123d <monitor+0x32>$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	5b                   	pop    %ebx$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	5e                   	pop    %esi$/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	5f                   	pop    %edi$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	5d                   	pop    %ebp$/;"	l
f0101351	obj/kern/kernel.asm	/^f0101351:	c3                   	ret    $/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360 <boot_alloc>:$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	55                   	push   %ebp$/;"	l
f0101361	obj/kern/kernel.asm	/^f0101361:	89 e5                	mov    %esp,%ebp$/;"	l
f0101363	obj/kern/kernel.asm	/^f0101363:	83 3d 3c 42 22 f0 00 	cmpl   $0x0,0xf022423c$/;"	l
f010136a	obj/kern/kernel.asm	/^f010136a:	75 11                	jne    f010137d <boot_alloc+0x1d>$/;"	l
f010136c	obj/kern/kernel.asm	/^f010136c:	ba 07 70 26 f0       	mov    $0xf0267007,%edx$/;"	l
f0101371	obj/kern/kernel.asm	/^f0101371:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101377	obj/kern/kernel.asm	/^f0101377:	89 15 3c 42 22 f0    	mov    %edx,0xf022423c$/;"	l
f010137d	obj/kern/kernel.asm	/^f010137d:	8b 15 3c 42 22 f0    	mov    0xf022423c,%edx$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	85 c0                	test   %eax,%eax$/;"	l
f0101385	obj/kern/kernel.asm	/^f0101385:	74 11                	je     f0101398 <boot_alloc+0x38>$/;"	l
f0101387	obj/kern/kernel.asm	/^f0101387:	8d 84 02 ff 0f 00 00 	lea    0xfff(%edx,%eax,1),%eax$/;"	l
f010138e	obj/kern/kernel.asm	/^f010138e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101393	obj/kern/kernel.asm	/^f0101393:	a3 3c 42 22 f0       	mov    %eax,0xf022423c$/;"	l
f0101398	obj/kern/kernel.asm	/^f0101398:	89 d0                	mov    %edx,%eax$/;"	l
f010139a	obj/kern/kernel.asm	/^f010139a:	5d                   	pop    %ebp$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	c3                   	ret    $/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c <check_va2pa>:$/;"	l
f010139c	obj/kern/kernel.asm	/^f010139c:	55                   	push   %ebp$/;"	l
f010139d	obj/kern/kernel.asm	/^f010139d:	89 e5                	mov    %esp,%ebp$/;"	l
f010139f	obj/kern/kernel.asm	/^f010139f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01013a2	obj/kern/kernel.asm	/^f01013a2:	89 d1                	mov    %edx,%ecx$/;"	l
f01013a4	obj/kern/kernel.asm	/^f01013a4:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f01013a7	obj/kern/kernel.asm	/^f01013a7:	8b 0c 88             	mov    (%eax,%ecx,4),%ecx$/;"	l
f01013aa	obj/kern/kernel.asm	/^f01013aa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01013af	obj/kern/kernel.asm	/^f01013af:	f6 c1 01             	test   $0x1,%cl$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	74 57                	je     f010140b <check_va2pa+0x6f>$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01013ba	obj/kern/kernel.asm	/^f01013ba:	89 c8                	mov    %ecx,%eax$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f01013bf	obj/kern/kernel.asm	/^f01013bf:	3b 05 88 4e 22 f0    	cmp    0xf0224e88,%eax$/;"	l
f01013c5	obj/kern/kernel.asm	/^f01013c5:	72 20                	jb     f01013e7 <check_va2pa+0x4b>$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f01013d2	obj/kern/kernel.asm	/^f01013d2:	f0 $/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	c7 44 24 04 85 03 00 	movl   $0x385,0x4(%esp)$/;"	l
f01013da	obj/kern/kernel.asm	/^f01013da:	00 $/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	e8 59 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013e7	obj/kern/kernel.asm	/^f01013e7:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01013ea	obj/kern/kernel.asm	/^f01013ea:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	8b 84 91 00 00 00 f0 	mov    -0x10000000(%ecx,%edx,4),%eax$/;"	l
f01013f7	obj/kern/kernel.asm	/^f01013f7:	89 c2                	mov    %eax,%edx$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	83 e2 01             	and    $0x1,%edx$/;"	l
f01013fc	obj/kern/kernel.asm	/^f01013fc:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101401	obj/kern/kernel.asm	/^f0101401:	85 d2                	test   %edx,%edx$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f0101408	obj/kern/kernel.asm	/^f0101408:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	c9                   	leave  $/;"	l
f010140c	obj/kern/kernel.asm	/^f010140c:	c3                   	ret    $/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d <nvram_read>:$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	55                   	push   %ebp$/;"	l
f010140e	obj/kern/kernel.asm	/^f010140e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101413	obj/kern/kernel.asm	/^f0101413:	89 5d f8             	mov    %ebx,-0x8(%ebp)$/;"	l
f0101416	obj/kern/kernel.asm	/^f0101416:	89 75 fc             	mov    %esi,-0x4(%ebp)$/;"	l
f0101419	obj/kern/kernel.asm	/^f0101419:	89 c3                	mov    %eax,%ebx$/;"	l
f010141b	obj/kern/kernel.asm	/^f010141b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010141e	obj/kern/kernel.asm	/^f010141e:	e8 25 32 00 00       	call   f0104648 <mc146818_read>$/;"	l
f0101423	obj/kern/kernel.asm	/^f0101423:	89 c6                	mov    %eax,%esi$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101428	obj/kern/kernel.asm	/^f0101428:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010142b	obj/kern/kernel.asm	/^f010142b:	e8 18 32 00 00       	call   f0104648 <mc146818_read>$/;"	l
f0101430	obj/kern/kernel.asm	/^f0101430:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101433	obj/kern/kernel.asm	/^f0101433:	09 f0                	or     %esi,%eax$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	8b 5d f8             	mov    -0x8(%ebp),%ebx$/;"	l
f0101438	obj/kern/kernel.asm	/^f0101438:	8b 75 fc             	mov    -0x4(%ebp),%esi$/;"	l
f010143b	obj/kern/kernel.asm	/^f010143b:	89 ec                	mov    %ebp,%esp$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	5d                   	pop    %ebp$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	c3                   	ret    $/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f <check_page_free_list>:$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	55                   	push   %ebp$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	89 e5                	mov    %esp,%ebp$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	57                   	push   %edi$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	56                   	push   %esi$/;"	l
f0101444	obj/kern/kernel.asm	/^f0101444:	53                   	push   %ebx$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	3c 01                	cmp    $0x1,%al$/;"	l
f010144a	obj/kern/kernel.asm	/^f010144a:	19 f6                	sbb    %esi,%esi$/;"	l
f010144c	obj/kern/kernel.asm	/^f010144c:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f0101452	obj/kern/kernel.asm	/^f0101452:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	8b 1d 40 42 22 f0    	mov    0xf0224240,%ebx$/;"	l
f010145b	obj/kern/kernel.asm	/^f010145b:	85 db                	test   %ebx,%ebx$/;"	l
f010145d	obj/kern/kernel.asm	/^f010145d:	75 1c                	jne    f010147b <check_page_free_list+0x3c>$/;"	l
f010145f	obj/kern/kernel.asm	/^f010145f:	c7 44 24 08 f8 78 10 	movl   $0xf01078f8,0x8(%esp)$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	f0 $/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	c7 44 24 04 b7 02 00 	movl   $0x2b7,0x4(%esp)$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	00 $/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101476	obj/kern/kernel.asm	/^f0101476:	e8 c5 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010147b	obj/kern/kernel.asm	/^f010147b:	84 c0                	test   %al,%al$/;"	l
f010147d	obj/kern/kernel.asm	/^f010147d:	74 50                	je     f01014cf <check_page_free_list+0x90>$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0101488	obj/kern/kernel.asm	/^f0101488:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	89 d8                	mov    %ebx,%eax$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	2b 05 90 4e 22 f0    	sub    0xf0224e90,%eax$/;"	l
f0101493	obj/kern/kernel.asm	/^f0101493:	c1 e0 09             	shl    $0x9,%eax$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	39 c6                	cmp    %eax,%esi$/;"	l
f010149b	obj/kern/kernel.asm	/^f010149b:	0f 96 c0             	setbe  %al$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	8b 54 85 d8          	mov    -0x28(%ebp,%eax,4),%edx$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	89 1a                	mov    %ebx,(%edx)$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	89 5c 85 d8          	mov    %ebx,-0x28(%ebp,%eax,4)$/;"	l
f01014ab	obj/kern/kernel.asm	/^f01014ab:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f01014ad	obj/kern/kernel.asm	/^f01014ad:	85 db                	test   %ebx,%ebx$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	75 da                	jne    f010148b <check_page_free_list+0x4c>$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01014bd	obj/kern/kernel.asm	/^f01014bd:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01014c0	obj/kern/kernel.asm	/^f01014c0:	89 10                	mov    %edx,(%eax)$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	89 1d 40 42 22 f0    	mov    %ebx,0xf0224240$/;"	l
f01014cb	obj/kern/kernel.asm	/^f01014cb:	85 db                	test   %ebx,%ebx$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	74 67                	je     f0101536 <check_page_free_list+0xf7>$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	89 d8                	mov    %ebx,%eax$/;"	l
f01014d1	obj/kern/kernel.asm	/^f01014d1:	2b 05 90 4e 22 f0    	sub    0xf0224e90,%eax$/;"	l
f01014d7	obj/kern/kernel.asm	/^f01014d7:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	89 c2                	mov    %eax,%edx$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01014e2	obj/kern/kernel.asm	/^f01014e2:	39 d6                	cmp    %edx,%esi$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	76 4a                	jbe    f0101530 <check_page_free_list+0xf1>$/;"	l
f01014e6	obj/kern/kernel.asm	/^f01014e6:	89 c2                	mov    %eax,%edx$/;"	l
f01014e8	obj/kern/kernel.asm	/^f01014e8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01014eb	obj/kern/kernel.asm	/^f01014eb:	3b 15 88 4e 22 f0    	cmp    0xf0224e88,%edx$/;"	l
f01014f1	obj/kern/kernel.asm	/^f01014f1:	72 20                	jb     f0101513 <check_page_free_list+0xd4>$/;"	l
f01014f3	obj/kern/kernel.asm	/^f01014f3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	f0 $/;"	l
f01014ff	obj/kern/kernel.asm	/^f01014ff:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	00 $/;"	l
f0101507	obj/kern/kernel.asm	/^f0101507:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	e8 2d eb ff ff       	call   f0100040 <_panic>$/;"	l
f0101513	obj/kern/kernel.asm	/^f0101513:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	00 $/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f0101522	obj/kern/kernel.asm	/^f0101522:	00 $/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010152b	obj/kern/kernel.asm	/^f010152b:	e8 61 4c 00 00       	call   f0106191 <memset>$/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0101532	obj/kern/kernel.asm	/^f0101532:	85 db                	test   %ebx,%ebx$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	75 99                	jne    f01014cf <check_page_free_list+0x90>$/;"	l
f0101536	obj/kern/kernel.asm	/^f0101536:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010153b	obj/kern/kernel.asm	/^f010153b:	e8 20 fe ff ff       	call   f0101360 <boot_alloc>$/;"	l
f0101540	obj/kern/kernel.asm	/^f0101540:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	8b 15 40 42 22 f0    	mov    0xf0224240,%edx$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	85 d2                	test   %edx,%edx$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	0f 84 2f 02 00 00    	je     f0101780 <check_page_free_list+0x341>$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	8b 1d 90 4e 22 f0    	mov    0xf0224e90,%ebx$/;"	l
f0101557	obj/kern/kernel.asm	/^f0101557:	39 da                	cmp    %ebx,%edx$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	72 51                	jb     f01015ac <check_page_free_list+0x16d>$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	a1 88 4e 22 f0       	mov    0xf0224e88,%eax$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f0101563	obj/kern/kernel.asm	/^f0101563:	8d 04 c3             	lea    (%ebx,%eax,8),%eax$/;"	l
f0101566	obj/kern/kernel.asm	/^f0101566:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	39 c2                	cmp    %eax,%edx$/;"	l
f010156b	obj/kern/kernel.asm	/^f010156b:	73 68                	jae    f01015d5 <check_page_free_list+0x196>$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
f0101570	obj/kern/kernel.asm	/^f0101570:	89 d0                	mov    %edx,%eax$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	29 d8                	sub    %ebx,%eax$/;"	l
f0101574	obj/kern/kernel.asm	/^f0101574:	a8 07                	test   $0x7,%al$/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	0f 85 86 00 00 00    	jne    f0101602 <check_page_free_list+0x1c3>$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	85 c0                	test   %eax,%eax$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	0f 84 a6 00 00 00    	je     f0101630 <check_page_free_list+0x1f1>$/;"	l
f010158a	obj/kern/kernel.asm	/^f010158a:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	0f 84 c6 00 00 00    	je     f010165b <check_page_free_list+0x21c>$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010159a	obj/kern/kernel.asm	/^f010159a:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010159f	obj/kern/kernel.asm	/^f010159f:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	e9 d8 00 00 00       	jmp    f010167f <check_page_free_list+0x240>$/;"	l
f01015a7	obj/kern/kernel.asm	/^f01015a7:	3b 55 c0             	cmp    -0x40(%ebp),%edx$/;"	l
f01015aa	obj/kern/kernel.asm	/^f01015aa:	73 24                	jae    f01015d0 <check_page_free_list+0x191>$/;"	l
f01015ac	obj/kern/kernel.asm	/^f01015ac:	c7 44 24 0c d7 81 10 	movl   $0xf01081d7,0xc(%esp)$/;"	l
f01015b3	obj/kern/kernel.asm	/^f01015b3:	f0 $/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01015bb	obj/kern/kernel.asm	/^f01015bb:	f0 $/;"	l
f01015bc	obj/kern/kernel.asm	/^f01015bc:	c7 44 24 04 d1 02 00 	movl   $0x2d1,0x4(%esp)$/;"	l
f01015c3	obj/kern/kernel.asm	/^f01015c3:	00 $/;"	l
f01015c4	obj/kern/kernel.asm	/^f01015c4:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01015cb	obj/kern/kernel.asm	/^f01015cb:	e8 70 ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015d0	obj/kern/kernel.asm	/^f01015d0:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f01015d3	obj/kern/kernel.asm	/^f01015d3:	72 24                	jb     f01015f9 <check_page_free_list+0x1ba>$/;"	l
f01015d5	obj/kern/kernel.asm	/^f01015d5:	c7 44 24 0c f8 81 10 	movl   $0xf01081f8,0xc(%esp)$/;"	l
f01015dc	obj/kern/kernel.asm	/^f01015dc:	f0 $/;"	l
f01015dd	obj/kern/kernel.asm	/^f01015dd:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01015e4	obj/kern/kernel.asm	/^f01015e4:	f0 $/;"	l
f01015e5	obj/kern/kernel.asm	/^f01015e5:	c7 44 24 04 d2 02 00 	movl   $0x2d2,0x4(%esp)$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	00 $/;"	l
f01015ed	obj/kern/kernel.asm	/^f01015ed:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	e8 47 ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	89 d0                	mov    %edx,%eax$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	a8 07                	test   $0x7,%al$/;"	l
f0101600	obj/kern/kernel.asm	/^f0101600:	74 24                	je     f0101626 <check_page_free_list+0x1e7>$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	c7 44 24 0c 1c 79 10 	movl   $0xf010791c,0xc(%esp)$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	f0 $/;"	l
f010160a	obj/kern/kernel.asm	/^f010160a:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	f0 $/;"	l
f0101612	obj/kern/kernel.asm	/^f0101612:	c7 44 24 04 d3 02 00 	movl   $0x2d3,0x4(%esp)$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	00 $/;"	l
f010161a	obj/kern/kernel.asm	/^f010161a:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	e8 1a ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101626	obj/kern/kernel.asm	/^f0101626:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101629	obj/kern/kernel.asm	/^f0101629:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010162c	obj/kern/kernel.asm	/^f010162c:	85 c0                	test   %eax,%eax$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	75 24                	jne    f0101654 <check_page_free_list+0x215>$/;"	l
f0101630	obj/kern/kernel.asm	/^f0101630:	c7 44 24 0c 0c 82 10 	movl   $0xf010820c,0xc(%esp)$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	f0 $/;"	l
f0101638	obj/kern/kernel.asm	/^f0101638:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010163f	obj/kern/kernel.asm	/^f010163f:	f0 $/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	c7 44 24 04 d6 02 00 	movl   $0x2d6,0x4(%esp)$/;"	l
f0101647	obj/kern/kernel.asm	/^f0101647:	00 $/;"	l
f0101648	obj/kern/kernel.asm	/^f0101648:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010164f	obj/kern/kernel.asm	/^f010164f:	e8 ec e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101654	obj/kern/kernel.asm	/^f0101654:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101659	obj/kern/kernel.asm	/^f0101659:	75 24                	jne    f010167f <check_page_free_list+0x240>$/;"	l
f010165b	obj/kern/kernel.asm	/^f010165b:	c7 44 24 0c 1d 82 10 	movl   $0xf010821d,0xc(%esp)$/;"	l
f0101662	obj/kern/kernel.asm	/^f0101662:	f0 $/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010166a	obj/kern/kernel.asm	/^f010166a:	f0 $/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	c7 44 24 04 d7 02 00 	movl   $0x2d7,0x4(%esp)$/;"	l
f0101672	obj/kern/kernel.asm	/^f0101672:	00 $/;"	l
f0101673	obj/kern/kernel.asm	/^f0101673:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	e8 c1 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010167f	obj/kern/kernel.asm	/^f010167f:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	75 24                	jne    f01016aa <check_page_free_list+0x26b>$/;"	l
f0101686	obj/kern/kernel.asm	/^f0101686:	c7 44 24 0c 50 79 10 	movl   $0xf0107950,0xc(%esp)$/;"	l
f010168d	obj/kern/kernel.asm	/^f010168d:	f0 $/;"	l
f010168e	obj/kern/kernel.asm	/^f010168e:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0101695	obj/kern/kernel.asm	/^f0101695:	f0 $/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	c7 44 24 04 d8 02 00 	movl   $0x2d8,0x4(%esp)$/;"	l
f010169d	obj/kern/kernel.asm	/^f010169d:	00 $/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	e8 96 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f01016af	obj/kern/kernel.asm	/^f01016af:	75 24                	jne    f01016d5 <check_page_free_list+0x296>$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	c7 44 24 0c 36 82 10 	movl   $0xf0108236,0xc(%esp)$/;"	l
f01016b8	obj/kern/kernel.asm	/^f01016b8:	f0 $/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01016c0	obj/kern/kernel.asm	/^f01016c0:	f0 $/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	c7 44 24 04 d9 02 00 	movl   $0x2d9,0x4(%esp)$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	00 $/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	e8 6b e9 ff ff       	call   f0100040 <_panic>$/;"	l
f01016d5	obj/kern/kernel.asm	/^f01016d5:	89 c1                	mov    %eax,%ecx$/;"	l
f01016d7	obj/kern/kernel.asm	/^f01016d7:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f01016dc	obj/kern/kernel.asm	/^f01016dc:	76 59                	jbe    f0101737 <check_page_free_list+0x2f8>$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	89 c3                	mov    %eax,%ebx$/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	39 5d c8             	cmp    %ebx,-0x38(%ebp)$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	77 20                	ja     f0101708 <check_page_free_list+0x2c9>$/;"	l
f01016e8	obj/kern/kernel.asm	/^f01016e8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01016ec	obj/kern/kernel.asm	/^f01016ec:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f01016f3	obj/kern/kernel.asm	/^f01016f3:	f0 $/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01016fb	obj/kern/kernel.asm	/^f01016fb:	00 $/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f0101703	obj/kern/kernel.asm	/^f0101703:	e8 38 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	39 5d c4             	cmp    %ebx,-0x3c(%ebp)$/;"	l
f0101711	obj/kern/kernel.asm	/^f0101711:	76 24                	jbe    f0101737 <check_page_free_list+0x2f8>$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	c7 44 24 0c 74 79 10 	movl   $0xf0107974,0xc(%esp)$/;"	l
f010171a	obj/kern/kernel.asm	/^f010171a:	f0 $/;"	l
f010171b	obj/kern/kernel.asm	/^f010171b:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0101722	obj/kern/kernel.asm	/^f0101722:	f0 $/;"	l
f0101723	obj/kern/kernel.asm	/^f0101723:	c7 44 24 04 da 02 00 	movl   $0x2da,0x4(%esp)$/;"	l
f010172a	obj/kern/kernel.asm	/^f010172a:	00 $/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	e8 09 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f0101737	obj/kern/kernel.asm	/^f0101737:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	75 24                	jne    f0101762 <check_page_free_list+0x323>$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	c7 44 24 0c 50 82 10 	movl   $0xf0108250,0xc(%esp)$/;"	l
f0101745	obj/kern/kernel.asm	/^f0101745:	f0 $/;"	l
f0101746	obj/kern/kernel.asm	/^f0101746:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010174d	obj/kern/kernel.asm	/^f010174d:	f0 $/;"	l
f010174e	obj/kern/kernel.asm	/^f010174e:	c7 44 24 04 dc 02 00 	movl   $0x2dc,0x4(%esp)$/;"	l
f0101755	obj/kern/kernel.asm	/^f0101755:	00 $/;"	l
f0101756	obj/kern/kernel.asm	/^f0101756:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010175d	obj/kern/kernel.asm	/^f010175d:	e8 de e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	81 f9 ff ff 0f 00    	cmp    $0xfffff,%ecx$/;"	l
f0101768	obj/kern/kernel.asm	/^f0101768:	77 05                	ja     f010176f <check_page_free_list+0x330>$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	83 c7 01             	add    $0x1,%edi$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	eb 03                	jmp    f0101772 <check_page_free_list+0x333>$/;"	l
f010176f	obj/kern/kernel.asm	/^f010176f:	83 c6 01             	add    $0x1,%esi$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	8b 12                	mov    (%edx),%edx$/;"	l
f0101774	obj/kern/kernel.asm	/^f0101774:	85 d2                	test   %edx,%edx$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	0f 85 2b fe ff ff    	jne    f01015a7 <check_page_free_list+0x168>$/;"	l
f010177c	obj/kern/kernel.asm	/^f010177c:	85 ff                	test   %edi,%edi$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	7f 24                	jg     f01017a4 <check_page_free_list+0x365>$/;"	l
f0101780	obj/kern/kernel.asm	/^f0101780:	c7 44 24 0c 6d 82 10 	movl   $0xf010826d,0xc(%esp)$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	f0 $/;"	l
f0101788	obj/kern/kernel.asm	/^f0101788:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	f0 $/;"	l
f0101790	obj/kern/kernel.asm	/^f0101790:	c7 44 24 04 e4 02 00 	movl   $0x2e4,0x4(%esp)$/;"	l
f0101797	obj/kern/kernel.asm	/^f0101797:	00 $/;"	l
f0101798	obj/kern/kernel.asm	/^f0101798:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	e8 9c e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	85 f6                	test   %esi,%esi$/;"	l
f01017a6	obj/kern/kernel.asm	/^f01017a6:	7f 24                	jg     f01017cc <check_page_free_list+0x38d>$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	c7 44 24 0c 7f 82 10 	movl   $0xf010827f,0xc(%esp)$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	f0 $/;"	l
f01017b0	obj/kern/kernel.asm	/^f01017b0:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	f0 $/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	c7 44 24 04 e5 02 00 	movl   $0x2e5,0x4(%esp)$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	00 $/;"	l
f01017c0	obj/kern/kernel.asm	/^f01017c0:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01017c7	obj/kern/kernel.asm	/^f01017c7:	e8 74 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f01017cc	obj/kern/kernel.asm	/^f01017cc:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	5b                   	pop    %ebx$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	5e                   	pop    %esi$/;"	l
f01017d1	obj/kern/kernel.asm	/^f01017d1:	5f                   	pop    %edi$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	5d                   	pop    %ebp$/;"	l
f01017d3	obj/kern/kernel.asm	/^f01017d3:	c3                   	ret    $/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4 <page_init>:$/;"	l
f01017d4	obj/kern/kernel.asm	/^f01017d4:	55                   	push   %ebp$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	56                   	push   %esi$/;"	l
f01017d8	obj/kern/kernel.asm	/^f01017d8:	53                   	push   %ebx$/;"	l
f01017d9	obj/kern/kernel.asm	/^f01017d9:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01017e1	obj/kern/kernel.asm	/^f01017e1:	e8 7a fb ff ff       	call   f0101360 <boot_alloc>$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	77 20                	ja     f010180d <page_init+0x39>$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	f0 $/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	c7 44 24 04 3a 01 00 	movl   $0x13a,0x4(%esp)$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	00 $/;"	l
f0101801	obj/kern/kernel.asm	/^f0101801:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	e8 33 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	8d 98 00 00 00 10    	lea    0x10000000(%eax),%ebx$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	c7 05 40 42 22 f0 00 	movl   $0x0,0xf0224240$/;"	l
f010181d	obj/kern/kernel.asm	/^f010181d:	00 00 00 $/;"	l
f0101820	obj/kern/kernel.asm	/^f0101820:	83 3d 88 4e 22 f0 00 	cmpl   $0x0,0xf0224e88$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	74 69                	je     f0101892 <page_init+0xbe>$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	85 d2                	test   %edx,%edx$/;"	l
f0101835	obj/kern/kernel.asm	/^f0101835:	74 11                	je     f0101848 <page_init+0x74>$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	81 fa 9f 00 00 00    	cmp    $0x9f,%edx$/;"	l
f010183d	obj/kern/kernel.asm	/^f010183d:	76 04                	jbe    f0101843 <page_init+0x6f>$/;"	l
f010183f	obj/kern/kernel.asm	/^f010183f:	39 da                	cmp    %ebx,%edx$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	72 05                	jb     f0101848 <page_init+0x74>$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	75 1b                	jne    f0101863 <page_init+0x8f>$/;"	l
f0101848	obj/kern/kernel.asm	/^f0101848:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	03 0d 90 4e 22 f0    	add    0xf0224e90,%ecx$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	66 c7 41 04 01 00    	movw   $0x1,0x4(%ecx)$/;"	l
f010185b	obj/kern/kernel.asm	/^f010185b:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	eb 1f                	jmp    f0101882 <page_init+0xae>$/;"	l
f0101863	obj/kern/kernel.asm	/^f0101863:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx$/;"	l
f010186a	obj/kern/kernel.asm	/^f010186a:	8b 35 90 4e 22 f0    	mov    0xf0224e90,%esi$/;"	l
f0101870	obj/kern/kernel.asm	/^f0101870:	66 c7 44 0e 04 00 00 	movw   $0x0,0x4(%esi,%ecx,1)$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	89 04 d6             	mov    %eax,(%esi,%edx,8)$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	89 c8                	mov    %ecx,%eax$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	03 05 90 4e 22 f0    	add    0xf0224e90,%eax$/;"	l
f0101882	obj/kern/kernel.asm	/^f0101882:	83 c2 01             	add    $0x1,%edx$/;"	l
f0101885	obj/kern/kernel.asm	/^f0101885:	39 15 88 4e 22 f0    	cmp    %edx,0xf0224e88$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	77 a6                	ja     f0101833 <page_init+0x5f>$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	a3 40 42 22 f0       	mov    %eax,0xf0224240$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	5b                   	pop    %ebx$/;"	l
f0101896	obj/kern/kernel.asm	/^f0101896:	5e                   	pop    %esi$/;"	l
f0101897	obj/kern/kernel.asm	/^f0101897:	5d                   	pop    %ebp$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	c3                   	ret    $/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899 <page_alloc>:$/;"	l
f0101899	obj/kern/kernel.asm	/^f0101899:	55                   	push   %ebp$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	89 e5                	mov    %esp,%ebp$/;"	l
f010189c	obj/kern/kernel.asm	/^f010189c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	a1 40 42 22 f0       	mov    0xf0224240,%eax$/;"	l
f01018a4	obj/kern/kernel.asm	/^f01018a4:	85 c0                	test   %eax,%eax$/;"	l
f01018a6	obj/kern/kernel.asm	/^f01018a6:	74 6b                	je     f0101913 <page_alloc+0x7a>$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01018ac	obj/kern/kernel.asm	/^f01018ac:	74 56                	je     f0101904 <page_alloc+0x6b>$/;"	l
f01018ae	obj/kern/kernel.asm	/^f01018ae:	2b 05 90 4e 22 f0    	sub    0xf0224e90,%eax$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	89 c2                	mov    %eax,%edx$/;"	l
f01018bc	obj/kern/kernel.asm	/^f01018bc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01018bf	obj/kern/kernel.asm	/^f01018bf:	3b 15 88 4e 22 f0    	cmp    0xf0224e88,%edx$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	72 20                	jb     f01018e7 <page_alloc+0x4e>$/;"	l
f01018c7	obj/kern/kernel.asm	/^f01018c7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01018cb	obj/kern/kernel.asm	/^f01018cb:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	f0 $/;"	l
f01018d3	obj/kern/kernel.asm	/^f01018d3:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	00 $/;"	l
f01018db	obj/kern/kernel.asm	/^f01018db:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f01018e2	obj/kern/kernel.asm	/^f01018e2:	e8 59 e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01018ee	obj/kern/kernel.asm	/^f01018ee:	00 $/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01018f6	obj/kern/kernel.asm	/^f01018f6:	00 $/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	e8 8d 48 00 00       	call   f0106191 <memset>$/;"	l
f0101904	obj/kern/kernel.asm	/^f0101904:	a1 40 42 22 f0       	mov    0xf0224240,%eax$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	8b 10                	mov    (%eax),%edx$/;"	l
f010190b	obj/kern/kernel.asm	/^f010190b:	89 15 40 42 22 f0    	mov    %edx,0xf0224240$/;"	l
f0101911	obj/kern/kernel.asm	/^f0101911:	eb 05                	jmp    f0101918 <page_alloc+0x7f>$/;"	l
f0101913	obj/kern/kernel.asm	/^f0101913:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101918	obj/kern/kernel.asm	/^f0101918:	c9                   	leave  $/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	c3                   	ret    $/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a <page_free>:$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	55                   	push   %ebp$/;"	l
f010191b	obj/kern/kernel.asm	/^f010191b:	89 e5                	mov    %esp,%ebp$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	8b 15 40 42 22 f0    	mov    0xf0224240,%edx$/;"	l
f0101926	obj/kern/kernel.asm	/^f0101926:	89 10                	mov    %edx,(%eax)$/;"	l
f0101928	obj/kern/kernel.asm	/^f0101928:	a3 40 42 22 f0       	mov    %eax,0xf0224240$/;"	l
f010192d	obj/kern/kernel.asm	/^f010192d:	5d                   	pop    %ebp$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	c3                   	ret    $/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f <page_decref>:$/;"	l
f010192f	obj/kern/kernel.asm	/^f010192f:	55                   	push   %ebp$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	89 e5                	mov    %esp,%ebp$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	0f b7 50 04          	movzwl 0x4(%eax),%edx$/;"	l
f010193c	obj/kern/kernel.asm	/^f010193c:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101943	obj/kern/kernel.asm	/^f0101943:	66 85 d2             	test   %dx,%dx$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	75 08                	jne    f0101950 <page_decref+0x21>$/;"	l
f0101948	obj/kern/kernel.asm	/^f0101948:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	e8 ca ff ff ff       	call   f010191a <page_free>$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	c9                   	leave  $/;"	l
f0101951	obj/kern/kernel.asm	/^f0101951:	c3                   	ret    $/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952 <pgdir_walk>:$/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	55                   	push   %ebp$/;"	l
f0101953	obj/kern/kernel.asm	/^f0101953:	89 e5                	mov    %esp,%ebp$/;"	l
f0101955	obj/kern/kernel.asm	/^f0101955:	56                   	push   %esi$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	53                   	push   %ebx$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010195a	obj/kern/kernel.asm	/^f010195a:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	89 f3                	mov    %esi,%ebx$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	8b 03                	mov    (%ebx),%eax$/;"	l
f010196a	obj/kern/kernel.asm	/^f010196a:	a8 01                	test   $0x1,%al$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	74 47                	je     f01019b5 <pgdir_walk+0x63>$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101973	obj/kern/kernel.asm	/^f0101973:	89 c2                	mov    %eax,%edx$/;"	l
f0101975	obj/kern/kernel.asm	/^f0101975:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101978	obj/kern/kernel.asm	/^f0101978:	3b 15 88 4e 22 f0    	cmp    0xf0224e88,%edx$/;"	l
f010197e	obj/kern/kernel.asm	/^f010197e:	72 20                	jb     f01019a0 <pgdir_walk+0x4e>$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101984	obj/kern/kernel.asm	/^f0101984:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	f0 $/;"	l
f010198c	obj/kern/kernel.asm	/^f010198c:	c7 44 24 04 9a 01 00 	movl   $0x19a,0x4(%esp)$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	00 $/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010199b	obj/kern/kernel.asm	/^f010199b:	e8 a0 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f01019a3	obj/kern/kernel.asm	/^f01019a3:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	e9 85 00 00 00       	jmp    f0101a3a <pgdir_walk+0xe8>$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01019b9	obj/kern/kernel.asm	/^f01019b9:	74 73                	je     f0101a2e <pgdir_walk+0xdc>$/;"	l
f01019bb	obj/kern/kernel.asm	/^f01019bb:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01019c2	obj/kern/kernel.asm	/^f01019c2:	e8 d2 fe ff ff       	call   f0101899 <page_alloc>$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	85 c0                	test   %eax,%eax$/;"	l
f01019c9	obj/kern/kernel.asm	/^f01019c9:	74 6a                	je     f0101a35 <pgdir_walk+0xe3>$/;"	l
f01019cb	obj/kern/kernel.asm	/^f01019cb:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f01019d0	obj/kern/kernel.asm	/^f01019d0:	89 c2                	mov    %eax,%edx$/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f01019d8	obj/kern/kernel.asm	/^f01019d8:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01019de	obj/kern/kernel.asm	/^f01019de:	83 ca 07             	or     $0x7,%edx$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	89 13                	mov    %edx,(%ebx)$/;"	l
f01019e3	obj/kern/kernel.asm	/^f01019e3:	2b 05 90 4e 22 f0    	sub    0xf0224e90,%eax$/;"	l
f01019e9	obj/kern/kernel.asm	/^f01019e9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01019ec	obj/kern/kernel.asm	/^f01019ec:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01019ef	obj/kern/kernel.asm	/^f01019ef:	89 c2                	mov    %eax,%edx$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01019f4	obj/kern/kernel.asm	/^f01019f4:	3b 15 88 4e 22 f0    	cmp    0xf0224e88,%edx$/;"	l
f01019fa	obj/kern/kernel.asm	/^f01019fa:	72 20                	jb     f0101a1c <pgdir_walk+0xca>$/;"	l
f01019fc	obj/kern/kernel.asm	/^f01019fc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f0101a07	obj/kern/kernel.asm	/^f0101a07:	f0 $/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	c7 44 24 04 a4 01 00 	movl   $0x1a4,0x4(%esp)$/;"	l
f0101a0f	obj/kern/kernel.asm	/^f0101a0f:	00 $/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	e8 24 e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a1c	obj/kern/kernel.asm	/^f0101a1c:	c1 ee 0a             	shr    $0xa,%esi$/;"	l
f0101a1f	obj/kern/kernel.asm	/^f0101a1f:	81 e6 fc 0f 00 00    	and    $0xffc,%esi$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	8d 84 30 00 00 00 f0 	lea    -0x10000000(%eax,%esi,1),%eax$/;"	l
f0101a2c	obj/kern/kernel.asm	/^f0101a2c:	eb 0c                	jmp    f0101a3a <pgdir_walk+0xe8>$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a33	obj/kern/kernel.asm	/^f0101a33:	eb 05                	jmp    f0101a3a <pgdir_walk+0xe8>$/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a3d	obj/kern/kernel.asm	/^f0101a3d:	5b                   	pop    %ebx$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	5e                   	pop    %esi$/;"	l
f0101a3f	obj/kern/kernel.asm	/^f0101a3f:	5d                   	pop    %ebp$/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	c3                   	ret    $/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41 <boot_map_region>:$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	55                   	push   %ebp$/;"	l
f0101a42	obj/kern/kernel.asm	/^f0101a42:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	57                   	push   %edi$/;"	l
f0101a45	obj/kern/kernel.asm	/^f0101a45:	56                   	push   %esi$/;"	l
f0101a46	obj/kern/kernel.asm	/^f0101a46:	53                   	push   %ebx$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	89 c7                	mov    %eax,%edi$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	89 d3                	mov    %edx,%ebx$/;"	l
f0101a4e	obj/kern/kernel.asm	/^f0101a4e:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0101a51	obj/kern/kernel.asm	/^f0101a51:	01 d1                	add    %edx,%ecx$/;"	l
f0101a53	obj/kern/kernel.asm	/^f0101a53:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f0101a56	obj/kern/kernel.asm	/^f0101a56:	39 ca                	cmp    %ecx,%edx$/;"	l
f0101a58	obj/kern/kernel.asm	/^f0101a58:	74 5b                	je     f0101ab5 <boot_map_region+0x74>$/;"	l
f0101a5a	obj/kern/kernel.asm	/^f0101a5a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	00 $/;"	l
f0101a6b	obj/kern/kernel.asm	/^f0101a6b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101a72	obj/kern/kernel.asm	/^f0101a72:	e8 db fe ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	85 c0                	test   %eax,%eax$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	75 1c                	jne    f0101a97 <boot_map_region+0x56>$/;"	l
f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	c7 44 24 08 90 82 10 	movl   $0xf0108290,0x8(%esp)$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	f0 $/;"	l
f0101a83	obj/kern/kernel.asm	/^f0101a83:	c7 44 24 04 bf 01 00 	movl   $0x1bf,0x4(%esp)$/;"	l
f0101a8a	obj/kern/kernel.asm	/^f0101a8a:	00 $/;"	l
f0101a8b	obj/kern/kernel.asm	/^f0101a8b:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101a92	obj/kern/kernel.asm	/^f0101a92:	e8 a9 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a97	obj/kern/kernel.asm	/^f0101a97:	89 f2                	mov    %esi,%edx$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0101a9f	obj/kern/kernel.asm	/^f0101a9f:	0b 55 e0             	or     -0x20(%ebp),%edx$/;"	l
f0101aa2	obj/kern/kernel.asm	/^f0101aa2:	89 10                	mov    %edx,(%eax)$/;"	l
f0101aa4	obj/kern/kernel.asm	/^f0101aa4:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0101ab0	obj/kern/kernel.asm	/^f0101ab0:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	75 ae                	jne    f0101a63 <boot_map_region+0x22>$/;"	l
f0101ab5	obj/kern/kernel.asm	/^f0101ab5:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101ab8	obj/kern/kernel.asm	/^f0101ab8:	5b                   	pop    %ebx$/;"	l
f0101ab9	obj/kern/kernel.asm	/^f0101ab9:	5e                   	pop    %esi$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	5f                   	pop    %edi$/;"	l
f0101abb	obj/kern/kernel.asm	/^f0101abb:	5d                   	pop    %ebp$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	c3                   	ret    $/;"	l
f0101abd	obj/kern/kernel.asm	/^f0101abd <page_lookup>:$/;"	l
f0101abd	obj/kern/kernel.asm	/^f0101abd:	55                   	push   %ebp$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	89 e5                	mov    %esp,%ebp$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	53                   	push   %ebx$/;"	l
f0101ac1	obj/kern/kernel.asm	/^f0101ac1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101ac4	obj/kern/kernel.asm	/^f0101ac4:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101ace	obj/kern/kernel.asm	/^f0101ace:	00 $/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101ad6	obj/kern/kernel.asm	/^f0101ad6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101ad9	obj/kern/kernel.asm	/^f0101ad9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101adc	obj/kern/kernel.asm	/^f0101adc:	e8 71 fe ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	85 c0                	test   %eax,%eax$/;"	l
f0101ae3	obj/kern/kernel.asm	/^f0101ae3:	74 3a                	je     f0101b1f <page_lookup+0x62>$/;"	l
f0101ae5	obj/kern/kernel.asm	/^f0101ae5:	85 db                	test   %ebx,%ebx$/;"	l
f0101ae7	obj/kern/kernel.asm	/^f0101ae7:	74 02                	je     f0101aeb <page_lookup+0x2e>$/;"	l
f0101ae9	obj/kern/kernel.asm	/^f0101ae9:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	8b 00                	mov    (%eax),%eax$/;"	l
f0101aed	obj/kern/kernel.asm	/^f0101aed:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	3b 05 88 4e 22 f0    	cmp    0xf0224e88,%eax$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	72 1c                	jb     f0101b14 <page_lookup+0x57>$/;"	l
f0101af8	obj/kern/kernel.asm	/^f0101af8:	c7 44 24 08 bc 79 10 	movl   $0xf01079bc,0x8(%esp)$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	f0 $/;"	l
f0101b00	obj/kern/kernel.asm	/^f0101b00:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0101b07	obj/kern/kernel.asm	/^f0101b07:	00 $/;"	l
f0101b08	obj/kern/kernel.asm	/^f0101b08:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	e8 2c e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b14	obj/kern/kernel.asm	/^f0101b14:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101b17	obj/kern/kernel.asm	/^f0101b17:	03 05 90 4e 22 f0    	add    0xf0224e90,%eax$/;"	l
f0101b1d	obj/kern/kernel.asm	/^f0101b1d:	eb 05                	jmp    f0101b24 <page_lookup+0x67>$/;"	l
f0101b1f	obj/kern/kernel.asm	/^f0101b1f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101b24	obj/kern/kernel.asm	/^f0101b24:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101b27	obj/kern/kernel.asm	/^f0101b27:	5b                   	pop    %ebx$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	5d                   	pop    %ebp$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	c3                   	ret    $/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a <page_remove>:$/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	55                   	push   %ebp$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101b30	obj/kern/kernel.asm	/^f0101b30:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0101b33	obj/kern/kernel.asm	/^f0101b33:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101b37	obj/kern/kernel.asm	/^f0101b37:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101b3a	obj/kern/kernel.asm	/^f0101b3a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101b3e	obj/kern/kernel.asm	/^f0101b3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101b41	obj/kern/kernel.asm	/^f0101b41:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	e8 74 ff ff ff       	call   f0101abd <page_lookup>$/;"	l
f0101b49	obj/kern/kernel.asm	/^f0101b49:	85 c0                	test   %eax,%eax$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	74 19                	je     f0101b66 <page_remove+0x3c>$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	f6 02 01             	testb  $0x1,(%edx)$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	74 08                	je     f0101b5d <page_remove+0x33>$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b58	obj/kern/kernel.asm	/^f0101b58:	e8 d2 fd ff ff       	call   f010192f <page_decref>$/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101b60	obj/kern/kernel.asm	/^f0101b60:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	c9                   	leave  $/;"	l
f0101b67	obj/kern/kernel.asm	/^f0101b67:	c3                   	ret    $/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68 <page_insert>:$/;"	l
f0101b68	obj/kern/kernel.asm	/^f0101b68:	55                   	push   %ebp$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b6b	obj/kern/kernel.asm	/^f0101b6b:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0101b71	obj/kern/kernel.asm	/^f0101b71:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0101b77	obj/kern/kernel.asm	/^f0101b77:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101b7a	obj/kern/kernel.asm	/^f0101b7a:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0101b7d	obj/kern/kernel.asm	/^f0101b7d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	00 $/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101b89	obj/kern/kernel.asm	/^f0101b89:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101b8f	obj/kern/kernel.asm	/^f0101b8f:	e8 be fd ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0101b94	obj/kern/kernel.asm	/^f0101b94:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b96	obj/kern/kernel.asm	/^f0101b96:	85 c0                	test   %eax,%eax$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	74 3f                	je     f0101bd9 <page_insert+0x71>$/;"	l
f0101b9a	obj/kern/kernel.asm	/^f0101b9a:	8b 00                	mov    (%eax),%eax$/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	a8 01                	test   $0x1,%al$/;"	l
f0101b9e	obj/kern/kernel.asm	/^f0101b9e:	74 5b                	je     f0101bfb <page_insert+0x93>$/;"	l
f0101ba0	obj/kern/kernel.asm	/^f0101ba0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	89 f2                	mov    %esi,%edx$/;"	l
f0101ba7	obj/kern/kernel.asm	/^f0101ba7:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101bb0	obj/kern/kernel.asm	/^f0101bb0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	39 d0                	cmp    %edx,%eax$/;"	l
f0101bb5	obj/kern/kernel.asm	/^f0101bb5:	75 11                	jne    f0101bc8 <page_insert+0x60>$/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	83 ca 01             	or     $0x1,%edx$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	09 d0                	or     %edx,%eax$/;"	l
f0101bbf	obj/kern/kernel.asm	/^f0101bbf:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101bc6	obj/kern/kernel.asm	/^f0101bc6:	eb 55                	jmp    f0101c1d <page_insert+0xb5>$/;"	l
f0101bc8	obj/kern/kernel.asm	/^f0101bc8:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101bd2	obj/kern/kernel.asm	/^f0101bd2:	e8 53 ff ff ff       	call   f0101b2a <page_remove>$/;"	l
f0101bd7	obj/kern/kernel.asm	/^f0101bd7:	eb 22                	jmp    f0101bfb <page_insert+0x93>$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	00 $/;"	l
f0101be1	obj/kern/kernel.asm	/^f0101be1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101be5	obj/kern/kernel.asm	/^f0101be5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	e8 62 fd ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0101bf0	obj/kern/kernel.asm	/^f0101bf0:	89 c3                	mov    %eax,%ebx$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	85 db                	test   %ebx,%ebx$/;"	l
f0101bf9	obj/kern/kernel.asm	/^f0101bf9:	74 22                	je     f0101c1d <page_insert+0xb5>$/;"	l
f0101bfb	obj/kern/kernel.asm	/^f0101bfb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101c01	obj/kern/kernel.asm	/^f0101c01:	89 f2                	mov    %esi,%edx$/;"	l
f0101c03	obj/kern/kernel.asm	/^f0101c03:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f0101c09	obj/kern/kernel.asm	/^f0101c09:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c0f	obj/kern/kernel.asm	/^f0101c0f:	09 d0                	or     %edx,%eax$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101c13	obj/kern/kernel.asm	/^f0101c13:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f0101c18	obj/kern/kernel.asm	/^f0101c18:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0101c23	obj/kern/kernel.asm	/^f0101c23:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0101c26	obj/kern/kernel.asm	/^f0101c26:	89 ec                	mov    %ebp,%esp$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	5d                   	pop    %ebp$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	c3                   	ret    $/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a <tlb_invalidate>:$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	55                   	push   %ebp$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	e8 eb 4b 00 00       	call   f0106820 <cpunum>$/;"	l
f0101c35	obj/kern/kernel.asm	/^f0101c35:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	83 b8 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%eax)$/;"	l
f0101c3f	obj/kern/kernel.asm	/^f0101c3f:	74 16                	je     f0101c57 <tlb_invalidate+0x2d>$/;"	l
f0101c41	obj/kern/kernel.asm	/^f0101c41:	e8 da 4b 00 00       	call   f0106820 <cpunum>$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101c49	obj/kern/kernel.asm	/^f0101c49:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0101c52	obj/kern/kernel.asm	/^f0101c52:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	75 06                	jne    f0101c5d <tlb_invalidate+0x33>$/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101c5a	obj/kern/kernel.asm	/^f0101c5a:	0f 01 38             	invlpg (%eax)$/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	c9                   	leave  $/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	c3                   	ret    $/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f <mmio_map_region>:$/;"	l
f0101c5f	obj/kern/kernel.asm	/^f0101c5f:	55                   	push   %ebp$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c62	obj/kern/kernel.asm	/^f0101c62:	53                   	push   %ebx$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101c66	obj/kern/kernel.asm	/^f0101c66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101c69	obj/kern/kernel.asm	/^f0101c69:	8d 98 ff 0f 00 00    	lea    0xfff(%eax),%ebx$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	03 5d 0c             	add    0xc(%ebp),%ebx$/;"	l
f0101c72	obj/kern/kernel.asm	/^f0101c72:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101c7d	obj/kern/kernel.asm	/^f0101c7d:	29 c3                	sub    %eax,%ebx$/;"	l
f0101c7f	obj/kern/kernel.asm	/^f0101c7f:	8b 15 20 23 12 f0    	mov    0xf0122320,%edx$/;"	l
f0101c85	obj/kern/kernel.asm	/^f0101c85:	8d 0c 13             	lea    (%ebx,%edx,1),%ecx$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	81 f9 ff ff bf ef    	cmp    $0xefbfffff,%ecx$/;"	l
f0101c8e	obj/kern/kernel.asm	/^f0101c8e:	76 1c                	jbe    f0101cac <mmio_map_region+0x4d>$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	c7 44 24 08 98 82 10 	movl   $0xf0108298,0x8(%esp)$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	f0 $/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	c7 44 24 04 5f 02 00 	movl   $0x25f,0x4(%esp)$/;"	l
f0101c9f	obj/kern/kernel.asm	/^f0101c9f:	00 $/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101ca7	obj/kern/kernel.asm	/^f0101ca7:	e8 94 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f0101cb3	obj/kern/kernel.asm	/^f0101cb3:	00 $/;"	l
f0101cb4	obj/kern/kernel.asm	/^f0101cb4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	89 d9                	mov    %ebx,%ecx$/;"	l
f0101cb9	obj/kern/kernel.asm	/^f0101cb9:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0101cbe	obj/kern/kernel.asm	/^f0101cbe:	e8 7e fd ff ff       	call   f0101a41 <boot_map_region>$/;"	l
f0101cc3	obj/kern/kernel.asm	/^f0101cc3:	a1 20 23 12 f0       	mov    0xf0122320,%eax$/;"	l
f0101cc8	obj/kern/kernel.asm	/^f0101cc8:	01 c3                	add    %eax,%ebx$/;"	l
f0101cca	obj/kern/kernel.asm	/^f0101cca:	89 1d 20 23 12 f0    	mov    %ebx,0xf0122320$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	5b                   	pop    %ebx$/;"	l
f0101cd4	obj/kern/kernel.asm	/^f0101cd4:	5d                   	pop    %ebp$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	c3                   	ret    $/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6 <mem_init>:$/;"	l
f0101cd6	obj/kern/kernel.asm	/^f0101cd6:	55                   	push   %ebp$/;"	l
f0101cd7	obj/kern/kernel.asm	/^f0101cd7:	89 e5                	mov    %esp,%ebp$/;"	l
f0101cd9	obj/kern/kernel.asm	/^f0101cd9:	57                   	push   %edi$/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	56                   	push   %esi$/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	53                   	push   %ebx$/;"	l
f0101cdc	obj/kern/kernel.asm	/^f0101cdc:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0101cdf	obj/kern/kernel.asm	/^f0101cdf:	b8 15 00 00 00       	mov    $0x15,%eax$/;"	l
f0101ce4	obj/kern/kernel.asm	/^f0101ce4:	e8 24 f7 ff ff       	call   f010140d <nvram_read>$/;"	l
f0101ce9	obj/kern/kernel.asm	/^f0101ce9:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101cec	obj/kern/kernel.asm	/^f0101cec:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101cf2	obj/kern/kernel.asm	/^f0101cf2:	85 c0                	test   %eax,%eax$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101cf7	obj/kern/kernel.asm	/^f0101cf7:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101cfa	obj/kern/kernel.asm	/^f0101cfa:	a3 38 42 22 f0       	mov    %eax,0xf0224238$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	b8 17 00 00 00       	mov    $0x17,%eax$/;"	l
f0101d04	obj/kern/kernel.asm	/^f0101d04:	e8 04 f7 ff ff       	call   f010140d <nvram_read>$/;"	l
f0101d09	obj/kern/kernel.asm	/^f0101d09:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101d0c	obj/kern/kernel.asm	/^f0101d0c:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101d12	obj/kern/kernel.asm	/^f0101d12:	85 c0                	test   %eax,%eax$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101d1a	obj/kern/kernel.asm	/^f0101d1a:	85 c0                	test   %eax,%eax$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	74 0e                	je     f0101d2c <mem_init+0x56>$/;"	l
f0101d1e	obj/kern/kernel.asm	/^f0101d1e:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	89 15 88 4e 22 f0    	mov    %edx,0xf0224e88$/;"	l
f0101d2a	obj/kern/kernel.asm	/^f0101d2a:	eb 0c                	jmp    f0101d38 <mem_init+0x62>$/;"	l
f0101d2c	obj/kern/kernel.asm	/^f0101d2c:	8b 15 38 42 22 f0    	mov    0xf0224238,%edx$/;"	l
f0101d32	obj/kern/kernel.asm	/^f0101d32:	89 15 88 4e 22 f0    	mov    %edx,0xf0224e88$/;"	l
f0101d38	obj/kern/kernel.asm	/^f0101d38:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d3b	obj/kern/kernel.asm	/^f0101d3b:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101d42	obj/kern/kernel.asm	/^f0101d42:	a1 38 42 22 f0       	mov    0xf0224238,%eax$/;"	l
f0101d47	obj/kern/kernel.asm	/^f0101d47:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d4a	obj/kern/kernel.asm	/^f0101d4a:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101d4d	obj/kern/kernel.asm	/^f0101d4d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101d51	obj/kern/kernel.asm	/^f0101d51:	a1 88 4e 22 f0       	mov    0xf0224e88,%eax$/;"	l
f0101d56	obj/kern/kernel.asm	/^f0101d56:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101d59	obj/kern/kernel.asm	/^f0101d59:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101d5c	obj/kern/kernel.asm	/^f0101d5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101d60	obj/kern/kernel.asm	/^f0101d60:	c7 04 24 dc 79 10 f0 	movl   $0xf01079dc,(%esp)$/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	e8 46 2a 00 00       	call   f01047b2 <cprintf>$/;"	l
f0101d6c	obj/kern/kernel.asm	/^f0101d6c:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0101d71	obj/kern/kernel.asm	/^f0101d71:	e8 ea f5 ff ff       	call   f0101360 <boot_alloc>$/;"	l
f0101d76	obj/kern/kernel.asm	/^f0101d76:	a3 8c 4e 22 f0       	mov    %eax,0xf0224e8c$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101d82	obj/kern/kernel.asm	/^f0101d82:	00 $/;"	l
f0101d83	obj/kern/kernel.asm	/^f0101d83:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101d8a	obj/kern/kernel.asm	/^f0101d8a:	00 $/;"	l
f0101d8b	obj/kern/kernel.asm	/^f0101d8b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	e8 fe 43 00 00       	call   f0106191 <memset>$/;"	l
f0101d93	obj/kern/kernel.asm	/^f0101d93:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0101d98	obj/kern/kernel.asm	/^f0101d98:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	77 20                	ja     f0101dbf <mem_init+0xe9>$/;"	l
f0101d9f	obj/kern/kernel.asm	/^f0101d9f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101da3	obj/kern/kernel.asm	/^f0101da3:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f0101daa	obj/kern/kernel.asm	/^f0101daa:	f0 $/;"	l
f0101dab	obj/kern/kernel.asm	/^f0101dab:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
f0101db2	obj/kern/kernel.asm	/^f0101db2:	00 $/;"	l
f0101db3	obj/kern/kernel.asm	/^f0101db3:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101dba	obj/kern/kernel.asm	/^f0101dba:	e8 81 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dbf	obj/kern/kernel.asm	/^f0101dbf:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101dc5	obj/kern/kernel.asm	/^f0101dc5:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101dc8	obj/kern/kernel.asm	/^f0101dc8:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101dce	obj/kern/kernel.asm	/^f0101dce:	a1 88 4e 22 f0       	mov    0xf0224e88,%eax$/;"	l
f0101dd3	obj/kern/kernel.asm	/^f0101dd3:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	e8 85 f5 ff ff       	call   f0101360 <boot_alloc>$/;"	l
f0101ddb	obj/kern/kernel.asm	/^f0101ddb:	a3 90 4e 22 f0       	mov    %eax,0xf0224e90$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f0101de5	obj/kern/kernel.asm	/^f0101de5:	e8 76 f5 ff ff       	call   f0101360 <boot_alloc>$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	a3 48 42 22 f0       	mov    %eax,0xf0224248$/;"	l
f0101def	obj/kern/kernel.asm	/^f0101def:	e8 e0 f9 ff ff       	call   f01017d4 <page_init>$/;"	l
f0101df4	obj/kern/kernel.asm	/^f0101df4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	e8 41 f6 ff ff       	call   f010143f <check_page_free_list>$/;"	l
f0101dfe	obj/kern/kernel.asm	/^f0101dfe:	83 3d 90 4e 22 f0 00 	cmpl   $0x0,0xf0224e90$/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	75 1c                	jne    f0101e23 <mem_init+0x14d>$/;"	l
f0101e07	obj/kern/kernel.asm	/^f0101e07:	c7 44 24 08 aa 82 10 	movl   $0xf01082aa,0x8(%esp)$/;"	l
f0101e0e	obj/kern/kernel.asm	/^f0101e0e:	f0 $/;"	l
f0101e0f	obj/kern/kernel.asm	/^f0101e0f:	c7 44 24 04 f6 02 00 	movl   $0x2f6,0x4(%esp)$/;"	l
f0101e16	obj/kern/kernel.asm	/^f0101e16:	00 $/;"	l
f0101e17	obj/kern/kernel.asm	/^f0101e17:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101e1e	obj/kern/kernel.asm	/^f0101e1e:	e8 1d e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e23	obj/kern/kernel.asm	/^f0101e23:	a1 40 42 22 f0       	mov    0xf0224240,%eax$/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101e2d	obj/kern/kernel.asm	/^f0101e2d:	85 c0                	test   %eax,%eax$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	74 09                	je     f0101e3a <mem_init+0x164>$/;"	l
f0101e31	obj/kern/kernel.asm	/^f0101e31:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101e34	obj/kern/kernel.asm	/^f0101e34:	8b 00                	mov    (%eax),%eax$/;"	l
f0101e36	obj/kern/kernel.asm	/^f0101e36:	85 c0                	test   %eax,%eax$/;"	l
f0101e38	obj/kern/kernel.asm	/^f0101e38:	75 f7                	jne    f0101e31 <mem_init+0x15b>$/;"	l
f0101e3a	obj/kern/kernel.asm	/^f0101e3a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e41	obj/kern/kernel.asm	/^f0101e41:	e8 53 fa ff ff       	call   f0101899 <page_alloc>$/;"	l
f0101e46	obj/kern/kernel.asm	/^f0101e46:	89 c6                	mov    %eax,%esi$/;"	l
f0101e48	obj/kern/kernel.asm	/^f0101e48:	85 c0                	test   %eax,%eax$/;"	l
f0101e4a	obj/kern/kernel.asm	/^f0101e4a:	75 24                	jne    f0101e70 <mem_init+0x19a>$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	c7 44 24 0c c5 82 10 	movl   $0xf01082c5,0xc(%esp)$/;"	l
f0101e53	obj/kern/kernel.asm	/^f0101e53:	f0 $/;"	l
f0101e54	obj/kern/kernel.asm	/^f0101e54:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	f0 $/;"	l
f0101e5c	obj/kern/kernel.asm	/^f0101e5c:	c7 44 24 04 fe 02 00 	movl   $0x2fe,0x4(%esp)$/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	00 $/;"	l
f0101e64	obj/kern/kernel.asm	/^f0101e64:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101e6b	obj/kern/kernel.asm	/^f0101e6b:	e8 d0 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e70	obj/kern/kernel.asm	/^f0101e70:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101e77	obj/kern/kernel.asm	/^f0101e77:	e8 1d fa ff ff       	call   f0101899 <page_alloc>$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	89 c7                	mov    %eax,%edi$/;"	l
f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	85 c0                	test   %eax,%eax$/;"	l
f0101e80	obj/kern/kernel.asm	/^f0101e80:	75 24                	jne    f0101ea6 <mem_init+0x1d0>$/;"	l
f0101e82	obj/kern/kernel.asm	/^f0101e82:	c7 44 24 0c db 82 10 	movl   $0xf01082db,0xc(%esp)$/;"	l
f0101e89	obj/kern/kernel.asm	/^f0101e89:	f0 $/;"	l
f0101e8a	obj/kern/kernel.asm	/^f0101e8a:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0101e91	obj/kern/kernel.asm	/^f0101e91:	f0 $/;"	l
f0101e92	obj/kern/kernel.asm	/^f0101e92:	c7 44 24 04 ff 02 00 	movl   $0x2ff,0x4(%esp)$/;"	l
f0101e99	obj/kern/kernel.asm	/^f0101e99:	00 $/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101ea1	obj/kern/kernel.asm	/^f0101ea1:	e8 9a e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ea6	obj/kern/kernel.asm	/^f0101ea6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	e8 e7 f9 ff ff       	call   f0101899 <page_alloc>$/;"	l
f0101eb2	obj/kern/kernel.asm	/^f0101eb2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101eb5	obj/kern/kernel.asm	/^f0101eb5:	85 c0                	test   %eax,%eax$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	75 24                	jne    f0101edd <mem_init+0x207>$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	c7 44 24 0c f1 82 10 	movl   $0xf01082f1,0xc(%esp)$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	f0 $/;"	l
f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	f0 $/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	c7 44 24 04 00 03 00 	movl   $0x300,0x4(%esp)$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	00 $/;"	l
f0101ed1	obj/kern/kernel.asm	/^f0101ed1:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101ed8	obj/kern/kernel.asm	/^f0101ed8:	e8 63 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	39 fe                	cmp    %edi,%esi$/;"	l
f0101edf	obj/kern/kernel.asm	/^f0101edf:	75 24                	jne    f0101f05 <mem_init+0x22f>$/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	c7 44 24 0c 07 83 10 	movl   $0xf0108307,0xc(%esp)$/;"	l
f0101ee8	obj/kern/kernel.asm	/^f0101ee8:	f0 $/;"	l
f0101ee9	obj/kern/kernel.asm	/^f0101ee9:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	f0 $/;"	l
f0101ef1	obj/kern/kernel.asm	/^f0101ef1:	c7 44 24 04 03 03 00 	movl   $0x303,0x4(%esp)$/;"	l
f0101ef8	obj/kern/kernel.asm	/^f0101ef8:	00 $/;"	l
f0101ef9	obj/kern/kernel.asm	/^f0101ef9:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101f00	obj/kern/kernel.asm	/^f0101f00:	e8 3b e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0101f08	obj/kern/kernel.asm	/^f0101f08:	74 05                	je     f0101f0f <mem_init+0x239>$/;"	l
f0101f0a	obj/kern/kernel.asm	/^f0101f0a:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	75 24                	jne    f0101f33 <mem_init+0x25d>$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	c7 44 24 0c 18 7a 10 	movl   $0xf0107a18,0xc(%esp)$/;"	l
f0101f16	obj/kern/kernel.asm	/^f0101f16:	f0 $/;"	l
f0101f17	obj/kern/kernel.asm	/^f0101f17:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	f0 $/;"	l
f0101f1f	obj/kern/kernel.asm	/^f0101f1f:	c7 44 24 04 04 03 00 	movl   $0x304,0x4(%esp)$/;"	l
f0101f26	obj/kern/kernel.asm	/^f0101f26:	00 $/;"	l
f0101f27	obj/kern/kernel.asm	/^f0101f27:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101f2e	obj/kern/kernel.asm	/^f0101f2e:	e8 0d e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f33	obj/kern/kernel.asm	/^f0101f33:	8b 15 90 4e 22 f0    	mov    0xf0224e90,%edx$/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	a1 88 4e 22 f0       	mov    0xf0224e88,%eax$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101f41	obj/kern/kernel.asm	/^f0101f41:	89 f1                	mov    %esi,%ecx$/;"	l
f0101f43	obj/kern/kernel.asm	/^f0101f43:	29 d1                	sub    %edx,%ecx$/;"	l
f0101f45	obj/kern/kernel.asm	/^f0101f45:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101f4b	obj/kern/kernel.asm	/^f0101f4b:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101f4d	obj/kern/kernel.asm	/^f0101f4d:	72 24                	jb     f0101f73 <mem_init+0x29d>$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	c7 44 24 0c 19 83 10 	movl   $0xf0108319,0xc(%esp)$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	f0 $/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0101f5e	obj/kern/kernel.asm	/^f0101f5e:	f0 $/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	c7 44 24 04 05 03 00 	movl   $0x305,0x4(%esp)$/;"	l
f0101f66	obj/kern/kernel.asm	/^f0101f66:	00 $/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101f6e	obj/kern/kernel.asm	/^f0101f6e:	e8 cd e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f73	obj/kern/kernel.asm	/^f0101f73:	89 f9                	mov    %edi,%ecx$/;"	l
f0101f75	obj/kern/kernel.asm	/^f0101f75:	29 d1                	sub    %edx,%ecx$/;"	l
f0101f77	obj/kern/kernel.asm	/^f0101f77:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101f7d	obj/kern/kernel.asm	/^f0101f7d:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	77 24                	ja     f0101fa5 <mem_init+0x2cf>$/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	c7 44 24 0c 36 83 10 	movl   $0xf0108336,0xc(%esp)$/;"	l
f0101f88	obj/kern/kernel.asm	/^f0101f88:	f0 $/;"	l
f0101f89	obj/kern/kernel.asm	/^f0101f89:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	f0 $/;"	l
f0101f91	obj/kern/kernel.asm	/^f0101f91:	c7 44 24 04 06 03 00 	movl   $0x306,0x4(%esp)$/;"	l
f0101f98	obj/kern/kernel.asm	/^f0101f98:	00 $/;"	l
f0101f99	obj/kern/kernel.asm	/^f0101f99:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101fa0	obj/kern/kernel.asm	/^f0101fa0:	e8 9b e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	29 d1                	sub    %edx,%ecx$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	89 ca                	mov    %ecx,%edx$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101fb2	obj/kern/kernel.asm	/^f0101fb2:	39 d0                	cmp    %edx,%eax$/;"	l
f0101fb4	obj/kern/kernel.asm	/^f0101fb4:	77 24                	ja     f0101fda <mem_init+0x304>$/;"	l
f0101fb6	obj/kern/kernel.asm	/^f0101fb6:	c7 44 24 0c 53 83 10 	movl   $0xf0108353,0xc(%esp)$/;"	l
f0101fbd	obj/kern/kernel.asm	/^f0101fbd:	f0 $/;"	l
f0101fbe	obj/kern/kernel.asm	/^f0101fbe:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	f0 $/;"	l
f0101fc6	obj/kern/kernel.asm	/^f0101fc6:	c7 44 24 04 07 03 00 	movl   $0x307,0x4(%esp)$/;"	l
f0101fcd	obj/kern/kernel.asm	/^f0101fcd:	00 $/;"	l
f0101fce	obj/kern/kernel.asm	/^f0101fce:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0101fd5	obj/kern/kernel.asm	/^f0101fd5:	e8 66 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	a1 40 42 22 f0       	mov    0xf0224240,%eax$/;"	l
f0101fdf	obj/kern/kernel.asm	/^f0101fdf:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101fe2	obj/kern/kernel.asm	/^f0101fe2:	c7 05 40 42 22 f0 00 	movl   $0x0,0xf0224240$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	00 00 00 $/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101ff3	obj/kern/kernel.asm	/^f0101ff3:	e8 a1 f8 ff ff       	call   f0101899 <page_alloc>$/;"	l
f0101ff8	obj/kern/kernel.asm	/^f0101ff8:	85 c0                	test   %eax,%eax$/;"	l
f0101ffa	obj/kern/kernel.asm	/^f0101ffa:	74 24                	je     f0102020 <mem_init+0x34a>$/;"	l
f0101ffc	obj/kern/kernel.asm	/^f0101ffc:	c7 44 24 0c 70 83 10 	movl   $0xf0108370,0xc(%esp)$/;"	l
f0102003	obj/kern/kernel.asm	/^f0102003:	f0 $/;"	l
f0102004	obj/kern/kernel.asm	/^f0102004:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010200b	obj/kern/kernel.asm	/^f010200b:	f0 $/;"	l
f010200c	obj/kern/kernel.asm	/^f010200c:	c7 44 24 04 0e 03 00 	movl   $0x30e,0x4(%esp)$/;"	l
f0102013	obj/kern/kernel.asm	/^f0102013:	00 $/;"	l
f0102014	obj/kern/kernel.asm	/^f0102014:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010201b	obj/kern/kernel.asm	/^f010201b:	e8 20 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102020	obj/kern/kernel.asm	/^f0102020:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102023	obj/kern/kernel.asm	/^f0102023:	e8 f2 f8 ff ff       	call   f010191a <page_free>$/;"	l
f0102028	obj/kern/kernel.asm	/^f0102028:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f010202b	obj/kern/kernel.asm	/^f010202b:	e8 ea f8 ff ff       	call   f010191a <page_free>$/;"	l
f0102030	obj/kern/kernel.asm	/^f0102030:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102033	obj/kern/kernel.asm	/^f0102033:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	e8 df f8 ff ff       	call   f010191a <page_free>$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102042	obj/kern/kernel.asm	/^f0102042:	e8 52 f8 ff ff       	call   f0101899 <page_alloc>$/;"	l
f0102047	obj/kern/kernel.asm	/^f0102047:	89 c6                	mov    %eax,%esi$/;"	l
f0102049	obj/kern/kernel.asm	/^f0102049:	85 c0                	test   %eax,%eax$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	75 24                	jne    f0102071 <mem_init+0x39b>$/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	c7 44 24 0c c5 82 10 	movl   $0xf01082c5,0xc(%esp)$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	f0 $/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	f0 $/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	c7 44 24 04 15 03 00 	movl   $0x315,0x4(%esp)$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	00 $/;"	l
f0102065	obj/kern/kernel.asm	/^f0102065:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	e8 cf df ff ff       	call   f0100040 <_panic>$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102078	obj/kern/kernel.asm	/^f0102078:	e8 1c f8 ff ff       	call   f0101899 <page_alloc>$/;"	l
f010207d	obj/kern/kernel.asm	/^f010207d:	89 c7                	mov    %eax,%edi$/;"	l
f010207f	obj/kern/kernel.asm	/^f010207f:	85 c0                	test   %eax,%eax$/;"	l
f0102081	obj/kern/kernel.asm	/^f0102081:	75 24                	jne    f01020a7 <mem_init+0x3d1>$/;"	l
f0102083	obj/kern/kernel.asm	/^f0102083:	c7 44 24 0c db 82 10 	movl   $0xf01082db,0xc(%esp)$/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	f0 $/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102092	obj/kern/kernel.asm	/^f0102092:	f0 $/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	c7 44 24 04 16 03 00 	movl   $0x316,0x4(%esp)$/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	00 $/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	e8 99 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020a7	obj/kern/kernel.asm	/^f01020a7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01020ae	obj/kern/kernel.asm	/^f01020ae:	e8 e6 f7 ff ff       	call   f0101899 <page_alloc>$/;"	l
f01020b3	obj/kern/kernel.asm	/^f01020b3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01020b6	obj/kern/kernel.asm	/^f01020b6:	85 c0                	test   %eax,%eax$/;"	l
f01020b8	obj/kern/kernel.asm	/^f01020b8:	75 24                	jne    f01020de <mem_init+0x408>$/;"	l
f01020ba	obj/kern/kernel.asm	/^f01020ba:	c7 44 24 0c f1 82 10 	movl   $0xf01082f1,0xc(%esp)$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	f0 $/;"	l
f01020c2	obj/kern/kernel.asm	/^f01020c2:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	f0 $/;"	l
f01020ca	obj/kern/kernel.asm	/^f01020ca:	c7 44 24 04 17 03 00 	movl   $0x317,0x4(%esp)$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	00 $/;"	l
f01020d2	obj/kern/kernel.asm	/^f01020d2:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	e8 62 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	39 fe                	cmp    %edi,%esi$/;"	l
f01020e0	obj/kern/kernel.asm	/^f01020e0:	75 24                	jne    f0102106 <mem_init+0x430>$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	c7 44 24 0c 07 83 10 	movl   $0xf0108307,0xc(%esp)$/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	f0 $/;"	l
f01020ea	obj/kern/kernel.asm	/^f01020ea:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01020f1	obj/kern/kernel.asm	/^f01020f1:	f0 $/;"	l
f01020f2	obj/kern/kernel.asm	/^f01020f2:	c7 44 24 04 19 03 00 	movl   $0x319,0x4(%esp)$/;"	l
f01020f9	obj/kern/kernel.asm	/^f01020f9:	00 $/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102101	obj/kern/kernel.asm	/^f0102101:	e8 3a df ff ff       	call   f0100040 <_panic>$/;"	l
f0102106	obj/kern/kernel.asm	/^f0102106:	3b 7d d4             	cmp    -0x2c(%ebp),%edi$/;"	l
f0102109	obj/kern/kernel.asm	/^f0102109:	74 05                	je     f0102110 <mem_init+0x43a>$/;"	l
f010210b	obj/kern/kernel.asm	/^f010210b:	3b 75 d4             	cmp    -0x2c(%ebp),%esi$/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	75 24                	jne    f0102134 <mem_init+0x45e>$/;"	l
f0102110	obj/kern/kernel.asm	/^f0102110:	c7 44 24 0c 18 7a 10 	movl   $0xf0107a18,0xc(%esp)$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	f0 $/;"	l
f0102118	obj/kern/kernel.asm	/^f0102118:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010211f	obj/kern/kernel.asm	/^f010211f:	f0 $/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	c7 44 24 04 1a 03 00 	movl   $0x31a,0x4(%esp)$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	00 $/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	e8 0c df ff ff       	call   f0100040 <_panic>$/;"	l
f0102134	obj/kern/kernel.asm	/^f0102134:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010213b	obj/kern/kernel.asm	/^f010213b:	e8 59 f7 ff ff       	call   f0101899 <page_alloc>$/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	85 c0                	test   %eax,%eax$/;"	l
f0102142	obj/kern/kernel.asm	/^f0102142:	74 24                	je     f0102168 <mem_init+0x492>$/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	c7 44 24 0c 70 83 10 	movl   $0xf0108370,0xc(%esp)$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	f0 $/;"	l
f010214c	obj/kern/kernel.asm	/^f010214c:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102153	obj/kern/kernel.asm	/^f0102153:	f0 $/;"	l
f0102154	obj/kern/kernel.asm	/^f0102154:	c7 44 24 04 1b 03 00 	movl   $0x31b,0x4(%esp)$/;"	l
f010215b	obj/kern/kernel.asm	/^f010215b:	00 $/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102163	obj/kern/kernel.asm	/^f0102163:	e8 d8 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102168	obj/kern/kernel.asm	/^f0102168:	89 f0                	mov    %esi,%eax$/;"	l
f010216a	obj/kern/kernel.asm	/^f010216a:	2b 05 90 4e 22 f0    	sub    0xf0224e90,%eax$/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102173	obj/kern/kernel.asm	/^f0102173:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102176	obj/kern/kernel.asm	/^f0102176:	89 c2                	mov    %eax,%edx$/;"	l
f0102178	obj/kern/kernel.asm	/^f0102178:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	3b 15 88 4e 22 f0    	cmp    0xf0224e88,%edx$/;"	l
f0102181	obj/kern/kernel.asm	/^f0102181:	72 20                	jb     f01021a3 <mem_init+0x4cd>$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f010218e	obj/kern/kernel.asm	/^f010218e:	f0 $/;"	l
f010218f	obj/kern/kernel.asm	/^f010218f:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	00 $/;"	l
f0102197	obj/kern/kernel.asm	/^f0102197:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f010219e	obj/kern/kernel.asm	/^f010219e:	e8 9d de ff ff       	call   f0100040 <_panic>$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01021aa	obj/kern/kernel.asm	/^f01021aa:	00 $/;"	l
f01021ab	obj/kern/kernel.asm	/^f01021ab:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	00 $/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01021b8	obj/kern/kernel.asm	/^f01021b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	e8 d1 3f 00 00       	call   f0106191 <memset>$/;"	l
f01021c0	obj/kern/kernel.asm	/^f01021c0:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01021c3	obj/kern/kernel.asm	/^f01021c3:	e8 52 f7 ff ff       	call   f010191a <page_free>$/;"	l
f01021c8	obj/kern/kernel.asm	/^f01021c8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	e8 c5 f6 ff ff       	call   f0101899 <page_alloc>$/;"	l
f01021d4	obj/kern/kernel.asm	/^f01021d4:	85 c0                	test   %eax,%eax$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	75 24                	jne    f01021fc <mem_init+0x526>$/;"	l
f01021d8	obj/kern/kernel.asm	/^f01021d8:	c7 44 24 0c 7f 83 10 	movl   $0xf010837f,0xc(%esp)$/;"	l
f01021df	obj/kern/kernel.asm	/^f01021df:	f0 $/;"	l
f01021e0	obj/kern/kernel.asm	/^f01021e0:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01021e7	obj/kern/kernel.asm	/^f01021e7:	f0 $/;"	l
f01021e8	obj/kern/kernel.asm	/^f01021e8:	c7 44 24 04 20 03 00 	movl   $0x320,0x4(%esp)$/;"	l
f01021ef	obj/kern/kernel.asm	/^f01021ef:	00 $/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	e8 44 de ff ff       	call   f0100040 <_panic>$/;"	l
f01021fc	obj/kern/kernel.asm	/^f01021fc:	39 c6                	cmp    %eax,%esi$/;"	l
f01021fe	obj/kern/kernel.asm	/^f01021fe:	74 24                	je     f0102224 <mem_init+0x54e>$/;"	l
f0102200	obj/kern/kernel.asm	/^f0102200:	c7 44 24 0c 9d 83 10 	movl   $0xf010839d,0xc(%esp)$/;"	l
f0102207	obj/kern/kernel.asm	/^f0102207:	f0 $/;"	l
f0102208	obj/kern/kernel.asm	/^f0102208:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010220f	obj/kern/kernel.asm	/^f010220f:	f0 $/;"	l
f0102210	obj/kern/kernel.asm	/^f0102210:	c7 44 24 04 21 03 00 	movl   $0x321,0x4(%esp)$/;"	l
f0102217	obj/kern/kernel.asm	/^f0102217:	00 $/;"	l
f0102218	obj/kern/kernel.asm	/^f0102218:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	e8 1c de ff ff       	call   f0100040 <_panic>$/;"	l
f0102224	obj/kern/kernel.asm	/^f0102224:	89 f2                	mov    %esi,%edx$/;"	l
f0102226	obj/kern/kernel.asm	/^f0102226:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f010222c	obj/kern/kernel.asm	/^f010222c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102232	obj/kern/kernel.asm	/^f0102232:	89 d0                	mov    %edx,%eax$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102237	obj/kern/kernel.asm	/^f0102237:	3b 05 88 4e 22 f0    	cmp    0xf0224e88,%eax$/;"	l
f010223d	obj/kern/kernel.asm	/^f010223d:	72 20                	jb     f010225f <mem_init+0x589>$/;"	l
f010223f	obj/kern/kernel.asm	/^f010223f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102243	obj/kern/kernel.asm	/^f0102243:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f010224a	obj/kern/kernel.asm	/^f010224a:	f0 $/;"	l
f010224b	obj/kern/kernel.asm	/^f010224b:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102252	obj/kern/kernel.asm	/^f0102252:	00 $/;"	l
f0102253	obj/kern/kernel.asm	/^f0102253:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f010225a	obj/kern/kernel.asm	/^f010225a:	e8 e1 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	80 ba 00 00 00 f0 00 	cmpb   $0x0,-0x10000000(%edx)$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	75 11                	jne    f0102279 <mem_init+0x5a3>$/;"	l
f0102268	obj/kern/kernel.asm	/^f0102268:	8d 82 01 00 00 f0    	lea    -0xfffffff(%edx),%eax$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102274	obj/kern/kernel.asm	/^f0102274:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0102277	obj/kern/kernel.asm	/^f0102277:	74 24                	je     f010229d <mem_init+0x5c7>$/;"	l
f0102279	obj/kern/kernel.asm	/^f0102279:	c7 44 24 0c ad 83 10 	movl   $0xf01083ad,0xc(%esp)$/;"	l
f0102280	obj/kern/kernel.asm	/^f0102280:	f0 $/;"	l
f0102281	obj/kern/kernel.asm	/^f0102281:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102288	obj/kern/kernel.asm	/^f0102288:	f0 $/;"	l
f0102289	obj/kern/kernel.asm	/^f0102289:	c7 44 24 04 24 03 00 	movl   $0x324,0x4(%esp)$/;"	l
f0102290	obj/kern/kernel.asm	/^f0102290:	00 $/;"	l
f0102291	obj/kern/kernel.asm	/^f0102291:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102298	obj/kern/kernel.asm	/^f0102298:	e8 a3 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010229d	obj/kern/kernel.asm	/^f010229d:	83 c0 01             	add    $0x1,%eax$/;"	l
f01022a0	obj/kern/kernel.asm	/^f01022a0:	39 d0                	cmp    %edx,%eax$/;"	l
f01022a2	obj/kern/kernel.asm	/^f01022a2:	75 d0                	jne    f0102274 <mem_init+0x59e>$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01022a7	obj/kern/kernel.asm	/^f01022a7:	89 15 40 42 22 f0    	mov    %edx,0xf0224240$/;"	l
f01022ad	obj/kern/kernel.asm	/^f01022ad:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01022b0	obj/kern/kernel.asm	/^f01022b0:	e8 65 f6 ff ff       	call   f010191a <page_free>$/;"	l
f01022b5	obj/kern/kernel.asm	/^f01022b5:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01022b8	obj/kern/kernel.asm	/^f01022b8:	e8 5d f6 ff ff       	call   f010191a <page_free>$/;"	l
f01022bd	obj/kern/kernel.asm	/^f01022bd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01022c0	obj/kern/kernel.asm	/^f01022c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01022c3	obj/kern/kernel.asm	/^f01022c3:	e8 52 f6 ff ff       	call   f010191a <page_free>$/;"	l
f01022c8	obj/kern/kernel.asm	/^f01022c8:	a1 40 42 22 f0       	mov    0xf0224240,%eax$/;"	l
f01022cd	obj/kern/kernel.asm	/^f01022cd:	85 c0                	test   %eax,%eax$/;"	l
f01022cf	obj/kern/kernel.asm	/^f01022cf:	74 09                	je     f01022da <mem_init+0x604>$/;"	l
f01022d1	obj/kern/kernel.asm	/^f01022d1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01022d4	obj/kern/kernel.asm	/^f01022d4:	8b 00                	mov    (%eax),%eax$/;"	l
f01022d6	obj/kern/kernel.asm	/^f01022d6:	85 c0                	test   %eax,%eax$/;"	l
f01022d8	obj/kern/kernel.asm	/^f01022d8:	75 f7                	jne    f01022d1 <mem_init+0x5fb>$/;"	l
f01022da	obj/kern/kernel.asm	/^f01022da:	85 db                	test   %ebx,%ebx$/;"	l
f01022dc	obj/kern/kernel.asm	/^f01022dc:	74 24                	je     f0102302 <mem_init+0x62c>$/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	c7 44 24 0c b7 83 10 	movl   $0xf01083b7,0xc(%esp)$/;"	l
f01022e5	obj/kern/kernel.asm	/^f01022e5:	f0 $/;"	l
f01022e6	obj/kern/kernel.asm	/^f01022e6:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	f0 $/;"	l
f01022ee	obj/kern/kernel.asm	/^f01022ee:	c7 44 24 04 31 03 00 	movl   $0x331,0x4(%esp)$/;"	l
f01022f5	obj/kern/kernel.asm	/^f01022f5:	00 $/;"	l
f01022f6	obj/kern/kernel.asm	/^f01022f6:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01022fd	obj/kern/kernel.asm	/^f01022fd:	e8 3e dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102302	obj/kern/kernel.asm	/^f0102302:	c7 04 24 38 7a 10 f0 	movl   $0xf0107a38,(%esp)$/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	e8 a4 24 00 00       	call   f01047b2 <cprintf>$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102315	obj/kern/kernel.asm	/^f0102315:	e8 7f f5 ff ff       	call   f0101899 <page_alloc>$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	89 c6                	mov    %eax,%esi$/;"	l
f010231c	obj/kern/kernel.asm	/^f010231c:	85 c0                	test   %eax,%eax$/;"	l
f010231e	obj/kern/kernel.asm	/^f010231e:	75 24                	jne    f0102344 <mem_init+0x66e>$/;"	l
f0102320	obj/kern/kernel.asm	/^f0102320:	c7 44 24 0c c5 82 10 	movl   $0xf01082c5,0xc(%esp)$/;"	l
f0102327	obj/kern/kernel.asm	/^f0102327:	f0 $/;"	l
f0102328	obj/kern/kernel.asm	/^f0102328:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	f0 $/;"	l
f0102330	obj/kern/kernel.asm	/^f0102330:	c7 44 24 04 9a 03 00 	movl   $0x39a,0x4(%esp)$/;"	l
f0102337	obj/kern/kernel.asm	/^f0102337:	00 $/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010233f	obj/kern/kernel.asm	/^f010233f:	e8 fc dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102344	obj/kern/kernel.asm	/^f0102344:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010234b	obj/kern/kernel.asm	/^f010234b:	e8 49 f5 ff ff       	call   f0101899 <page_alloc>$/;"	l
f0102350	obj/kern/kernel.asm	/^f0102350:	89 c7                	mov    %eax,%edi$/;"	l
f0102352	obj/kern/kernel.asm	/^f0102352:	85 c0                	test   %eax,%eax$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	75 24                	jne    f010237a <mem_init+0x6a4>$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	c7 44 24 0c db 82 10 	movl   $0xf01082db,0xc(%esp)$/;"	l
f010235d	obj/kern/kernel.asm	/^f010235d:	f0 $/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	f0 $/;"	l
f0102366	obj/kern/kernel.asm	/^f0102366:	c7 44 24 04 9b 03 00 	movl   $0x39b,0x4(%esp)$/;"	l
f010236d	obj/kern/kernel.asm	/^f010236d:	00 $/;"	l
f010236e	obj/kern/kernel.asm	/^f010236e:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102375	obj/kern/kernel.asm	/^f0102375:	e8 c6 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010237a	obj/kern/kernel.asm	/^f010237a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102381	obj/kern/kernel.asm	/^f0102381:	e8 13 f5 ff ff       	call   f0101899 <page_alloc>$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	89 c3                	mov    %eax,%ebx$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	85 c0                	test   %eax,%eax$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	75 24                	jne    f01023b0 <mem_init+0x6da>$/;"	l
f010238c	obj/kern/kernel.asm	/^f010238c:	c7 44 24 0c f1 82 10 	movl   $0xf01082f1,0xc(%esp)$/;"	l
f0102393	obj/kern/kernel.asm	/^f0102393:	f0 $/;"	l
f0102394	obj/kern/kernel.asm	/^f0102394:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010239b	obj/kern/kernel.asm	/^f010239b:	f0 $/;"	l
f010239c	obj/kern/kernel.asm	/^f010239c:	c7 44 24 04 9c 03 00 	movl   $0x39c,0x4(%esp)$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	00 $/;"	l
f01023a4	obj/kern/kernel.asm	/^f01023a4:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01023ab	obj/kern/kernel.asm	/^f01023ab:	e8 90 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023b0	obj/kern/kernel.asm	/^f01023b0:	39 fe                	cmp    %edi,%esi$/;"	l
f01023b2	obj/kern/kernel.asm	/^f01023b2:	75 24                	jne    f01023d8 <mem_init+0x702>$/;"	l
f01023b4	obj/kern/kernel.asm	/^f01023b4:	c7 44 24 0c 07 83 10 	movl   $0xf0108307,0xc(%esp)$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	f0 $/;"	l
f01023bc	obj/kern/kernel.asm	/^f01023bc:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	f0 $/;"	l
f01023c4	obj/kern/kernel.asm	/^f01023c4:	c7 44 24 04 9f 03 00 	movl   $0x39f,0x4(%esp)$/;"	l
f01023cb	obj/kern/kernel.asm	/^f01023cb:	00 $/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01023d3	obj/kern/kernel.asm	/^f01023d3:	e8 68 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023d8	obj/kern/kernel.asm	/^f01023d8:	39 c7                	cmp    %eax,%edi$/;"	l
f01023da	obj/kern/kernel.asm	/^f01023da:	74 04                	je     f01023e0 <mem_init+0x70a>$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	39 c6                	cmp    %eax,%esi$/;"	l
f01023de	obj/kern/kernel.asm	/^f01023de:	75 24                	jne    f0102404 <mem_init+0x72e>$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	c7 44 24 0c 18 7a 10 	movl   $0xf0107a18,0xc(%esp)$/;"	l
f01023e7	obj/kern/kernel.asm	/^f01023e7:	f0 $/;"	l
f01023e8	obj/kern/kernel.asm	/^f01023e8:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	f0 $/;"	l
f01023f0	obj/kern/kernel.asm	/^f01023f0:	c7 44 24 04 a0 03 00 	movl   $0x3a0,0x4(%esp)$/;"	l
f01023f7	obj/kern/kernel.asm	/^f01023f7:	00 $/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01023ff	obj/kern/kernel.asm	/^f01023ff:	e8 3c dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102404	obj/kern/kernel.asm	/^f0102404:	8b 15 40 42 22 f0    	mov    0xf0224240,%edx$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
f010240d	obj/kern/kernel.asm	/^f010240d:	c7 05 40 42 22 f0 00 	movl   $0x0,0xf0224240$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	00 00 00 $/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010241e	obj/kern/kernel.asm	/^f010241e:	e8 76 f4 ff ff       	call   f0101899 <page_alloc>$/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	85 c0                	test   %eax,%eax$/;"	l
f0102425	obj/kern/kernel.asm	/^f0102425:	74 24                	je     f010244b <mem_init+0x775>$/;"	l
f0102427	obj/kern/kernel.asm	/^f0102427:	c7 44 24 0c 70 83 10 	movl   $0xf0108370,0xc(%esp)$/;"	l
f010242e	obj/kern/kernel.asm	/^f010242e:	f0 $/;"	l
f010242f	obj/kern/kernel.asm	/^f010242f:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102436	obj/kern/kernel.asm	/^f0102436:	f0 $/;"	l
f0102437	obj/kern/kernel.asm	/^f0102437:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
f010243e	obj/kern/kernel.asm	/^f010243e:	00 $/;"	l
f010243f	obj/kern/kernel.asm	/^f010243f:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102446	obj/kern/kernel.asm	/^f0102446:	e8 f5 db ff ff       	call   f0100040 <_panic>$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f010244e	obj/kern/kernel.asm	/^f010244e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0102452	obj/kern/kernel.asm	/^f0102452:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102459	obj/kern/kernel.asm	/^f0102459:	00 $/;"	l
f010245a	obj/kern/kernel.asm	/^f010245a:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f010245f	obj/kern/kernel.asm	/^f010245f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	e8 56 f6 ff ff       	call   f0101abd <page_lookup>$/;"	l
f0102467	obj/kern/kernel.asm	/^f0102467:	85 c0                	test   %eax,%eax$/;"	l
f0102469	obj/kern/kernel.asm	/^f0102469:	74 24                	je     f010248f <mem_init+0x7b9>$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	c7 44 24 0c 58 7a 10 	movl   $0xf0107a58,0xc(%esp)$/;"	l
f0102472	obj/kern/kernel.asm	/^f0102472:	f0 $/;"	l
f0102473	obj/kern/kernel.asm	/^f0102473:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010247a	obj/kern/kernel.asm	/^f010247a:	f0 $/;"	l
f010247b	obj/kern/kernel.asm	/^f010247b:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
f0102482	obj/kern/kernel.asm	/^f0102482:	00 $/;"	l
f0102483	obj/kern/kernel.asm	/^f0102483:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	e8 b1 db ff ff       	call   f0100040 <_panic>$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102496	obj/kern/kernel.asm	/^f0102496:	00 $/;"	l
f0102497	obj/kern/kernel.asm	/^f0102497:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010249e	obj/kern/kernel.asm	/^f010249e:	00 $/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01024a3	obj/kern/kernel.asm	/^f01024a3:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f01024a8	obj/kern/kernel.asm	/^f01024a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01024ab	obj/kern/kernel.asm	/^f01024ab:	e8 b8 f6 ff ff       	call   f0101b68 <page_insert>$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	85 c0                	test   %eax,%eax$/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	78 24                	js     f01024d8 <mem_init+0x802>$/;"	l
f01024b4	obj/kern/kernel.asm	/^f01024b4:	c7 44 24 0c 90 7a 10 	movl   $0xf0107a90,0xc(%esp)$/;"	l
f01024bb	obj/kern/kernel.asm	/^f01024bb:	f0 $/;"	l
f01024bc	obj/kern/kernel.asm	/^f01024bc:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01024c3	obj/kern/kernel.asm	/^f01024c3:	f0 $/;"	l
f01024c4	obj/kern/kernel.asm	/^f01024c4:	c7 44 24 04 ad 03 00 	movl   $0x3ad,0x4(%esp)$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	00 $/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01024d3	obj/kern/kernel.asm	/^f01024d3:	e8 68 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024d8	obj/kern/kernel.asm	/^f01024d8:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01024db	obj/kern/kernel.asm	/^f01024db:	e8 3a f4 ff ff       	call   f010191a <page_free>$/;"	l
f01024e0	obj/kern/kernel.asm	/^f01024e0:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01024e7	obj/kern/kernel.asm	/^f01024e7:	00 $/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01024ef	obj/kern/kernel.asm	/^f01024ef:	00 $/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f01024f9	obj/kern/kernel.asm	/^f01024f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01024fc	obj/kern/kernel.asm	/^f01024fc:	e8 67 f6 ff ff       	call   f0101b68 <page_insert>$/;"	l
f0102501	obj/kern/kernel.asm	/^f0102501:	85 c0                	test   %eax,%eax$/;"	l
f0102503	obj/kern/kernel.asm	/^f0102503:	74 24                	je     f0102529 <mem_init+0x853>$/;"	l
f0102505	obj/kern/kernel.asm	/^f0102505:	c7 44 24 0c c0 7a 10 	movl   $0xf0107ac0,0xc(%esp)$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	f0 $/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102514	obj/kern/kernel.asm	/^f0102514:	f0 $/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f010251c	obj/kern/kernel.asm	/^f010251c:	00 $/;"	l
f010251d	obj/kern/kernel.asm	/^f010251d:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102524	obj/kern/kernel.asm	/^f0102524:	e8 17 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102529	obj/kern/kernel.asm	/^f0102529:	8b 0d 8c 4e 22 f0    	mov    0xf0224e8c,%ecx$/;"	l
f010252f	obj/kern/kernel.asm	/^f010252f:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0102532	obj/kern/kernel.asm	/^f0102532:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f0102537	obj/kern/kernel.asm	/^f0102537:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010253a	obj/kern/kernel.asm	/^f010253a:	8b 11                	mov    (%ecx),%edx$/;"	l
f010253c	obj/kern/kernel.asm	/^f010253c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102542	obj/kern/kernel.asm	/^f0102542:	89 f0                	mov    %esi,%eax$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
f0102547	obj/kern/kernel.asm	/^f0102547:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010254a	obj/kern/kernel.asm	/^f010254a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010254d	obj/kern/kernel.asm	/^f010254d:	39 c2                	cmp    %eax,%edx$/;"	l
f010254f	obj/kern/kernel.asm	/^f010254f:	74 24                	je     f0102575 <mem_init+0x89f>$/;"	l
f0102551	obj/kern/kernel.asm	/^f0102551:	c7 44 24 0c f0 7a 10 	movl   $0xf0107af0,0xc(%esp)$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	f0 $/;"	l
f0102559	obj/kern/kernel.asm	/^f0102559:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102560	obj/kern/kernel.asm	/^f0102560:	f0 $/;"	l
f0102561	obj/kern/kernel.asm	/^f0102561:	c7 44 24 04 b2 03 00 	movl   $0x3b2,0x4(%esp)$/;"	l
f0102568	obj/kern/kernel.asm	/^f0102568:	00 $/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	e8 cb da ff ff       	call   f0100040 <_panic>$/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010257a	obj/kern/kernel.asm	/^f010257a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010257d	obj/kern/kernel.asm	/^f010257d:	e8 1a ee ff ff       	call   f010139c <check_va2pa>$/;"	l
f0102582	obj/kern/kernel.asm	/^f0102582:	89 fa                	mov    %edi,%edx$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	2b 55 d0             	sub    -0x30(%ebp),%edx$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010258a	obj/kern/kernel.asm	/^f010258a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010258d	obj/kern/kernel.asm	/^f010258d:	39 d0                	cmp    %edx,%eax$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	74 24                	je     f01025b5 <mem_init+0x8df>$/;"	l
f0102591	obj/kern/kernel.asm	/^f0102591:	c7 44 24 0c 18 7b 10 	movl   $0xf0107b18,0xc(%esp)$/;"	l
f0102598	obj/kern/kernel.asm	/^f0102598:	f0 $/;"	l
f0102599	obj/kern/kernel.asm	/^f0102599:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01025a0	obj/kern/kernel.asm	/^f01025a0:	f0 $/;"	l
f01025a1	obj/kern/kernel.asm	/^f01025a1:	c7 44 24 04 b3 03 00 	movl   $0x3b3,0x4(%esp)$/;"	l
f01025a8	obj/kern/kernel.asm	/^f01025a8:	00 $/;"	l
f01025a9	obj/kern/kernel.asm	/^f01025a9:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01025b0	obj/kern/kernel.asm	/^f01025b0:	e8 8b da ff ff       	call   f0100040 <_panic>$/;"	l
f01025b5	obj/kern/kernel.asm	/^f01025b5:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01025ba	obj/kern/kernel.asm	/^f01025ba:	74 24                	je     f01025e0 <mem_init+0x90a>$/;"	l
f01025bc	obj/kern/kernel.asm	/^f01025bc:	c7 44 24 0c c2 83 10 	movl   $0xf01083c2,0xc(%esp)$/;"	l
f01025c3	obj/kern/kernel.asm	/^f01025c3:	f0 $/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01025cb	obj/kern/kernel.asm	/^f01025cb:	f0 $/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f01025d3	obj/kern/kernel.asm	/^f01025d3:	00 $/;"	l
f01025d4	obj/kern/kernel.asm	/^f01025d4:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01025db	obj/kern/kernel.asm	/^f01025db:	e8 60 da ff ff       	call   f0100040 <_panic>$/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01025e5	obj/kern/kernel.asm	/^f01025e5:	74 24                	je     f010260b <mem_init+0x935>$/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	c7 44 24 0c d3 83 10 	movl   $0xf01083d3,0xc(%esp)$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	f0 $/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	f0 $/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	c7 44 24 04 b5 03 00 	movl   $0x3b5,0x4(%esp)$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	00 $/;"	l
f01025ff	obj/kern/kernel.asm	/^f01025ff:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102606	obj/kern/kernel.asm	/^f0102606:	e8 35 da ff ff       	call   f0100040 <_panic>$/;"	l
f010260b	obj/kern/kernel.asm	/^f010260b:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	00 $/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	00 $/;"	l
f010261b	obj/kern/kernel.asm	/^f010261b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102622	obj/kern/kernel.asm	/^f0102622:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0102625	obj/kern/kernel.asm	/^f0102625:	e8 3e f5 ff ff       	call   f0101b68 <page_insert>$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	85 c0                	test   %eax,%eax$/;"	l
f010262c	obj/kern/kernel.asm	/^f010262c:	74 24                	je     f0102652 <mem_init+0x97c>$/;"	l
f010262e	obj/kern/kernel.asm	/^f010262e:	c7 44 24 0c 48 7b 10 	movl   $0xf0107b48,0xc(%esp)$/;"	l
f0102635	obj/kern/kernel.asm	/^f0102635:	f0 $/;"	l
f0102636	obj/kern/kernel.asm	/^f0102636:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	f0 $/;"	l
f010263e	obj/kern/kernel.asm	/^f010263e:	c7 44 24 04 b8 03 00 	movl   $0x3b8,0x4(%esp)$/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	00 $/;"	l
f0102646	obj/kern/kernel.asm	/^f0102646:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010264d	obj/kern/kernel.asm	/^f010264d:	e8 ee d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102652	obj/kern/kernel.asm	/^f0102652:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102657	obj/kern/kernel.asm	/^f0102657:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	e8 3b ed ff ff       	call   f010139c <check_va2pa>$/;"	l
f0102661	obj/kern/kernel.asm	/^f0102661:	89 da                	mov    %ebx,%edx$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f0102669	obj/kern/kernel.asm	/^f0102669:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010266c	obj/kern/kernel.asm	/^f010266c:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010266f	obj/kern/kernel.asm	/^f010266f:	39 d0                	cmp    %edx,%eax$/;"	l
f0102671	obj/kern/kernel.asm	/^f0102671:	74 24                	je     f0102697 <mem_init+0x9c1>$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	c7 44 24 0c 84 7b 10 	movl   $0xf0107b84,0xc(%esp)$/;"	l
f010267a	obj/kern/kernel.asm	/^f010267a:	f0 $/;"	l
f010267b	obj/kern/kernel.asm	/^f010267b:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102682	obj/kern/kernel.asm	/^f0102682:	f0 $/;"	l
f0102683	obj/kern/kernel.asm	/^f0102683:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f010268a	obj/kern/kernel.asm	/^f010268a:	00 $/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102692	obj/kern/kernel.asm	/^f0102692:	e8 a9 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102697	obj/kern/kernel.asm	/^f0102697:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f010269c	obj/kern/kernel.asm	/^f010269c:	74 24                	je     f01026c2 <mem_init+0x9ec>$/;"	l
f010269e	obj/kern/kernel.asm	/^f010269e:	c7 44 24 0c e4 83 10 	movl   $0xf01083e4,0xc(%esp)$/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	f0 $/;"	l
f01026a6	obj/kern/kernel.asm	/^f01026a6:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01026ad	obj/kern/kernel.asm	/^f01026ad:	f0 $/;"	l
f01026ae	obj/kern/kernel.asm	/^f01026ae:	c7 44 24 04 ba 03 00 	movl   $0x3ba,0x4(%esp)$/;"	l
f01026b5	obj/kern/kernel.asm	/^f01026b5:	00 $/;"	l
f01026b6	obj/kern/kernel.asm	/^f01026b6:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01026bd	obj/kern/kernel.asm	/^f01026bd:	e8 7e d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026c2	obj/kern/kernel.asm	/^f01026c2:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01026c9	obj/kern/kernel.asm	/^f01026c9:	e8 cb f1 ff ff       	call   f0101899 <page_alloc>$/;"	l
f01026ce	obj/kern/kernel.asm	/^f01026ce:	85 c0                	test   %eax,%eax$/;"	l
f01026d0	obj/kern/kernel.asm	/^f01026d0:	74 24                	je     f01026f6 <mem_init+0xa20>$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	c7 44 24 0c 70 83 10 	movl   $0xf0108370,0xc(%esp)$/;"	l
f01026d9	obj/kern/kernel.asm	/^f01026d9:	f0 $/;"	l
f01026da	obj/kern/kernel.asm	/^f01026da:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01026e1	obj/kern/kernel.asm	/^f01026e1:	f0 $/;"	l
f01026e2	obj/kern/kernel.asm	/^f01026e2:	c7 44 24 04 bd 03 00 	movl   $0x3bd,0x4(%esp)$/;"	l
f01026e9	obj/kern/kernel.asm	/^f01026e9:	00 $/;"	l
f01026ea	obj/kern/kernel.asm	/^f01026ea:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01026f1	obj/kern/kernel.asm	/^f01026f1:	e8 4a d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026f6	obj/kern/kernel.asm	/^f01026f6:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01026fd	obj/kern/kernel.asm	/^f01026fd:	00 $/;"	l
f01026fe	obj/kern/kernel.asm	/^f01026fe:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102705	obj/kern/kernel.asm	/^f0102705:	00 $/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f010270f	obj/kern/kernel.asm	/^f010270f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102712	obj/kern/kernel.asm	/^f0102712:	e8 51 f4 ff ff       	call   f0101b68 <page_insert>$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	85 c0                	test   %eax,%eax$/;"	l
f0102719	obj/kern/kernel.asm	/^f0102719:	74 24                	je     f010273f <mem_init+0xa69>$/;"	l
f010271b	obj/kern/kernel.asm	/^f010271b:	c7 44 24 0c 48 7b 10 	movl   $0xf0107b48,0xc(%esp)$/;"	l
f0102722	obj/kern/kernel.asm	/^f0102722:	f0 $/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010272a	obj/kern/kernel.asm	/^f010272a:	f0 $/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	00 $/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010273a	obj/kern/kernel.asm	/^f010273a:	e8 01 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010273f	obj/kern/kernel.asm	/^f010273f:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102749	obj/kern/kernel.asm	/^f0102749:	e8 4e ec ff ff       	call   f010139c <check_va2pa>$/;"	l
f010274e	obj/kern/kernel.asm	/^f010274e:	89 da                	mov    %ebx,%edx$/;"	l
f0102750	obj/kern/kernel.asm	/^f0102750:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f0102756	obj/kern/kernel.asm	/^f0102756:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102759	obj/kern/kernel.asm	/^f0102759:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	39 d0                	cmp    %edx,%eax$/;"	l
f010275e	obj/kern/kernel.asm	/^f010275e:	74 24                	je     f0102784 <mem_init+0xaae>$/;"	l
f0102760	obj/kern/kernel.asm	/^f0102760:	c7 44 24 0c 84 7b 10 	movl   $0xf0107b84,0xc(%esp)$/;"	l
f0102767	obj/kern/kernel.asm	/^f0102767:	f0 $/;"	l
f0102768	obj/kern/kernel.asm	/^f0102768:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	f0 $/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	00 $/;"	l
f0102778	obj/kern/kernel.asm	/^f0102778:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010277f	obj/kern/kernel.asm	/^f010277f:	e8 bc d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102784	obj/kern/kernel.asm	/^f0102784:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102789	obj/kern/kernel.asm	/^f0102789:	74 24                	je     f01027af <mem_init+0xad9>$/;"	l
f010278b	obj/kern/kernel.asm	/^f010278b:	c7 44 24 0c e4 83 10 	movl   $0xf01083e4,0xc(%esp)$/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	f0 $/;"	l
f0102793	obj/kern/kernel.asm	/^f0102793:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	f0 $/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	c7 44 24 04 c2 03 00 	movl   $0x3c2,0x4(%esp)$/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	00 $/;"	l
f01027a3	obj/kern/kernel.asm	/^f01027a3:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01027aa	obj/kern/kernel.asm	/^f01027aa:	e8 91 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01027b6	obj/kern/kernel.asm	/^f01027b6:	e8 de f0 ff ff       	call   f0101899 <page_alloc>$/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	85 c0                	test   %eax,%eax$/;"	l
f01027bd	obj/kern/kernel.asm	/^f01027bd:	74 24                	je     f01027e3 <mem_init+0xb0d>$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	c7 44 24 0c 70 83 10 	movl   $0xf0108370,0xc(%esp)$/;"	l
f01027c6	obj/kern/kernel.asm	/^f01027c6:	f0 $/;"	l
f01027c7	obj/kern/kernel.asm	/^f01027c7:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01027ce	obj/kern/kernel.asm	/^f01027ce:	f0 $/;"	l
f01027cf	obj/kern/kernel.asm	/^f01027cf:	c7 44 24 04 c6 03 00 	movl   $0x3c6,0x4(%esp)$/;"	l
f01027d6	obj/kern/kernel.asm	/^f01027d6:	00 $/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	e8 5d d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027e3	obj/kern/kernel.asm	/^f01027e3:	8b 15 8c 4e 22 f0    	mov    0xf0224e8c,%edx$/;"	l
f01027e9	obj/kern/kernel.asm	/^f01027e9:	8b 02                	mov    (%edx),%eax$/;"	l
f01027eb	obj/kern/kernel.asm	/^f01027eb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01027f0	obj/kern/kernel.asm	/^f01027f0:	89 c1                	mov    %eax,%ecx$/;"	l
f01027f2	obj/kern/kernel.asm	/^f01027f2:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f01027f5	obj/kern/kernel.asm	/^f01027f5:	3b 0d 88 4e 22 f0    	cmp    0xf0224e88,%ecx$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	72 20                	jb     f010281d <mem_init+0xb47>$/;"	l
f01027fd	obj/kern/kernel.asm	/^f01027fd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102801	obj/kern/kernel.asm	/^f0102801:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f0102808	obj/kern/kernel.asm	/^f0102808:	f0 $/;"	l
f0102809	obj/kern/kernel.asm	/^f0102809:	c7 44 24 04 c9 03 00 	movl   $0x3c9,0x4(%esp)$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	00 $/;"	l
f0102811	obj/kern/kernel.asm	/^f0102811:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102818	obj/kern/kernel.asm	/^f0102818:	e8 23 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f010281d	obj/kern/kernel.asm	/^f010281d:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102822	obj/kern/kernel.asm	/^f0102822:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102825	obj/kern/kernel.asm	/^f0102825:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010282c	obj/kern/kernel.asm	/^f010282c:	00 $/;"	l
f010282d	obj/kern/kernel.asm	/^f010282d:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102834	obj/kern/kernel.asm	/^f0102834:	00 $/;"	l
f0102835	obj/kern/kernel.asm	/^f0102835:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0102838	obj/kern/kernel.asm	/^f0102838:	e8 15 f1 ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f010283d	obj/kern/kernel.asm	/^f010283d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0102840	obj/kern/kernel.asm	/^f0102840:	83 c2 04             	add    $0x4,%edx$/;"	l
f0102843	obj/kern/kernel.asm	/^f0102843:	39 d0                	cmp    %edx,%eax$/;"	l
f0102845	obj/kern/kernel.asm	/^f0102845:	74 24                	je     f010286b <mem_init+0xb95>$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	c7 44 24 0c b4 7b 10 	movl   $0xf0107bb4,0xc(%esp)$/;"	l
f010284e	obj/kern/kernel.asm	/^f010284e:	f0 $/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	f0 $/;"	l
f0102857	obj/kern/kernel.asm	/^f0102857:	c7 44 24 04 ca 03 00 	movl   $0x3ca,0x4(%esp)$/;"	l
f010285e	obj/kern/kernel.asm	/^f010285e:	00 $/;"	l
f010285f	obj/kern/kernel.asm	/^f010285f:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102866	obj/kern/kernel.asm	/^f0102866:	e8 d5 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010286b	obj/kern/kernel.asm	/^f010286b:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	00 $/;"	l
f0102873	obj/kern/kernel.asm	/^f0102873:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010287a	obj/kern/kernel.asm	/^f010287a:	00 $/;"	l
f010287b	obj/kern/kernel.asm	/^f010287b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010287f	obj/kern/kernel.asm	/^f010287f:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102884	obj/kern/kernel.asm	/^f0102884:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	e8 dc f2 ff ff       	call   f0101b68 <page_insert>$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	85 c0                	test   %eax,%eax$/;"	l
f010288e	obj/kern/kernel.asm	/^f010288e:	74 24                	je     f01028b4 <mem_init+0xbde>$/;"	l
f0102890	obj/kern/kernel.asm	/^f0102890:	c7 44 24 0c f4 7b 10 	movl   $0xf0107bf4,0xc(%esp)$/;"	l
f0102897	obj/kern/kernel.asm	/^f0102897:	f0 $/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010289f	obj/kern/kernel.asm	/^f010289f:	f0 $/;"	l
f01028a0	obj/kern/kernel.asm	/^f01028a0:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f01028a7	obj/kern/kernel.asm	/^f01028a7:	00 $/;"	l
f01028a8	obj/kern/kernel.asm	/^f01028a8:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01028af	obj/kern/kernel.asm	/^f01028af:	e8 8c d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028b4	obj/kern/kernel.asm	/^f01028b4:	8b 0d 8c 4e 22 f0    	mov    0xf0224e8c,%ecx$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f01028bd	obj/kern/kernel.asm	/^f01028bd:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01028c2	obj/kern/kernel.asm	/^f01028c2:	89 c8                	mov    %ecx,%eax$/;"	l
f01028c4	obj/kern/kernel.asm	/^f01028c4:	e8 d3 ea ff ff       	call   f010139c <check_va2pa>$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	89 da                	mov    %ebx,%edx$/;"	l
f01028cb	obj/kern/kernel.asm	/^f01028cb:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f01028d1	obj/kern/kernel.asm	/^f01028d1:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01028d4	obj/kern/kernel.asm	/^f01028d4:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01028d7	obj/kern/kernel.asm	/^f01028d7:	39 d0                	cmp    %edx,%eax$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	74 24                	je     f01028ff <mem_init+0xc29>$/;"	l
f01028db	obj/kern/kernel.asm	/^f01028db:	c7 44 24 0c 84 7b 10 	movl   $0xf0107b84,0xc(%esp)$/;"	l
f01028e2	obj/kern/kernel.asm	/^f01028e2:	f0 $/;"	l
f01028e3	obj/kern/kernel.asm	/^f01028e3:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	f0 $/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	c7 44 24 04 ce 03 00 	movl   $0x3ce,0x4(%esp)$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	00 $/;"	l
f01028f3	obj/kern/kernel.asm	/^f01028f3:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	e8 41 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028ff	obj/kern/kernel.asm	/^f01028ff:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102904	obj/kern/kernel.asm	/^f0102904:	74 24                	je     f010292a <mem_init+0xc54>$/;"	l
f0102906	obj/kern/kernel.asm	/^f0102906:	c7 44 24 0c e4 83 10 	movl   $0xf01083e4,0xc(%esp)$/;"	l
f010290d	obj/kern/kernel.asm	/^f010290d:	f0 $/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	f0 $/;"	l
f0102916	obj/kern/kernel.asm	/^f0102916:	c7 44 24 04 cf 03 00 	movl   $0x3cf,0x4(%esp)$/;"	l
f010291d	obj/kern/kernel.asm	/^f010291d:	00 $/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102925	obj/kern/kernel.asm	/^f0102925:	e8 16 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010292a	obj/kern/kernel.asm	/^f010292a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102931	obj/kern/kernel.asm	/^f0102931:	00 $/;"	l
f0102932	obj/kern/kernel.asm	/^f0102932:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102939	obj/kern/kernel.asm	/^f0102939:	00 $/;"	l
f010293a	obj/kern/kernel.asm	/^f010293a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010293d	obj/kern/kernel.asm	/^f010293d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102940	obj/kern/kernel.asm	/^f0102940:	e8 0d f0 ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0102945	obj/kern/kernel.asm	/^f0102945:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102948	obj/kern/kernel.asm	/^f0102948:	75 24                	jne    f010296e <mem_init+0xc98>$/;"	l
f010294a	obj/kern/kernel.asm	/^f010294a:	c7 44 24 0c 34 7c 10 	movl   $0xf0107c34,0xc(%esp)$/;"	l
f0102951	obj/kern/kernel.asm	/^f0102951:	f0 $/;"	l
f0102952	obj/kern/kernel.asm	/^f0102952:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102959	obj/kern/kernel.asm	/^f0102959:	f0 $/;"	l
f010295a	obj/kern/kernel.asm	/^f010295a:	c7 44 24 04 d1 03 00 	movl   $0x3d1,0x4(%esp)$/;"	l
f0102961	obj/kern/kernel.asm	/^f0102961:	00 $/;"	l
f0102962	obj/kern/kernel.asm	/^f0102962:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102969	obj/kern/kernel.asm	/^f0102969:	e8 d2 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010296e	obj/kern/kernel.asm	/^f010296e:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102973	obj/kern/kernel.asm	/^f0102973:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102976	obj/kern/kernel.asm	/^f0102976:	75 24                	jne    f010299c <mem_init+0xcc6>$/;"	l
f0102978	obj/kern/kernel.asm	/^f0102978:	c7 44 24 0c f5 83 10 	movl   $0xf01083f5,0xc(%esp)$/;"	l
f010297f	obj/kern/kernel.asm	/^f010297f:	f0 $/;"	l
f0102980	obj/kern/kernel.asm	/^f0102980:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102987	obj/kern/kernel.asm	/^f0102987:	f0 $/;"	l
f0102988	obj/kern/kernel.asm	/^f0102988:	c7 44 24 04 d2 03 00 	movl   $0x3d2,0x4(%esp)$/;"	l
f010298f	obj/kern/kernel.asm	/^f010298f:	00 $/;"	l
f0102990	obj/kern/kernel.asm	/^f0102990:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102997	obj/kern/kernel.asm	/^f0102997:	e8 a4 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010299c	obj/kern/kernel.asm	/^f010299c:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01029a3	obj/kern/kernel.asm	/^f01029a3:	00 $/;"	l
f01029a4	obj/kern/kernel.asm	/^f01029a4:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01029ab	obj/kern/kernel.asm	/^f01029ab:	00 $/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01029b0	obj/kern/kernel.asm	/^f01029b0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029b3	obj/kern/kernel.asm	/^f01029b3:	e8 b0 f1 ff ff       	call   f0101b68 <page_insert>$/;"	l
f01029b8	obj/kern/kernel.asm	/^f01029b8:	85 c0                	test   %eax,%eax$/;"	l
f01029ba	obj/kern/kernel.asm	/^f01029ba:	74 24                	je     f01029e0 <mem_init+0xd0a>$/;"	l
f01029bc	obj/kern/kernel.asm	/^f01029bc:	c7 44 24 0c 48 7b 10 	movl   $0xf0107b48,0xc(%esp)$/;"	l
f01029c3	obj/kern/kernel.asm	/^f01029c3:	f0 $/;"	l
f01029c4	obj/kern/kernel.asm	/^f01029c4:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01029cb	obj/kern/kernel.asm	/^f01029cb:	f0 $/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	c7 44 24 04 d5 03 00 	movl   $0x3d5,0x4(%esp)$/;"	l
f01029d3	obj/kern/kernel.asm	/^f01029d3:	00 $/;"	l
f01029d4	obj/kern/kernel.asm	/^f01029d4:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01029db	obj/kern/kernel.asm	/^f01029db:	e8 60 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029e0	obj/kern/kernel.asm	/^f01029e0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01029e7	obj/kern/kernel.asm	/^f01029e7:	00 $/;"	l
f01029e8	obj/kern/kernel.asm	/^f01029e8:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	00 $/;"	l
f01029f0	obj/kern/kernel.asm	/^f01029f0:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f01029f5	obj/kern/kernel.asm	/^f01029f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	e8 55 ef ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f01029fd	obj/kern/kernel.asm	/^f01029fd:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	75 24                	jne    f0102a26 <mem_init+0xd50>$/;"	l
f0102a02	obj/kern/kernel.asm	/^f0102a02:	c7 44 24 0c 68 7c 10 	movl   $0xf0107c68,0xc(%esp)$/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	f0 $/;"	l
f0102a0a	obj/kern/kernel.asm	/^f0102a0a:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102a11	obj/kern/kernel.asm	/^f0102a11:	f0 $/;"	l
f0102a12	obj/kern/kernel.asm	/^f0102a12:	c7 44 24 04 d6 03 00 	movl   $0x3d6,0x4(%esp)$/;"	l
f0102a19	obj/kern/kernel.asm	/^f0102a19:	00 $/;"	l
f0102a1a	obj/kern/kernel.asm	/^f0102a1a:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102a21	obj/kern/kernel.asm	/^f0102a21:	e8 1a d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a26	obj/kern/kernel.asm	/^f0102a26:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102a2d	obj/kern/kernel.asm	/^f0102a2d:	00 $/;"	l
f0102a2e	obj/kern/kernel.asm	/^f0102a2e:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102a35	obj/kern/kernel.asm	/^f0102a35:	00 $/;"	l
f0102a36	obj/kern/kernel.asm	/^f0102a36:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102a3b	obj/kern/kernel.asm	/^f0102a3b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	e8 0f ef ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	74 24                	je     f0102a6c <mem_init+0xd96>$/;"	l
f0102a48	obj/kern/kernel.asm	/^f0102a48:	c7 44 24 0c 9c 7c 10 	movl   $0xf0107c9c,0xc(%esp)$/;"	l
f0102a4f	obj/kern/kernel.asm	/^f0102a4f:	f0 $/;"	l
f0102a50	obj/kern/kernel.asm	/^f0102a50:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102a57	obj/kern/kernel.asm	/^f0102a57:	f0 $/;"	l
f0102a58	obj/kern/kernel.asm	/^f0102a58:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f0102a5f	obj/kern/kernel.asm	/^f0102a5f:	00 $/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102a67	obj/kern/kernel.asm	/^f0102a67:	e8 d4 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a6c	obj/kern/kernel.asm	/^f0102a6c:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102a73	obj/kern/kernel.asm	/^f0102a73:	00 $/;"	l
f0102a74	obj/kern/kernel.asm	/^f0102a74:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f0102a7b	obj/kern/kernel.asm	/^f0102a7b:	00 $/;"	l
f0102a7c	obj/kern/kernel.asm	/^f0102a7c:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102a85	obj/kern/kernel.asm	/^f0102a85:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a88	obj/kern/kernel.asm	/^f0102a88:	e8 db f0 ff ff       	call   f0101b68 <page_insert>$/;"	l
f0102a8d	obj/kern/kernel.asm	/^f0102a8d:	85 c0                	test   %eax,%eax$/;"	l
f0102a8f	obj/kern/kernel.asm	/^f0102a8f:	78 24                	js     f0102ab5 <mem_init+0xddf>$/;"	l
f0102a91	obj/kern/kernel.asm	/^f0102a91:	c7 44 24 0c d4 7c 10 	movl   $0xf0107cd4,0xc(%esp)$/;"	l
f0102a98	obj/kern/kernel.asm	/^f0102a98:	f0 $/;"	l
f0102a99	obj/kern/kernel.asm	/^f0102a99:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	f0 $/;"	l
f0102aa1	obj/kern/kernel.asm	/^f0102aa1:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f0102aa8	obj/kern/kernel.asm	/^f0102aa8:	00 $/;"	l
f0102aa9	obj/kern/kernel.asm	/^f0102aa9:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102ab0	obj/kern/kernel.asm	/^f0102ab0:	e8 8b d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ab5	obj/kern/kernel.asm	/^f0102ab5:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	00 $/;"	l
f0102abd	obj/kern/kernel.asm	/^f0102abd:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102ac4	obj/kern/kernel.asm	/^f0102ac4:	00 $/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0102ac9	obj/kern/kernel.asm	/^f0102ac9:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	e8 92 f0 ff ff       	call   f0101b68 <page_insert>$/;"	l
f0102ad6	obj/kern/kernel.asm	/^f0102ad6:	85 c0                	test   %eax,%eax$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	74 24                	je     f0102afe <mem_init+0xe28>$/;"	l
f0102ada	obj/kern/kernel.asm	/^f0102ada:	c7 44 24 0c 0c 7d 10 	movl   $0xf0107d0c,0xc(%esp)$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	f0 $/;"	l
f0102ae2	obj/kern/kernel.asm	/^f0102ae2:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	f0 $/;"	l
f0102aea	obj/kern/kernel.asm	/^f0102aea:	c7 44 24 04 de 03 00 	movl   $0x3de,0x4(%esp)$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	00 $/;"	l
f0102af2	obj/kern/kernel.asm	/^f0102af2:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102af9	obj/kern/kernel.asm	/^f0102af9:	e8 42 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102afe	obj/kern/kernel.asm	/^f0102afe:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	00 $/;"	l
f0102b06	obj/kern/kernel.asm	/^f0102b06:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102b0d	obj/kern/kernel.asm	/^f0102b0d:	00 $/;"	l
f0102b0e	obj/kern/kernel.asm	/^f0102b0e:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102b16	obj/kern/kernel.asm	/^f0102b16:	e8 37 ee ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0102b1b	obj/kern/kernel.asm	/^f0102b1b:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102b1e	obj/kern/kernel.asm	/^f0102b1e:	74 24                	je     f0102b44 <mem_init+0xe6e>$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	c7 44 24 0c 9c 7c 10 	movl   $0xf0107c9c,0xc(%esp)$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	f0 $/;"	l
f0102b28	obj/kern/kernel.asm	/^f0102b28:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102b2f	obj/kern/kernel.asm	/^f0102b2f:	f0 $/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	c7 44 24 04 df 03 00 	movl   $0x3df,0x4(%esp)$/;"	l
f0102b37	obj/kern/kernel.asm	/^f0102b37:	00 $/;"	l
f0102b38	obj/kern/kernel.asm	/^f0102b38:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	e8 fc d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102b51	obj/kern/kernel.asm	/^f0102b51:	e8 46 e8 ff ff       	call   f010139c <check_va2pa>$/;"	l
f0102b56	obj/kern/kernel.asm	/^f0102b56:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102b59	obj/kern/kernel.asm	/^f0102b59:	89 f8                	mov    %edi,%eax$/;"	l
f0102b5b	obj/kern/kernel.asm	/^f0102b5b:	2b 05 90 4e 22 f0    	sub    0xf0224e90,%eax$/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102b64	obj/kern/kernel.asm	/^f0102b64:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102b67	obj/kern/kernel.asm	/^f0102b67:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0102b6a	obj/kern/kernel.asm	/^f0102b6a:	74 24                	je     f0102b90 <mem_init+0xeba>$/;"	l
f0102b6c	obj/kern/kernel.asm	/^f0102b6c:	c7 44 24 0c 48 7d 10 	movl   $0xf0107d48,0xc(%esp)$/;"	l
f0102b73	obj/kern/kernel.asm	/^f0102b73:	f0 $/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102b7b	obj/kern/kernel.asm	/^f0102b7b:	f0 $/;"	l
f0102b7c	obj/kern/kernel.asm	/^f0102b7c:	c7 44 24 04 e2 03 00 	movl   $0x3e2,0x4(%esp)$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	00 $/;"	l
f0102b84	obj/kern/kernel.asm	/^f0102b84:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102b8b	obj/kern/kernel.asm	/^f0102b8b:	e8 b0 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b90	obj/kern/kernel.asm	/^f0102b90:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102b98	obj/kern/kernel.asm	/^f0102b98:	e8 ff e7 ff ff       	call   f010139c <check_va2pa>$/;"	l
f0102b9d	obj/kern/kernel.asm	/^f0102b9d:	39 45 d0             	cmp    %eax,-0x30(%ebp)$/;"	l
f0102ba0	obj/kern/kernel.asm	/^f0102ba0:	74 24                	je     f0102bc6 <mem_init+0xef0>$/;"	l
f0102ba2	obj/kern/kernel.asm	/^f0102ba2:	c7 44 24 0c 74 7d 10 	movl   $0xf0107d74,0xc(%esp)$/;"	l
f0102ba9	obj/kern/kernel.asm	/^f0102ba9:	f0 $/;"	l
f0102baa	obj/kern/kernel.asm	/^f0102baa:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102bb1	obj/kern/kernel.asm	/^f0102bb1:	f0 $/;"	l
f0102bb2	obj/kern/kernel.asm	/^f0102bb2:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f0102bb9	obj/kern/kernel.asm	/^f0102bb9:	00 $/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102bc1	obj/kern/kernel.asm	/^f0102bc1:	e8 7a d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bc6	obj/kern/kernel.asm	/^f0102bc6:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)$/;"	l
f0102bcb	obj/kern/kernel.asm	/^f0102bcb:	74 24                	je     f0102bf1 <mem_init+0xf1b>$/;"	l
f0102bcd	obj/kern/kernel.asm	/^f0102bcd:	c7 44 24 0c 0b 84 10 	movl   $0xf010840b,0xc(%esp)$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	f0 $/;"	l
f0102bd5	obj/kern/kernel.asm	/^f0102bd5:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102bdc	obj/kern/kernel.asm	/^f0102bdc:	f0 $/;"	l
f0102bdd	obj/kern/kernel.asm	/^f0102bdd:	c7 44 24 04 e6 03 00 	movl   $0x3e6,0x4(%esp)$/;"	l
f0102be4	obj/kern/kernel.asm	/^f0102be4:	00 $/;"	l
f0102be5	obj/kern/kernel.asm	/^f0102be5:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102bec	obj/kern/kernel.asm	/^f0102bec:	e8 4f d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102bf6	obj/kern/kernel.asm	/^f0102bf6:	74 24                	je     f0102c1c <mem_init+0xf46>$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	c7 44 24 0c 1c 84 10 	movl   $0xf010841c,0xc(%esp)$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	f0 $/;"	l
f0102c00	obj/kern/kernel.asm	/^f0102c00:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102c07	obj/kern/kernel.asm	/^f0102c07:	f0 $/;"	l
f0102c08	obj/kern/kernel.asm	/^f0102c08:	c7 44 24 04 e7 03 00 	movl   $0x3e7,0x4(%esp)$/;"	l
f0102c0f	obj/kern/kernel.asm	/^f0102c0f:	00 $/;"	l
f0102c10	obj/kern/kernel.asm	/^f0102c10:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102c17	obj/kern/kernel.asm	/^f0102c17:	e8 24 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c1c	obj/kern/kernel.asm	/^f0102c1c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	e8 71 ec ff ff       	call   f0101899 <page_alloc>$/;"	l
f0102c28	obj/kern/kernel.asm	/^f0102c28:	85 c0                	test   %eax,%eax$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	74 04                	je     f0102c30 <mem_init+0xf5a>$/;"	l
f0102c2c	obj/kern/kernel.asm	/^f0102c2c:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	74 24                	je     f0102c54 <mem_init+0xf7e>$/;"	l
f0102c30	obj/kern/kernel.asm	/^f0102c30:	c7 44 24 0c a4 7d 10 	movl   $0xf0107da4,0xc(%esp)$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	f0 $/;"	l
f0102c38	obj/kern/kernel.asm	/^f0102c38:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	f0 $/;"	l
f0102c40	obj/kern/kernel.asm	/^f0102c40:	c7 44 24 04 ea 03 00 	movl   $0x3ea,0x4(%esp)$/;"	l
f0102c47	obj/kern/kernel.asm	/^f0102c47:	00 $/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	e8 ec d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c54	obj/kern/kernel.asm	/^f0102c54:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	00 $/;"	l
f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102c61	obj/kern/kernel.asm	/^f0102c61:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c64	obj/kern/kernel.asm	/^f0102c64:	e8 c1 ee ff ff       	call   f0101b2a <page_remove>$/;"	l
f0102c69	obj/kern/kernel.asm	/^f0102c69:	8b 15 8c 4e 22 f0    	mov    0xf0224e8c,%edx$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0102c72	obj/kern/kernel.asm	/^f0102c72:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102c77	obj/kern/kernel.asm	/^f0102c77:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	e8 1d e7 ff ff       	call   f010139c <check_va2pa>$/;"	l
f0102c7f	obj/kern/kernel.asm	/^f0102c7f:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	74 24                	je     f0102ca8 <mem_init+0xfd2>$/;"	l
f0102c84	obj/kern/kernel.asm	/^f0102c84:	c7 44 24 0c c8 7d 10 	movl   $0xf0107dc8,0xc(%esp)$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	f0 $/;"	l
f0102c8c	obj/kern/kernel.asm	/^f0102c8c:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93:	f0 $/;"	l
f0102c94	obj/kern/kernel.asm	/^f0102c94:	c7 44 24 04 ef 03 00 	movl   $0x3ef,0x4(%esp)$/;"	l
f0102c9b	obj/kern/kernel.asm	/^f0102c9b:	00 $/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102ca3	obj/kern/kernel.asm	/^f0102ca3:	e8 98 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102cad	obj/kern/kernel.asm	/^f0102cad:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102cb0	obj/kern/kernel.asm	/^f0102cb0:	e8 e7 e6 ff ff       	call   f010139c <check_va2pa>$/;"	l
f0102cb5	obj/kern/kernel.asm	/^f0102cb5:	89 fa                	mov    %edi,%edx$/;"	l
f0102cb7	obj/kern/kernel.asm	/^f0102cb7:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f0102cbd	obj/kern/kernel.asm	/^f0102cbd:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102cc3	obj/kern/kernel.asm	/^f0102cc3:	39 d0                	cmp    %edx,%eax$/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	74 24                	je     f0102ceb <mem_init+0x1015>$/;"	l
f0102cc7	obj/kern/kernel.asm	/^f0102cc7:	c7 44 24 0c 74 7d 10 	movl   $0xf0107d74,0xc(%esp)$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	f0 $/;"	l
f0102ccf	obj/kern/kernel.asm	/^f0102ccf:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102cd6	obj/kern/kernel.asm	/^f0102cd6:	f0 $/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	c7 44 24 04 f0 03 00 	movl   $0x3f0,0x4(%esp)$/;"	l
f0102cde	obj/kern/kernel.asm	/^f0102cde:	00 $/;"	l
f0102cdf	obj/kern/kernel.asm	/^f0102cdf:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102ce6	obj/kern/kernel.asm	/^f0102ce6:	e8 55 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ceb	obj/kern/kernel.asm	/^f0102ceb:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0102cf0	obj/kern/kernel.asm	/^f0102cf0:	74 24                	je     f0102d16 <mem_init+0x1040>$/;"	l
f0102cf2	obj/kern/kernel.asm	/^f0102cf2:	c7 44 24 0c c2 83 10 	movl   $0xf01083c2,0xc(%esp)$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	f0 $/;"	l
f0102cfa	obj/kern/kernel.asm	/^f0102cfa:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102d01	obj/kern/kernel.asm	/^f0102d01:	f0 $/;"	l
f0102d02	obj/kern/kernel.asm	/^f0102d02:	c7 44 24 04 f1 03 00 	movl   $0x3f1,0x4(%esp)$/;"	l
f0102d09	obj/kern/kernel.asm	/^f0102d09:	00 $/;"	l
f0102d0a	obj/kern/kernel.asm	/^f0102d0a:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102d11	obj/kern/kernel.asm	/^f0102d11:	e8 2a d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	74 24                	je     f0102d41 <mem_init+0x106b>$/;"	l
f0102d1d	obj/kern/kernel.asm	/^f0102d1d:	c7 44 24 0c 1c 84 10 	movl   $0xf010841c,0xc(%esp)$/;"	l
f0102d24	obj/kern/kernel.asm	/^f0102d24:	f0 $/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102d2c	obj/kern/kernel.asm	/^f0102d2c:	f0 $/;"	l
f0102d2d	obj/kern/kernel.asm	/^f0102d2d:	c7 44 24 04 f2 03 00 	movl   $0x3f2,0x4(%esp)$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	00 $/;"	l
f0102d35	obj/kern/kernel.asm	/^f0102d35:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102d3c	obj/kern/kernel.asm	/^f0102d3c:	e8 ff d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102d48	obj/kern/kernel.asm	/^f0102d48:	00 $/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102d4c	obj/kern/kernel.asm	/^f0102d4c:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	e8 d6 ed ff ff       	call   f0101b2a <page_remove>$/;"	l
f0102d54	obj/kern/kernel.asm	/^f0102d54:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102d59	obj/kern/kernel.asm	/^f0102d59:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102d5c	obj/kern/kernel.asm	/^f0102d5c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102d61	obj/kern/kernel.asm	/^f0102d61:	e8 36 e6 ff ff       	call   f010139c <check_va2pa>$/;"	l
f0102d66	obj/kern/kernel.asm	/^f0102d66:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102d69	obj/kern/kernel.asm	/^f0102d69:	74 24                	je     f0102d8f <mem_init+0x10b9>$/;"	l
f0102d6b	obj/kern/kernel.asm	/^f0102d6b:	c7 44 24 0c c8 7d 10 	movl   $0xf0107dc8,0xc(%esp)$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	f0 $/;"	l
f0102d73	obj/kern/kernel.asm	/^f0102d73:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102d7a	obj/kern/kernel.asm	/^f0102d7a:	f0 $/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	c7 44 24 04 f6 03 00 	movl   $0x3f6,0x4(%esp)$/;"	l
f0102d82	obj/kern/kernel.asm	/^f0102d82:	00 $/;"	l
f0102d83	obj/kern/kernel.asm	/^f0102d83:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	e8 b1 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102d94	obj/kern/kernel.asm	/^f0102d94:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102d97	obj/kern/kernel.asm	/^f0102d97:	e8 00 e6 ff ff       	call   f010139c <check_va2pa>$/;"	l
f0102d9c	obj/kern/kernel.asm	/^f0102d9c:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	74 24                	je     f0102dc5 <mem_init+0x10ef>$/;"	l
f0102da1	obj/kern/kernel.asm	/^f0102da1:	c7 44 24 0c ec 7d 10 	movl   $0xf0107dec,0xc(%esp)$/;"	l
f0102da8	obj/kern/kernel.asm	/^f0102da8:	f0 $/;"	l
f0102da9	obj/kern/kernel.asm	/^f0102da9:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	f0 $/;"	l
f0102db1	obj/kern/kernel.asm	/^f0102db1:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f0102db8	obj/kern/kernel.asm	/^f0102db8:	00 $/;"	l
f0102db9	obj/kern/kernel.asm	/^f0102db9:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102dc0	obj/kern/kernel.asm	/^f0102dc0:	e8 7b d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102dc5	obj/kern/kernel.asm	/^f0102dc5:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	74 24                	je     f0102df0 <mem_init+0x111a>$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	c7 44 24 0c 2d 84 10 	movl   $0xf010842d,0xc(%esp)$/;"	l
f0102dd3	obj/kern/kernel.asm	/^f0102dd3:	f0 $/;"	l
f0102dd4	obj/kern/kernel.asm	/^f0102dd4:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102ddb	obj/kern/kernel.asm	/^f0102ddb:	f0 $/;"	l
f0102ddc	obj/kern/kernel.asm	/^f0102ddc:	c7 44 24 04 f8 03 00 	movl   $0x3f8,0x4(%esp)$/;"	l
f0102de3	obj/kern/kernel.asm	/^f0102de3:	00 $/;"	l
f0102de4	obj/kern/kernel.asm	/^f0102de4:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	e8 50 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102df0	obj/kern/kernel.asm	/^f0102df0:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	74 24                	je     f0102e1b <mem_init+0x1145>$/;"	l
f0102df7	obj/kern/kernel.asm	/^f0102df7:	c7 44 24 0c 1c 84 10 	movl   $0xf010841c,0xc(%esp)$/;"	l
f0102dfe	obj/kern/kernel.asm	/^f0102dfe:	f0 $/;"	l
f0102dff	obj/kern/kernel.asm	/^f0102dff:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102e06	obj/kern/kernel.asm	/^f0102e06:	f0 $/;"	l
f0102e07	obj/kern/kernel.asm	/^f0102e07:	c7 44 24 04 f9 03 00 	movl   $0x3f9,0x4(%esp)$/;"	l
f0102e0e	obj/kern/kernel.asm	/^f0102e0e:	00 $/;"	l
f0102e0f	obj/kern/kernel.asm	/^f0102e0f:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	e8 25 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e1b	obj/kern/kernel.asm	/^f0102e1b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e22	obj/kern/kernel.asm	/^f0102e22:	e8 72 ea ff ff       	call   f0101899 <page_alloc>$/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27:	85 c0                	test   %eax,%eax$/;"	l
f0102e29	obj/kern/kernel.asm	/^f0102e29:	74 04                	je     f0102e2f <mem_init+0x1159>$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	39 c7                	cmp    %eax,%edi$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	74 24                	je     f0102e53 <mem_init+0x117d>$/;"	l
f0102e2f	obj/kern/kernel.asm	/^f0102e2f:	c7 44 24 0c 14 7e 10 	movl   $0xf0107e14,0xc(%esp)$/;"	l
f0102e36	obj/kern/kernel.asm	/^f0102e36:	f0 $/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	f0 $/;"	l
f0102e3f	obj/kern/kernel.asm	/^f0102e3f:	c7 44 24 04 fc 03 00 	movl   $0x3fc,0x4(%esp)$/;"	l
f0102e46	obj/kern/kernel.asm	/^f0102e46:	00 $/;"	l
f0102e47	obj/kern/kernel.asm	/^f0102e47:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102e4e	obj/kern/kernel.asm	/^f0102e4e:	e8 ed d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e53	obj/kern/kernel.asm	/^f0102e53:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	e8 3a ea ff ff       	call   f0101899 <page_alloc>$/;"	l
f0102e5f	obj/kern/kernel.asm	/^f0102e5f:	85 c0                	test   %eax,%eax$/;"	l
f0102e61	obj/kern/kernel.asm	/^f0102e61:	74 24                	je     f0102e87 <mem_init+0x11b1>$/;"	l
f0102e63	obj/kern/kernel.asm	/^f0102e63:	c7 44 24 0c 70 83 10 	movl   $0xf0108370,0xc(%esp)$/;"	l
f0102e6a	obj/kern/kernel.asm	/^f0102e6a:	f0 $/;"	l
f0102e6b	obj/kern/kernel.asm	/^f0102e6b:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102e72	obj/kern/kernel.asm	/^f0102e72:	f0 $/;"	l
f0102e73	obj/kern/kernel.asm	/^f0102e73:	c7 44 24 04 ff 03 00 	movl   $0x3ff,0x4(%esp)$/;"	l
f0102e7a	obj/kern/kernel.asm	/^f0102e7a:	00 $/;"	l
f0102e7b	obj/kern/kernel.asm	/^f0102e7b:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	e8 b9 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102e8e	obj/kern/kernel.asm	/^f0102e8e:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102e94	obj/kern/kernel.asm	/^f0102e94:	89 f2                	mov    %esi,%edx$/;"	l
f0102e96	obj/kern/kernel.asm	/^f0102e96:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f0102e9c	obj/kern/kernel.asm	/^f0102e9c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102ea4	obj/kern/kernel.asm	/^f0102ea4:	74 24                	je     f0102eca <mem_init+0x11f4>$/;"	l
f0102ea6	obj/kern/kernel.asm	/^f0102ea6:	c7 44 24 0c f0 7a 10 	movl   $0xf0107af0,0xc(%esp)$/;"	l
f0102ead	obj/kern/kernel.asm	/^f0102ead:	f0 $/;"	l
f0102eae	obj/kern/kernel.asm	/^f0102eae:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102eb5	obj/kern/kernel.asm	/^f0102eb5:	f0 $/;"	l
f0102eb6	obj/kern/kernel.asm	/^f0102eb6:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)$/;"	l
f0102ebd	obj/kern/kernel.asm	/^f0102ebd:	00 $/;"	l
f0102ebe	obj/kern/kernel.asm	/^f0102ebe:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102ec5	obj/kern/kernel.asm	/^f0102ec5:	e8 76 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102eca	obj/kern/kernel.asm	/^f0102eca:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102ed0	obj/kern/kernel.asm	/^f0102ed0:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102ed5	obj/kern/kernel.asm	/^f0102ed5:	74 24                	je     f0102efb <mem_init+0x1225>$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	c7 44 24 0c d3 83 10 	movl   $0xf01083d3,0xc(%esp)$/;"	l
f0102ede	obj/kern/kernel.asm	/^f0102ede:	f0 $/;"	l
f0102edf	obj/kern/kernel.asm	/^f0102edf:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	f0 $/;"	l
f0102ee7	obj/kern/kernel.asm	/^f0102ee7:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)$/;"	l
f0102eee	obj/kern/kernel.asm	/^f0102eee:	00 $/;"	l
f0102eef	obj/kern/kernel.asm	/^f0102eef:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102ef6	obj/kern/kernel.asm	/^f0102ef6:	e8 45 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102efb	obj/kern/kernel.asm	/^f0102efb:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102f04	obj/kern/kernel.asm	/^f0102f04:	e8 11 ea ff ff       	call   f010191a <page_free>$/;"	l
f0102f09	obj/kern/kernel.asm	/^f0102f09:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10:	00 $/;"	l
f0102f11	obj/kern/kernel.asm	/^f0102f11:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102f18	obj/kern/kernel.asm	/^f0102f18:	00 $/;"	l
f0102f19	obj/kern/kernel.asm	/^f0102f19:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	e8 2c ea ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0102f26	obj/kern/kernel.asm	/^f0102f26:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	8b 0d 8c 4e 22 f0    	mov    0xf0224e8c,%ecx$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	8b 51 04             	mov    0x4(%ecx),%edx$/;"	l
f0102f32	obj/kern/kernel.asm	/^f0102f32:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0102f38	obj/kern/kernel.asm	/^f0102f38:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0102f3b	obj/kern/kernel.asm	/^f0102f3b:	8b 15 88 4e 22 f0    	mov    0xf0224e88,%edx$/;"	l
f0102f41	obj/kern/kernel.asm	/^f0102f41:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102f4a	obj/kern/kernel.asm	/^f0102f4a:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0102f50	obj/kern/kernel.asm	/^f0102f50:	39 55 d0             	cmp    %edx,-0x30(%ebp)$/;"	l
f0102f53	obj/kern/kernel.asm	/^f0102f53:	72 23                	jb     f0102f78 <mem_init+0x12a2>$/;"	l
f0102f55	obj/kern/kernel.asm	/^f0102f55:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0102f58	obj/kern/kernel.asm	/^f0102f58:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0102f5c	obj/kern/kernel.asm	/^f0102f5c:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	f0 $/;"	l
f0102f64	obj/kern/kernel.asm	/^f0102f64:	c7 44 24 04 0b 04 00 	movl   $0x40b,0x4(%esp)$/;"	l
f0102f6b	obj/kern/kernel.asm	/^f0102f6b:	00 $/;"	l
f0102f6c	obj/kern/kernel.asm	/^f0102f6c:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102f73	obj/kern/kernel.asm	/^f0102f73:	e8 c8 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f78	obj/kern/kernel.asm	/^f0102f78:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102f7b	obj/kern/kernel.asm	/^f0102f7b:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edx$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	39 d0                	cmp    %edx,%eax$/;"	l
f0102f83	obj/kern/kernel.asm	/^f0102f83:	74 24                	je     f0102fa9 <mem_init+0x12d3>$/;"	l
f0102f85	obj/kern/kernel.asm	/^f0102f85:	c7 44 24 0c 3e 84 10 	movl   $0xf010843e,0xc(%esp)$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	f0 $/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0102f94	obj/kern/kernel.asm	/^f0102f94:	f0 $/;"	l
f0102f95	obj/kern/kernel.asm	/^f0102f95:	c7 44 24 04 0c 04 00 	movl   $0x40c,0x4(%esp)$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	00 $/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	e8 97 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	89 f0                	mov    %esi,%eax$/;"	l
f0102fb8	obj/kern/kernel.asm	/^f0102fb8:	2b 05 90 4e 22 f0    	sub    0xf0224e90,%eax$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102fc1	obj/kern/kernel.asm	/^f0102fc1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102fc4	obj/kern/kernel.asm	/^f0102fc4:	89 c1                	mov    %eax,%ecx$/;"	l
f0102fc6	obj/kern/kernel.asm	/^f0102fc6:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	77 20                	ja     f0102fee <mem_init+0x1318>$/;"	l
f0102fce	obj/kern/kernel.asm	/^f0102fce:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	f0 $/;"	l
f0102fda	obj/kern/kernel.asm	/^f0102fda:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	00 $/;"	l
f0102fe2	obj/kern/kernel.asm	/^f0102fe2:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f0102fe9	obj/kern/kernel.asm	/^f0102fe9:	e8 52 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fee	obj/kern/kernel.asm	/^f0102fee:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102ff5	obj/kern/kernel.asm	/^f0102ff5:	00 $/;"	l
f0102ff6	obj/kern/kernel.asm	/^f0102ff6:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102ffd	obj/kern/kernel.asm	/^f0102ffd:	00 $/;"	l
f0102ffe	obj/kern/kernel.asm	/^f0102ffe:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103003	obj/kern/kernel.asm	/^f0103003:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	e8 86 31 00 00       	call   f0106191 <memset>$/;"	l
f010300b	obj/kern/kernel.asm	/^f010300b:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010300e	obj/kern/kernel.asm	/^f010300e:	e8 07 e9 ff ff       	call   f010191a <page_free>$/;"	l
f0103013	obj/kern/kernel.asm	/^f0103013:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010301a	obj/kern/kernel.asm	/^f010301a:	00 $/;"	l
f010301b	obj/kern/kernel.asm	/^f010301b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	00 $/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0103028	obj/kern/kernel.asm	/^f0103028:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010302b	obj/kern/kernel.asm	/^f010302b:	e8 22 e9 ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0103030	obj/kern/kernel.asm	/^f0103030:	89 f2                	mov    %esi,%edx$/;"	l
f0103032	obj/kern/kernel.asm	/^f0103032:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f0103038	obj/kern/kernel.asm	/^f0103038:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010303e	obj/kern/kernel.asm	/^f010303e:	89 d0                	mov    %edx,%eax$/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103043	obj/kern/kernel.asm	/^f0103043:	3b 05 88 4e 22 f0    	cmp    0xf0224e88,%eax$/;"	l
f0103049	obj/kern/kernel.asm	/^f0103049:	72 20                	jb     f010306b <mem_init+0x1395>$/;"	l
f010304b	obj/kern/kernel.asm	/^f010304b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010304f	obj/kern/kernel.asm	/^f010304f:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	f0 $/;"	l
f0103057	obj/kern/kernel.asm	/^f0103057:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	00 $/;"	l
f010305f	obj/kern/kernel.asm	/^f010305f:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f0103066	obj/kern/kernel.asm	/^f0103066:	e8 d5 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010306b	obj/kern/kernel.asm	/^f010306b:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0103071	obj/kern/kernel.asm	/^f0103071:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103074	obj/kern/kernel.asm	/^f0103074:	f6 82 00 00 00 f0 01 	testb  $0x1,-0x10000000(%edx)$/;"	l
f010307b	obj/kern/kernel.asm	/^f010307b:	75 11                	jne    f010308e <mem_init+0x13b8>$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	8d 82 04 00 00 f0    	lea    -0xffffffc(%edx),%eax$/;"	l
f0103083	obj/kern/kernel.asm	/^f0103083:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0103089	obj/kern/kernel.asm	/^f0103089:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f010308c	obj/kern/kernel.asm	/^f010308c:	74 24                	je     f01030b2 <mem_init+0x13dc>$/;"	l
f010308e	obj/kern/kernel.asm	/^f010308e:	c7 44 24 0c 56 84 10 	movl   $0xf0108456,0xc(%esp)$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	f0 $/;"	l
f0103096	obj/kern/kernel.asm	/^f0103096:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010309d	obj/kern/kernel.asm	/^f010309d:	f0 $/;"	l
f010309e	obj/kern/kernel.asm	/^f010309e:	c7 44 24 04 16 04 00 	movl   $0x416,0x4(%esp)$/;"	l
f01030a5	obj/kern/kernel.asm	/^f01030a5:	00 $/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01030ad	obj/kern/kernel.asm	/^f01030ad:	e8 8e cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030b2	obj/kern/kernel.asm	/^f01030b2:	83 c0 04             	add    $0x4,%eax$/;"	l
f01030b5	obj/kern/kernel.asm	/^f01030b5:	39 d0                	cmp    %edx,%eax$/;"	l
f01030b7	obj/kern/kernel.asm	/^f01030b7:	75 d0                	jne    f0103089 <mem_init+0x13b3>$/;"	l
f01030b9	obj/kern/kernel.asm	/^f01030b9:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f01030be	obj/kern/kernel.asm	/^f01030be:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01030c4	obj/kern/kernel.asm	/^f01030c4:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f01030ca	obj/kern/kernel.asm	/^f01030ca:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f01030cd	obj/kern/kernel.asm	/^f01030cd:	89 0d 40 42 22 f0    	mov    %ecx,0xf0224240$/;"	l
f01030d3	obj/kern/kernel.asm	/^f01030d3:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	e8 3f e8 ff ff       	call   f010191a <page_free>$/;"	l
f01030db	obj/kern/kernel.asm	/^f01030db:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01030de	obj/kern/kernel.asm	/^f01030de:	e8 37 e8 ff ff       	call   f010191a <page_free>$/;"	l
f01030e3	obj/kern/kernel.asm	/^f01030e3:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01030e6	obj/kern/kernel.asm	/^f01030e6:	e8 2f e8 ff ff       	call   f010191a <page_free>$/;"	l
f01030eb	obj/kern/kernel.asm	/^f01030eb:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	00 $/;"	l
f01030f3	obj/kern/kernel.asm	/^f01030f3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	e8 60 eb ff ff       	call   f0101c5f <mmio_map_region>$/;"	l
f01030ff	obj/kern/kernel.asm	/^f01030ff:	89 c3                	mov    %eax,%ebx$/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	00 $/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	e8 4a eb ff ff       	call   f0101c5f <mmio_map_region>$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	89 c6                	mov    %eax,%esi$/;"	l
f0103117	obj/kern/kernel.asm	/^f0103117:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103123	obj/kern/kernel.asm	/^f0103123:	76 07                	jbe    f010312c <mem_init+0x1456>$/;"	l
f0103125	obj/kern/kernel.asm	/^f0103125:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f010312a	obj/kern/kernel.asm	/^f010312a:	76 24                	jbe    f0103150 <mem_init+0x147a>$/;"	l
f010312c	obj/kern/kernel.asm	/^f010312c:	c7 44 24 0c 38 7e 10 	movl   $0xf0107e38,0xc(%esp)$/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	f0 $/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010313b	obj/kern/kernel.asm	/^f010313b:	f0 $/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
f0103143	obj/kern/kernel.asm	/^f0103143:	00 $/;"	l
f0103144	obj/kern/kernel.asm	/^f0103144:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	e8 f0 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103150	obj/kern/kernel.asm	/^f0103150:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0103156	obj/kern/kernel.asm	/^f0103156:	76 0e                	jbe    f0103166 <mem_init+0x1490>$/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0103164	obj/kern/kernel.asm	/^f0103164:	76 24                	jbe    f010318a <mem_init+0x14b4>$/;"	l
f0103166	obj/kern/kernel.asm	/^f0103166:	c7 44 24 0c 60 7e 10 	movl   $0xf0107e60,0xc(%esp)$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	f0 $/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	f0 $/;"	l
f0103176	obj/kern/kernel.asm	/^f0103176:	c7 44 24 04 27 04 00 	movl   $0x427,0x4(%esp)$/;"	l
f010317d	obj/kern/kernel.asm	/^f010317d:	00 $/;"	l
f010317e	obj/kern/kernel.asm	/^f010317e:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103185	obj/kern/kernel.asm	/^f0103185:	e8 b6 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010318a	obj/kern/kernel.asm	/^f010318a:	89 da                	mov    %ebx,%edx$/;"	l
f010318c	obj/kern/kernel.asm	/^f010318c:	09 f2                	or     %esi,%edx$/;"	l
f010318e	obj/kern/kernel.asm	/^f010318e:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0103194	obj/kern/kernel.asm	/^f0103194:	74 24                	je     f01031ba <mem_init+0x14e4>$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	c7 44 24 0c 88 7e 10 	movl   $0xf0107e88,0xc(%esp)$/;"	l
f010319d	obj/kern/kernel.asm	/^f010319d:	f0 $/;"	l
f010319e	obj/kern/kernel.asm	/^f010319e:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01031a5	obj/kern/kernel.asm	/^f01031a5:	f0 $/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	c7 44 24 04 29 04 00 	movl   $0x429,0x4(%esp)$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	00 $/;"	l
f01031ae	obj/kern/kernel.asm	/^f01031ae:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01031b5	obj/kern/kernel.asm	/^f01031b5:	e8 86 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031ba	obj/kern/kernel.asm	/^f01031ba:	39 c6                	cmp    %eax,%esi$/;"	l
f01031bc	obj/kern/kernel.asm	/^f01031bc:	73 24                	jae    f01031e2 <mem_init+0x150c>$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	c7 44 24 0c 6d 84 10 	movl   $0xf010846d,0xc(%esp)$/;"	l
f01031c5	obj/kern/kernel.asm	/^f01031c5:	f0 $/;"	l
f01031c6	obj/kern/kernel.asm	/^f01031c6:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01031cd	obj/kern/kernel.asm	/^f01031cd:	f0 $/;"	l
f01031ce	obj/kern/kernel.asm	/^f01031ce:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	00 $/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01031dd	obj/kern/kernel.asm	/^f01031dd:	e8 5e ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031e2	obj/kern/kernel.asm	/^f01031e2:	8b 3d 8c 4e 22 f0    	mov    0xf0224e8c,%edi$/;"	l
f01031e8	obj/kern/kernel.asm	/^f01031e8:	89 da                	mov    %ebx,%edx$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	89 f8                	mov    %edi,%eax$/;"	l
f01031ec	obj/kern/kernel.asm	/^f01031ec:	e8 ab e1 ff ff       	call   f010139c <check_va2pa>$/;"	l
f01031f1	obj/kern/kernel.asm	/^f01031f1:	85 c0                	test   %eax,%eax$/;"	l
f01031f3	obj/kern/kernel.asm	/^f01031f3:	74 24                	je     f0103219 <mem_init+0x1543>$/;"	l
f01031f5	obj/kern/kernel.asm	/^f01031f5:	c7 44 24 0c b0 7e 10 	movl   $0xf0107eb0,0xc(%esp)$/;"	l
f01031fc	obj/kern/kernel.asm	/^f01031fc:	f0 $/;"	l
f01031fd	obj/kern/kernel.asm	/^f01031fd:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103204	obj/kern/kernel.asm	/^f0103204:	f0 $/;"	l
f0103205	obj/kern/kernel.asm	/^f0103205:	c7 44 24 04 2d 04 00 	movl   $0x42d,0x4(%esp)$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	00 $/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103214	obj/kern/kernel.asm	/^f0103214:	e8 27 ce ff ff       	call   f0100040 <_panic>$/;"	l
f0103219	obj/kern/kernel.asm	/^f0103219:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f010321f	obj/kern/kernel.asm	/^f010321f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	89 c2                	mov    %eax,%edx$/;"	l
f0103224	obj/kern/kernel.asm	/^f0103224:	89 f8                	mov    %edi,%eax$/;"	l
f0103226	obj/kern/kernel.asm	/^f0103226:	e8 71 e1 ff ff       	call   f010139c <check_va2pa>$/;"	l
f010322b	obj/kern/kernel.asm	/^f010322b:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0103230	obj/kern/kernel.asm	/^f0103230:	74 24                	je     f0103256 <mem_init+0x1580>$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	c7 44 24 0c d4 7e 10 	movl   $0xf0107ed4,0xc(%esp)$/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	f0 $/;"	l
f010323a	obj/kern/kernel.asm	/^f010323a:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103241	obj/kern/kernel.asm	/^f0103241:	f0 $/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	c7 44 24 04 2e 04 00 	movl   $0x42e,0x4(%esp)$/;"	l
f0103249	obj/kern/kernel.asm	/^f0103249:	00 $/;"	l
f010324a	obj/kern/kernel.asm	/^f010324a:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103251	obj/kern/kernel.asm	/^f0103251:	e8 ea cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	89 f2                	mov    %esi,%edx$/;"	l
f0103258	obj/kern/kernel.asm	/^f0103258:	89 f8                	mov    %edi,%eax$/;"	l
f010325a	obj/kern/kernel.asm	/^f010325a:	e8 3d e1 ff ff       	call   f010139c <check_va2pa>$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	85 c0                	test   %eax,%eax$/;"	l
f0103261	obj/kern/kernel.asm	/^f0103261:	74 24                	je     f0103287 <mem_init+0x15b1>$/;"	l
f0103263	obj/kern/kernel.asm	/^f0103263:	c7 44 24 0c 04 7f 10 	movl   $0xf0107f04,0xc(%esp)$/;"	l
f010326a	obj/kern/kernel.asm	/^f010326a:	f0 $/;"	l
f010326b	obj/kern/kernel.asm	/^f010326b:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103272	obj/kern/kernel.asm	/^f0103272:	f0 $/;"	l
f0103273	obj/kern/kernel.asm	/^f0103273:	c7 44 24 04 2f 04 00 	movl   $0x42f,0x4(%esp)$/;"	l
f010327a	obj/kern/kernel.asm	/^f010327a:	00 $/;"	l
f010327b	obj/kern/kernel.asm	/^f010327b:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	e8 b9 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f010328d	obj/kern/kernel.asm	/^f010328d:	89 f8                	mov    %edi,%eax$/;"	l
f010328f	obj/kern/kernel.asm	/^f010328f:	e8 08 e1 ff ff       	call   f010139c <check_va2pa>$/;"	l
f0103294	obj/kern/kernel.asm	/^f0103294:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0103297	obj/kern/kernel.asm	/^f0103297:	74 24                	je     f01032bd <mem_init+0x15e7>$/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	c7 44 24 0c 28 7f 10 	movl   $0xf0107f28,0xc(%esp)$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	f0 $/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01032a8	obj/kern/kernel.asm	/^f01032a8:	f0 $/;"	l
f01032a9	obj/kern/kernel.asm	/^f01032a9:	c7 44 24 04 30 04 00 	movl   $0x430,0x4(%esp)$/;"	l
f01032b0	obj/kern/kernel.asm	/^f01032b0:	00 $/;"	l
f01032b1	obj/kern/kernel.asm	/^f01032b1:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01032b8	obj/kern/kernel.asm	/^f01032b8:	e8 83 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032bd	obj/kern/kernel.asm	/^f01032bd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f01032c4	obj/kern/kernel.asm	/^f01032c4:	00 $/;"	l
f01032c5	obj/kern/kernel.asm	/^f01032c5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01032c9	obj/kern/kernel.asm	/^f01032c9:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01032cc	obj/kern/kernel.asm	/^f01032cc:	e8 81 e6 ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f01032d1	obj/kern/kernel.asm	/^f01032d1:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f01032d4	obj/kern/kernel.asm	/^f01032d4:	75 24                	jne    f01032fa <mem_init+0x1624>$/;"	l
f01032d6	obj/kern/kernel.asm	/^f01032d6:	c7 44 24 0c 54 7f 10 	movl   $0xf0107f54,0xc(%esp)$/;"	l
f01032dd	obj/kern/kernel.asm	/^f01032dd:	f0 $/;"	l
f01032de	obj/kern/kernel.asm	/^f01032de:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	f0 $/;"	l
f01032e6	obj/kern/kernel.asm	/^f01032e6:	c7 44 24 04 32 04 00 	movl   $0x432,0x4(%esp)$/;"	l
f01032ed	obj/kern/kernel.asm	/^f01032ed:	00 $/;"	l
f01032ee	obj/kern/kernel.asm	/^f01032ee:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01032f5	obj/kern/kernel.asm	/^f01032f5:	e8 46 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032fa	obj/kern/kernel.asm	/^f01032fa:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103301	obj/kern/kernel.asm	/^f0103301:	00 $/;"	l
f0103302	obj/kern/kernel.asm	/^f0103302:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103306	obj/kern/kernel.asm	/^f0103306:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010330e	obj/kern/kernel.asm	/^f010330e:	e8 3f e6 ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0103313	obj/kern/kernel.asm	/^f0103313:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0103316	obj/kern/kernel.asm	/^f0103316:	74 24                	je     f010333c <mem_init+0x1666>$/;"	l
f0103318	obj/kern/kernel.asm	/^f0103318:	c7 44 24 0c 98 7f 10 	movl   $0xf0107f98,0xc(%esp)$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	f0 $/;"	l
f0103320	obj/kern/kernel.asm	/^f0103320:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	f0 $/;"	l
f0103328	obj/kern/kernel.asm	/^f0103328:	c7 44 24 04 33 04 00 	movl   $0x433,0x4(%esp)$/;"	l
f010332f	obj/kern/kernel.asm	/^f010332f:	00 $/;"	l
f0103330	obj/kern/kernel.asm	/^f0103330:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	e8 04 cd ff ff       	call   f0100040 <_panic>$/;"	l
f010333c	obj/kern/kernel.asm	/^f010333c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103343	obj/kern/kernel.asm	/^f0103343:	00 $/;"	l
f0103344	obj/kern/kernel.asm	/^f0103344:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f010334d	obj/kern/kernel.asm	/^f010334d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103350	obj/kern/kernel.asm	/^f0103350:	e8 fd e5 ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0103355	obj/kern/kernel.asm	/^f0103355:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103362	obj/kern/kernel.asm	/^f0103362:	00 $/;"	l
f0103363	obj/kern/kernel.asm	/^f0103363:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f010336f	obj/kern/kernel.asm	/^f010336f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	e8 db e5 ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0103377	obj/kern/kernel.asm	/^f0103377:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010337d	obj/kern/kernel.asm	/^f010337d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103384	obj/kern/kernel.asm	/^f0103384:	00 $/;"	l
f0103385	obj/kern/kernel.asm	/^f0103385:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0103389	obj/kern/kernel.asm	/^f0103389:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f010338e	obj/kern/kernel.asm	/^f010338e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	e8 bc e5 ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0103396	obj/kern/kernel.asm	/^f0103396:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010339c	obj/kern/kernel.asm	/^f010339c:	c7 04 24 7f 84 10 f0 	movl   $0xf010847f,(%esp)$/;"	l
f01033a3	obj/kern/kernel.asm	/^f01033a3:	e8 0a 14 00 00       	call   f01047b2 <cprintf>$/;"	l
f01033a8	obj/kern/kernel.asm	/^f01033a8:	a1 90 4e 22 f0       	mov    0xf0224e90,%eax$/;"	l
f01033ad	obj/kern/kernel.asm	/^f01033ad:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01033b2	obj/kern/kernel.asm	/^f01033b2:	77 20                	ja     f01033d4 <mem_init+0x16fe>$/;"	l
f01033b4	obj/kern/kernel.asm	/^f01033b4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01033b8	obj/kern/kernel.asm	/^f01033b8:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f01033bf	obj/kern/kernel.asm	/^f01033bf:	f0 $/;"	l
f01033c0	obj/kern/kernel.asm	/^f01033c0:	c7 44 24 04 ba 00 00 	movl   $0xba,0x4(%esp)$/;"	l
f01033c7	obj/kern/kernel.asm	/^f01033c7:	00 $/;"	l
f01033c8	obj/kern/kernel.asm	/^f01033c8:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01033cf	obj/kern/kernel.asm	/^f01033cf:	e8 6c cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	8b 15 88 4e 22 f0    	mov    0xf0224e88,%edx$/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	8d 0c d5 ff 0f 00 00 	lea    0xfff(,%edx,8),%ecx$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01033e7	obj/kern/kernel.asm	/^f01033e7:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	00 $/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01033f7	obj/kern/kernel.asm	/^f01033f7:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0103401	obj/kern/kernel.asm	/^f0103401:	e8 3b e6 ff ff       	call   f0101a41 <boot_map_region>$/;"	l
f0103406	obj/kern/kernel.asm	/^f0103406:	a1 48 42 22 f0       	mov    0xf0224248,%eax$/;"	l
f010340b	obj/kern/kernel.asm	/^f010340b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103410	obj/kern/kernel.asm	/^f0103410:	77 20                	ja     f0103432 <mem_init+0x175c>$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f010341d	obj/kern/kernel.asm	/^f010341d:	f0 $/;"	l
f010341e	obj/kern/kernel.asm	/^f010341e:	c7 44 24 04 c3 00 00 	movl   $0xc3,0x4(%esp)$/;"	l
f0103425	obj/kern/kernel.asm	/^f0103425:	00 $/;"	l
f0103426	obj/kern/kernel.asm	/^f0103426:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010342d	obj/kern/kernel.asm	/^f010342d:	e8 0e cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103432	obj/kern/kernel.asm	/^f0103432:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	00 $/;"	l
f010343a	obj/kern/kernel.asm	/^f010343a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010343f	obj/kern/kernel.asm	/^f010343f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103442	obj/kern/kernel.asm	/^f0103442:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0103447	obj/kern/kernel.asm	/^f0103447:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f010344c	obj/kern/kernel.asm	/^f010344c:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451:	e8 eb e5 ff ff       	call   f0101a41 <boot_map_region>$/;"	l
f0103456	obj/kern/kernel.asm	/^f0103456:	b8 00 80 11 f0       	mov    $0xf0118000,%eax$/;"	l
f010345b	obj/kern/kernel.asm	/^f010345b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103460	obj/kern/kernel.asm	/^f0103460:	77 20                	ja     f0103482 <mem_init+0x17ac>$/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103466	obj/kern/kernel.asm	/^f0103466:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f010346d	obj/kern/kernel.asm	/^f010346d:	f0 $/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	00 $/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010347d	obj/kern/kernel.asm	/^f010347d:	e8 be cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103482	obj/kern/kernel.asm	/^f0103482:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103489	obj/kern/kernel.asm	/^f0103489:	00 $/;"	l
f010348a	obj/kern/kernel.asm	/^f010348a:	c7 04 24 00 80 11 00 	movl   $0x118000,(%esp)$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f010349b	obj/kern/kernel.asm	/^f010349b:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	e8 9c e5 ff ff       	call   f0101a41 <boot_map_region>$/;"	l
f01034a5	obj/kern/kernel.asm	/^f01034a5:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac:	00 $/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01034b4	obj/kern/kernel.asm	/^f01034b4:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f01034b9	obj/kern/kernel.asm	/^f01034b9:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f01034c3	obj/kern/kernel.asm	/^f01034c3:	e8 79 e5 ff ff       	call   f0101a41 <boot_map_region>$/;"	l
f01034c8	obj/kern/kernel.asm	/^f01034c8:	b8 00 60 22 f0       	mov    $0xf0226000,%eax$/;"	l
f01034cd	obj/kern/kernel.asm	/^f01034cd:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01034d2	obj/kern/kernel.asm	/^f01034d2:	0f 87 d3 07 00 00    	ja     f0103cab <mem_init+0x1fd5>$/;"	l
f01034d8	obj/kern/kernel.asm	/^f01034d8:	eb 0c                	jmp    f01034e6 <mem_init+0x1810>$/;"	l
f01034da	obj/kern/kernel.asm	/^f01034da:	89 d8                	mov    %ebx,%eax$/;"	l
f01034dc	obj/kern/kernel.asm	/^f01034dc:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	77 27                	ja     f010350b <mem_init+0x1835>$/;"	l
f01034e4	obj/kern/kernel.asm	/^f01034e4:	eb 05                	jmp    f01034eb <mem_init+0x1815>$/;"	l
f01034e6	obj/kern/kernel.asm	/^f01034e6:	b8 00 60 22 f0       	mov    $0xf0226000,%eax$/;"	l
f01034eb	obj/kern/kernel.asm	/^f01034eb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01034ef	obj/kern/kernel.asm	/^f01034ef:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	f0 $/;"	l
f01034f7	obj/kern/kernel.asm	/^f01034f7:	c7 44 24 04 0f 01 00 	movl   $0x10f,0x4(%esp)$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	00 $/;"	l
f01034ff	obj/kern/kernel.asm	/^f01034ff:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103506	obj/kern/kernel.asm	/^f0103506:	e8 35 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010350b	obj/kern/kernel.asm	/^f010350b:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	00 $/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f0103519	obj/kern/kernel.asm	/^f0103519:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103521	obj/kern/kernel.asm	/^f0103521:	89 f2                	mov    %esi,%edx$/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	e8 14 e5 ff ff       	call   f0101a41 <boot_map_region>$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0103533	obj/kern/kernel.asm	/^f0103533:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0103539	obj/kern/kernel.asm	/^f0103539:	81 fe 00 80 f7 ef    	cmp    $0xeff78000,%esi$/;"	l
f010353f	obj/kern/kernel.asm	/^f010353f:	75 99                	jne    f01034da <mem_init+0x1804>$/;"	l
f0103541	obj/kern/kernel.asm	/^f0103541:	8b 1d 8c 4e 22 f0    	mov    0xf0224e8c,%ebx$/;"	l
f0103547	obj/kern/kernel.asm	/^f0103547:	8b 0d 88 4e 22 f0    	mov    0xf0224e88,%ecx$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f0103550	obj/kern/kernel.asm	/^f0103550:	8d 3c cd ff 0f 00 00 	lea    0xfff(,%ecx,8),%edi$/;"	l
f0103557	obj/kern/kernel.asm	/^f0103557:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	0f 84 80 00 00 00    	je     f01035e3 <mem_init+0x190d>$/;"	l
f0103563	obj/kern/kernel.asm	/^f0103563:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0103568	obj/kern/kernel.asm	/^f0103568:	8d 96 00 00 00 ef    	lea    -0x11000000(%esi),%edx$/;"	l
f010356e	obj/kern/kernel.asm	/^f010356e:	89 d8                	mov    %ebx,%eax$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	e8 27 de ff ff       	call   f010139c <check_va2pa>$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	8b 15 90 4e 22 f0    	mov    0xf0224e90,%edx$/;"	l
f010357b	obj/kern/kernel.asm	/^f010357b:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0103581	obj/kern/kernel.asm	/^f0103581:	77 20                	ja     f01035a3 <mem_init+0x18cd>$/;"	l
f0103583	obj/kern/kernel.asm	/^f0103583:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103587	obj/kern/kernel.asm	/^f0103587:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f010358e	obj/kern/kernel.asm	/^f010358e:	f0 $/;"	l
f010358f	obj/kern/kernel.asm	/^f010358f:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
f0103596	obj/kern/kernel.asm	/^f0103596:	00 $/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010359e	obj/kern/kernel.asm	/^f010359e:	e8 9d ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035a3	obj/kern/kernel.asm	/^f01035a3:	8d 94 32 00 00 00 10 	lea    0x10000000(%edx,%esi,1),%edx$/;"	l
f01035aa	obj/kern/kernel.asm	/^f01035aa:	39 d0                	cmp    %edx,%eax$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	74 24                	je     f01035d2 <mem_init+0x18fc>$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	c7 44 24 0c cc 7f 10 	movl   $0xf0107fcc,0xc(%esp)$/;"	l
f01035b5	obj/kern/kernel.asm	/^f01035b5:	f0 $/;"	l
f01035b6	obj/kern/kernel.asm	/^f01035b6:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01035bd	obj/kern/kernel.asm	/^f01035bd:	f0 $/;"	l
f01035be	obj/kern/kernel.asm	/^f01035be:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
f01035c5	obj/kern/kernel.asm	/^f01035c5:	00 $/;"	l
f01035c6	obj/kern/kernel.asm	/^f01035c6:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01035cd	obj/kern/kernel.asm	/^f01035cd:	e8 6e ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035d2	obj/kern/kernel.asm	/^f01035d2:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f01035d8	obj/kern/kernel.asm	/^f01035d8:	39 f7                	cmp    %esi,%edi$/;"	l
f01035da	obj/kern/kernel.asm	/^f01035da:	77 8c                	ja     f0103568 <mem_init+0x1892>$/;"	l
f01035dc	obj/kern/kernel.asm	/^f01035dc:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	eb 05                	jmp    f01035e8 <mem_init+0x1912>$/;"	l
f01035e3	obj/kern/kernel.asm	/^f01035e3:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8:	8d 96 00 00 c0 ee    	lea    -0x11400000(%esi),%edx$/;"	l
f01035ee	obj/kern/kernel.asm	/^f01035ee:	89 d8                	mov    %ebx,%eax$/;"	l
f01035f0	obj/kern/kernel.asm	/^f01035f0:	e8 a7 dd ff ff       	call   f010139c <check_va2pa>$/;"	l
f01035f5	obj/kern/kernel.asm	/^f01035f5:	8b 15 48 42 22 f0    	mov    0xf0224248,%edx$/;"	l
f01035fb	obj/kern/kernel.asm	/^f01035fb:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0103601	obj/kern/kernel.asm	/^f0103601:	77 20                	ja     f0103623 <mem_init+0x194d>$/;"	l
f0103603	obj/kern/kernel.asm	/^f0103603:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f010360e	obj/kern/kernel.asm	/^f010360e:	f0 $/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	00 $/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	e8 1d ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103623	obj/kern/kernel.asm	/^f0103623:	8d 94 32 00 00 00 10 	lea    0x10000000(%edx,%esi,1),%edx$/;"	l
f010362a	obj/kern/kernel.asm	/^f010362a:	39 d0                	cmp    %edx,%eax$/;"	l
f010362c	obj/kern/kernel.asm	/^f010362c:	74 24                	je     f0103652 <mem_init+0x197c>$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	c7 44 24 0c 00 80 10 	movl   $0xf0108000,0xc(%esp)$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	f0 $/;"	l
f0103636	obj/kern/kernel.asm	/^f0103636:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010363d	obj/kern/kernel.asm	/^f010363d:	f0 $/;"	l
f010363e	obj/kern/kernel.asm	/^f010363e:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	00 $/;"	l
f0103646	obj/kern/kernel.asm	/^f0103646:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010364d	obj/kern/kernel.asm	/^f010364d:	e8 ee c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103652	obj/kern/kernel.asm	/^f0103652:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f0103658	obj/kern/kernel.asm	/^f0103658:	81 fe 00 f0 01 00    	cmp    $0x1f000,%esi$/;"	l
f010365e	obj/kern/kernel.asm	/^f010365e:	75 88                	jne    f01035e8 <mem_init+0x1912>$/;"	l
f0103660	obj/kern/kernel.asm	/^f0103660:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103663	obj/kern/kernel.asm	/^f0103663:	c1 e7 0c             	shl    $0xc,%edi$/;"	l
f0103666	obj/kern/kernel.asm	/^f0103666:	85 ff                	test   %edi,%edi$/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668:	74 44                	je     f01036ae <mem_init+0x19d8>$/;"	l
f010366a	obj/kern/kernel.asm	/^f010366a:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010366f	obj/kern/kernel.asm	/^f010366f:	8d 96 00 00 00 f0    	lea    -0x10000000(%esi),%edx$/;"	l
f0103675	obj/kern/kernel.asm	/^f0103675:	89 d8                	mov    %ebx,%eax$/;"	l
f0103677	obj/kern/kernel.asm	/^f0103677:	e8 20 dd ff ff       	call   f010139c <check_va2pa>$/;"	l
f010367c	obj/kern/kernel.asm	/^f010367c:	39 c6                	cmp    %eax,%esi$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	74 24                	je     f01036a4 <mem_init+0x19ce>$/;"	l
f0103680	obj/kern/kernel.asm	/^f0103680:	c7 44 24 0c 34 80 10 	movl   $0xf0108034,0xc(%esp)$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	f0 $/;"	l
f0103688	obj/kern/kernel.asm	/^f0103688:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010368f	obj/kern/kernel.asm	/^f010368f:	f0 $/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	c7 44 24 04 53 03 00 	movl   $0x353,0x4(%esp)$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	00 $/;"	l
f0103698	obj/kern/kernel.asm	/^f0103698:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010369f	obj/kern/kernel.asm	/^f010369f:	e8 9c c9 ff ff       	call   f0100040 <_panic>$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	39 fe                	cmp    %edi,%esi$/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	72 c1                	jb     f010366f <mem_init+0x1999>$/;"	l
f01036ae	obj/kern/kernel.asm	/^f01036ae:	c7 45 cc 00 60 22 f0 	movl   $0xf0226000,-0x34(%ebp)$/;"	l
f01036b5	obj/kern/kernel.asm	/^f01036b5:	c7 45 d0 00 00 ff ef 	movl   $0xefff0000,-0x30(%ebp)$/;"	l
f01036bc	obj/kern/kernel.asm	/^f01036bc:	89 df                	mov    %ebx,%edi$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01036c1	obj/kern/kernel.asm	/^f01036c1:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01036c4	obj/kern/kernel.asm	/^f01036c4:	8b 5d d0             	mov    -0x30(%ebp),%ebx$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f01036cd	obj/kern/kernel.asm	/^f01036cd:	89 c6                	mov    %eax,%esi$/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	81 c6 00 00 00 10    	add    $0x10000000,%esi$/;"	l
f01036d5	obj/kern/kernel.asm	/^f01036d5:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01036d8	obj/kern/kernel.asm	/^f01036d8:	81 c2 00 00 01 00    	add    $0x10000,%edx$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01036e1	obj/kern/kernel.asm	/^f01036e1:	89 da                	mov    %ebx,%edx$/;"	l
f01036e3	obj/kern/kernel.asm	/^f01036e3:	89 f8                	mov    %edi,%eax$/;"	l
f01036e5	obj/kern/kernel.asm	/^f01036e5:	e8 b2 dc ff ff       	call   f010139c <check_va2pa>$/;"	l
f01036ea	obj/kern/kernel.asm	/^f01036ea:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	77 23                	ja     f0103716 <mem_init+0x1a40>$/;"	l
f01036f3	obj/kern/kernel.asm	/^f01036f3:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	f0 $/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	c7 44 24 04 5b 03 00 	movl   $0x35b,0x4(%esp)$/;"	l
f0103709	obj/kern/kernel.asm	/^f0103709:	00 $/;"	l
f010370a	obj/kern/kernel.asm	/^f010370a:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	e8 2a c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103716	obj/kern/kernel.asm	/^f0103716:	39 f0                	cmp    %esi,%eax$/;"	l
f0103718	obj/kern/kernel.asm	/^f0103718:	74 24                	je     f010373e <mem_init+0x1a68>$/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	c7 44 24 0c 5c 80 10 	movl   $0xf010805c,0xc(%esp)$/;"	l
f0103721	obj/kern/kernel.asm	/^f0103721:	f0 $/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103729	obj/kern/kernel.asm	/^f0103729:	f0 $/;"	l
f010372a	obj/kern/kernel.asm	/^f010372a:	c7 44 24 04 5b 03 00 	movl   $0x35b,0x4(%esp)$/;"	l
f0103731	obj/kern/kernel.asm	/^f0103731:	00 $/;"	l
f0103732	obj/kern/kernel.asm	/^f0103732:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103739	obj/kern/kernel.asm	/^f0103739:	e8 02 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103744	obj/kern/kernel.asm	/^f0103744:	81 c6 00 10 00 00    	add    $0x1000,%esi$/;"	l
f010374a	obj/kern/kernel.asm	/^f010374a:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx$/;"	l
f010374d	obj/kern/kernel.asm	/^f010374d:	0f 85 8a 05 00 00    	jne    f0103cdd <mem_init+0x2007>$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	8b 75 d0             	mov    -0x30(%ebp),%esi$/;"	l
f010375b	obj/kern/kernel.asm	/^f010375b:	8d 14 33             	lea    (%ebx,%esi,1),%edx$/;"	l
f010375e	obj/kern/kernel.asm	/^f010375e:	89 f8                	mov    %edi,%eax$/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	e8 37 dc ff ff       	call   f010139c <check_va2pa>$/;"	l
f0103765	obj/kern/kernel.asm	/^f0103765:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	74 24                	je     f010378e <mem_init+0x1ab8>$/;"	l
f010376a	obj/kern/kernel.asm	/^f010376a:	c7 44 24 0c a4 80 10 	movl   $0xf01080a4,0xc(%esp)$/;"	l
f0103771	obj/kern/kernel.asm	/^f0103771:	f0 $/;"	l
f0103772	obj/kern/kernel.asm	/^f0103772:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103779	obj/kern/kernel.asm	/^f0103779:	f0 $/;"	l
f010377a	obj/kern/kernel.asm	/^f010377a:	c7 44 24 04 5d 03 00 	movl   $0x35d,0x4(%esp)$/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	00 $/;"	l
f0103782	obj/kern/kernel.asm	/^f0103782:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	e8 b2 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010378e	obj/kern/kernel.asm	/^f010378e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103794	obj/kern/kernel.asm	/^f0103794:	81 fb 00 80 00 00    	cmp    $0x8000,%ebx$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	75 bf                	jne    f010375b <mem_init+0x1a85>$/;"	l
f010379c	obj/kern/kernel.asm	/^f010379c:	81 6d d0 00 00 01 00 	subl   $0x10000,-0x30(%ebp)$/;"	l
f01037a3	obj/kern/kernel.asm	/^f01037a3:	81 45 cc 00 80 00 00 	addl   $0x8000,-0x34(%ebp)$/;"	l
f01037aa	obj/kern/kernel.asm	/^f01037aa:	81 7d d0 00 00 f7 ef 	cmpl   $0xeff70000,-0x30(%ebp)$/;"	l
f01037b1	obj/kern/kernel.asm	/^f01037b1:	0f 85 07 ff ff ff    	jne    f01036be <mem_init+0x19e8>$/;"	l
f01037b7	obj/kern/kernel.asm	/^f01037b7:	89 fb                	mov    %edi,%ebx$/;"	l
f01037b9	obj/kern/kernel.asm	/^f01037b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f01037c4	obj/kern/kernel.asm	/^f01037c4:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f01037c7	obj/kern/kernel.asm	/^f01037c7:	77 2e                	ja     f01037f7 <mem_init+0x1b21>$/;"	l
f01037c9	obj/kern/kernel.asm	/^f01037c9:	f6 04 83 01          	testb  $0x1,(%ebx,%eax,4)$/;"	l
f01037cd	obj/kern/kernel.asm	/^f01037cd:	0f 85 aa 00 00 00    	jne    f010387d <mem_init+0x1ba7>$/;"	l
f01037d3	obj/kern/kernel.asm	/^f01037d3:	c7 44 24 0c 98 84 10 	movl   $0xf0108498,0xc(%esp)$/;"	l
f01037da	obj/kern/kernel.asm	/^f01037da:	f0 $/;"	l
f01037db	obj/kern/kernel.asm	/^f01037db:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f01037e2	obj/kern/kernel.asm	/^f01037e2:	f0 $/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	c7 44 24 04 68 03 00 	movl   $0x368,0x4(%esp)$/;"	l
f01037ea	obj/kern/kernel.asm	/^f01037ea:	00 $/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01037f2	obj/kern/kernel.asm	/^f01037f2:	e8 49 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f01037f7	obj/kern/kernel.asm	/^f01037f7:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	76 55                	jbe    f0103853 <mem_init+0x1b7d>$/;"	l
f01037fe	obj/kern/kernel.asm	/^f01037fe:	8b 14 83             	mov    (%ebx,%eax,4),%edx$/;"	l
f0103801	obj/kern/kernel.asm	/^f0103801:	f6 c2 01             	test   $0x1,%dl$/;"	l
f0103804	obj/kern/kernel.asm	/^f0103804:	75 24                	jne    f010382a <mem_init+0x1b54>$/;"	l
f0103806	obj/kern/kernel.asm	/^f0103806:	c7 44 24 0c 98 84 10 	movl   $0xf0108498,0xc(%esp)$/;"	l
f010380d	obj/kern/kernel.asm	/^f010380d:	f0 $/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103815	obj/kern/kernel.asm	/^f0103815:	f0 $/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	c7 44 24 04 6c 03 00 	movl   $0x36c,0x4(%esp)$/;"	l
f010381d	obj/kern/kernel.asm	/^f010381d:	00 $/;"	l
f010381e	obj/kern/kernel.asm	/^f010381e:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103825	obj/kern/kernel.asm	/^f0103825:	e8 16 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010382a	obj/kern/kernel.asm	/^f010382a:	f6 c2 02             	test   $0x2,%dl$/;"	l
f010382d	obj/kern/kernel.asm	/^f010382d:	75 4e                	jne    f010387d <mem_init+0x1ba7>$/;"	l
f010382f	obj/kern/kernel.asm	/^f010382f:	c7 44 24 0c a9 84 10 	movl   $0xf01084a9,0xc(%esp)$/;"	l
f0103836	obj/kern/kernel.asm	/^f0103836:	f0 $/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010383e	obj/kern/kernel.asm	/^f010383e:	f0 $/;"	l
f010383f	obj/kern/kernel.asm	/^f010383f:	c7 44 24 04 6d 03 00 	movl   $0x36d,0x4(%esp)$/;"	l
f0103846	obj/kern/kernel.asm	/^f0103846:	00 $/;"	l
f0103847	obj/kern/kernel.asm	/^f0103847:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	e8 ed c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	83 3c 83 00          	cmpl   $0x0,(%ebx,%eax,4)$/;"	l
f0103857	obj/kern/kernel.asm	/^f0103857:	74 24                	je     f010387d <mem_init+0x1ba7>$/;"	l
f0103859	obj/kern/kernel.asm	/^f0103859:	c7 44 24 0c ba 84 10 	movl   $0xf01084ba,0xc(%esp)$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	f0 $/;"	l
f0103861	obj/kern/kernel.asm	/^f0103861:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103868	obj/kern/kernel.asm	/^f0103868:	f0 $/;"	l
f0103869	obj/kern/kernel.asm	/^f0103869:	c7 44 24 04 6f 03 00 	movl   $0x36f,0x4(%esp)$/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	00 $/;"	l
f0103871	obj/kern/kernel.asm	/^f0103871:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	e8 c3 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f010387d	obj/kern/kernel.asm	/^f010387d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103880	obj/kern/kernel.asm	/^f0103880:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103885	obj/kern/kernel.asm	/^f0103885:	0f 85 33 ff ff ff    	jne    f01037be <mem_init+0x1ae8>$/;"	l
f010388b	obj/kern/kernel.asm	/^f010388b:	c7 04 24 c8 80 10 f0 	movl   $0xf01080c8,(%esp)$/;"	l
f0103892	obj/kern/kernel.asm	/^f0103892:	e8 1b 0f 00 00       	call   f01047b2 <cprintf>$/;"	l
f0103897	obj/kern/kernel.asm	/^f0103897:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f010389c	obj/kern/kernel.asm	/^f010389c:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01038a1	obj/kern/kernel.asm	/^f01038a1:	77 20                	ja     f01038c3 <mem_init+0x1bed>$/;"	l
f01038a3	obj/kern/kernel.asm	/^f01038a3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	f0 $/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	c7 44 24 04 e8 00 00 	movl   $0xe8,0x4(%esp)$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	00 $/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	e8 7d c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01038c8	obj/kern/kernel.asm	/^f01038c8:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01038cb	obj/kern/kernel.asm	/^f01038cb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01038d0	obj/kern/kernel.asm	/^f01038d0:	e8 6a db ff ff       	call   f010143f <check_page_free_list>$/;"	l
f01038d5	obj/kern/kernel.asm	/^f01038d5:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f01038dd	obj/kern/kernel.asm	/^f01038dd:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f01038e0	obj/kern/kernel.asm	/^f01038e0:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01038e3	obj/kern/kernel.asm	/^f01038e3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01038ea	obj/kern/kernel.asm	/^f01038ea:	e8 aa df ff ff       	call   f0101899 <page_alloc>$/;"	l
f01038ef	obj/kern/kernel.asm	/^f01038ef:	89 c6                	mov    %eax,%esi$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	85 c0                	test   %eax,%eax$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	75 24                	jne    f0103919 <mem_init+0x1c43>$/;"	l
f01038f5	obj/kern/kernel.asm	/^f01038f5:	c7 44 24 0c c5 82 10 	movl   $0xf01082c5,0xc(%esp)$/;"	l
f01038fc	obj/kern/kernel.asm	/^f01038fc:	f0 $/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	f0 $/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	c7 44 24 04 48 04 00 	movl   $0x448,0x4(%esp)$/;"	l
f010390c	obj/kern/kernel.asm	/^f010390c:	00 $/;"	l
f010390d	obj/kern/kernel.asm	/^f010390d:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103914	obj/kern/kernel.asm	/^f0103914:	e8 27 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	e8 74 df ff ff       	call   f0101899 <page_alloc>$/;"	l
f0103925	obj/kern/kernel.asm	/^f0103925:	89 c7                	mov    %eax,%edi$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	85 c0                	test   %eax,%eax$/;"	l
f0103929	obj/kern/kernel.asm	/^f0103929:	75 24                	jne    f010394f <mem_init+0x1c79>$/;"	l
f010392b	obj/kern/kernel.asm	/^f010392b:	c7 44 24 0c db 82 10 	movl   $0xf01082db,0xc(%esp)$/;"	l
f0103932	obj/kern/kernel.asm	/^f0103932:	f0 $/;"	l
f0103933	obj/kern/kernel.asm	/^f0103933:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f010393a	obj/kern/kernel.asm	/^f010393a:	f0 $/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	c7 44 24 04 49 04 00 	movl   $0x449,0x4(%esp)$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	00 $/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f010394a	obj/kern/kernel.asm	/^f010394a:	e8 f1 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103956	obj/kern/kernel.asm	/^f0103956:	e8 3e df ff ff       	call   f0101899 <page_alloc>$/;"	l
f010395b	obj/kern/kernel.asm	/^f010395b:	89 c3                	mov    %eax,%ebx$/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	85 c0                	test   %eax,%eax$/;"	l
f010395f	obj/kern/kernel.asm	/^f010395f:	75 24                	jne    f0103985 <mem_init+0x1caf>$/;"	l
f0103961	obj/kern/kernel.asm	/^f0103961:	c7 44 24 0c f1 82 10 	movl   $0xf01082f1,0xc(%esp)$/;"	l
f0103968	obj/kern/kernel.asm	/^f0103968:	f0 $/;"	l
f0103969	obj/kern/kernel.asm	/^f0103969:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103970	obj/kern/kernel.asm	/^f0103970:	f0 $/;"	l
f0103971	obj/kern/kernel.asm	/^f0103971:	c7 44 24 04 4a 04 00 	movl   $0x44a,0x4(%esp)$/;"	l
f0103978	obj/kern/kernel.asm	/^f0103978:	00 $/;"	l
f0103979	obj/kern/kernel.asm	/^f0103979:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103980	obj/kern/kernel.asm	/^f0103980:	e8 bb c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	e8 8d df ff ff       	call   f010191a <page_free>$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	89 f8                	mov    %edi,%eax$/;"	l
f010398f	obj/kern/kernel.asm	/^f010398f:	2b 05 90 4e 22 f0    	sub    0xf0224e90,%eax$/;"	l
f0103995	obj/kern/kernel.asm	/^f0103995:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103998	obj/kern/kernel.asm	/^f0103998:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b:	89 c2                	mov    %eax,%edx$/;"	l
f010399d	obj/kern/kernel.asm	/^f010399d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	3b 15 88 4e 22 f0    	cmp    0xf0224e88,%edx$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	72 20                	jb     f01039c8 <mem_init+0x1cf2>$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01039ac	obj/kern/kernel.asm	/^f01039ac:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f01039b3	obj/kern/kernel.asm	/^f01039b3:	f0 $/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f01039bb	obj/kern/kernel.asm	/^f01039bb:	00 $/;"	l
f01039bc	obj/kern/kernel.asm	/^f01039bc:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	e8 78 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f01039c8	obj/kern/kernel.asm	/^f01039c8:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01039cf	obj/kern/kernel.asm	/^f01039cf:	00 $/;"	l
f01039d0	obj/kern/kernel.asm	/^f01039d0:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01039d7	obj/kern/kernel.asm	/^f01039d7:	00 $/;"	l
f01039d8	obj/kern/kernel.asm	/^f01039d8:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01039dd	obj/kern/kernel.asm	/^f01039dd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01039e0	obj/kern/kernel.asm	/^f01039e0:	e8 ac 27 00 00       	call   f0106191 <memset>$/;"	l
f01039e5	obj/kern/kernel.asm	/^f01039e5:	89 d8                	mov    %ebx,%eax$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	2b 05 90 4e 22 f0    	sub    0xf0224e90,%eax$/;"	l
f01039ed	obj/kern/kernel.asm	/^f01039ed:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01039f0	obj/kern/kernel.asm	/^f01039f0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01039f3	obj/kern/kernel.asm	/^f01039f3:	89 c2                	mov    %eax,%edx$/;"	l
f01039f5	obj/kern/kernel.asm	/^f01039f5:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01039f8	obj/kern/kernel.asm	/^f01039f8:	3b 15 88 4e 22 f0    	cmp    0xf0224e88,%edx$/;"	l
f01039fe	obj/kern/kernel.asm	/^f01039fe:	72 20                	jb     f0103a20 <mem_init+0x1d4a>$/;"	l
f0103a00	obj/kern/kernel.asm	/^f0103a00:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103a04	obj/kern/kernel.asm	/^f0103a04:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	f0 $/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0103a13	obj/kern/kernel.asm	/^f0103a13:	00 $/;"	l
f0103a14	obj/kern/kernel.asm	/^f0103a14:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	e8 20 c6 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a20	obj/kern/kernel.asm	/^f0103a20:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	00 $/;"	l
f0103a28	obj/kern/kernel.asm	/^f0103a28:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	00 $/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	e8 54 27 00 00       	call   f0106191 <memset>$/;"	l
f0103a3d	obj/kern/kernel.asm	/^f0103a3d:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103a44	obj/kern/kernel.asm	/^f0103a44:	00 $/;"	l
f0103a45	obj/kern/kernel.asm	/^f0103a45:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103a4c	obj/kern/kernel.asm	/^f0103a4c:	00 $/;"	l
f0103a4d	obj/kern/kernel.asm	/^f0103a4d:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0103a51	obj/kern/kernel.asm	/^f0103a51:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0103a56	obj/kern/kernel.asm	/^f0103a56:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59:	e8 0a e1 ff ff       	call   f0101b68 <page_insert>$/;"	l
f0103a5e	obj/kern/kernel.asm	/^f0103a5e:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	74 24                	je     f0103a89 <mem_init+0x1db3>$/;"	l
f0103a65	obj/kern/kernel.asm	/^f0103a65:	c7 44 24 0c c2 83 10 	movl   $0xf01083c2,0xc(%esp)$/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	f0 $/;"	l
f0103a6d	obj/kern/kernel.asm	/^f0103a6d:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103a74	obj/kern/kernel.asm	/^f0103a74:	f0 $/;"	l
f0103a75	obj/kern/kernel.asm	/^f0103a75:	c7 44 24 04 4f 04 00 	movl   $0x44f,0x4(%esp)$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	00 $/;"	l
f0103a7d	obj/kern/kernel.asm	/^f0103a7d:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	e8 b7 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a89	obj/kern/kernel.asm	/^f0103a89:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103a90	obj/kern/kernel.asm	/^f0103a90:	01 01 01 $/;"	l
f0103a93	obj/kern/kernel.asm	/^f0103a93:	74 24                	je     f0103ab9 <mem_init+0x1de3>$/;"	l
f0103a95	obj/kern/kernel.asm	/^f0103a95:	c7 44 24 0c e8 80 10 	movl   $0xf01080e8,0xc(%esp)$/;"	l
f0103a9c	obj/kern/kernel.asm	/^f0103a9c:	f0 $/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	f0 $/;"	l
f0103aa5	obj/kern/kernel.asm	/^f0103aa5:	c7 44 24 04 50 04 00 	movl   $0x450,0x4(%esp)$/;"	l
f0103aac	obj/kern/kernel.asm	/^f0103aac:	00 $/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103ab4	obj/kern/kernel.asm	/^f0103ab4:	e8 87 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ab9	obj/kern/kernel.asm	/^f0103ab9:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103ac0	obj/kern/kernel.asm	/^f0103ac0:	00 $/;"	l
f0103ac1	obj/kern/kernel.asm	/^f0103ac1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0103ac8	obj/kern/kernel.asm	/^f0103ac8:	00 $/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103acd	obj/kern/kernel.asm	/^f0103acd:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0103ad2	obj/kern/kernel.asm	/^f0103ad2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103ad5	obj/kern/kernel.asm	/^f0103ad5:	e8 8e e0 ff ff       	call   f0101b68 <page_insert>$/;"	l
f0103ada	obj/kern/kernel.asm	/^f0103ada:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0103ae1	obj/kern/kernel.asm	/^f0103ae1:	02 02 02 $/;"	l
f0103ae4	obj/kern/kernel.asm	/^f0103ae4:	74 24                	je     f0103b0a <mem_init+0x1e34>$/;"	l
f0103ae6	obj/kern/kernel.asm	/^f0103ae6:	c7 44 24 0c 0c 81 10 	movl   $0xf010810c,0xc(%esp)$/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	f0 $/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	f0 $/;"	l
f0103af6	obj/kern/kernel.asm	/^f0103af6:	c7 44 24 04 52 04 00 	movl   $0x452,0x4(%esp)$/;"	l
f0103afd	obj/kern/kernel.asm	/^f0103afd:	00 $/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103b05	obj/kern/kernel.asm	/^f0103b05:	e8 36 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b0a	obj/kern/kernel.asm	/^f0103b0a:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0103b0f	obj/kern/kernel.asm	/^f0103b0f:	74 24                	je     f0103b35 <mem_init+0x1e5f>$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	c7 44 24 0c e4 83 10 	movl   $0xf01083e4,0xc(%esp)$/;"	l
f0103b18	obj/kern/kernel.asm	/^f0103b18:	f0 $/;"	l
f0103b19	obj/kern/kernel.asm	/^f0103b19:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103b20	obj/kern/kernel.asm	/^f0103b20:	f0 $/;"	l
f0103b21	obj/kern/kernel.asm	/^f0103b21:	c7 44 24 04 53 04 00 	movl   $0x453,0x4(%esp)$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	00 $/;"	l
f0103b29	obj/kern/kernel.asm	/^f0103b29:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103b30	obj/kern/kernel.asm	/^f0103b30:	e8 0b c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b35	obj/kern/kernel.asm	/^f0103b35:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f0103b3a	obj/kern/kernel.asm	/^f0103b3a:	74 24                	je     f0103b60 <mem_init+0x1e8a>$/;"	l
f0103b3c	obj/kern/kernel.asm	/^f0103b3c:	c7 44 24 0c 2d 84 10 	movl   $0xf010842d,0xc(%esp)$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	f0 $/;"	l
f0103b44	obj/kern/kernel.asm	/^f0103b44:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103b4b	obj/kern/kernel.asm	/^f0103b4b:	f0 $/;"	l
f0103b4c	obj/kern/kernel.asm	/^f0103b4c:	c7 44 24 04 54 04 00 	movl   $0x454,0x4(%esp)$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	00 $/;"	l
f0103b54	obj/kern/kernel.asm	/^f0103b54:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	e8 e0 c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103b60	obj/kern/kernel.asm	/^f0103b60:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	03 03 03 $/;"	l
f0103b6a	obj/kern/kernel.asm	/^f0103b6a:	89 d8                	mov    %ebx,%eax$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	2b 05 90 4e 22 f0    	sub    0xf0224e90,%eax$/;"	l
f0103b72	obj/kern/kernel.asm	/^f0103b72:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103b75	obj/kern/kernel.asm	/^f0103b75:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	89 c2                	mov    %eax,%edx$/;"	l
f0103b7a	obj/kern/kernel.asm	/^f0103b7a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	3b 15 88 4e 22 f0    	cmp    0xf0224e88,%edx$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	72 20                	jb     f0103ba5 <mem_init+0x1ecf>$/;"	l
f0103b85	obj/kern/kernel.asm	/^f0103b85:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103b89	obj/kern/kernel.asm	/^f0103b89:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f0103b90	obj/kern/kernel.asm	/^f0103b90:	f0 $/;"	l
f0103b91	obj/kern/kernel.asm	/^f0103b91:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0103b98	obj/kern/kernel.asm	/^f0103b98:	00 $/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f0103ba0	obj/kern/kernel.asm	/^f0103ba0:	e8 9b c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ba5	obj/kern/kernel.asm	/^f0103ba5:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	03 03 03 $/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	74 24                	je     f0103bd5 <mem_init+0x1eff>$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	c7 44 24 0c 30 81 10 	movl   $0xf0108130,0xc(%esp)$/;"	l
f0103bb8	obj/kern/kernel.asm	/^f0103bb8:	f0 $/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103bc0	obj/kern/kernel.asm	/^f0103bc0:	f0 $/;"	l
f0103bc1	obj/kern/kernel.asm	/^f0103bc1:	c7 44 24 04 56 04 00 	movl   $0x456,0x4(%esp)$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	00 $/;"	l
f0103bc9	obj/kern/kernel.asm	/^f0103bc9:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103bd0	obj/kern/kernel.asm	/^f0103bd0:	e8 6b c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103bd5	obj/kern/kernel.asm	/^f0103bd5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103bdc	obj/kern/kernel.asm	/^f0103bdc:	00 $/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0103be2	obj/kern/kernel.asm	/^f0103be2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103be5	obj/kern/kernel.asm	/^f0103be5:	e8 40 df ff ff       	call   f0101b2a <page_remove>$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	74 24                	je     f0103c15 <mem_init+0x1f3f>$/;"	l
f0103bf1	obj/kern/kernel.asm	/^f0103bf1:	c7 44 24 0c 1c 84 10 	movl   $0xf010841c,0xc(%esp)$/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	f0 $/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103c00	obj/kern/kernel.asm	/^f0103c00:	f0 $/;"	l
f0103c01	obj/kern/kernel.asm	/^f0103c01:	c7 44 24 04 58 04 00 	movl   $0x458,0x4(%esp)$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	00 $/;"	l
f0103c09	obj/kern/kernel.asm	/^f0103c09:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	e8 2b c4 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c15	obj/kern/kernel.asm	/^f0103c15:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0103c1a	obj/kern/kernel.asm	/^f0103c1a:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0103c22	obj/kern/kernel.asm	/^f0103c22:	89 f2                	mov    %esi,%edx$/;"	l
f0103c24	obj/kern/kernel.asm	/^f0103c24:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103c2d	obj/kern/kernel.asm	/^f0103c2d:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103c30	obj/kern/kernel.asm	/^f0103c30:	39 d1                	cmp    %edx,%ecx$/;"	l
f0103c32	obj/kern/kernel.asm	/^f0103c32:	74 24                	je     f0103c58 <mem_init+0x1f82>$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	c7 44 24 0c f0 7a 10 	movl   $0xf0107af0,0xc(%esp)$/;"	l
f0103c3b	obj/kern/kernel.asm	/^f0103c3b:	f0 $/;"	l
f0103c3c	obj/kern/kernel.asm	/^f0103c3c:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	f0 $/;"	l
f0103c44	obj/kern/kernel.asm	/^f0103c44:	c7 44 24 04 5b 04 00 	movl   $0x45b,0x4(%esp)$/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	00 $/;"	l
f0103c4c	obj/kern/kernel.asm	/^f0103c4c:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103c53	obj/kern/kernel.asm	/^f0103c53:	e8 e8 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c58	obj/kern/kernel.asm	/^f0103c58:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103c5e	obj/kern/kernel.asm	/^f0103c5e:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	74 24                	je     f0103c89 <mem_init+0x1fb3>$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	c7 44 24 0c d3 83 10 	movl   $0xf01083d3,0xc(%esp)$/;"	l
f0103c6c	obj/kern/kernel.asm	/^f0103c6c:	f0 $/;"	l
f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0103c74	obj/kern/kernel.asm	/^f0103c74:	f0 $/;"	l
f0103c75	obj/kern/kernel.asm	/^f0103c75:	c7 44 24 04 5d 04 00 	movl   $0x45d,0x4(%esp)$/;"	l
f0103c7c	obj/kern/kernel.asm	/^f0103c7c:	00 $/;"	l
f0103c7d	obj/kern/kernel.asm	/^f0103c7d:	c7 04 24 bd 81 10 f0 	movl   $0xf01081bd,(%esp)$/;"	l
f0103c84	obj/kern/kernel.asm	/^f0103c84:	e8 b7 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)$/;"	l
f0103c8f	obj/kern/kernel.asm	/^f0103c8f:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0103c92	obj/kern/kernel.asm	/^f0103c92:	e8 83 dc ff ff       	call   f010191a <page_free>$/;"	l
f0103c97	obj/kern/kernel.asm	/^f0103c97:	c7 04 24 5c 81 10 f0 	movl   $0xf010815c,(%esp)$/;"	l
f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	e8 0f 0b 00 00       	call   f01047b2 <cprintf>$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103ca6	obj/kern/kernel.asm	/^f0103ca6:	5b                   	pop    %ebx$/;"	l
f0103ca7	obj/kern/kernel.asm	/^f0103ca7:	5e                   	pop    %esi$/;"	l
f0103ca8	obj/kern/kernel.asm	/^f0103ca8:	5f                   	pop    %edi$/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	5d                   	pop    %ebp$/;"	l
f0103caa	obj/kern/kernel.asm	/^f0103caa:	c3                   	ret    $/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f0103cb2	obj/kern/kernel.asm	/^f0103cb2:	00 $/;"	l
f0103cb3	obj/kern/kernel.asm	/^f0103cb3:	c7 04 24 00 60 22 00 	movl   $0x226000,(%esp)$/;"	l
f0103cba	obj/kern/kernel.asm	/^f0103cba:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103cbf	obj/kern/kernel.asm	/^f0103cbf:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0103cc9	obj/kern/kernel.asm	/^f0103cc9:	e8 73 dd ff ff       	call   f0101a41 <boot_map_region>$/;"	l
f0103cce	obj/kern/kernel.asm	/^f0103cce:	bb 00 e0 22 f0       	mov    $0xf022e000,%ebx$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	be 00 80 fe ef       	mov    $0xeffe8000,%esi$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	e9 fd f7 ff ff       	jmp    f01034da <mem_init+0x1804>$/;"	l
f0103cdd	obj/kern/kernel.asm	/^f0103cdd:	89 da                	mov    %ebx,%edx$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	89 f8                	mov    %edi,%eax$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	e8 b6 d6 ff ff       	call   f010139c <check_va2pa>$/;"	l
f0103ce6	obj/kern/kernel.asm	/^f0103ce6:	e9 2b fa ff ff       	jmp    f0103716 <mem_init+0x1a40>$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb <user_mem_check>:$/;"	l
f0103ceb	obj/kern/kernel.asm	/^f0103ceb:	55                   	push   %ebp$/;"	l
f0103cec	obj/kern/kernel.asm	/^f0103cec:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cee	obj/kern/kernel.asm	/^f0103cee:	57                   	push   %edi$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	56                   	push   %esi$/;"	l
f0103cf0	obj/kern/kernel.asm	/^f0103cf0:	53                   	push   %ebx$/;"	l
f0103cf1	obj/kern/kernel.asm	/^f0103cf1:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103cf4	obj/kern/kernel.asm	/^f0103cf4:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f0103cfa	obj/kern/kernel.asm	/^f0103cfa:	83 cf 01             	or     $0x1,%edi$/;"	l
f0103cfd	obj/kern/kernel.asm	/^f0103cfd:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103d00	obj/kern/kernel.asm	/^f0103d00:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103d06	obj/kern/kernel.asm	/^f0103d06:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103d09	obj/kern/kernel.asm	/^f0103d09:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0103d0c	obj/kern/kernel.asm	/^f0103d0c:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f0103d11	obj/kern/kernel.asm	/^f0103d11:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103d16	obj/kern/kernel.asm	/^f0103d16:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103d19	obj/kern/kernel.asm	/^f0103d19:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103d1e	obj/kern/kernel.asm	/^f0103d1e:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0103d21	obj/kern/kernel.asm	/^f0103d21:	74 7a                	je     f0103d9d <user_mem_check+0xb2>$/;"	l
f0103d23	obj/kern/kernel.asm	/^f0103d23:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103d29	obj/kern/kernel.asm	/^f0103d29:	77 13                	ja     f0103d3e <user_mem_check+0x53>$/;"	l
f0103d2b	obj/kern/kernel.asm	/^f0103d2b:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	eb 21                	jmp    f0103d55 <user_mem_check+0x6a>$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	76 12                	jbe    f0103d4e <user_mem_check+0x63>$/;"	l
f0103d3c	obj/kern/kernel.asm	/^f0103d3c:	eb 03                	jmp    f0103d41 <user_mem_check+0x56>$/;"	l
f0103d3e	obj/kern/kernel.asm	/^f0103d3e:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	89 1d 44 42 22 f0    	mov    %ebx,0xf0224244$/;"	l
f0103d47	obj/kern/kernel.asm	/^f0103d47:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103d4c	obj/kern/kernel.asm	/^f0103d4c:	eb 4f                	jmp    f0103d9d <user_mem_check+0xb2>$/;"	l
f0103d4e	obj/kern/kernel.asm	/^f0103d4e:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103d55	obj/kern/kernel.asm	/^f0103d55:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103d5c	obj/kern/kernel.asm	/^f0103d5c:	00 $/;"	l
f0103d5d	obj/kern/kernel.asm	/^f0103d5d:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103d61	obj/kern/kernel.asm	/^f0103d61:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103d64	obj/kern/kernel.asm	/^f0103d64:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	e8 e6 db ff ff       	call   f0101952 <pgdir_walk>$/;"	l
f0103d6c	obj/kern/kernel.asm	/^f0103d6c:	85 c0                	test   %eax,%eax$/;"	l
f0103d6e	obj/kern/kernel.asm	/^f0103d6e:	74 08                	je     f0103d78 <user_mem_check+0x8d>$/;"	l
f0103d70	obj/kern/kernel.asm	/^f0103d70:	8b 00                	mov    (%eax),%eax$/;"	l
f0103d72	obj/kern/kernel.asm	/^f0103d72:	21 f8                	and    %edi,%eax$/;"	l
f0103d74	obj/kern/kernel.asm	/^f0103d74:	39 c7                	cmp    %eax,%edi$/;"	l
f0103d76	obj/kern/kernel.asm	/^f0103d76:	74 15                	je     f0103d8d <user_mem_check+0xa2>$/;"	l
f0103d78	obj/kern/kernel.asm	/^f0103d78:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	0f 45 5d 0c          	cmovne 0xc(%ebp),%ebx$/;"	l
f0103d80	obj/kern/kernel.asm	/^f0103d80:	89 1d 44 42 22 f0    	mov    %ebx,0xf0224244$/;"	l
f0103d86	obj/kern/kernel.asm	/^f0103d86:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103d8b	obj/kern/kernel.asm	/^f0103d8b:	eb 10                	jmp    f0103d9d <user_mem_check+0xb2>$/;"	l
f0103d8d	obj/kern/kernel.asm	/^f0103d8d:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103d93	obj/kern/kernel.asm	/^f0103d93:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)$/;"	l
f0103d96	obj/kern/kernel.asm	/^f0103d96:	75 9c                	jne    f0103d34 <user_mem_check+0x49>$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103d9d	obj/kern/kernel.asm	/^f0103d9d:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0103da0	obj/kern/kernel.asm	/^f0103da0:	5b                   	pop    %ebx$/;"	l
f0103da1	obj/kern/kernel.asm	/^f0103da1:	5e                   	pop    %esi$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	5f                   	pop    %edi$/;"	l
f0103da3	obj/kern/kernel.asm	/^f0103da3:	5d                   	pop    %ebp$/;"	l
f0103da4	obj/kern/kernel.asm	/^f0103da4:	c3                   	ret    $/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5 <user_mem_assert>:$/;"	l
f0103da5	obj/kern/kernel.asm	/^f0103da5:	55                   	push   %ebp$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	89 e5                	mov    %esp,%ebp$/;"	l
f0103da8	obj/kern/kernel.asm	/^f0103da8:	53                   	push   %ebx$/;"	l
f0103da9	obj/kern/kernel.asm	/^f0103da9:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103dac	obj/kern/kernel.asm	/^f0103dac:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0103daf	obj/kern/kernel.asm	/^f0103daf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0103db2	obj/kern/kernel.asm	/^f0103db2:	83 c8 04             	or     $0x4,%eax$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103dbc	obj/kern/kernel.asm	/^f0103dbc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103dc0	obj/kern/kernel.asm	/^f0103dc0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103dc3	obj/kern/kernel.asm	/^f0103dc3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103dc7	obj/kern/kernel.asm	/^f0103dc7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103dca	obj/kern/kernel.asm	/^f0103dca:	e8 1c ff ff ff       	call   f0103ceb <user_mem_check>$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	85 c0                	test   %eax,%eax$/;"	l
f0103dd1	obj/kern/kernel.asm	/^f0103dd1:	79 24                	jns    f0103df7 <user_mem_assert+0x52>$/;"	l
f0103dd3	obj/kern/kernel.asm	/^f0103dd3:	a1 44 42 22 f0       	mov    0xf0224244,%eax$/;"	l
f0103dd8	obj/kern/kernel.asm	/^f0103dd8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103ddf	obj/kern/kernel.asm	/^f0103ddf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103de3	obj/kern/kernel.asm	/^f0103de3:	c7 04 24 88 81 10 f0 	movl   $0xf0108188,(%esp)$/;"	l
f0103dea	obj/kern/kernel.asm	/^f0103dea:	e8 c3 09 00 00       	call   f01047b2 <cprintf>$/;"	l
f0103def	obj/kern/kernel.asm	/^f0103def:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103df2	obj/kern/kernel.asm	/^f0103df2:	e8 d1 06 00 00       	call   f01044c8 <env_destroy>$/;"	l
f0103df7	obj/kern/kernel.asm	/^f0103df7:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	5b                   	pop    %ebx$/;"	l
f0103dfb	obj/kern/kernel.asm	/^f0103dfb:	5d                   	pop    %ebp$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	c3                   	ret    $/;"	l
f0103dfd	obj/kern/kernel.asm	/^f0103dfd:	00 00                	add    %al,(%eax)$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00 <region_alloc>:$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	55                   	push   %ebp$/;"	l
f0103e01	obj/kern/kernel.asm	/^f0103e01:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	57                   	push   %edi$/;"	l
f0103e04	obj/kern/kernel.asm	/^f0103e04:	56                   	push   %esi$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	53                   	push   %ebx$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0103e09	obj/kern/kernel.asm	/^f0103e09:	89 c6                	mov    %eax,%esi$/;"	l
f0103e0b	obj/kern/kernel.asm	/^f0103e0b:	89 d3                	mov    %edx,%ebx$/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103e13	obj/kern/kernel.asm	/^f0103e13:	8d bc 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%edi$/;"	l
f0103e1a	obj/kern/kernel.asm	/^f0103e1a:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	39 fb                	cmp    %edi,%ebx$/;"	l
f0103e22	obj/kern/kernel.asm	/^f0103e22:	74 51                	je     f0103e75 <region_alloc+0x75>$/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
f0103e2b	obj/kern/kernel.asm	/^f0103e2b:	e8 69 da ff ff       	call   f0101899 <page_alloc>$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	85 c0                	test   %eax,%eax$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	75 1c                	jne    f0103e50 <region_alloc+0x50>$/;"	l
f0103e34	obj/kern/kernel.asm	/^f0103e34:	c7 44 24 08 c8 84 10 	movl   $0xf01084c8,0x8(%esp)$/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	f0 $/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	c7 44 24 04 3a 01 00 	movl   $0x13a,0x4(%esp)$/;"	l
f0103e43	obj/kern/kernel.asm	/^f0103e43:	00 $/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	c7 04 24 d3 84 10 f0 	movl   $0xf01084d3,(%esp)$/;"	l
f0103e4b	obj/kern/kernel.asm	/^f0103e4b:	e8 f0 c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e50	obj/kern/kernel.asm	/^f0103e50:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f0103e57	obj/kern/kernel.asm	/^f0103e57:	00 $/;"	l
f0103e58	obj/kern/kernel.asm	/^f0103e58:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103e5c	obj/kern/kernel.asm	/^f0103e5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e60	obj/kern/kernel.asm	/^f0103e60:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103e63	obj/kern/kernel.asm	/^f0103e63:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e66	obj/kern/kernel.asm	/^f0103e66:	e8 fd dc ff ff       	call   f0101b68 <page_insert>$/;"	l
f0103e6b	obj/kern/kernel.asm	/^f0103e6b:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103e71	obj/kern/kernel.asm	/^f0103e71:	39 df                	cmp    %ebx,%edi$/;"	l
f0103e73	obj/kern/kernel.asm	/^f0103e73:	75 af                	jne    f0103e24 <region_alloc+0x24>$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	5b                   	pop    %ebx$/;"	l
f0103e79	obj/kern/kernel.asm	/^f0103e79:	5e                   	pop    %esi$/;"	l
f0103e7a	obj/kern/kernel.asm	/^f0103e7a:	5f                   	pop    %edi$/;"	l
f0103e7b	obj/kern/kernel.asm	/^f0103e7b:	5d                   	pop    %ebp$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	c3                   	ret    $/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d <envid2env>:$/;"	l
f0103e7d	obj/kern/kernel.asm	/^f0103e7d:	55                   	push   %ebp$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	89 e5                	mov    %esp,%ebp$/;"	l
f0103e80	obj/kern/kernel.asm	/^f0103e80:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0103e83	obj/kern/kernel.asm	/^f0103e83:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0103e89	obj/kern/kernel.asm	/^f0103e89:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0103e8c	obj/kern/kernel.asm	/^f0103e8c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103e8f	obj/kern/kernel.asm	/^f0103e8f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0103e92	obj/kern/kernel.asm	/^f0103e92:	0f b6 55 10          	movzbl 0x10(%ebp),%edx$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	85 c0                	test   %eax,%eax$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	75 17                	jne    f0103eb1 <envid2env+0x34>$/;"	l
f0103e9a	obj/kern/kernel.asm	/^f0103e9a:	e8 81 29 00 00       	call   f0106820 <cpunum>$/;"	l
f0103e9f	obj/kern/kernel.asm	/^f0103e9f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0103ea8	obj/kern/kernel.asm	/^f0103ea8:	89 06                	mov    %eax,(%esi)$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	eb 67                	jmp    f0103f18 <envid2env+0x9b>$/;"	l
f0103eb1	obj/kern/kernel.asm	/^f0103eb1:	89 c3                	mov    %eax,%ebx$/;"	l
f0103eb3	obj/kern/kernel.asm	/^f0103eb3:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103eb9	obj/kern/kernel.asm	/^f0103eb9:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	03 1d 48 42 22 f0    	add    0xf0224248,%ebx$/;"	l
f0103ec2	obj/kern/kernel.asm	/^f0103ec2:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103ec6	obj/kern/kernel.asm	/^f0103ec6:	74 05                	je     f0103ecd <envid2env+0x50>$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103ecb	obj/kern/kernel.asm	/^f0103ecb:	74 0d                	je     f0103eda <envid2env+0x5d>$/;"	l
f0103ecd	obj/kern/kernel.asm	/^f0103ecd:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103ed8	obj/kern/kernel.asm	/^f0103ed8:	eb 3e                	jmp    f0103f18 <envid2env+0x9b>$/;"	l
f0103eda	obj/kern/kernel.asm	/^f0103eda:	84 d2                	test   %dl,%dl$/;"	l
f0103edc	obj/kern/kernel.asm	/^f0103edc:	74 33                	je     f0103f11 <envid2env+0x94>$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	e8 3d 29 00 00       	call   f0106820 <cpunum>$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	39 98 28 50 22 f0    	cmp    %ebx,-0xfddafd8(%eax)$/;"	l
f0103eec	obj/kern/kernel.asm	/^f0103eec:	74 23                	je     f0103f11 <envid2env+0x94>$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	8b 7b 4c             	mov    0x4c(%ebx),%edi$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	e8 2a 29 00 00       	call   f0106820 <cpunum>$/;"	l
f0103ef6	obj/kern/kernel.asm	/^f0103ef6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0103eff	obj/kern/kernel.asm	/^f0103eff:	3b 78 48             	cmp    0x48(%eax),%edi$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	74 0d                	je     f0103f11 <envid2env+0x94>$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	c7 06 00 00 00 00    	movl   $0x0,(%esi)$/;"	l
f0103f0a	obj/kern/kernel.asm	/^f0103f0a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	eb 07                	jmp    f0103f18 <envid2env+0x9b>$/;"	l
f0103f11	obj/kern/kernel.asm	/^f0103f11:	89 1e                	mov    %ebx,(%esi)$/;"	l
f0103f13	obj/kern/kernel.asm	/^f0103f13:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103f18	obj/kern/kernel.asm	/^f0103f18:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0103f1b	obj/kern/kernel.asm	/^f0103f1b:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0103f21	obj/kern/kernel.asm	/^f0103f21:	89 ec                	mov    %ebp,%esp$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	5d                   	pop    %ebp$/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	c3                   	ret    $/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25 <env_init_percpu>:$/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	55                   	push   %ebp$/;"	l
f0103f26	obj/kern/kernel.asm	/^f0103f26:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f28	obj/kern/kernel.asm	/^f0103f28:	b8 40 23 12 f0       	mov    $0xf0122340,%eax$/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	8e e8                	mov    %eax,%gs$/;"	l
f0103f37	obj/kern/kernel.asm	/^f0103f37:	8e e0                	mov    %eax,%fs$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	b0 10                	mov    $0x10,%al$/;"	l
f0103f3b	obj/kern/kernel.asm	/^f0103f3b:	8e c0                	mov    %eax,%es$/;"	l
f0103f3d	obj/kern/kernel.asm	/^f0103f3d:	8e d8                	mov    %eax,%ds$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	8e d0                	mov    %eax,%ss$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	ea 48 3f 10 f0 08 00 	ljmp   $0x8,$0xf0103f48$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	b0 00                	mov    $0x0,%al$/;"	l
f0103f4a	obj/kern/kernel.asm	/^f0103f4a:	0f 00 d0             	lldt   %ax$/;"	l
f0103f4d	obj/kern/kernel.asm	/^f0103f4d:	5d                   	pop    %ebp$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	c3                   	ret    $/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f <env_init>:$/;"	l
f0103f4f	obj/kern/kernel.asm	/^f0103f4f:	55                   	push   %ebp$/;"	l
f0103f50	obj/kern/kernel.asm	/^f0103f50:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	56                   	push   %esi$/;"	l
f0103f53	obj/kern/kernel.asm	/^f0103f53:	53                   	push   %ebx$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	8b 35 48 42 22 f0    	mov    0xf0224248,%esi$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	8d 86 84 ef 01 00    	lea    0x1ef84(%esi),%eax$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0103f65	obj/kern/kernel.asm	/^f0103f65:	ba ff 03 00 00       	mov    $0x3ff,%edx$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	eb 02                	jmp    f0103f6e <env_init+0x1f>$/;"	l
f0103f6c	obj/kern/kernel.asm	/^f0103f6c:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	89 c3                	mov    %eax,%ebx$/;"	l
f0103f70	obj/kern/kernel.asm	/^f0103f70:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103f77	obj/kern/kernel.asm	/^f0103f77:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103f7a	obj/kern/kernel.asm	/^f0103f7a:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0103f7d	obj/kern/kernel.asm	/^f0103f7d:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f0103f80	obj/kern/kernel.asm	/^f0103f80:	83 fa ff             	cmp    $0xffffffff,%edx$/;"	l
f0103f83	obj/kern/kernel.asm	/^f0103f83:	75 e7                	jne    f0103f6c <env_init+0x1d>$/;"	l
f0103f85	obj/kern/kernel.asm	/^f0103f85:	89 35 4c 42 22 f0    	mov    %esi,0xf022424c$/;"	l
f0103f8b	obj/kern/kernel.asm	/^f0103f8b:	e8 95 ff ff ff       	call   f0103f25 <env_init_percpu>$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	5b                   	pop    %ebx$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	5e                   	pop    %esi$/;"	l
f0103f92	obj/kern/kernel.asm	/^f0103f92:	5d                   	pop    %ebp$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	c3                   	ret    $/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94 <env_alloc>:$/;"	l
f0103f94	obj/kern/kernel.asm	/^f0103f94:	55                   	push   %ebp$/;"	l
f0103f95	obj/kern/kernel.asm	/^f0103f95:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f97	obj/kern/kernel.asm	/^f0103f97:	53                   	push   %ebx$/;"	l
f0103f98	obj/kern/kernel.asm	/^f0103f98:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103f9b	obj/kern/kernel.asm	/^f0103f9b:	8b 1d 4c 42 22 f0    	mov    0xf022424c,%ebx$/;"	l
f0103fa1	obj/kern/kernel.asm	/^f0103fa1:	85 db                	test   %ebx,%ebx$/;"	l
f0103fa3	obj/kern/kernel.asm	/^f0103fa3:	0f 84 a7 01 00 00    	je     f0104150 <env_alloc+0x1bc>$/;"	l
f0103fa9	obj/kern/kernel.asm	/^f0103fa9:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	e8 e4 d8 ff ff       	call   f0101899 <page_alloc>$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	85 c0                	test   %eax,%eax$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	0f 84 9a 01 00 00    	je     f0104157 <env_alloc+0x1c3>$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	89 c2                	mov    %eax,%edx$/;"	l
f0103fbf	obj/kern/kernel.asm	/^f0103fbf:	2b 15 90 4e 22 f0    	sub    0xf0224e90,%edx$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	89 d1                	mov    %edx,%ecx$/;"	l
f0103fcd	obj/kern/kernel.asm	/^f0103fcd:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	3b 0d 88 4e 22 f0    	cmp    0xf0224e88,%ecx$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	72 20                	jb     f0103ff8 <env_alloc+0x64>$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103fdc	obj/kern/kernel.asm	/^f0103fdc:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f0103fe3	obj/kern/kernel.asm	/^f0103fe3:	f0 $/;"	l
f0103fe4	obj/kern/kernel.asm	/^f0103fe4:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0103feb	obj/kern/kernel.asm	/^f0103feb:	00 $/;"	l
f0103fec	obj/kern/kernel.asm	/^f0103fec:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	e8 48 c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0103ffe	obj/kern/kernel.asm	/^f0103ffe:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0104001	obj/kern/kernel.asm	/^f0104001:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0104006	obj/kern/kernel.asm	/^f0104006:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010400d	obj/kern/kernel.asm	/^f010400d:	00 $/;"	l
f010400e	obj/kern/kernel.asm	/^f010400e:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0104013	obj/kern/kernel.asm	/^f0104013:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f010401a	obj/kern/kernel.asm	/^f010401a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010401d	obj/kern/kernel.asm	/^f010401d:	e8 43 22 00 00       	call   f0106265 <memcpy>$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	c7 44 24 08 ec 0e 00 	movl   $0xeec,0x8(%esp)$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	00 $/;"	l
f010402a	obj/kern/kernel.asm	/^f010402a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	00 $/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0104035	obj/kern/kernel.asm	/^f0104035:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104038	obj/kern/kernel.asm	/^f0104038:	e8 54 21 00 00       	call   f0106191 <memset>$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0104040	obj/kern/kernel.asm	/^f0104040:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	77 20                	ja     f0104067 <env_alloc+0xd3>$/;"	l
f0104047	obj/kern/kernel.asm	/^f0104047:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010404b	obj/kern/kernel.asm	/^f010404b:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	f0 $/;"	l
f0104053	obj/kern/kernel.asm	/^f0104053:	c7 44 24 04 d7 00 00 	movl   $0xd7,0x4(%esp)$/;"	l
f010405a	obj/kern/kernel.asm	/^f010405a:	00 $/;"	l
f010405b	obj/kern/kernel.asm	/^f010405b:	c7 04 24 d3 84 10 f0 	movl   $0xf01084d3,(%esp)$/;"	l
f0104062	obj/kern/kernel.asm	/^f0104062:	e8 d9 bf ff ff       	call   f0100040 <_panic>$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f010406d	obj/kern/kernel.asm	/^f010406d:	83 ca 05             	or     $0x5,%edx$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0104076	obj/kern/kernel.asm	/^f0104076:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f010407e	obj/kern/kernel.asm	/^f010407e:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0104083	obj/kern/kernel.asm	/^f0104083:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	89 da                	mov    %ebx,%edx$/;"	l
f010408d	obj/kern/kernel.asm	/^f010408d:	2b 15 48 42 22 f0    	sub    0xf0224248,%edx$/;"	l
f0104093	obj/kern/kernel.asm	/^f0104093:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f010409c	obj/kern/kernel.asm	/^f010409c:	09 d0                	or     %edx,%eax$/;"	l
f010409e	obj/kern/kernel.asm	/^f010409e:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f01040a1	obj/kern/kernel.asm	/^f01040a1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01040a4	obj/kern/kernel.asm	/^f01040a4:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f01040a7	obj/kern/kernel.asm	/^f01040a7:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f01040b5	obj/kern/kernel.asm	/^f01040b5:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f01040bc	obj/kern/kernel.asm	/^f01040bc:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	00 $/;"	l
f01040c4	obj/kern/kernel.asm	/^f01040c4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	00 $/;"	l
f01040cc	obj/kern/kernel.asm	/^f01040cc:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01040cf	obj/kern/kernel.asm	/^f01040cf:	e8 bd 20 00 00       	call   f0106191 <memset>$/;"	l
f01040d4	obj/kern/kernel.asm	/^f01040d4:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f01040e0	obj/kern/kernel.asm	/^f01040e0:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f01040e6	obj/kern/kernel.asm	/^f01040e6:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f01040ed	obj/kern/kernel.asm	/^f01040ed:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f01040fa	obj/kern/kernel.asm	/^f01040fa:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f01040fe	obj/kern/kernel.asm	/^f01040fe:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0104101	obj/kern/kernel.asm	/^f0104101:	a3 4c 42 22 f0       	mov    %eax,0xf022424c$/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104109	obj/kern/kernel.asm	/^f0104109:	89 18                	mov    %ebx,(%eax)$/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	8b 5b 48             	mov    0x48(%ebx),%ebx$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	e8 0d 27 00 00       	call   f0106820 <cpunum>$/;"	l
f0104113	obj/kern/kernel.asm	/^f0104113:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104116	obj/kern/kernel.asm	/^f0104116:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	83 b8 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%eax)$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	74 11                	je     f0104135 <env_alloc+0x1a1>$/;"	l
f0104124	obj/kern/kernel.asm	/^f0104124:	e8 f7 26 00 00       	call   f0106820 <cpunum>$/;"	l
f0104129	obj/kern/kernel.asm	/^f0104129:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0104135	obj/kern/kernel.asm	/^f0104135:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104139	obj/kern/kernel.asm	/^f0104139:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010413d	obj/kern/kernel.asm	/^f010413d:	c7 04 24 de 84 10 f0 	movl   $0xf01084de,(%esp)$/;"	l
f0104144	obj/kern/kernel.asm	/^f0104144:	e8 69 06 00 00       	call   f01047b2 <cprintf>$/;"	l
f0104149	obj/kern/kernel.asm	/^f0104149:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010414e	obj/kern/kernel.asm	/^f010414e:	eb 0c                	jmp    f010415c <env_alloc+0x1c8>$/;"	l
f0104150	obj/kern/kernel.asm	/^f0104150:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	eb 05                	jmp    f010415c <env_alloc+0x1c8>$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010415c	obj/kern/kernel.asm	/^f010415c:	83 c4 14             	add    $0x14,%esp$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	5b                   	pop    %ebx$/;"	l
f0104160	obj/kern/kernel.asm	/^f0104160:	5d                   	pop    %ebp$/;"	l
f0104161	obj/kern/kernel.asm	/^f0104161:	c3                   	ret    $/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162 <env_create>:$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	55                   	push   %ebp$/;"	l
f0104163	obj/kern/kernel.asm	/^f0104163:	89 e5                	mov    %esp,%ebp$/;"	l
f0104165	obj/kern/kernel.asm	/^f0104165:	57                   	push   %edi$/;"	l
f0104166	obj/kern/kernel.asm	/^f0104166:	56                   	push   %esi$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	53                   	push   %ebx$/;"	l
f0104168	obj/kern/kernel.asm	/^f0104168:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104175	obj/kern/kernel.asm	/^f0104175:	00 $/;"	l
f0104176	obj/kern/kernel.asm	/^f0104176:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010417c	obj/kern/kernel.asm	/^f010417c:	e8 13 fe ff ff       	call   f0103f94 <env_alloc>$/;"	l
f0104181	obj/kern/kernel.asm	/^f0104181:	85 c0                	test   %eax,%eax$/;"	l
f0104183	obj/kern/kernel.asm	/^f0104183:	79 1c                	jns    f01041a1 <env_create+0x3f>$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	c7 44 24 08 f3 84 10 	movl   $0xf01084f3,0x8(%esp)$/;"	l
f010418c	obj/kern/kernel.asm	/^f010418c:	f0 $/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d:	c7 44 24 04 a6 01 00 	movl   $0x1a6,0x4(%esp)$/;"	l
f0104194	obj/kern/kernel.asm	/^f0104194:	00 $/;"	l
f0104195	obj/kern/kernel.asm	/^f0104195:	c7 04 24 d3 84 10 f0 	movl   $0xf01084d3,(%esp)$/;"	l
f010419c	obj/kern/kernel.asm	/^f010419c:	e8 9f be ff ff       	call   f0100040 <_panic>$/;"	l
f01041a1	obj/kern/kernel.asm	/^f01041a1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01041a4	obj/kern/kernel.asm	/^f01041a4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01041a7	obj/kern/kernel.asm	/^f01041a7:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f01041ad	obj/kern/kernel.asm	/^f01041ad:	74 1c                	je     f01041cb <env_create+0x69>$/;"	l
f01041af	obj/kern/kernel.asm	/^f01041af:	c7 44 24 08 f3 84 10 	movl   $0xf01084f3,0x8(%esp)$/;"	l
f01041b6	obj/kern/kernel.asm	/^f01041b6:	f0 $/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	c7 44 24 04 82 01 00 	movl   $0x182,0x4(%esp)$/;"	l
f01041be	obj/kern/kernel.asm	/^f01041be:	00 $/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	c7 04 24 d3 84 10 f0 	movl   $0xf01084d3,(%esp)$/;"	l
f01041c6	obj/kern/kernel.asm	/^f01041c6:	e8 75 be ff ff       	call   f0100040 <_panic>$/;"	l
f01041cb	obj/kern/kernel.asm	/^f01041cb:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01041ce	obj/kern/kernel.asm	/^f01041ce:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	77 20                	ja     f01041f8 <env_create+0x96>$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01041dc	obj/kern/kernel.asm	/^f01041dc:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f01041e3	obj/kern/kernel.asm	/^f01041e3:	f0 $/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	c7 44 24 04 84 01 00 	movl   $0x184,0x4(%esp)$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	00 $/;"	l
f01041ec	obj/kern/kernel.asm	/^f01041ec:	c7 04 24 d3 84 10 f0 	movl   $0xf01084d3,(%esp)$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	e8 48 be ff ff       	call   f0100040 <_panic>$/;"	l
f01041f8	obj/kern/kernel.asm	/^f01041f8:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104200	obj/kern/kernel.asm	/^f0104200:	89 fb                	mov    %edi,%ebx$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0104205	obj/kern/kernel.asm	/^f0104205:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0104209	obj/kern/kernel.asm	/^f0104209:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	01 de                	add    %ebx,%esi$/;"	l
f010420e	obj/kern/kernel.asm	/^f010420e:	39 f3                	cmp    %esi,%ebx$/;"	l
f0104210	obj/kern/kernel.asm	/^f0104210:	73 4f                	jae    f0104261 <env_create+0xff>$/;"	l
f0104212	obj/kern/kernel.asm	/^f0104212:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0104215	obj/kern/kernel.asm	/^f0104215:	75 43                	jne    f010425a <env_create+0xf8>$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	8b 53 0c             	mov    0xc(%ebx),%edx$/;"	l
f010421d	obj/kern/kernel.asm	/^f010421d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0104220	obj/kern/kernel.asm	/^f0104220:	e8 db fb ff ff       	call   f0103e00 <region_alloc>$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010422c	obj/kern/kernel.asm	/^f010422c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	00 $/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104237	obj/kern/kernel.asm	/^f0104237:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010423a	obj/kern/kernel.asm	/^f010423a:	e8 52 1f 00 00       	call   f0106191 <memset>$/;"	l
f010423f	obj/kern/kernel.asm	/^f010423f:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104242	obj/kern/kernel.asm	/^f0104242:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104246	obj/kern/kernel.asm	/^f0104246:	89 f8                	mov    %edi,%eax$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010424f	obj/kern/kernel.asm	/^f010424f:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104255	obj/kern/kernel.asm	/^f0104255:	e8 0b 20 00 00       	call   f0106265 <memcpy>$/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	83 c3 20             	add    $0x20,%ebx$/;"	l
f010425d	obj/kern/kernel.asm	/^f010425d:	39 de                	cmp    %ebx,%esi$/;"	l
f010425f	obj/kern/kernel.asm	/^f010425f:	77 b1                	ja     f0104212 <env_create+0xb0>$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0104267	obj/kern/kernel.asm	/^f0104267:	89 42 30             	mov    %eax,0x30(%edx)$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f010426f	obj/kern/kernel.asm	/^f010426f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	77 20                	ja     f0104296 <env_create+0x134>$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010427a	obj/kern/kernel.asm	/^f010427a:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f0104281	obj/kern/kernel.asm	/^f0104281:	f0 $/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	c7 44 24 04 94 01 00 	movl   $0x194,0x4(%esp)$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	00 $/;"	l
f010428a	obj/kern/kernel.asm	/^f010428a:	c7 04 24 d3 84 10 f0 	movl   $0xf01084d3,(%esp)$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	e8 aa bd ff ff       	call   f0100040 <_panic>$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f01042a3	obj/kern/kernel.asm	/^f01042a3:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f01042a8	obj/kern/kernel.asm	/^f01042a8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	e8 50 fb ff ff       	call   f0103e00 <region_alloc>$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01042b3	obj/kern/kernel.asm	/^f01042b3:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f01042b9	obj/kern/kernel.asm	/^f01042b9:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f01042bc	obj/kern/kernel.asm	/^f01042bc:	5b                   	pop    %ebx$/;"	l
f01042bd	obj/kern/kernel.asm	/^f01042bd:	5e                   	pop    %esi$/;"	l
f01042be	obj/kern/kernel.asm	/^f01042be:	5f                   	pop    %edi$/;"	l
f01042bf	obj/kern/kernel.asm	/^f01042bf:	5d                   	pop    %ebp$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	c3                   	ret    $/;"	l
f01042c1	obj/kern/kernel.asm	/^f01042c1 <env_free>:$/;"	l
f01042c1	obj/kern/kernel.asm	/^f01042c1:	55                   	push   %ebp$/;"	l
f01042c2	obj/kern/kernel.asm	/^f01042c2:	89 e5                	mov    %esp,%ebp$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	57                   	push   %edi$/;"	l
f01042c5	obj/kern/kernel.asm	/^f01042c5:	56                   	push   %esi$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	53                   	push   %ebx$/;"	l
f01042c7	obj/kern/kernel.asm	/^f01042c7:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01042cd	obj/kern/kernel.asm	/^f01042cd:	e8 4e 25 00 00       	call   f0106820 <cpunum>$/;"	l
f01042d2	obj/kern/kernel.asm	/^f01042d2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01042d5	obj/kern/kernel.asm	/^f01042d5:	39 b8 28 50 22 f0    	cmp    %edi,-0xfddafd8(%eax)$/;"	l
f01042db	obj/kern/kernel.asm	/^f01042db:	75 34                	jne    f0104311 <env_free+0x50>$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	77 20                	ja     f0104309 <env_free+0x48>$/;"	l
f01042e9	obj/kern/kernel.asm	/^f01042e9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01042ed	obj/kern/kernel.asm	/^f01042ed:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	f0 $/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	c7 44 24 04 ba 01 00 	movl   $0x1ba,0x4(%esp)$/;"	l
f01042fc	obj/kern/kernel.asm	/^f01042fc:	00 $/;"	l
f01042fd	obj/kern/kernel.asm	/^f01042fd:	c7 04 24 d3 84 10 f0 	movl   $0xf01084d3,(%esp)$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	e8 37 bd ff ff       	call   f0100040 <_panic>$/;"	l
f0104309	obj/kern/kernel.asm	/^f0104309:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010430e	obj/kern/kernel.asm	/^f010430e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	8b 5f 48             	mov    0x48(%edi),%ebx$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	e8 07 25 00 00       	call   f0106820 <cpunum>$/;"	l
f0104319	obj/kern/kernel.asm	/^f0104319:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010431c	obj/kern/kernel.asm	/^f010431c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104321	obj/kern/kernel.asm	/^f0104321:	83 ba 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%edx)$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	74 11                	je     f010433b <env_free+0x7a>$/;"	l
f010432a	obj/kern/kernel.asm	/^f010432a:	e8 f1 24 00 00       	call   f0106820 <cpunum>$/;"	l
f010432f	obj/kern/kernel.asm	/^f010432f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104332	obj/kern/kernel.asm	/^f0104332:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010433b	obj/kern/kernel.asm	/^f010433b:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010433f	obj/kern/kernel.asm	/^f010433f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104343	obj/kern/kernel.asm	/^f0104343:	c7 04 24 f9 84 10 f0 	movl   $0xf01084f9,(%esp)$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	e8 63 04 00 00       	call   f01047b2 <cprintf>$/;"	l
f010434f	obj/kern/kernel.asm	/^f010434f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0104356	obj/kern/kernel.asm	/^f0104356:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010435f	obj/kern/kernel.asm	/^f010435f:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	8b 34 90             	mov    (%eax,%edx,4),%esi$/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e:	0f 84 b8 00 00 00    	je     f010442c <env_free+0x16b>$/;"	l
f0104374	obj/kern/kernel.asm	/^f0104374:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f010437a	obj/kern/kernel.asm	/^f010437a:	89 f0                	mov    %esi,%eax$/;"	l
f010437c	obj/kern/kernel.asm	/^f010437c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	3b 05 88 4e 22 f0    	cmp    0xf0224e88,%eax$/;"	l
f0104388	obj/kern/kernel.asm	/^f0104388:	72 20                	jb     f01043aa <env_free+0xe9>$/;"	l
f010438a	obj/kern/kernel.asm	/^f010438a:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010438e	obj/kern/kernel.asm	/^f010438e:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f0104395	obj/kern/kernel.asm	/^f0104395:	f0 $/;"	l
f0104396	obj/kern/kernel.asm	/^f0104396:	c7 44 24 04 c9 01 00 	movl   $0x1c9,0x4(%esp)$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	00 $/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	c7 04 24 d3 84 10 f0 	movl   $0xf01084d3,(%esp)$/;"	l
f01043a5	obj/kern/kernel.asm	/^f01043a5:	e8 96 bc ff ff       	call   f0100040 <_panic>$/;"	l
f01043aa	obj/kern/kernel.asm	/^f01043aa:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f01043ad	obj/kern/kernel.asm	/^f01043ad:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f01043b0	obj/kern/kernel.asm	/^f01043b0:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01043b3	obj/kern/kernel.asm	/^f01043b3:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f01043bf	obj/kern/kernel.asm	/^f01043bf:	01 $/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0:	74 17                	je     f01043d9 <env_free+0x118>$/;"	l
f01043c2	obj/kern/kernel.asm	/^f01043c2:	89 d8                	mov    %ebx,%eax$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01043c7	obj/kern/kernel.asm	/^f01043c7:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f01043ca	obj/kern/kernel.asm	/^f01043ca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01043d4	obj/kern/kernel.asm	/^f01043d4:	e8 51 d7 ff ff       	call   f0101b2a <page_remove>$/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f01043e2	obj/kern/kernel.asm	/^f01043e2:	75 d4                	jne    f01043b8 <env_free+0xf7>$/;"	l
f01043e4	obj/kern/kernel.asm	/^f01043e4:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f01043e7	obj/kern/kernel.asm	/^f01043e7:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f01043f1	obj/kern/kernel.asm	/^f01043f1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01043f4	obj/kern/kernel.asm	/^f01043f4:	3b 05 88 4e 22 f0    	cmp    0xf0224e88,%eax$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	72 1c                	jb     f0104418 <env_free+0x157>$/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	c7 44 24 08 bc 79 10 	movl   $0xf01079bc,0x8(%esp)$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	f0 $/;"	l
f0104404	obj/kern/kernel.asm	/^f0104404:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	00 $/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f0104413	obj/kern/kernel.asm	/^f0104413:	e8 28 bc ff ff       	call   f0100040 <_panic>$/;"	l
f0104418	obj/kern/kernel.asm	/^f0104418:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010441b	obj/kern/kernel.asm	/^f010441b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010441e	obj/kern/kernel.asm	/^f010441e:	03 05 90 4e 22 f0    	add    0xf0224e90,%eax$/;"	l
f0104424	obj/kern/kernel.asm	/^f0104424:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104427	obj/kern/kernel.asm	/^f0104427:	e8 03 d5 ff ff       	call   f010192f <page_decref>$/;"	l
f010442c	obj/kern/kernel.asm	/^f010442c:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f0104430	obj/kern/kernel.asm	/^f0104430:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	0f 85 19 ff ff ff    	jne    f0104356 <env_free+0x95>$/;"	l
f010443d	obj/kern/kernel.asm	/^f010443d:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104445	obj/kern/kernel.asm	/^f0104445:	77 20                	ja     f0104467 <env_free+0x1a6>$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f0104452	obj/kern/kernel.asm	/^f0104452:	f0 $/;"	l
f0104453	obj/kern/kernel.asm	/^f0104453:	c7 44 24 04 d7 01 00 	movl   $0x1d7,0x4(%esp)$/;"	l
f010445a	obj/kern/kernel.asm	/^f010445a:	00 $/;"	l
f010445b	obj/kern/kernel.asm	/^f010445b:	c7 04 24 d3 84 10 f0 	movl   $0xf01084d3,(%esp)$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	e8 d9 bb ff ff       	call   f0100040 <_panic>$/;"	l
f0104467	obj/kern/kernel.asm	/^f0104467:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f010446e	obj/kern/kernel.asm	/^f010446e:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0104476	obj/kern/kernel.asm	/^f0104476:	3b 05 88 4e 22 f0    	cmp    0xf0224e88,%eax$/;"	l
f010447c	obj/kern/kernel.asm	/^f010447c:	72 1c                	jb     f010449a <env_free+0x1d9>$/;"	l
f010447e	obj/kern/kernel.asm	/^f010447e:	c7 44 24 08 bc 79 10 	movl   $0xf01079bc,0x8(%esp)$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	f0 $/;"	l
f0104486	obj/kern/kernel.asm	/^f0104486:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f010448d	obj/kern/kernel.asm	/^f010448d:	00 $/;"	l
f010448e	obj/kern/kernel.asm	/^f010448e:	c7 04 24 c9 81 10 f0 	movl   $0xf01081c9,(%esp)$/;"	l
f0104495	obj/kern/kernel.asm	/^f0104495:	e8 a6 bb ff ff       	call   f0100040 <_panic>$/;"	l
f010449a	obj/kern/kernel.asm	/^f010449a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	03 05 90 4e 22 f0    	add    0xf0224e90,%eax$/;"	l
f01044a3	obj/kern/kernel.asm	/^f01044a3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	e8 84 d4 ff ff       	call   f010192f <page_decref>$/;"	l
f01044ab	obj/kern/kernel.asm	/^f01044ab:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f01044b2	obj/kern/kernel.asm	/^f01044b2:	a1 4c 42 22 f0       	mov    0xf022424c,%eax$/;"	l
f01044b7	obj/kern/kernel.asm	/^f01044b7:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f01044ba	obj/kern/kernel.asm	/^f01044ba:	89 3d 4c 42 22 f0    	mov    %edi,0xf022424c$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01044c3	obj/kern/kernel.asm	/^f01044c3:	5b                   	pop    %ebx$/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	5e                   	pop    %esi$/;"	l
f01044c5	obj/kern/kernel.asm	/^f01044c5:	5f                   	pop    %edi$/;"	l
f01044c6	obj/kern/kernel.asm	/^f01044c6:	5d                   	pop    %ebp$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	c3                   	ret    $/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8 <env_destroy>:$/;"	l
f01044c8	obj/kern/kernel.asm	/^f01044c8:	55                   	push   %ebp$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	89 e5                	mov    %esp,%ebp$/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb:	53                   	push   %ebx$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01044cf	obj/kern/kernel.asm	/^f01044cf:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01044d2	obj/kern/kernel.asm	/^f01044d2:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	75 19                	jne    f01044f1 <env_destroy+0x29>$/;"	l
f01044d8	obj/kern/kernel.asm	/^f01044d8:	e8 43 23 00 00       	call   f0106820 <cpunum>$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	39 98 28 50 22 f0    	cmp    %ebx,-0xfddafd8(%eax)$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	74 09                	je     f01044f1 <env_destroy+0x29>$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f01044ef	obj/kern/kernel.asm	/^f01044ef:	eb 2f                	jmp    f0104520 <env_destroy+0x58>$/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01044f4	obj/kern/kernel.asm	/^f01044f4:	e8 c8 fd ff ff       	call   f01042c1 <env_free>$/;"	l
f01044f9	obj/kern/kernel.asm	/^f01044f9:	e8 22 23 00 00       	call   f0106820 <cpunum>$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104501	obj/kern/kernel.asm	/^f0104501:	39 98 28 50 22 f0    	cmp    %ebx,-0xfddafd8(%eax)$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	75 17                	jne    f0104520 <env_destroy+0x58>$/;"	l
f0104509	obj/kern/kernel.asm	/^f0104509:	e8 12 23 00 00       	call   f0106820 <cpunum>$/;"	l
f010450e	obj/kern/kernel.asm	/^f010450e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	c7 80 28 50 22 f0 00 	movl   $0x0,-0xfddafd8(%eax)$/;"	l
f0104518	obj/kern/kernel.asm	/^f0104518:	00 00 00 $/;"	l
f010451b	obj/kern/kernel.asm	/^f010451b:	e8 f0 0a 00 00       	call   f0105010 <sched_yield>$/;"	l
f0104520	obj/kern/kernel.asm	/^f0104520:	83 c4 14             	add    $0x14,%esp$/;"	l
f0104523	obj/kern/kernel.asm	/^f0104523:	5b                   	pop    %ebx$/;"	l
f0104524	obj/kern/kernel.asm	/^f0104524:	5d                   	pop    %ebp$/;"	l
f0104525	obj/kern/kernel.asm	/^f0104525:	c3                   	ret    $/;"	l
f0104526	obj/kern/kernel.asm	/^f0104526 <env_pop_tf>:$/;"	l
f0104526	obj/kern/kernel.asm	/^f0104526:	55                   	push   %ebp$/;"	l
f0104527	obj/kern/kernel.asm	/^f0104527:	89 e5                	mov    %esp,%ebp$/;"	l
f0104529	obj/kern/kernel.asm	/^f0104529:	53                   	push   %ebx$/;"	l
f010452a	obj/kern/kernel.asm	/^f010452a:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	e8 ee 22 00 00       	call   f0106820 <cpunum>$/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104535	obj/kern/kernel.asm	/^f0104535:	8b 98 28 50 22 f0    	mov    -0xfddafd8(%eax),%ebx$/;"	l
f010453b	obj/kern/kernel.asm	/^f010453b:	e8 e0 22 00 00       	call   f0106820 <cpunum>$/;"	l
f0104540	obj/kern/kernel.asm	/^f0104540:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0104543	obj/kern/kernel.asm	/^f0104543:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0104546	obj/kern/kernel.asm	/^f0104546:	61                   	popa   $/;"	l
f0104547	obj/kern/kernel.asm	/^f0104547:	07                   	pop    %es$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	1f                   	pop    %ds$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	83 c4 08             	add    $0x8,%esp$/;"	l
f010454c	obj/kern/kernel.asm	/^f010454c:	cf                   	iret   $/;"	l
f010454d	obj/kern/kernel.asm	/^f010454d:	c7 44 24 08 0f 85 10 	movl   $0xf010850f,0x8(%esp)$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	f0 $/;"	l
f0104555	obj/kern/kernel.asm	/^f0104555:	c7 44 24 04 0d 02 00 	movl   $0x20d,0x4(%esp)$/;"	l
f010455c	obj/kern/kernel.asm	/^f010455c:	00 $/;"	l
f010455d	obj/kern/kernel.asm	/^f010455d:	c7 04 24 d3 84 10 f0 	movl   $0xf01084d3,(%esp)$/;"	l
f0104564	obj/kern/kernel.asm	/^f0104564:	e8 d7 ba ff ff       	call   f0100040 <_panic>$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569 <env_run>:$/;"	l
f0104569	obj/kern/kernel.asm	/^f0104569:	55                   	push   %ebp$/;"	l
f010456a	obj/kern/kernel.asm	/^f010456a:	89 e5                	mov    %esp,%ebp$/;"	l
f010456c	obj/kern/kernel.asm	/^f010456c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010456f	obj/kern/kernel.asm	/^f010456f:	e8 ac 22 00 00       	call   f0106820 <cpunum>$/;"	l
f0104574	obj/kern/kernel.asm	/^f0104574:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104577	obj/kern/kernel.asm	/^f0104577:	83 b8 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%eax)$/;"	l
f010457e	obj/kern/kernel.asm	/^f010457e:	74 29                	je     f01045a9 <env_run+0x40>$/;"	l
f0104580	obj/kern/kernel.asm	/^f0104580:	e8 9b 22 00 00       	call   f0106820 <cpunum>$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104588	obj/kern/kernel.asm	/^f0104588:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f010458e	obj/kern/kernel.asm	/^f010458e:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	75 15                	jne    f01045a9 <env_run+0x40>$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	e8 87 22 00 00       	call   f0106820 <cpunum>$/;"	l
f0104599	obj/kern/kernel.asm	/^f0104599:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010459c	obj/kern/kernel.asm	/^f010459c:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01045a2	obj/kern/kernel.asm	/^f01045a2:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	e8 72 22 00 00       	call   f0106820 <cpunum>$/;"	l
f01045ae	obj/kern/kernel.asm	/^f01045ae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045b1	obj/kern/kernel.asm	/^f01045b1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01045b4	obj/kern/kernel.asm	/^f01045b4:	89 90 28 50 22 f0    	mov    %edx,-0xfddafd8(%eax)$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	e8 61 22 00 00       	call   f0106820 <cpunum>$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045c2	obj/kern/kernel.asm	/^f01045c2:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f01045cf	obj/kern/kernel.asm	/^f01045cf:	e8 4c 22 00 00       	call   f0106820 <cpunum>$/;"	l
f01045d4	obj/kern/kernel.asm	/^f01045d4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01045dd	obj/kern/kernel.asm	/^f01045dd:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f01045e1	obj/kern/kernel.asm	/^f01045e1:	e8 3a 22 00 00       	call   f0106820 <cpunum>$/;"	l
f01045e6	obj/kern/kernel.asm	/^f01045e6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01045ef	obj/kern/kernel.asm	/^f01045ef:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	77 20                	ja     f0104619 <env_run+0xb0>$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01045fd	obj/kern/kernel.asm	/^f01045fd:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f0104604	obj/kern/kernel.asm	/^f0104604:	f0 $/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	c7 44 24 04 31 02 00 	movl   $0x231,0x4(%esp)$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	00 $/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	c7 04 24 d3 84 10 f0 	movl   $0xf01084d3,(%esp)$/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614:	e8 27 ba ff ff       	call   f0100040 <_panic>$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010461e	obj/kern/kernel.asm	/^f010461e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	c7 04 24 40 24 12 f0 	movl   $0xf0122440,(%esp)$/;"	l
f0104628	obj/kern/kernel.asm	/^f0104628:	e8 66 25 00 00       	call   f0106b93 <spin_unlock>$/;"	l
f010462d	obj/kern/kernel.asm	/^f010462d:	f3 90                	pause  $/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	e8 ec 21 00 00       	call   f0106820 <cpunum>$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f010463d	obj/kern/kernel.asm	/^f010463d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104640	obj/kern/kernel.asm	/^f0104640:	e8 e1 fe ff ff       	call   f0104526 <env_pop_tf>$/;"	l
f0104645	obj/kern/kernel.asm	/^f0104645:	00 00                	add    %al,(%eax)$/;"	l
f0104648	obj/kern/kernel.asm	/^f0104648 <mc146818_read>:$/;"	l
f0104648	obj/kern/kernel.asm	/^f0104648:	55                   	push   %ebp$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	89 e5                	mov    %esp,%ebp$/;"	l
f010464b	obj/kern/kernel.asm	/^f010464b:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0104650	obj/kern/kernel.asm	/^f0104650:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104653	obj/kern/kernel.asm	/^f0104653:	ee                   	out    %al,(%dx)$/;"	l
f0104654	obj/kern/kernel.asm	/^f0104654:	b2 71                	mov    $0x71,%dl$/;"	l
f0104656	obj/kern/kernel.asm	/^f0104656:	ec                   	in     (%dx),%al$/;"	l
f0104657	obj/kern/kernel.asm	/^f0104657:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010465a	obj/kern/kernel.asm	/^f010465a:	5d                   	pop    %ebp$/;"	l
f010465b	obj/kern/kernel.asm	/^f010465b:	c3                   	ret    $/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c <mc146818_write>:$/;"	l
f010465c	obj/kern/kernel.asm	/^f010465c:	55                   	push   %ebp$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	89 e5                	mov    %esp,%ebp$/;"	l
f010465f	obj/kern/kernel.asm	/^f010465f:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0104664	obj/kern/kernel.asm	/^f0104664:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	ee                   	out    %al,(%dx)$/;"	l
f0104668	obj/kern/kernel.asm	/^f0104668:	b2 71                	mov    $0x71,%dl$/;"	l
f010466a	obj/kern/kernel.asm	/^f010466a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010466d	obj/kern/kernel.asm	/^f010466d:	ee                   	out    %al,(%dx)$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	5d                   	pop    %ebp$/;"	l
f010466f	obj/kern/kernel.asm	/^f010466f:	c3                   	ret    $/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670 <irq_setmask_8259A>:$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	55                   	push   %ebp$/;"	l
f0104671	obj/kern/kernel.asm	/^f0104671:	89 e5                	mov    %esp,%ebp$/;"	l
f0104673	obj/kern/kernel.asm	/^f0104673:	56                   	push   %esi$/;"	l
f0104674	obj/kern/kernel.asm	/^f0104674:	53                   	push   %ebx$/;"	l
f0104675	obj/kern/kernel.asm	/^f0104675:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010467b	obj/kern/kernel.asm	/^f010467b:	89 c6                	mov    %eax,%esi$/;"	l
f010467d	obj/kern/kernel.asm	/^f010467d:	66 a3 c8 23 12 f0    	mov    %ax,0xf01223c8$/;"	l
f0104683	obj/kern/kernel.asm	/^f0104683:	80 3d 50 42 22 f0 00 	cmpb   $0x0,0xf0224250$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	74 4e                	je     f01046da <irq_setmask_8259A+0x6a>$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	ee                   	out    %al,(%dx)$/;"	l
f0104692	obj/kern/kernel.asm	/^f0104692:	89 f0                	mov    %esi,%eax$/;"	l
f0104694	obj/kern/kernel.asm	/^f0104694:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	b2 a1                	mov    $0xa1,%dl$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	ee                   	out    %al,(%dx)$/;"	l
f010469b	obj/kern/kernel.asm	/^f010469b:	c7 04 24 1b 85 10 f0 	movl   $0xf010851b,(%esp)$/;"	l
f01046a2	obj/kern/kernel.asm	/^f01046a2:	e8 0b 01 00 00       	call   f01047b2 <cprintf>$/;"	l
f01046a7	obj/kern/kernel.asm	/^f01046a7:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	0f b7 f6             	movzwl %si,%esi$/;"	l
f01046af	obj/kern/kernel.asm	/^f01046af:	f7 d6                	not    %esi$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	0f a3 de             	bt     %ebx,%esi$/;"	l
f01046b4	obj/kern/kernel.asm	/^f01046b4:	73 10                	jae    f01046c6 <irq_setmask_8259A+0x56>$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	c7 04 24 f3 89 10 f0 	movl   $0xf01089f3,(%esp)$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	e8 ec 00 00 00       	call   f01047b2 <cprintf>$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01046cc	obj/kern/kernel.asm	/^f01046cc:	75 e3                	jne    f01046b1 <irq_setmask_8259A+0x41>$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	c7 04 24 96 84 10 f0 	movl   $0xf0108496,(%esp)$/;"	l
f01046d5	obj/kern/kernel.asm	/^f01046d5:	e8 d8 00 00 00       	call   f01047b2 <cprintf>$/;"	l
f01046da	obj/kern/kernel.asm	/^f01046da:	83 c4 10             	add    $0x10,%esp$/;"	l
f01046dd	obj/kern/kernel.asm	/^f01046dd:	5b                   	pop    %ebx$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	5e                   	pop    %esi$/;"	l
f01046df	obj/kern/kernel.asm	/^f01046df:	5d                   	pop    %ebp$/;"	l
f01046e0	obj/kern/kernel.asm	/^f01046e0:	c3                   	ret    $/;"	l
f01046e1	obj/kern/kernel.asm	/^f01046e1 <pic_init>:$/;"	l
f01046e1	obj/kern/kernel.asm	/^f01046e1:	55                   	push   %ebp$/;"	l
f01046e2	obj/kern/kernel.asm	/^f01046e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01046e4	obj/kern/kernel.asm	/^f01046e4:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01046e7	obj/kern/kernel.asm	/^f01046e7:	c6 05 50 42 22 f0 01 	movb   $0x1,0xf0224250$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01046f3	obj/kern/kernel.asm	/^f01046f3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01046f8	obj/kern/kernel.asm	/^f01046f8:	ee                   	out    %al,(%dx)$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01046fb	obj/kern/kernel.asm	/^f01046fb:	ee                   	out    %al,(%dx)$/;"	l
f01046fc	obj/kern/kernel.asm	/^f01046fc:	b2 20                	mov    $0x20,%dl$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0104703	obj/kern/kernel.asm	/^f0104703:	ee                   	out    %al,(%dx)$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	b2 21                	mov    $0x21,%dl$/;"	l
f0104706	obj/kern/kernel.asm	/^f0104706:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	ee                   	out    %al,(%dx)$/;"	l
f010470c	obj/kern/kernel.asm	/^f010470c:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f0104711	obj/kern/kernel.asm	/^f0104711:	ee                   	out    %al,(%dx)$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	ee                   	out    %al,(%dx)$/;"	l
f0104718	obj/kern/kernel.asm	/^f0104718:	b2 a0                	mov    $0xa0,%dl$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f010471f	obj/kern/kernel.asm	/^f010471f:	ee                   	out    %al,(%dx)$/;"	l
f0104720	obj/kern/kernel.asm	/^f0104720:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f0104727	obj/kern/kernel.asm	/^f0104727:	ee                   	out    %al,(%dx)$/;"	l
f0104728	obj/kern/kernel.asm	/^f0104728:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f010472d	obj/kern/kernel.asm	/^f010472d:	ee                   	out    %al,(%dx)$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104733	obj/kern/kernel.asm	/^f0104733:	ee                   	out    %al,(%dx)$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	b2 20                	mov    $0x20,%dl$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	ee                   	out    %al,(%dx)$/;"	l
f010473c	obj/kern/kernel.asm	/^f010473c:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104741	obj/kern/kernel.asm	/^f0104741:	ee                   	out    %al,(%dx)$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104744	obj/kern/kernel.asm	/^f0104744:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f0104749	obj/kern/kernel.asm	/^f0104749:	ee                   	out    %al,(%dx)$/;"	l
f010474a	obj/kern/kernel.asm	/^f010474a:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	ee                   	out    %al,(%dx)$/;"	l
f0104750	obj/kern/kernel.asm	/^f0104750:	0f b7 05 c8 23 12 f0 	movzwl 0xf01223c8,%eax$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b:	74 0b                	je     f0104768 <pic_init+0x87>$/;"	l
f010475d	obj/kern/kernel.asm	/^f010475d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	e8 08 ff ff ff       	call   f0104670 <irq_setmask_8259A>$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	c9                   	leave  $/;"	l
f0104769	obj/kern/kernel.asm	/^f0104769:	c3                   	ret    $/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c <putch>:$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	55                   	push   %ebp$/;"	l
f010476d	obj/kern/kernel.asm	/^f010476d:	89 e5                	mov    %esp,%ebp$/;"	l
f010476f	obj/kern/kernel.asm	/^f010476f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104772	obj/kern/kernel.asm	/^f0104772:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	e8 25 c0 ff ff       	call   f01007a2 <cputchar>$/;"	l
f010477d	obj/kern/kernel.asm	/^f010477d:	c9                   	leave  $/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	c3                   	ret    $/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f <vcprintf>:$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	55                   	push   %ebp$/;"	l
f0104780	obj/kern/kernel.asm	/^f0104780:	89 e5                	mov    %esp,%ebp$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010478c	obj/kern/kernel.asm	/^f010478c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010478f	obj/kern/kernel.asm	/^f010478f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010479a	obj/kern/kernel.asm	/^f010479a:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010479d	obj/kern/kernel.asm	/^f010479d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	c7 04 24 6c 47 10 f0 	movl   $0xf010476c,(%esp)$/;"	l
f01047a8	obj/kern/kernel.asm	/^f01047a8:	e8 dd 12 00 00       	call   f0105a8a <vprintfmt>$/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01047b0	obj/kern/kernel.asm	/^f01047b0:	c9                   	leave  $/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	c3                   	ret    $/;"	l
f01047b2	obj/kern/kernel.asm	/^f01047b2 <cprintf>:$/;"	l
f01047b2	obj/kern/kernel.asm	/^f01047b2:	55                   	push   %ebp$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01047bb	obj/kern/kernel.asm	/^f01047bb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	e8 b5 ff ff ff       	call   f010477f <vcprintf>$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	c9                   	leave  $/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	c3                   	ret    $/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	00 00                	add    %al,(%eax)$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0 <trap_init_percpu>:$/;"	l
f01047d0	obj/kern/kernel.asm	/^f01047d0:	55                   	push   %ebp$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01047d3	obj/kern/kernel.asm	/^f01047d3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01047d6	obj/kern/kernel.asm	/^f01047d6:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01047dc	obj/kern/kernel.asm	/^f01047dc:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01047df	obj/kern/kernel.asm	/^f01047df:	e8 3c 20 00 00       	call   f0106820 <cpunum>$/;"	l
f01047e4	obj/kern/kernel.asm	/^f01047e4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047e7	obj/kern/kernel.asm	/^f01047e7:	0f b6 98 20 50 22 f0 	movzbl -0xfddafe0(%eax),%ebx$/;"	l
f01047ee	obj/kern/kernel.asm	/^f01047ee:	e8 2d 20 00 00       	call   f0106820 <cpunum>$/;"	l
f01047f3	obj/kern/kernel.asm	/^f01047f3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01047f6	obj/kern/kernel.asm	/^f01047f6:	89 da                	mov    %ebx,%edx$/;"	l
f01047f8	obj/kern/kernel.asm	/^f01047f8:	c1 e2 0f             	shl    $0xf,%edx$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	81 c2 00 e0 22 f0    	add    $0xf022e000,%edx$/;"	l
f0104801	obj/kern/kernel.asm	/^f0104801:	89 90 30 50 22 f0    	mov    %edx,-0xfddafd0(%eax)$/;"	l
f0104807	obj/kern/kernel.asm	/^f0104807:	e8 14 20 00 00       	call   f0106820 <cpunum>$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010480f	obj/kern/kernel.asm	/^f010480f:	66 c7 80 34 50 22 f0 	movw   $0x10,-0xfddafcc(%eax)$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	10 00 $/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	83 c3 05             	add    $0x5,%ebx$/;"	l
f010481b	obj/kern/kernel.asm	/^f010481b:	e8 00 20 00 00       	call   f0106820 <cpunum>$/;"	l
f0104820	obj/kern/kernel.asm	/^f0104820:	89 c6                	mov    %eax,%esi$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	e8 f9 1f 00 00       	call   f0106820 <cpunum>$/;"	l
f0104827	obj/kern/kernel.asm	/^f0104827:	89 c7                	mov    %eax,%edi$/;"	l
f0104829	obj/kern/kernel.asm	/^f0104829:	e8 f2 1f 00 00       	call   f0106820 <cpunum>$/;"	l
f010482e	obj/kern/kernel.asm	/^f010482e:	66 c7 04 dd 60 23 12 	movw   $0x68,-0xfeddca0(,%ebx,8)$/;"	l
f0104835	obj/kern/kernel.asm	/^f0104835:	f0 68 00 $/;"	l
f0104838	obj/kern/kernel.asm	/^f0104838:	6b f6 74             	imul   $0x74,%esi,%esi$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	81 c6 2c 50 22 f0    	add    $0xf022502c,%esi$/;"	l
f0104841	obj/kern/kernel.asm	/^f0104841:	66 89 34 dd 62 23 12 	mov    %si,-0xfeddc9e(,%ebx,8)$/;"	l
f0104848	obj/kern/kernel.asm	/^f0104848:	f0 $/;"	l
f0104849	obj/kern/kernel.asm	/^f0104849:	6b d7 74             	imul   $0x74,%edi,%edx$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	81 c2 2c 50 22 f0    	add    $0xf022502c,%edx$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0104855	obj/kern/kernel.asm	/^f0104855:	88 14 dd 64 23 12 f0 	mov    %dl,-0xfeddc9c(,%ebx,8)$/;"	l
f010485c	obj/kern/kernel.asm	/^f010485c:	c6 04 dd 66 23 12 f0 	movb   $0x40,-0xfeddc9a(,%ebx,8)$/;"	l
f0104863	obj/kern/kernel.asm	/^f0104863:	40 $/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	05 2c 50 22 f0       	add    $0xf022502c,%eax$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010486f	obj/kern/kernel.asm	/^f010486f:	88 04 dd 67 23 12 f0 	mov    %al,-0xfeddc99(,%ebx,8)$/;"	l
f0104876	obj/kern/kernel.asm	/^f0104876:	c6 04 dd 65 23 12 f0 	movb   $0x89,-0xfeddc9b(,%ebx,8)$/;"	l
f010487d	obj/kern/kernel.asm	/^f010487d:	89 $/;"	l
f010487e	obj/kern/kernel.asm	/^f010487e:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f0104881	obj/kern/kernel.asm	/^f0104881:	0f 00 db             	ltr    %bx$/;"	l
f0104884	obj/kern/kernel.asm	/^f0104884:	b8 cc 23 12 f0       	mov    $0xf01223cc,%eax$/;"	l
f0104889	obj/kern/kernel.asm	/^f0104889:	0f 01 18             	lidtl  (%eax)$/;"	l
f010488c	obj/kern/kernel.asm	/^f010488c:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0104892	obj/kern/kernel.asm	/^f0104892:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	89 ec                	mov    %ebp,%esp$/;"	l
f0104897	obj/kern/kernel.asm	/^f0104897:	5d                   	pop    %ebp$/;"	l
f0104898	obj/kern/kernel.asm	/^f0104898:	c3                   	ret    $/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899 <trap_init>:$/;"	l
f0104899	obj/kern/kernel.asm	/^f0104899:	55                   	push   %ebp$/;"	l
f010489a	obj/kern/kernel.asm	/^f010489a:	89 e5                	mov    %esp,%ebp$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f01048a4	obj/kern/kernel.asm	/^f01048a4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01048a9	obj/kern/kernel.asm	/^f01048a9:	eb 06                	jmp    f01048b1 <trap_init+0x18>$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	83 c0 01             	add    $0x1,%eax$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	83 c2 01             	add    $0x1,%edx$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	75 30                	jne    f01048e6 <trap_init+0x4d>$/;"	l
f01048b6	obj/kern/kernel.asm	/^f01048b6:	8b 0d e0 23 12 f0    	mov    0xf01223e0,%ecx$/;"	l
f01048bc	obj/kern/kernel.asm	/^f01048bc:	66 89 0d 78 42 22 f0 	mov    %cx,0xf0224278$/;"	l
f01048c3	obj/kern/kernel.asm	/^f01048c3:	66 c7 05 7a 42 22 f0 	movw   $0x8,0xf022427a$/;"	l
f01048ca	obj/kern/kernel.asm	/^f01048ca:	08 00 $/;"	l
f01048cc	obj/kern/kernel.asm	/^f01048cc:	c6 05 7c 42 22 f0 00 	movb   $0x0,0xf022427c$/;"	l
f01048d3	obj/kern/kernel.asm	/^f01048d3:	c6 05 7d 42 22 f0 ee 	movb   $0xee,0xf022427d$/;"	l
f01048da	obj/kern/kernel.asm	/^f01048da:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f01048dd	obj/kern/kernel.asm	/^f01048dd:	66 89 0d 7e 42 22 f0 	mov    %cx,0xf022427e$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	eb c5                	jmp    f01048ab <trap_init+0x12>$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	8b 0c 85 d4 23 12 f0 	mov    -0xfeddc2c(,%eax,4),%ecx$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	66 89 0c c5 60 42 22 	mov    %cx,-0xfddbda0(,%eax,8)$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	f0 $/;"	l
f01048f5	obj/kern/kernel.asm	/^f01048f5:	66 c7 04 c5 62 42 22 	movw   $0x8,-0xfddbd9e(,%eax,8)$/;"	l
f01048fc	obj/kern/kernel.asm	/^f01048fc:	f0 08 00 $/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	c6 04 c5 64 42 22 f0 	movb   $0x0,-0xfddbd9c(,%eax,8)$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	00 $/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	c6 04 c5 65 42 22 f0 	movb   $0x8e,-0xfddbd9b(,%eax,8)$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	8e $/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	c1 e9 10             	shr    $0x10,%ecx$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	66 89 0c c5 66 42 22 	mov    %cx,-0xfddbd9a(,%eax,8)$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	f0 $/;"	l
f010491a	obj/kern/kernel.asm	/^f010491a:	83 fa 13             	cmp    $0x13,%edx$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	7e 8c                	jle    f01048ab <trap_init+0x12>$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	b8 20 4f 10 f0       	mov    $0xf0104f20,%eax$/;"	l
f0104924	obj/kern/kernel.asm	/^f0104924:	66 a3 e0 43 22 f0    	mov    %ax,0xf02243e0$/;"	l
f010492a	obj/kern/kernel.asm	/^f010492a:	66 c7 05 e2 43 22 f0 	movw   $0x8,0xf02243e2$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	08 00 $/;"	l
f0104933	obj/kern/kernel.asm	/^f0104933:	c6 05 e4 43 22 f0 00 	movb   $0x0,0xf02243e4$/;"	l
f010493a	obj/kern/kernel.asm	/^f010493a:	c6 05 e5 43 22 f0 ee 	movb   $0xee,0xf02243e5$/;"	l
f0104941	obj/kern/kernel.asm	/^f0104941:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104944	obj/kern/kernel.asm	/^f0104944:	66 a3 e6 43 22 f0    	mov    %ax,0xf02243e6$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	e8 81 fe ff ff       	call   f01047d0 <trap_init_percpu>$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	c9                   	leave  $/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	c3                   	ret    $/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951 <print_regs>:$/;"	l
f0104951	obj/kern/kernel.asm	/^f0104951:	55                   	push   %ebp$/;"	l
f0104952	obj/kern/kernel.asm	/^f0104952:	89 e5                	mov    %esp,%ebp$/;"	l
f0104954	obj/kern/kernel.asm	/^f0104954:	53                   	push   %ebx$/;"	l
f0104955	obj/kern/kernel.asm	/^f0104955:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010495b	obj/kern/kernel.asm	/^f010495b:	8b 03                	mov    (%ebx),%eax$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104961	obj/kern/kernel.asm	/^f0104961:	c7 04 24 2f 85 10 f0 	movl   $0xf010852f,(%esp)$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	e8 45 fe ff ff       	call   f01047b2 <cprintf>$/;"	l
f010496d	obj/kern/kernel.asm	/^f010496d:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0104970	obj/kern/kernel.asm	/^f0104970:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104974	obj/kern/kernel.asm	/^f0104974:	c7 04 24 3e 85 10 f0 	movl   $0xf010853e,(%esp)$/;"	l
f010497b	obj/kern/kernel.asm	/^f010497b:	e8 32 fe ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104980	obj/kern/kernel.asm	/^f0104980:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104987	obj/kern/kernel.asm	/^f0104987:	c7 04 24 4d 85 10 f0 	movl   $0xf010854d,(%esp)$/;"	l
f010498e	obj/kern/kernel.asm	/^f010498e:	e8 1f fe ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104993	obj/kern/kernel.asm	/^f0104993:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0104996	obj/kern/kernel.asm	/^f0104996:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010499a	obj/kern/kernel.asm	/^f010499a:	c7 04 24 5c 85 10 f0 	movl   $0xf010855c,(%esp)$/;"	l
f01049a1	obj/kern/kernel.asm	/^f01049a1:	e8 0c fe ff ff       	call   f01047b2 <cprintf>$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	c7 04 24 6b 85 10 f0 	movl   $0xf010856b,(%esp)$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	e8 f9 fd ff ff       	call   f01047b2 <cprintf>$/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01049bc	obj/kern/kernel.asm	/^f01049bc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	c7 04 24 7a 85 10 f0 	movl   $0xf010857a,(%esp)$/;"	l
f01049c7	obj/kern/kernel.asm	/^f01049c7:	e8 e6 fd ff ff       	call   f01047b2 <cprintf>$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	c7 04 24 89 85 10 f0 	movl   $0xf0108589,(%esp)$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	e8 d3 fd ff ff       	call   f01047b2 <cprintf>$/;"	l
f01049df	obj/kern/kernel.asm	/^f01049df:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f01049e2	obj/kern/kernel.asm	/^f01049e2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01049e6	obj/kern/kernel.asm	/^f01049e6:	c7 04 24 98 85 10 f0 	movl   $0xf0108598,(%esp)$/;"	l
f01049ed	obj/kern/kernel.asm	/^f01049ed:	e8 c0 fd ff ff       	call   f01047b2 <cprintf>$/;"	l
f01049f2	obj/kern/kernel.asm	/^f01049f2:	83 c4 14             	add    $0x14,%esp$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	5b                   	pop    %ebx$/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6:	5d                   	pop    %ebp$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	c3                   	ret    $/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8 <print_trapframe>:$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	55                   	push   %ebp$/;"	l
f01049f9	obj/kern/kernel.asm	/^f01049f9:	89 e5                	mov    %esp,%ebp$/;"	l
f01049fb	obj/kern/kernel.asm	/^f01049fb:	56                   	push   %esi$/;"	l
f01049fc	obj/kern/kernel.asm	/^f01049fc:	53                   	push   %ebx$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	e8 18 1e 00 00       	call   f0106820 <cpunum>$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104a0c	obj/kern/kernel.asm	/^f0104a0c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	c7 04 24 fc 85 10 f0 	movl   $0xf01085fc,(%esp)$/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	e8 96 fd ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104a1c	obj/kern/kernel.asm	/^f0104a1c:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0104a1f	obj/kern/kernel.asm	/^f0104a1f:	e8 2d ff ff ff       	call   f0104951 <print_regs>$/;"	l
f0104a24	obj/kern/kernel.asm	/^f0104a24:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f0104a28	obj/kern/kernel.asm	/^f0104a28:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a2c	obj/kern/kernel.asm	/^f0104a2c:	c7 04 24 1a 86 10 f0 	movl   $0xf010861a,(%esp)$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	e8 7a fd ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	c7 04 24 2d 86 10 f0 	movl   $0xf010862d,(%esp)$/;"	l
f0104a47	obj/kern/kernel.asm	/^f0104a47:	e8 66 fd ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f0104a4f	obj/kern/kernel.asm	/^f0104a4f:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	77 09                	ja     f0104a5d <print_trapframe+0x65>$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	8b 14 85 e0 88 10 f0 	mov    -0xfef7720(,%eax,4),%edx$/;"	l
f0104a5b	obj/kern/kernel.asm	/^f0104a5b:	eb 1d                	jmp    f0104a7a <print_trapframe+0x82>$/;"	l
f0104a5d	obj/kern/kernel.asm	/^f0104a5d:	ba a7 85 10 f0       	mov    $0xf01085a7,%edx$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	74 13                	je     f0104a7a <print_trapframe+0x82>$/;"	l
f0104a67	obj/kern/kernel.asm	/^f0104a67:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104a6a	obj/kern/kernel.asm	/^f0104a6a:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	ba b3 85 10 f0       	mov    $0xf01085b3,%edx$/;"	l
f0104a72	obj/kern/kernel.asm	/^f0104a72:	b9 c6 85 10 f0       	mov    $0xf01085c6,%ecx$/;"	l
f0104a77	obj/kern/kernel.asm	/^f0104a77:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f0104a7a	obj/kern/kernel.asm	/^f0104a7a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104a7e	obj/kern/kernel.asm	/^f0104a7e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104a82	obj/kern/kernel.asm	/^f0104a82:	c7 04 24 40 86 10 f0 	movl   $0xf0108640,(%esp)$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	e8 24 fd ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	3b 1d 60 4a 22 f0    	cmp    0xf0224a60,%ebx$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	75 19                	jne    f0104aaf <print_trapframe+0xb7>$/;"	l
f0104a96	obj/kern/kernel.asm	/^f0104a96:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104a9a	obj/kern/kernel.asm	/^f0104a9a:	75 13                	jne    f0104aaf <print_trapframe+0xb7>$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104a9f	obj/kern/kernel.asm	/^f0104a9f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	c7 04 24 52 86 10 f0 	movl   $0xf0108652,(%esp)$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	e8 03 fd ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104aaf	obj/kern/kernel.asm	/^f0104aaf:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104ab6	obj/kern/kernel.asm	/^f0104ab6:	c7 04 24 61 86 10 f0 	movl   $0xf0108661,(%esp)$/;"	l
f0104abd	obj/kern/kernel.asm	/^f0104abd:	e8 f0 fc ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104ac2	obj/kern/kernel.asm	/^f0104ac2:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104ac6	obj/kern/kernel.asm	/^f0104ac6:	75 51                	jne    f0104b19 <print_trapframe+0x121>$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	89 c2                	mov    %eax,%edx$/;"	l
f0104acd	obj/kern/kernel.asm	/^f0104acd:	83 e2 01             	and    $0x1,%edx$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	ba d5 85 10 f0       	mov    $0xf01085d5,%edx$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	b9 e0 85 10 f0       	mov    $0xf01085e0,%ecx$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f0104add	obj/kern/kernel.asm	/^f0104add:	89 c2                	mov    %eax,%edx$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	83 e2 02             	and    $0x2,%edx$/;"	l
f0104ae2	obj/kern/kernel.asm	/^f0104ae2:	ba ec 85 10 f0       	mov    $0xf01085ec,%edx$/;"	l
f0104ae7	obj/kern/kernel.asm	/^f0104ae7:	be f2 85 10 f0       	mov    $0xf01085f2,%esi$/;"	l
f0104aec	obj/kern/kernel.asm	/^f0104aec:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f0104aef	obj/kern/kernel.asm	/^f0104aef:	83 e0 04             	and    $0x4,%eax$/;"	l
f0104af2	obj/kern/kernel.asm	/^f0104af2:	b8 f7 85 10 f0       	mov    $0xf01085f7,%eax$/;"	l
f0104af7	obj/kern/kernel.asm	/^f0104af7:	be 38 87 10 f0       	mov    $0xf0108738,%esi$/;"	l
f0104afc	obj/kern/kernel.asm	/^f0104afc:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f0104aff	obj/kern/kernel.asm	/^f0104aff:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0104b07	obj/kern/kernel.asm	/^f0104b07:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	c7 04 24 6f 86 10 f0 	movl   $0xf010866f,(%esp)$/;"	l
f0104b12	obj/kern/kernel.asm	/^f0104b12:	e8 9b fc ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104b17	obj/kern/kernel.asm	/^f0104b17:	eb 0c                	jmp    f0104b25 <print_trapframe+0x12d>$/;"	l
f0104b19	obj/kern/kernel.asm	/^f0104b19:	c7 04 24 96 84 10 f0 	movl   $0xf0108496,(%esp)$/;"	l
f0104b20	obj/kern/kernel.asm	/^f0104b20:	e8 8d fc ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104b25	obj/kern/kernel.asm	/^f0104b25:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f0104b28	obj/kern/kernel.asm	/^f0104b28:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b2c	obj/kern/kernel.asm	/^f0104b2c:	c7 04 24 7e 86 10 f0 	movl   $0xf010867e,(%esp)$/;"	l
f0104b33	obj/kern/kernel.asm	/^f0104b33:	e8 7a fc ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b40	obj/kern/kernel.asm	/^f0104b40:	c7 04 24 8d 86 10 f0 	movl   $0xf010868d,(%esp)$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	e8 66 fc ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f0104b4f	obj/kern/kernel.asm	/^f0104b4f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	c7 04 24 a0 86 10 f0 	movl   $0xf01086a0,(%esp)$/;"	l
f0104b5a	obj/kern/kernel.asm	/^f0104b5a:	e8 53 fc ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104b5f	obj/kern/kernel.asm	/^f0104b5f:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104b63	obj/kern/kernel.asm	/^f0104b63:	74 27                	je     f0104b8c <print_trapframe+0x194>$/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	c7 04 24 af 86 10 f0 	movl   $0xf01086af,(%esp)$/;"	l
f0104b73	obj/kern/kernel.asm	/^f0104b73:	e8 3a fc ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104b78	obj/kern/kernel.asm	/^f0104b78:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80:	c7 04 24 be 86 10 f0 	movl   $0xf01086be,(%esp)$/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	e8 26 fc ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104b8c	obj/kern/kernel.asm	/^f0104b8c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	5b                   	pop    %ebx$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	5e                   	pop    %esi$/;"	l
f0104b91	obj/kern/kernel.asm	/^f0104b91:	5d                   	pop    %ebp$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	c3                   	ret    $/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93 <page_fault_handler>:$/;"	l
f0104b93	obj/kern/kernel.asm	/^f0104b93:	55                   	push   %ebp$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	89 e5                	mov    %esp,%ebp$/;"	l
f0104b96	obj/kern/kernel.asm	/^f0104b96:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0104b9f	obj/kern/kernel.asm	/^f0104b9f:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	c7 04 24 d1 86 10 f0 	movl   $0xf01086d1,(%esp)$/;"	l
f0104baf	obj/kern/kernel.asm	/^f0104baf:	e8 fe fb ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	f6 46 34 03          	testb  $0x3,0x34(%esi)$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	75 1c                	jne    f0104bd6 <page_fault_handler+0x43>$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	c7 44 24 08 84 88 10 	movl   $0xf0108884,0x8(%esp)$/;"	l
f0104bc1	obj/kern/kernel.asm	/^f0104bc1:	f0 $/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	c7 44 24 04 5f 01 00 	movl   $0x15f,0x4(%esp)$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	00 $/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	c7 04 24 dd 86 10 f0 	movl   $0xf01086dd,(%esp)$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	e8 6a b4 ff ff       	call   f0100040 <_panic>$/;"	l
f0104bd6	obj/kern/kernel.asm	/^f0104bd6:	8b 7e 30             	mov    0x30(%esi),%edi$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	e8 42 1c 00 00       	call   f0106820 <cpunum>$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104be9	obj/kern/kernel.asm	/^f0104be9:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104bef	obj/kern/kernel.asm	/^f0104bef:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	c7 04 24 b0 88 10 f0 	movl   $0xf01088b0,(%esp)$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	e8 b0 fb ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104c02	obj/kern/kernel.asm	/^f0104c02:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	e8 ee fd ff ff       	call   f01049f8 <print_trapframe>$/;"	l
f0104c0a	obj/kern/kernel.asm	/^f0104c0a:	e8 11 1c 00 00       	call   f0106820 <cpunum>$/;"	l
f0104c0f	obj/kern/kernel.asm	/^f0104c0f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104c1b	obj/kern/kernel.asm	/^f0104c1b:	e8 a8 f8 ff ff       	call   f01044c8 <env_destroy>$/;"	l
f0104c20	obj/kern/kernel.asm	/^f0104c20:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0104c23	obj/kern/kernel.asm	/^f0104c23:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0104c29	obj/kern/kernel.asm	/^f0104c29:	89 ec                	mov    %ebp,%esp$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	5d                   	pop    %ebp$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	c3                   	ret    $/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d <trap>:$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	55                   	push   %ebp$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	89 e5                	mov    %esp,%ebp$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	57                   	push   %edi$/;"	l
f0104c31	obj/kern/kernel.asm	/^f0104c31:	56                   	push   %esi$/;"	l
f0104c32	obj/kern/kernel.asm	/^f0104c32:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	fc                   	cld    $/;"	l
f0104c39	obj/kern/kernel.asm	/^f0104c39:	83 3d 80 4e 22 f0 00 	cmpl   $0x0,0xf0224e80$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	74 01                	je     f0104c43 <trap+0x16>$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	f4                   	hlt    $/;"	l
f0104c43	obj/kern/kernel.asm	/^f0104c43:	e8 d8 1b 00 00       	call   f0106820 <cpunum>$/;"	l
f0104c48	obj/kern/kernel.asm	/^f0104c48:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104c4b	obj/kern/kernel.asm	/^f0104c4b:	81 c2 20 50 22 f0    	add    $0xf0225020,%edx$/;"	l
f0104c51	obj/kern/kernel.asm	/^f0104c51:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	75 0c                	jne    f0104c6b <trap+0x3e>$/;"	l
f0104c5f	obj/kern/kernel.asm	/^f0104c5f:	c7 04 24 40 24 12 f0 	movl   $0xf0122440,(%esp)$/;"	l
f0104c66	obj/kern/kernel.asm	/^f0104c66:	e8 65 1e 00 00       	call   f0106ad0 <spin_lock>$/;"	l
f0104c6b	obj/kern/kernel.asm	/^f0104c6b:	9c                   	pushf  $/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	58                   	pop    %eax$/;"	l
f0104c6d	obj/kern/kernel.asm	/^f0104c6d:	f6 c4 02             	test   $0x2,%ah$/;"	l
f0104c70	obj/kern/kernel.asm	/^f0104c70:	74 24                	je     f0104c96 <trap+0x69>$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	c7 44 24 0c e9 86 10 	movl   $0xf01086e9,0xc(%esp)$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	f0 $/;"	l
f0104c7a	obj/kern/kernel.asm	/^f0104c7a:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0104c81	obj/kern/kernel.asm	/^f0104c81:	f0 $/;"	l
f0104c82	obj/kern/kernel.asm	/^f0104c82:	c7 44 24 04 26 01 00 	movl   $0x126,0x4(%esp)$/;"	l
f0104c89	obj/kern/kernel.asm	/^f0104c89:	00 $/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	c7 04 24 dd 86 10 f0 	movl   $0xf01086dd,(%esp)$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	e8 aa b3 ff ff       	call   f0100040 <_panic>$/;"	l
f0104c96	obj/kern/kernel.asm	/^f0104c96:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	83 e0 03             	and    $0x3,%eax$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104ca0	obj/kern/kernel.asm	/^f0104ca0:	0f 85 a7 00 00 00    	jne    f0104d4d <trap+0x120>$/;"	l
f0104ca6	obj/kern/kernel.asm	/^f0104ca6:	c7 04 24 40 24 12 f0 	movl   $0xf0122440,(%esp)$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	e8 1e 1e 00 00       	call   f0106ad0 <spin_lock>$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	e8 69 1b 00 00       	call   f0106820 <cpunum>$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	83 b8 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%eax)$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	75 24                	jne    f0104ce7 <trap+0xba>$/;"	l
f0104cc3	obj/kern/kernel.asm	/^f0104cc3:	c7 44 24 0c 02 87 10 	movl   $0xf0108702,0xc(%esp)$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	f0 $/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	c7 44 24 08 e3 81 10 	movl   $0xf01081e3,0x8(%esp)$/;"	l
f0104cd2	obj/kern/kernel.asm	/^f0104cd2:	f0 $/;"	l
f0104cd3	obj/kern/kernel.asm	/^f0104cd3:	c7 44 24 04 2f 01 00 	movl   $0x12f,0x4(%esp)$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	00 $/;"	l
f0104cdb	obj/kern/kernel.asm	/^f0104cdb:	c7 04 24 dd 86 10 f0 	movl   $0xf01086dd,(%esp)$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	e8 59 b3 ff ff       	call   f0100040 <_panic>$/;"	l
f0104ce7	obj/kern/kernel.asm	/^f0104ce7:	e8 34 1b 00 00       	call   f0106820 <cpunum>$/;"	l
f0104cec	obj/kern/kernel.asm	/^f0104cec:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104cef	obj/kern/kernel.asm	/^f0104cef:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104cf5	obj/kern/kernel.asm	/^f0104cf5:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f0104cf9	obj/kern/kernel.asm	/^f0104cf9:	75 2d                	jne    f0104d28 <trap+0xfb>$/;"	l
f0104cfb	obj/kern/kernel.asm	/^f0104cfb:	e8 20 1b 00 00       	call   f0106820 <cpunum>$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d03	obj/kern/kernel.asm	/^f0104d03:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104d09	obj/kern/kernel.asm	/^f0104d09:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	e8 b0 f5 ff ff       	call   f01042c1 <env_free>$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	e8 0a 1b 00 00       	call   f0106820 <cpunum>$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	c7 80 28 50 22 f0 00 	movl   $0x0,-0xfddafd8(%eax)$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	00 00 00 $/;"	l
f0104d23	obj/kern/kernel.asm	/^f0104d23:	e8 e8 02 00 00       	call   f0105010 <sched_yield>$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	e8 f3 1a 00 00       	call   f0106820 <cpunum>$/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104d36	obj/kern/kernel.asm	/^f0104d36:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104d3b	obj/kern/kernel.asm	/^f0104d3b:	89 c7                	mov    %eax,%edi$/;"	l
f0104d3d	obj/kern/kernel.asm	/^f0104d3d:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104d3f	obj/kern/kernel.asm	/^f0104d3f:	e8 dc 1a 00 00       	call   f0106820 <cpunum>$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104d47	obj/kern/kernel.asm	/^f0104d47:	8b b0 28 50 22 f0    	mov    -0xfddafd8(%eax),%esi$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	89 35 60 4a 22 f0    	mov    %esi,0xf0224a60$/;"	l
f0104d53	obj/kern/kernel.asm	/^f0104d53:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104d56	obj/kern/kernel.asm	/^f0104d56:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104d59	obj/kern/kernel.asm	/^f0104d59:	75 19                	jne    f0104d74 <trap+0x147>$/;"	l
f0104d5b	obj/kern/kernel.asm	/^f0104d5b:	c7 04 24 09 87 10 f0 	movl   $0xf0108709,(%esp)$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	e8 4b fa ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104d67	obj/kern/kernel.asm	/^f0104d67:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104d6a	obj/kern/kernel.asm	/^f0104d6a:	e8 89 fc ff ff       	call   f01049f8 <print_trapframe>$/;"	l
f0104d6f	obj/kern/kernel.asm	/^f0104d6f:	e9 c1 00 00 00       	jmp    f0104e35 <trap+0x208>$/;"	l
f0104d74	obj/kern/kernel.asm	/^f0104d74:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	74 31                	je     f0104daa <trap+0x17d>$/;"	l
f0104d79	obj/kern/kernel.asm	/^f0104d79:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	77 07                	ja     f0104d89 <trap+0x15c>$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104d85	obj/kern/kernel.asm	/^f0104d85:	75 6d                	jne    f0104df4 <trap+0x1c7>$/;"	l
f0104d87	obj/kern/kernel.asm	/^f0104d87:	eb 2e                	jmp    f0104db7 <trap+0x18a>$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104d90	obj/kern/kernel.asm	/^f0104d90:	74 07                	je     f0104d99 <trap+0x16c>$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	75 5d                	jne    f0104df4 <trap+0x1c7>$/;"	l
f0104d97	obj/kern/kernel.asm	/^f0104d97:	eb 29                	jmp    f0104dc2 <trap+0x195>$/;"	l
f0104d99	obj/kern/kernel.asm	/^f0104d99:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104d9c	obj/kern/kernel.asm	/^f0104d9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	e8 ee fd ff ff       	call   f0104b93 <page_fault_handler>$/;"	l
f0104da5	obj/kern/kernel.asm	/^f0104da5:	e9 8b 00 00 00       	jmp    f0104e35 <trap+0x208>$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104dad	obj/kern/kernel.asm	/^f0104dad:	e8 59 c4 ff ff       	call   f010120b <monitor>$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	e9 7e 00 00 00       	jmp    f0104e35 <trap+0x208>$/;"	l
f0104db7	obj/kern/kernel.asm	/^f0104db7:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104dba	obj/kern/kernel.asm	/^f0104dba:	e8 4c c4 ff ff       	call   f010120b <monitor>$/;"	l
f0104dbf	obj/kern/kernel.asm	/^f0104dbf:	90                   	nop$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	eb 73                	jmp    f0104e35 <trap+0x208>$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104dc5	obj/kern/kernel.asm	/^f0104dc5:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104dc9	obj/kern/kernel.asm	/^f0104dc9:	8b 06                	mov    (%esi),%eax$/;"	l
f0104dcb	obj/kern/kernel.asm	/^f0104dcb:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0104de7	obj/kern/kernel.asm	/^f0104de7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	e8 01 03 00 00       	call   f01050f0 <syscall>$/;"	l
f0104def	obj/kern/kernel.asm	/^f0104def:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	eb 41                	jmp    f0104e35 <trap+0x208>$/;"	l
f0104df4	obj/kern/kernel.asm	/^f0104df4:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	e8 fc fb ff ff       	call   f01049f8 <print_trapframe>$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104e01	obj/kern/kernel.asm	/^f0104e01:	75 1c                	jne    f0104e1f <trap+0x1f2>$/;"	l
f0104e03	obj/kern/kernel.asm	/^f0104e03:	c7 44 24 08 26 87 10 	movl   $0xf0108726,0x8(%esp)$/;"	l
f0104e0a	obj/kern/kernel.asm	/^f0104e0a:	f0 $/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	c7 44 24 04 0b 01 00 	movl   $0x10b,0x4(%esp)$/;"	l
f0104e12	obj/kern/kernel.asm	/^f0104e12:	00 $/;"	l
f0104e13	obj/kern/kernel.asm	/^f0104e13:	c7 04 24 dd 86 10 f0 	movl   $0xf01086dd,(%esp)$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	e8 21 b2 ff ff       	call   f0100040 <_panic>$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	e8 fc 19 00 00       	call   f0106820 <cpunum>$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e27	obj/kern/kernel.asm	/^f0104e27:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104e2d	obj/kern/kernel.asm	/^f0104e2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e30	obj/kern/kernel.asm	/^f0104e30:	e8 93 f6 ff ff       	call   f01044c8 <env_destroy>$/;"	l
f0104e35	obj/kern/kernel.asm	/^f0104e35:	e8 e6 19 00 00       	call   f0106820 <cpunum>$/;"	l
f0104e3a	obj/kern/kernel.asm	/^f0104e3a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	83 b8 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%eax)$/;"	l
f0104e44	obj/kern/kernel.asm	/^f0104e44:	74 2a                	je     f0104e70 <trap+0x243>$/;"	l
f0104e46	obj/kern/kernel.asm	/^f0104e46:	e8 d5 19 00 00       	call   f0106820 <cpunum>$/;"	l
f0104e4b	obj/kern/kernel.asm	/^f0104e4b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e4e	obj/kern/kernel.asm	/^f0104e4e:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104e58	obj/kern/kernel.asm	/^f0104e58:	75 16                	jne    f0104e70 <trap+0x243>$/;"	l
f0104e5a	obj/kern/kernel.asm	/^f0104e5a:	e8 c1 19 00 00       	call   f0106820 <cpunum>$/;"	l
f0104e5f	obj/kern/kernel.asm	/^f0104e5f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104e62	obj/kern/kernel.asm	/^f0104e62:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104e6b	obj/kern/kernel.asm	/^f0104e6b:	e8 f9 f6 ff ff       	call   f0104569 <env_run>$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	e8 9b 01 00 00       	call   f0105010 <sched_yield>$/;"	l
f0104e75	obj/kern/kernel.asm	/^f0104e75:	00 00                	add    %al,(%eax)$/;"	l
f0104e78	obj/kern/kernel.asm	/^f0104e78 <trap_handler0>:$/;"	l
f0104e78	obj/kern/kernel.asm	/^f0104e78:	6a 00                	push   $0x0$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	6a 00                	push   $0x0$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	e9 a7 d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	90                   	nop$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82 <trap_handler1>:$/;"	l
f0104e82	obj/kern/kernel.asm	/^f0104e82:	6a 00                	push   $0x0$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	6a 01                	push   $0x1$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	e9 9d d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104e8b	obj/kern/kernel.asm	/^f0104e8b:	90                   	nop$/;"	l
f0104e8c	obj/kern/kernel.asm	/^f0104e8c <trap_handler2>:$/;"	l
f0104e8c	obj/kern/kernel.asm	/^f0104e8c:	6a 00                	push   $0x0$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	6a 02                	push   $0x2$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	e9 93 d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104e95	obj/kern/kernel.asm	/^f0104e95:	90                   	nop$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96 <trap_handler3>:$/;"	l
f0104e96	obj/kern/kernel.asm	/^f0104e96:	6a 00                	push   $0x0$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98:	6a 03                	push   $0x3$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	e9 89 d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104e9f	obj/kern/kernel.asm	/^f0104e9f:	90                   	nop$/;"	l
f0104ea0	obj/kern/kernel.asm	/^f0104ea0 <trap_handler4>:$/;"	l
f0104ea0	obj/kern/kernel.asm	/^f0104ea0:	6a 00                	push   $0x0$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	6a 04                	push   $0x4$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	e9 7f d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104ea9	obj/kern/kernel.asm	/^f0104ea9:	90                   	nop$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa <trap_handler6>:$/;"	l
f0104eaa	obj/kern/kernel.asm	/^f0104eaa:	6a 00                	push   $0x0$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	6a 06                	push   $0x6$/;"	l
f0104eae	obj/kern/kernel.asm	/^f0104eae:	e9 75 d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104eb3	obj/kern/kernel.asm	/^f0104eb3:	90                   	nop$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4 <trap_handler7>:$/;"	l
f0104eb4	obj/kern/kernel.asm	/^f0104eb4:	6a 00                	push   $0x0$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	6a 07                	push   $0x7$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	e9 6b d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104ebd	obj/kern/kernel.asm	/^f0104ebd:	90                   	nop$/;"	l
f0104ebe	obj/kern/kernel.asm	/^f0104ebe <trap_handler8>:$/;"	l
f0104ebe	obj/kern/kernel.asm	/^f0104ebe:	6a 00                	push   $0x0$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	6a 08                	push   $0x8$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	e9 61 d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104ec7	obj/kern/kernel.asm	/^f0104ec7:	90                   	nop$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8 <trap_handler9>:$/;"	l
f0104ec8	obj/kern/kernel.asm	/^f0104ec8:	6a 00                	push   $0x0$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	6a 09                	push   $0x9$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	e9 57 d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104ed1	obj/kern/kernel.asm	/^f0104ed1:	90                   	nop$/;"	l
f0104ed2	obj/kern/kernel.asm	/^f0104ed2 <trap_handler10>:$/;"	l
f0104ed2	obj/kern/kernel.asm	/^f0104ed2:	6a 0a                	push   $0xa$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	e9 4f d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104ed9	obj/kern/kernel.asm	/^f0104ed9:	90                   	nop$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda <trap_handler11>:$/;"	l
f0104eda	obj/kern/kernel.asm	/^f0104eda:	6a 0b                	push   $0xb$/;"	l
f0104edc	obj/kern/kernel.asm	/^f0104edc:	e9 47 d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104ee1	obj/kern/kernel.asm	/^f0104ee1:	90                   	nop$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2 <trap_handler12>:$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	6a 0c                	push   $0xc$/;"	l
f0104ee4	obj/kern/kernel.asm	/^f0104ee4:	e9 3f d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104ee9	obj/kern/kernel.asm	/^f0104ee9:	90                   	nop$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea <trap_handler13>:$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea:	6a 0d                	push   $0xd$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	e9 37 d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	90                   	nop$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2 <trap_handler14>:$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	6a 0e                	push   $0xe$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4:	e9 2f d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104ef9	obj/kern/kernel.asm	/^f0104ef9:	90                   	nop$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa <trap_handler16>:$/;"	l
f0104efa	obj/kern/kernel.asm	/^f0104efa:	6a 00                	push   $0x0$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	6a 10                	push   $0x10$/;"	l
f0104efe	obj/kern/kernel.asm	/^f0104efe:	e9 25 d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104f03	obj/kern/kernel.asm	/^f0104f03:	90                   	nop$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04 <trap_handler17>:$/;"	l
f0104f04	obj/kern/kernel.asm	/^f0104f04:	6a 11                	push   $0x11$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	e9 1d d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104f0b	obj/kern/kernel.asm	/^f0104f0b:	90                   	nop$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c <trap_handler18>:$/;"	l
f0104f0c	obj/kern/kernel.asm	/^f0104f0c:	6a 00                	push   $0x0$/;"	l
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	6a 12                	push   $0x12$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	e9 13 d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	90                   	nop$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16 <trap_handler19>:$/;"	l
f0104f16	obj/kern/kernel.asm	/^f0104f16:	6a 00                	push   $0x0$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	6a 13                	push   $0x13$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	e9 09 d5 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104f1f	obj/kern/kernel.asm	/^f0104f1f:	90                   	nop$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20 <trap_handler48>:$/;"	l
f0104f20	obj/kern/kernel.asm	/^f0104f20:	6a 00                	push   $0x0$/;"	l
f0104f22	obj/kern/kernel.asm	/^f0104f22:	6a 30                	push   $0x30$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	e9 ff d4 01 00       	jmp    f0122428 <_alltraps>$/;"	l
f0104f29	obj/kern/kernel.asm	/^f0104f29:	00 00                	add    %al,(%eax)$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c <sched_halt>:$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	55                   	push   %ebp$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	89 e5                	mov    %esp,%ebp$/;"	l
f0104f2f	obj/kern/kernel.asm	/^f0104f2f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	8b 15 48 42 22 f0    	mov    0xf0224248,%edx$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38:	8b 42 54             	mov    0x54(%edx),%eax$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	83 e8 02             	sub    $0x2,%eax$/;"	l
f0104f3e	obj/kern/kernel.asm	/^f0104f3e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	76 45                	jbe    f0104f88 <sched_halt+0x5c>$/;"	l
f0104f43	obj/kern/kernel.asm	/^f0104f43:	81 c2 d0 00 00 00    	add    $0xd0,%edx$/;"	l
f0104f49	obj/kern/kernel.asm	/^f0104f49:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	83 e9 02             	sub    $0x2,%ecx$/;"	l
f0104f53	obj/kern/kernel.asm	/^f0104f53:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	76 0f                	jbe    f0104f67 <sched_halt+0x3b>$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	83 c0 01             	add    $0x1,%eax$/;"	l
f0104f5b	obj/kern/kernel.asm	/^f0104f5b:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104f63	obj/kern/kernel.asm	/^f0104f63:	75 e9                	jne    f0104f4e <sched_halt+0x22>$/;"	l
f0104f65	obj/kern/kernel.asm	/^f0104f65:	eb 07                	jmp    f0104f6e <sched_halt+0x42>$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	75 1a                	jne    f0104f88 <sched_halt+0x5c>$/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	c7 04 24 30 89 10 f0 	movl   $0xf0108930,(%esp)$/;"	l
f0104f75	obj/kern/kernel.asm	/^f0104f75:	e8 38 f8 ff ff       	call   f01047b2 <cprintf>$/;"	l
f0104f7a	obj/kern/kernel.asm	/^f0104f7a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0104f81	obj/kern/kernel.asm	/^f0104f81:	e8 85 c2 ff ff       	call   f010120b <monitor>$/;"	l
f0104f86	obj/kern/kernel.asm	/^f0104f86:	eb f2                	jmp    f0104f7a <sched_halt+0x4e>$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	e8 93 18 00 00       	call   f0106820 <cpunum>$/;"	l
f0104f8d	obj/kern/kernel.asm	/^f0104f8d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104f90	obj/kern/kernel.asm	/^f0104f90:	c7 80 28 50 22 f0 00 	movl   $0x0,-0xfddafd8(%eax)$/;"	l
f0104f97	obj/kern/kernel.asm	/^f0104f97:	00 00 00 $/;"	l
f0104f9a	obj/kern/kernel.asm	/^f0104f9a:	a1 8c 4e 22 f0       	mov    0xf0224e8c,%eax$/;"	l
f0104f9f	obj/kern/kernel.asm	/^f0104f9f:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104fa4	obj/kern/kernel.asm	/^f0104fa4:	77 20                	ja     f0104fc6 <sched_halt+0x9a>$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	c7 44 24 08 84 6f 10 	movl   $0xf0106f84,0x8(%esp)$/;"	l
f0104fb1	obj/kern/kernel.asm	/^f0104fb1:	f0 $/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	c7 44 24 04 4a 00 00 	movl   $0x4a,0x4(%esp)$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	00 $/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	c7 04 24 59 89 10 f0 	movl   $0xf0108959,(%esp)$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	e8 7a b0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104fcb	obj/kern/kernel.asm	/^f0104fcb:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	e8 4d 18 00 00       	call   f0106820 <cpunum>$/;"	l
f0104fd3	obj/kern/kernel.asm	/^f0104fd3:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104fd6	obj/kern/kernel.asm	/^f0104fd6:	81 c2 20 50 22 f0    	add    $0xf0225020,%edx$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104fe1	obj/kern/kernel.asm	/^f0104fe1:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104fe5	obj/kern/kernel.asm	/^f0104fe5:	c7 04 24 40 24 12 f0 	movl   $0xf0122440,(%esp)$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	e8 a2 1b 00 00       	call   f0106b93 <spin_unlock>$/;"	l
f0104ff1	obj/kern/kernel.asm	/^f0104ff1:	f3 90                	pause  $/;"	l
f0104ff3	obj/kern/kernel.asm	/^f0104ff3:	e8 28 18 00 00       	call   f0106820 <cpunum>$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104ffb	obj/kern/kernel.asm	/^f0104ffb:	8b 80 30 50 22 f0    	mov    -0xfddafd0(%eax),%eax$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	89 c4                	mov    %eax,%esp$/;"	l
f0105008	obj/kern/kernel.asm	/^f0105008:	6a 00                	push   $0x0$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	6a 00                	push   $0x0$/;"	l
f010500c	obj/kern/kernel.asm	/^f010500c:	fb                   	sti    $/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	f4                   	hlt    $/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	c9                   	leave  $/;"	l
f010500f	obj/kern/kernel.asm	/^f010500f:	c3                   	ret    $/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010 <sched_yield>:$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	55                   	push   %ebp$/;"	l
f0105011	obj/kern/kernel.asm	/^f0105011:	89 e5                	mov    %esp,%ebp$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	53                   	push   %ebx$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105017	obj/kern/kernel.asm	/^f0105017:	e8 04 18 00 00       	call   f0106820 <cpunum>$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	83 ba 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%edx)$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	74 19                	je     f0105046 <sched_yield+0x36>$/;"	l
f010502d	obj/kern/kernel.asm	/^f010502d:	e8 ee 17 00 00       	call   f0106820 <cpunum>$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105035	obj/kern/kernel.asm	/^f0105035:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	8d 40 01             	lea    0x1(%eax),%eax$/;"	l
f0105041	obj/kern/kernel.asm	/^f0105041:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046:	8b 1d 48 42 22 f0    	mov    0xf0224248,%ebx$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	6b c8 7c             	imul   $0x7c,%eax,%ecx$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	01 d9                	add    %ebx,%ecx$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	83 79 54 02          	cmpl   $0x2,0x54(%ecx)$/;"	l
f0105055	obj/kern/kernel.asm	/^f0105055:	75 74                	jne    f01050cb <sched_yield+0xbb>$/;"	l
f0105057	obj/kern/kernel.asm	/^f0105057:	eb 0b                	jmp    f0105064 <sched_yield+0x54>$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	6b c8 7c             	imul   $0x7c,%eax,%ecx$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	01 d9                	add    %ebx,%ecx$/;"	l
f010505e	obj/kern/kernel.asm	/^f010505e:	83 79 54 02          	cmpl   $0x2,0x54(%ecx)$/;"	l
f0105062	obj/kern/kernel.asm	/^f0105062:	75 08                	jne    f010506c <sched_yield+0x5c>$/;"	l
f0105064	obj/kern/kernel.asm	/^f0105064:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0105067	obj/kern/kernel.asm	/^f0105067:	e8 fd f4 ff ff       	call   f0104569 <env_run>$/;"	l
f010506c	obj/kern/kernel.asm	/^f010506c:	83 c0 01             	add    $0x1,%eax$/;"	l
f010506f	obj/kern/kernel.asm	/^f010506f:	89 c1                	mov    %eax,%ecx$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f0105074	obj/kern/kernel.asm	/^f0105074:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0105077	obj/kern/kernel.asm	/^f0105077:	01 c8                	add    %ecx,%eax$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	29 c8                	sub    %ecx,%eax$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0105083	obj/kern/kernel.asm	/^f0105083:	75 d4                	jne    f0105059 <sched_yield+0x49>$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	e8 96 17 00 00       	call   f0106820 <cpunum>$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010508d	obj/kern/kernel.asm	/^f010508d:	83 b8 28 50 22 f0 00 	cmpl   $0x0,-0xfddafd8(%eax)$/;"	l
f0105094	obj/kern/kernel.asm	/^f0105094:	74 2a                	je     f01050c0 <sched_yield+0xb0>$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	e8 85 17 00 00       	call   f0106820 <cpunum>$/;"	l
f010509b	obj/kern/kernel.asm	/^f010509b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010509e	obj/kern/kernel.asm	/^f010509e:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01050a8	obj/kern/kernel.asm	/^f01050a8:	75 16                	jne    f01050c0 <sched_yield+0xb0>$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	e8 71 17 00 00       	call   f0106820 <cpunum>$/;"	l
f01050af	obj/kern/kernel.asm	/^f01050af:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01050b2	obj/kern/kernel.asm	/^f01050b2:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01050b8	obj/kern/kernel.asm	/^f01050b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01050bb	obj/kern/kernel.asm	/^f01050bb:	e8 a9 f4 ff ff       	call   f0104569 <env_run>$/;"	l
f01050c0	obj/kern/kernel.asm	/^f01050c0:	e8 67 fe ff ff       	call   f0104f2c <sched_halt>$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	83 c4 14             	add    $0x14,%esp$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	5b                   	pop    %ebx$/;"	l
f01050c9	obj/kern/kernel.asm	/^f01050c9:	5d                   	pop    %ebp$/;"	l
f01050ca	obj/kern/kernel.asm	/^f01050ca:	c3                   	ret    $/;"	l
f01050cb	obj/kern/kernel.asm	/^f01050cb:	83 c0 01             	add    $0x1,%eax$/;"	l
f01050ce	obj/kern/kernel.asm	/^f01050ce:	89 c2                	mov    %eax,%edx$/;"	l
f01050d0	obj/kern/kernel.asm	/^f01050d0:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f01050d3	obj/kern/kernel.asm	/^f01050d3:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01050d6	obj/kern/kernel.asm	/^f01050d6:	01 d0                	add    %edx,%eax$/;"	l
f01050d8	obj/kern/kernel.asm	/^f01050d8:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01050dd	obj/kern/kernel.asm	/^f01050dd:	29 d0                	sub    %edx,%eax$/;"	l
f01050df	obj/kern/kernel.asm	/^f01050df:	ba ff 03 00 00       	mov    $0x3ff,%edx$/;"	l
f01050e4	obj/kern/kernel.asm	/^f01050e4:	e9 70 ff ff ff       	jmp    f0105059 <sched_yield+0x49>$/;"	l
f01050e9	obj/kern/kernel.asm	/^f01050e9:	00 00                	add    %al,(%eax)$/;"	l
f01050eb	obj/kern/kernel.asm	/^f01050eb:	00 00                	add    %al,(%eax)$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	00 00                	add    %al,(%eax)$/;"	l
f01050f0	obj/kern/kernel.asm	/^f01050f0 <syscall>:$/;"	l
f01050f0	obj/kern/kernel.asm	/^f01050f0:	55                   	push   %ebp$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01050f3	obj/kern/kernel.asm	/^f01050f3:	83 ec 38             	sub    $0x38,%esp$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01050fc	obj/kern/kernel.asm	/^f01050fc:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01050ff	obj/kern/kernel.asm	/^f01050ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0105105	obj/kern/kernel.asm	/^f0105105:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	8b 7d 14             	mov    0x14(%ebp),%edi$/;"	l
f010510b	obj/kern/kernel.asm	/^f010510b:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e:	0f 87 73 03 00 00    	ja     f0105487 <syscall+0x397>$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	ff 24 85 a0 89 10 f0 	jmp    *-0xfef7660(,%eax,4)$/;"	l
f010511b	obj/kern/kernel.asm	/^f010511b:	e8 31 b5 ff ff       	call   f0100651 <cons_getc>$/;"	l
f0105120	obj/kern/kernel.asm	/^f0105120:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105125	obj/kern/kernel.asm	/^f0105125:	e9 8c 03 00 00       	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f010512a	obj/kern/kernel.asm	/^f010512a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105131	obj/kern/kernel.asm	/^f0105131:	00 $/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010513c	obj/kern/kernel.asm	/^f010513c:	e8 3c ed ff ff       	call   f0103e7d <envid2env>$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	89 c2                	mov    %eax,%edx$/;"	l
f0105143	obj/kern/kernel.asm	/^f0105143:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105148	obj/kern/kernel.asm	/^f0105148:	85 d2                	test   %edx,%edx$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	0f 88 66 03 00 00    	js     f01054b6 <syscall+0x3c6>$/;"	l
f0105150	obj/kern/kernel.asm	/^f0105150:	e8 cb 16 00 00       	call   f0106820 <cpunum>$/;"	l
f0105155	obj/kern/kernel.asm	/^f0105155:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010515b	obj/kern/kernel.asm	/^f010515b:	39 90 28 50 22 f0    	cmp    %edx,-0xfddafd8(%eax)$/;"	l
f0105161	obj/kern/kernel.asm	/^f0105161:	75 23                	jne    f0105186 <syscall+0x96>$/;"	l
f0105163	obj/kern/kernel.asm	/^f0105163:	e8 b8 16 00 00       	call   f0106820 <cpunum>$/;"	l
f0105168	obj/kern/kernel.asm	/^f0105168:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0105171	obj/kern/kernel.asm	/^f0105171:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105174	obj/kern/kernel.asm	/^f0105174:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105178	obj/kern/kernel.asm	/^f0105178:	c7 04 24 66 89 10 f0 	movl   $0xf0108966,(%esp)$/;"	l
f010517f	obj/kern/kernel.asm	/^f010517f:	e8 2e f6 ff ff       	call   f01047b2 <cprintf>$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	eb 28                	jmp    f01051ae <syscall+0xbe>$/;"	l
f0105186	obj/kern/kernel.asm	/^f0105186:	8b 5a 48             	mov    0x48(%edx),%ebx$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	e8 92 16 00 00       	call   f0106820 <cpunum>$/;"	l
f010518e	obj/kern/kernel.asm	/^f010518e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105195	obj/kern/kernel.asm	/^f0105195:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f010519b	obj/kern/kernel.asm	/^f010519b:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01051a2	obj/kern/kernel.asm	/^f01051a2:	c7 04 24 81 89 10 f0 	movl   $0xf0108981,(%esp)$/;"	l
f01051a9	obj/kern/kernel.asm	/^f01051a9:	e8 04 f6 ff ff       	call   f01047b2 <cprintf>$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051b4	obj/kern/kernel.asm	/^f01051b4:	e8 0f f3 ff ff       	call   f01044c8 <env_destroy>$/;"	l
f01051b9	obj/kern/kernel.asm	/^f01051b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01051be	obj/kern/kernel.asm	/^f01051be:	e9 f3 02 00 00       	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f01051c3	obj/kern/kernel.asm	/^f01051c3:	e8 58 16 00 00       	call   f0106820 <cpunum>$/;"	l
f01051c8	obj/kern/kernel.asm	/^f01051c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01051cd	obj/kern/kernel.asm	/^f01051cd:	e9 e4 02 00 00       	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f01051d2	obj/kern/kernel.asm	/^f01051d2:	e8 39 fe ff ff       	call   f0105010 <sched_yield>$/;"	l
f01051d7	obj/kern/kernel.asm	/^f01051d7:	e8 44 16 00 00       	call   f0106820 <cpunum>$/;"	l
f01051dc	obj/kern/kernel.asm	/^f01051dc:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01051e3	obj/kern/kernel.asm	/^f01051e3:	00 $/;"	l
f01051e4	obj/kern/kernel.asm	/^f01051e4:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01051ec	obj/kern/kernel.asm	/^f01051ec:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01051ef	obj/kern/kernel.asm	/^f01051ef:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01051f5	obj/kern/kernel.asm	/^f01051f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01051f8	obj/kern/kernel.asm	/^f01051f8:	e8 a8 eb ff ff       	call   f0103da5 <user_mem_assert>$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0105201	obj/kern/kernel.asm	/^f0105201:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	c7 04 24 99 89 10 f0 	movl   $0xf0108999,(%esp)$/;"	l
f010520c	obj/kern/kernel.asm	/^f010520c:	e8 a1 f5 ff ff       	call   f01047b2 <cprintf>$/;"	l
f0105211	obj/kern/kernel.asm	/^f0105211:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	e9 9b 02 00 00       	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	00 $/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0105226	obj/kern/kernel.asm	/^f0105226:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f010522d	obj/kern/kernel.asm	/^f010522d:	e8 4b ec ff ff       	call   f0103e7d <envid2env>$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	85 c0                	test   %eax,%eax$/;"	l
f0105234	obj/kern/kernel.asm	/^f0105234:	0f 88 54 02 00 00    	js     f010548e <syscall+0x39e>$/;"	l
f010523a	obj/kern/kernel.asm	/^f010523a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010523f	obj/kern/kernel.asm	/^f010523f:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f0105245	obj/kern/kernel.asm	/^f0105245:	0f 87 6b 02 00 00    	ja     f01054b6 <syscall+0x3c6>$/;"	l
f010524b	obj/kern/kernel.asm	/^f010524b:	8d 93 ff 0f 00 00    	lea    0xfff(%ebx),%edx$/;"	l
f0105251	obj/kern/kernel.asm	/^f0105251:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0105257	obj/kern/kernel.asm	/^f0105257:	39 d3                	cmp    %edx,%ebx$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	0f 85 57 02 00 00    	jne    f01054b6 <syscall+0x3c6>$/;"	l
f010525f	obj/kern/kernel.asm	/^f010525f:	89 fa                	mov    %edi,%edx$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	81 e2 fd f1 ff ff    	and    $0xfffff1fd,%edx$/;"	l
f0105267	obj/kern/kernel.asm	/^f0105267:	83 fa 05             	cmp    $0x5,%edx$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	0f 85 46 02 00 00    	jne    f01054b6 <syscall+0x3c6>$/;"	l
f0105270	obj/kern/kernel.asm	/^f0105270:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0105277	obj/kern/kernel.asm	/^f0105277:	e8 1d c6 ff ff       	call   f0101899 <page_alloc>$/;"	l
f010527c	obj/kern/kernel.asm	/^f010527c:	89 c6                	mov    %eax,%esi$/;"	l
f010527e	obj/kern/kernel.asm	/^f010527e:	85 c0                	test   %eax,%eax$/;"	l
f0105280	obj/kern/kernel.asm	/^f0105280:	0f 84 0f 02 00 00    	je     f0105495 <syscall+0x3a5>$/;"	l
f0105286	obj/kern/kernel.asm	/^f0105286:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010528a	obj/kern/kernel.asm	/^f010528a:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105292	obj/kern/kernel.asm	/^f0105292:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105295	obj/kern/kernel.asm	/^f0105295:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105298	obj/kern/kernel.asm	/^f0105298:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010529b	obj/kern/kernel.asm	/^f010529b:	e8 c8 c8 ff ff       	call   f0101b68 <page_insert>$/;"	l
f01052a0	obj/kern/kernel.asm	/^f01052a0:	85 c0                	test   %eax,%eax$/;"	l
f01052a2	obj/kern/kernel.asm	/^f01052a2:	0f 89 f4 01 00 00    	jns    f010549c <syscall+0x3ac>$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01052ab	obj/kern/kernel.asm	/^f01052ab:	e8 6a c6 ff ff       	call   f010191a <page_free>$/;"	l
f01052b0	obj/kern/kernel.asm	/^f01052b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01052b5	obj/kern/kernel.asm	/^f01052b5:	e9 fc 01 00 00       	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f01052ba	obj/kern/kernel.asm	/^f01052ba:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01052c1	obj/kern/kernel.asm	/^f01052c1:	00 $/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052c9	obj/kern/kernel.asm	/^f01052c9:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01052cc	obj/kern/kernel.asm	/^f01052cc:	e8 ac eb ff ff       	call   f0103e7d <envid2env>$/;"	l
f01052d1	obj/kern/kernel.asm	/^f01052d1:	89 c2                	mov    %eax,%edx$/;"	l
f01052d3	obj/kern/kernel.asm	/^f01052d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	85 d2                	test   %edx,%edx$/;"	l
f01052da	obj/kern/kernel.asm	/^f01052da:	0f 88 d6 01 00 00    	js     f01054b6 <syscall+0x3c6>$/;"	l
f01052e0	obj/kern/kernel.asm	/^f01052e0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01052e7	obj/kern/kernel.asm	/^f01052e7:	00 $/;"	l
f01052e8	obj/kern/kernel.asm	/^f01052e8:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f01052eb	obj/kern/kernel.asm	/^f01052eb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01052ef	obj/kern/kernel.asm	/^f01052ef:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01052f2	obj/kern/kernel.asm	/^f01052f2:	e8 86 eb ff ff       	call   f0103e7d <envid2env>$/;"	l
f01052f7	obj/kern/kernel.asm	/^f01052f7:	85 c0                	test   %eax,%eax$/;"	l
f01052f9	obj/kern/kernel.asm	/^f01052f9:	0f 88 a4 01 00 00    	js     f01054a3 <syscall+0x3b3>$/;"	l
f01052ff	obj/kern/kernel.asm	/^f01052ff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f010530a	obj/kern/kernel.asm	/^f010530a:	0f 87 a6 01 00 00    	ja     f01054b6 <syscall+0x3c6>$/;"	l
f0105310	obj/kern/kernel.asm	/^f0105310:	8d 93 ff 0f 00 00    	lea    0xfff(%ebx),%edx$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010531c	obj/kern/kernel.asm	/^f010531c:	39 d3                	cmp    %edx,%ebx$/;"	l
f010531e	obj/kern/kernel.asm	/^f010531e:	0f 85 92 01 00 00    	jne    f01054b6 <syscall+0x3c6>$/;"	l
f0105324	obj/kern/kernel.asm	/^f0105324:	81 7d 18 ff ff bf ee 	cmpl   $0xeebfffff,0x18(%ebp)$/;"	l
f010532b	obj/kern/kernel.asm	/^f010532b:	0f 87 85 01 00 00    	ja     f01054b6 <syscall+0x3c6>$/;"	l
f0105331	obj/kern/kernel.asm	/^f0105331:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	81 c2 ff 0f 00 00    	add    $0xfff,%edx$/;"	l
f010533a	obj/kern/kernel.asm	/^f010533a:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0105340	obj/kern/kernel.asm	/^f0105340:	39 55 18             	cmp    %edx,0x18(%ebp)$/;"	l
f0105343	obj/kern/kernel.asm	/^f0105343:	0f 85 6d 01 00 00    	jne    f01054b6 <syscall+0x3c6>$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	8b 55 1c             	mov    0x1c(%ebp),%edx$/;"	l
f010534c	obj/kern/kernel.asm	/^f010534c:	81 e2 fd f1 ff ff    	and    $0xfffff1fd,%edx$/;"	l
f0105352	obj/kern/kernel.asm	/^f0105352:	83 fa 05             	cmp    $0x5,%edx$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	0f 85 5b 01 00 00    	jne    f01054b6 <syscall+0x3c6>$/;"	l
f010535b	obj/kern/kernel.asm	/^f010535b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010535e	obj/kern/kernel.asm	/^f010535e:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105369	obj/kern/kernel.asm	/^f0105369:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010536c	obj/kern/kernel.asm	/^f010536c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010536f	obj/kern/kernel.asm	/^f010536f:	e8 49 c7 ff ff       	call   f0101abd <page_lookup>$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	89 c2                	mov    %eax,%edx$/;"	l
f0105376	obj/kern/kernel.asm	/^f0105376:	85 c0                	test   %eax,%eax$/;"	l
f0105378	obj/kern/kernel.asm	/^f0105378:	0f 84 2c 01 00 00    	je     f01054aa <syscall+0x3ba>$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f0105382	obj/kern/kernel.asm	/^f0105382:	74 11                	je     f0105395 <syscall+0x2a5>$/;"	l
f0105384	obj/kern/kernel.asm	/^f0105384:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105389	obj/kern/kernel.asm	/^f0105389:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	f6 01 02             	testb  $0x2,(%ecx)$/;"	l
f010538f	obj/kern/kernel.asm	/^f010538f:	0f 84 21 01 00 00    	je     f01054b6 <syscall+0x3c6>$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	8b 4d 1c             	mov    0x1c(%ebp),%ecx$/;"	l
f010539b	obj/kern/kernel.asm	/^f010539b:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010539f	obj/kern/kernel.asm	/^f010539f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01053a3	obj/kern/kernel.asm	/^f01053a3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01053a7	obj/kern/kernel.asm	/^f01053a7:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01053aa	obj/kern/kernel.asm	/^f01053aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01053ad	obj/kern/kernel.asm	/^f01053ad:	e8 b6 c7 ff ff       	call   f0101b68 <page_insert>$/;"	l
f01053b2	obj/kern/kernel.asm	/^f01053b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053b7	obj/kern/kernel.asm	/^f01053b7:	e9 fa 00 00 00       	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01053c3	obj/kern/kernel.asm	/^f01053c3:	00 $/;"	l
f01053c4	obj/kern/kernel.asm	/^f01053c4:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01053c7	obj/kern/kernel.asm	/^f01053c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01053cb	obj/kern/kernel.asm	/^f01053cb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	e8 aa ea ff ff       	call   f0103e7d <envid2env>$/;"	l
f01053d3	obj/kern/kernel.asm	/^f01053d3:	85 c0                	test   %eax,%eax$/;"	l
f01053d5	obj/kern/kernel.asm	/^f01053d5:	0f 88 d6 00 00 00    	js     f01054b1 <syscall+0x3c1>$/;"	l
f01053db	obj/kern/kernel.asm	/^f01053db:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053e0	obj/kern/kernel.asm	/^f01053e0:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6:	0f 87 ca 00 00 00    	ja     f01054b6 <syscall+0x3c6>$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	8d 93 ff 0f 00 00    	lea    0xfff(%ebx),%edx$/;"	l
f01053f2	obj/kern/kernel.asm	/^f01053f2:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01053f8	obj/kern/kernel.asm	/^f01053f8:	39 d3                	cmp    %edx,%ebx$/;"	l
f01053fa	obj/kern/kernel.asm	/^f01053fa:	0f 85 b6 00 00 00    	jne    f01054b6 <syscall+0x3c6>$/;"	l
f0105400	obj/kern/kernel.asm	/^f0105400:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105404	obj/kern/kernel.asm	/^f0105404:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105407	obj/kern/kernel.asm	/^f0105407:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010540a	obj/kern/kernel.asm	/^f010540a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010540d	obj/kern/kernel.asm	/^f010540d:	e8 18 c7 ff ff       	call   f0101b2a <page_remove>$/;"	l
f0105412	obj/kern/kernel.asm	/^f0105412:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105417	obj/kern/kernel.asm	/^f0105417:	e9 9a 00 00 00       	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f010541c	obj/kern/kernel.asm	/^f010541c:	e8 ff 13 00 00       	call   f0106820 <cpunum>$/;"	l
f0105421	obj/kern/kernel.asm	/^f0105421:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f010542a	obj/kern/kernel.asm	/^f010542a:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105431	obj/kern/kernel.asm	/^f0105431:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105437	obj/kern/kernel.asm	/^f0105437:	e8 58 eb ff ff       	call   f0103f94 <env_alloc>$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	89 c2                	mov    %eax,%edx$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105443	obj/kern/kernel.asm	/^f0105443:	85 d2                	test   %edx,%edx$/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	78 6f                	js     f01054b6 <syscall+0x3c6>$/;"	l
f0105447	obj/kern/kernel.asm	/^f0105447:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	e8 ca 13 00 00       	call   f0106820 <cpunum>$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	00 $/;"	l
f010545e	obj/kern/kernel.asm	/^f010545e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0105467	obj/kern/kernel.asm	/^f0105467:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010546b	obj/kern/kernel.asm	/^f010546b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010546e	obj/kern/kernel.asm	/^f010546e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105471	obj/kern/kernel.asm	/^f0105471:	e8 ef 0d 00 00       	call   f0106265 <memcpy>$/;"	l
f0105476	obj/kern/kernel.asm	/^f0105476:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105479	obj/kern/kernel.asm	/^f0105479:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105480	obj/kern/kernel.asm	/^f0105480:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105485	obj/kern/kernel.asm	/^f0105485:	eb 2f                	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f0105487	obj/kern/kernel.asm	/^f0105487:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010548c	obj/kern/kernel.asm	/^f010548c:	eb 28                	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f010548e	obj/kern/kernel.asm	/^f010548e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105493	obj/kern/kernel.asm	/^f0105493:	eb 21                	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010549a	obj/kern/kernel.asm	/^f010549a:	eb 1a                	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01054a1	obj/kern/kernel.asm	/^f01054a1:	eb 13                	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f01054a3	obj/kern/kernel.asm	/^f01054a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01054a8	obj/kern/kernel.asm	/^f01054a8:	eb 0c                	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f01054aa	obj/kern/kernel.asm	/^f01054aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01054af	obj/kern/kernel.asm	/^f01054af:	eb 05                	jmp    f01054b6 <syscall+0x3c6>$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01054b6	obj/kern/kernel.asm	/^f01054b6:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01054b9	obj/kern/kernel.asm	/^f01054b9:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01054bc	obj/kern/kernel.asm	/^f01054bc:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01054bf	obj/kern/kernel.asm	/^f01054bf:	89 ec                	mov    %ebp,%esp$/;"	l
f01054c1	obj/kern/kernel.asm	/^f01054c1:	5d                   	pop    %ebp$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	c3                   	ret    $/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4 <stab_binsearch>:$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	55                   	push   %ebp$/;"	l
f01054c5	obj/kern/kernel.asm	/^f01054c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	57                   	push   %edi$/;"	l
f01054c8	obj/kern/kernel.asm	/^f01054c8:	56                   	push   %esi$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	53                   	push   %ebx$/;"	l
f01054ca	obj/kern/kernel.asm	/^f01054ca:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01054cd	obj/kern/kernel.asm	/^f01054cd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
f01054d3	obj/kern/kernel.asm	/^f01054d3:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f01054d6	obj/kern/kernel.asm	/^f01054d6:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	8b 1a                	mov    (%edx),%ebx$/;"	l
f01054db	obj/kern/kernel.asm	/^f01054db:	8b 01                	mov    (%ecx),%eax$/;"	l
f01054dd	obj/kern/kernel.asm	/^f01054dd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	39 c3                	cmp    %eax,%ebx$/;"	l
f01054e2	obj/kern/kernel.asm	/^f01054e2:	0f 8f 9c 00 00 00    	jg     f0105584 <stab_binsearch+0xc0>$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01054ef	obj/kern/kernel.asm	/^f01054ef:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	01 d8                	add    %ebx,%eax$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	89 c7                	mov    %eax,%edi$/;"	l
f01054f6	obj/kern/kernel.asm	/^f01054f6:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f01054f9	obj/kern/kernel.asm	/^f01054f9:	01 c7                	add    %eax,%edi$/;"	l
f01054fb	obj/kern/kernel.asm	/^f01054fb:	d1 ff                	sar    %edi$/;"	d
f01054fd	obj/kern/kernel.asm	/^f01054fd:	39 df                	cmp    %ebx,%edi$/;"	l
f01054ff	obj/kern/kernel.asm	/^f01054ff:	7c 33                	jl     f0105534 <stab_binsearch+0x70>$/;"	l
f0105501	obj/kern/kernel.asm	/^f0105501:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105504	obj/kern/kernel.asm	/^f0105504:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0105507	obj/kern/kernel.asm	/^f0105507:	0f b6 44 82 04       	movzbl 0x4(%edx,%eax,4),%eax$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	39 f0                	cmp    %esi,%eax$/;"	l
f010550e	obj/kern/kernel.asm	/^f010550e:	0f 84 bc 00 00 00    	je     f01055d0 <stab_binsearch+0x10c>$/;"	l
f0105514	obj/kern/kernel.asm	/^f0105514:	8d 44 7f fd          	lea    -0x3(%edi,%edi,2),%eax$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	8d 54 82 04          	lea    0x4(%edx,%eax,4),%edx$/;"	l
f010551c	obj/kern/kernel.asm	/^f010551c:	89 f8                	mov    %edi,%eax$/;"	l
f010551e	obj/kern/kernel.asm	/^f010551e:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105523	obj/kern/kernel.asm	/^f0105523:	7c 0f                	jl     f0105534 <stab_binsearch+0x70>$/;"	l
f0105525	obj/kern/kernel.asm	/^f0105525:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0105528	obj/kern/kernel.asm	/^f0105528:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f010552b	obj/kern/kernel.asm	/^f010552b:	39 f1                	cmp    %esi,%ecx$/;"	l
f010552d	obj/kern/kernel.asm	/^f010552d:	75 ef                	jne    f010551e <stab_binsearch+0x5a>$/;"	l
f010552f	obj/kern/kernel.asm	/^f010552f:	e9 9e 00 00 00       	jmp    f01055d2 <stab_binsearch+0x10e>$/;"	l
f0105534	obj/kern/kernel.asm	/^f0105534:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105537	obj/kern/kernel.asm	/^f0105537:	eb 3c                	jmp    f0105575 <stab_binsearch+0xb1>$/;"	l
f0105539	obj/kern/kernel.asm	/^f0105539:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f010553c	obj/kern/kernel.asm	/^f010553c:	89 02                	mov    %eax,(%edx)$/;"	l
f010553e	obj/kern/kernel.asm	/^f010553e:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	eb 2b                	jmp    f0105575 <stab_binsearch+0xb1>$/;"	l
f010554a	obj/kern/kernel.asm	/^f010554a:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f010554d	obj/kern/kernel.asm	/^f010554d:	76 14                	jbe    f0105563 <stab_binsearch+0x9f>$/;"	l
f010554f	obj/kern/kernel.asm	/^f010554f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	89 01                	mov    %eax,(%ecx)$/;"	l
f010555a	obj/kern/kernel.asm	/^f010555a:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	eb 12                	jmp    f0105575 <stab_binsearch+0xb1>$/;"	l
f0105563	obj/kern/kernel.asm	/^f0105563:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105566	obj/kern/kernel.asm	/^f0105566:	89 02                	mov    %eax,(%edx)$/;"	l
f0105568	obj/kern/kernel.asm	/^f0105568:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	89 c3                	mov    %eax,%ebx$/;"	l
f010556e	obj/kern/kernel.asm	/^f010556e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
f0105575	obj/kern/kernel.asm	/^f0105575:	39 5d ec             	cmp    %ebx,-0x14(%ebp)$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	0f 8d 71 ff ff ff    	jge    f01054ef <stab_binsearch+0x2b>$/;"	l
f010557e	obj/kern/kernel.asm	/^f010557e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	75 0f                	jne    f0105593 <stab_binsearch+0xcf>$/;"	l
f0105584	obj/kern/kernel.asm	/^f0105584:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0105587	obj/kern/kernel.asm	/^f0105587:	8b 02                	mov    (%edx),%eax$/;"	l
f0105589	obj/kern/kernel.asm	/^f0105589:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010558c	obj/kern/kernel.asm	/^f010558c:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f010558f	obj/kern/kernel.asm	/^f010558f:	89 01                	mov    %eax,(%ecx)$/;"	l
f0105591	obj/kern/kernel.asm	/^f0105591:	eb 57                	jmp    f01055ea <stab_binsearch+0x126>$/;"	l
f0105593	obj/kern/kernel.asm	/^f0105593:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0105596	obj/kern/kernel.asm	/^f0105596:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105598	obj/kern/kernel.asm	/^f0105598:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f010559b	obj/kern/kernel.asm	/^f010559b:	8b 0a                	mov    (%edx),%ecx$/;"	l
f010559d	obj/kern/kernel.asm	/^f010559d:	39 c1                	cmp    %eax,%ecx$/;"	l
f010559f	obj/kern/kernel.asm	/^f010559f:	7d 28                	jge    f01055c9 <stab_binsearch+0x105>$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	0f b6 54 93 04       	movzbl 0x4(%ebx,%edx,4),%edx$/;"	l
f01055ac	obj/kern/kernel.asm	/^f01055ac:	39 f2                	cmp    %esi,%edx$/;"	l
f01055ae	obj/kern/kernel.asm	/^f01055ae:	74 19                	je     f01055c9 <stab_binsearch+0x105>$/;"	l
f01055b0	obj/kern/kernel.asm	/^f01055b0:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f01055b4	obj/kern/kernel.asm	/^f01055b4:	8d 54 93 04          	lea    0x4(%ebx,%edx,4),%edx$/;"	l
f01055b8	obj/kern/kernel.asm	/^f01055b8:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01055bb	obj/kern/kernel.asm	/^f01055bb:	39 c1                	cmp    %eax,%ecx$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	7d 0a                	jge    f01055c9 <stab_binsearch+0x105>$/;"	l
f01055bf	obj/kern/kernel.asm	/^f01055bf:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f01055c2	obj/kern/kernel.asm	/^f01055c2:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	39 f3                	cmp    %esi,%ebx$/;"	l
f01055c7	obj/kern/kernel.asm	/^f01055c7:	75 ef                	jne    f01055b8 <stab_binsearch+0xf4>$/;"	l
f01055c9	obj/kern/kernel.asm	/^f01055c9:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	89 02                	mov    %eax,(%edx)$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	eb 1a                	jmp    f01055ea <stab_binsearch+0x126>$/;"	l
f01055d0	obj/kern/kernel.asm	/^f01055d0:	89 f8                	mov    %edi,%eax$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f01055d5	obj/kern/kernel.asm	/^f01055d5:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f01055dc	obj/kern/kernel.asm	/^f01055dc:	3b 55 0c             	cmp    0xc(%ebp),%edx$/;"	l
f01055df	obj/kern/kernel.asm	/^f01055df:	0f 82 54 ff ff ff    	jb     f0105539 <stab_binsearch+0x75>$/;"	l
f01055e5	obj/kern/kernel.asm	/^f01055e5:	e9 60 ff ff ff       	jmp    f010554a <stab_binsearch+0x86>$/;"	l
f01055ea	obj/kern/kernel.asm	/^f01055ea:	83 c4 14             	add    $0x14,%esp$/;"	l
f01055ed	obj/kern/kernel.asm	/^f01055ed:	5b                   	pop    %ebx$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	5e                   	pop    %esi$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	5f                   	pop    %edi$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	5d                   	pop    %ebp$/;"	l
f01055f1	obj/kern/kernel.asm	/^f01055f1:	c3                   	ret    $/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2 <debuginfo_eip>:$/;"	l
f01055f2	obj/kern/kernel.asm	/^f01055f2:	55                   	push   %ebp$/;"	l
f01055f3	obj/kern/kernel.asm	/^f01055f3:	89 e5                	mov    %esp,%ebp$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	57                   	push   %edi$/;"	l
f01055f6	obj/kern/kernel.asm	/^f01055f6:	56                   	push   %esi$/;"	l
f01055f7	obj/kern/kernel.asm	/^f01055f7:	53                   	push   %ebx$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f01055fb	obj/kern/kernel.asm	/^f01055fb:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01055fe	obj/kern/kernel.asm	/^f01055fe:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105601	obj/kern/kernel.asm	/^f0105601:	c7 03 cc 89 10 f0    	movl   $0xf01089cc,(%ebx)$/;"	l
f0105607	obj/kern/kernel.asm	/^f0105607:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)$/;"	l
f010560e	obj/kern/kernel.asm	/^f010560e:	c7 43 08 cc 89 10 f0 	movl   $0xf01089cc,0x8(%ebx)$/;"	l
f0105615	obj/kern/kernel.asm	/^f0105615:	c7 43 0c 09 00 00 00 	movl   $0x9,0xc(%ebx)$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f010561f	obj/kern/kernel.asm	/^f010561f:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)$/;"	l
f0105626	obj/kern/kernel.asm	/^f0105626:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f010562c	obj/kern/kernel.asm	/^f010562c:	0f 87 de 00 00 00    	ja     f0105710 <debuginfo_eip+0x11e>$/;"	l
f0105632	obj/kern/kernel.asm	/^f0105632:	e8 e9 11 00 00       	call   f0106820 <cpunum>$/;"	l
f0105637	obj/kern/kernel.asm	/^f0105637:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f010563e	obj/kern/kernel.asm	/^f010563e:	00 $/;"	l
f010563f	obj/kern/kernel.asm	/^f010563f:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	00 $/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f010564e	obj/kern/kernel.asm	/^f010564e:	00 $/;"	l
f010564f	obj/kern/kernel.asm	/^f010564f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105652	obj/kern/kernel.asm	/^f0105652:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f0105658	obj/kern/kernel.asm	/^f0105658:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010565b	obj/kern/kernel.asm	/^f010565b:	e8 8b e6 ff ff       	call   f0103ceb <user_mem_check>$/;"	l
f0105660	obj/kern/kernel.asm	/^f0105660:	89 c2                	mov    %eax,%edx$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0105667	obj/kern/kernel.asm	/^f0105667:	85 d2                	test   %edx,%edx$/;"	l
f0105669	obj/kern/kernel.asm	/^f0105669:	0f 88 b4 02 00 00    	js     f0105923 <debuginfo_eip+0x331>$/;"	l
f010566f	obj/kern/kernel.asm	/^f010566f:	8b 3d 00 00 20 00    	mov    0x200000,%edi$/;"	l
f0105675	obj/kern/kernel.asm	/^f0105675:	89 7d c4             	mov    %edi,-0x3c(%ebp)$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	8b 3d 04 00 20 00    	mov    0x200004,%edi$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	a1 08 00 20 00       	mov    0x200008,%eax$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f0105686	obj/kern/kernel.asm	/^f0105686:	8b 15 0c 00 20 00    	mov    0x20000c,%edx$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
f010568f	obj/kern/kernel.asm	/^f010568f:	89 f9                	mov    %edi,%ecx$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	2b 4d c4             	sub    -0x3c(%ebp),%ecx$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	89 4d c0             	mov    %ecx,-0x40(%ebp)$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	e8 84 11 00 00       	call   f0106820 <cpunum>$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	00 $/;"	l
f01056a4	obj/kern/kernel.asm	/^f01056a4:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f01056a7	obj/kern/kernel.asm	/^f01056a7:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f01056ae	obj/kern/kernel.asm	/^f01056ae:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01056b5	obj/kern/kernel.asm	/^f01056b5:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01056bb	obj/kern/kernel.asm	/^f01056bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01056be	obj/kern/kernel.asm	/^f01056be:	e8 28 e6 ff ff       	call   f0103ceb <user_mem_check>$/;"	l
f01056c3	obj/kern/kernel.asm	/^f01056c3:	89 c2                	mov    %eax,%edx$/;"	l
f01056c5	obj/kern/kernel.asm	/^f01056c5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01056ca	obj/kern/kernel.asm	/^f01056ca:	85 d2                	test   %edx,%edx$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	0f 88 51 02 00 00    	js     f0105923 <debuginfo_eip+0x331>$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	2b 45 b8             	sub    -0x48(%ebp),%eax$/;"	l
f01056d8	obj/kern/kernel.asm	/^f01056d8:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	e8 40 11 00 00       	call   f0106820 <cpunum>$/;"	l
f01056e0	obj/kern/kernel.asm	/^f01056e0:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
f01056e7	obj/kern/kernel.asm	/^f01056e7:	00 $/;"	l
f01056e8	obj/kern/kernel.asm	/^f01056e8:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
f01056eb	obj/kern/kernel.asm	/^f01056eb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01056ef	obj/kern/kernel.asm	/^f01056ef:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f01056f2	obj/kern/kernel.asm	/^f01056f2:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f01056f6	obj/kern/kernel.asm	/^f01056f6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01056f9	obj/kern/kernel.asm	/^f01056f9:	8b 80 28 50 22 f0    	mov    -0xfddafd8(%eax),%eax$/;"	l
f01056ff	obj/kern/kernel.asm	/^f01056ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105702	obj/kern/kernel.asm	/^f0105702:	e8 e4 e5 ff ff       	call   f0103ceb <user_mem_check>$/;"	l
f0105707	obj/kern/kernel.asm	/^f0105707:	85 c0                	test   %eax,%eax$/;"	l
f0105709	obj/kern/kernel.asm	/^f0105709:	79 1f                	jns    f010572a <debuginfo_eip+0x138>$/;"	l
f010570b	obj/kern/kernel.asm	/^f010570b:	e9 07 02 00 00       	jmp    f0105917 <debuginfo_eip+0x325>$/;"	l
f0105710	obj/kern/kernel.asm	/^f0105710:	c7 45 bc 7e 7d 11 f0 	movl   $0xf0117d7e,-0x44(%ebp)$/;"	l
f0105717	obj/kern/kernel.asm	/^f0105717:	c7 45 b8 c1 43 11 f0 	movl   $0xf01143c1,-0x48(%ebp)$/;"	l
f010571e	obj/kern/kernel.asm	/^f010571e:	bf c0 43 11 f0       	mov    $0xf01143c0,%edi$/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	c7 45 c4 94 8e 10 f0 	movl   $0xf0108e94,-0x3c(%ebp)$/;"	l
f010572a	obj/kern/kernel.asm	/^f010572a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105732	obj/kern/kernel.asm	/^f0105732:	39 55 b8             	cmp    %edx,-0x48(%ebp)$/;"	l
f0105735	obj/kern/kernel.asm	/^f0105735:	0f 83 e8 01 00 00    	jae    f0105923 <debuginfo_eip+0x331>$/;"	l
f010573b	obj/kern/kernel.asm	/^f010573b:	80 7a ff 00          	cmpb   $0x0,-0x1(%edx)$/;"	l
f010573f	obj/kern/kernel.asm	/^f010573f:	0f 85 de 01 00 00    	jne    f0105923 <debuginfo_eip+0x331>$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010574c	obj/kern/kernel.asm	/^f010574c:	2b 7d c4             	sub    -0x3c(%ebp),%edi$/;"	l
f010574f	obj/kern/kernel.asm	/^f010574f:	c1 ff 02             	sar    $0x2,%edi$/;"	l
f0105752	obj/kern/kernel.asm	/^f0105752:	69 c7 ab aa aa aa    	imul   $0xaaaaaaab,%edi,%eax$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105762	obj/kern/kernel.asm	/^f0105762:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f010576c	obj/kern/kernel.asm	/^f010576c:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f010576f	obj/kern/kernel.asm	/^f010576f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105772	obj/kern/kernel.asm	/^f0105772:	e8 4d fd ff ff       	call   f01054c4 <stab_binsearch>$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010577a	obj/kern/kernel.asm	/^f010577a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010577f	obj/kern/kernel.asm	/^f010577f:	85 d2                	test   %edx,%edx$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	0f 84 9c 01 00 00    	je     f0105923 <debuginfo_eip+0x331>$/;"	l
f0105787	obj/kern/kernel.asm	/^f0105787:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
f010578a	obj/kern/kernel.asm	/^f010578a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010578d	obj/kern/kernel.asm	/^f010578d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105790	obj/kern/kernel.asm	/^f0105790:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01057a1	obj/kern/kernel.asm	/^f01057a1:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f01057a4	obj/kern/kernel.asm	/^f01057a4:	e8 1b fd ff ff       	call   f01054c4 <stab_binsearch>$/;"	l
f01057a9	obj/kern/kernel.asm	/^f01057a9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01057ac	obj/kern/kernel.asm	/^f01057ac:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	39 d0                	cmp    %edx,%eax$/;"	l
f01057b1	obj/kern/kernel.asm	/^f01057b1:	7f 32                	jg     f01057e5 <debuginfo_eip+0x1f3>$/;"	l
f01057b3	obj/kern/kernel.asm	/^f01057b3:	8d 0c 40             	lea    (%eax,%eax,2),%ecx$/;"	l
f01057b6	obj/kern/kernel.asm	/^f01057b6:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	8d 0c 8f             	lea    (%edi,%ecx,4),%ecx$/;"	l
f01057bc	obj/kern/kernel.asm	/^f01057bc:	8b 39                	mov    (%ecx),%edi$/;"	l
f01057be	obj/kern/kernel.asm	/^f01057be:	89 7d b4             	mov    %edi,-0x4c(%ebp)$/;"	l
f01057c1	obj/kern/kernel.asm	/^f01057c1:	8b 7d bc             	mov    -0x44(%ebp),%edi$/;"	l
f01057c4	obj/kern/kernel.asm	/^f01057c4:	2b 7d b8             	sub    -0x48(%ebp),%edi$/;"	l
f01057c7	obj/kern/kernel.asm	/^f01057c7:	39 7d b4             	cmp    %edi,-0x4c(%ebp)$/;"	l
f01057ca	obj/kern/kernel.asm	/^f01057ca:	73 09                	jae    f01057d5 <debuginfo_eip+0x1e3>$/;"	l
f01057cc	obj/kern/kernel.asm	/^f01057cc:	8b 7d b4             	mov    -0x4c(%ebp),%edi$/;"	l
f01057cf	obj/kern/kernel.asm	/^f01057cf:	03 7d b8             	add    -0x48(%ebp),%edi$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	89 7b 08             	mov    %edi,0x8(%ebx)$/;"	l
f01057d5	obj/kern/kernel.asm	/^f01057d5:	8b 49 08             	mov    0x8(%ecx),%ecx$/;"	l
f01057d8	obj/kern/kernel.asm	/^f01057d8:	89 4b 10             	mov    %ecx,0x10(%ebx)$/;"	l
f01057db	obj/kern/kernel.asm	/^f01057db:	29 ce                	sub    %ecx,%esi$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01057e0	obj/kern/kernel.asm	/^f01057e0:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f01057e3	obj/kern/kernel.asm	/^f01057e3:	eb 0f                	jmp    f01057f4 <debuginfo_eip+0x202>$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	89 73 10             	mov    %esi,0x10(%ebx)$/;"	l
f01057e8	obj/kern/kernel.asm	/^f01057e8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01057eb	obj/kern/kernel.asm	/^f01057eb:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01057ee	obj/kern/kernel.asm	/^f01057ee:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01057f1	obj/kern/kernel.asm	/^f01057f1:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	00 $/;"	l
f01057fc	obj/kern/kernel.asm	/^f01057fc:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105802	obj/kern/kernel.asm	/^f0105802:	e8 63 09 00 00       	call   f010616a <strfind>$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	2b 43 08             	sub    0x8(%ebx),%eax$/;"	l
f010580a	obj/kern/kernel.asm	/^f010580a:	89 43 0c             	mov    %eax,0xc(%ebx)$/;"	l
f010580d	obj/kern/kernel.asm	/^f010580d:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105811	obj/kern/kernel.asm	/^f0105811:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	e8 9e fc ff ff       	call   f01054c4 <stab_binsearch>$/;"	l
f0105826	obj/kern/kernel.asm	/^f0105826:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	7f 10                	jg     f010583e <debuginfo_eip+0x24c>$/;"	l
f010582e	obj/kern/kernel.asm	/^f010582e:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0105831	obj/kern/kernel.asm	/^f0105831:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	0f b7 44 86 06       	movzwl 0x6(%esi,%eax,4),%eax$/;"	l
f0105839	obj/kern/kernel.asm	/^f0105839:	89 43 04             	mov    %eax,0x4(%ebx)$/;"	l
f010583c	obj/kern/kernel.asm	/^f010583c:	eb 07                	jmp    f0105845 <debuginfo_eip+0x253>$/;"	l
f010583e	obj/kern/kernel.asm	/^f010583e:	c7 43 04 ff ff ff ff 	movl   $0xffffffff,0x4(%ebx)$/;"	l
f0105845	obj/kern/kernel.asm	/^f0105845:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	89 7d c0             	mov    %edi,-0x40(%ebp)$/;"	l
f010584e	obj/kern/kernel.asm	/^f010584e:	39 f8                	cmp    %edi,%eax$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	7c 75                	jl     f01058c7 <debuginfo_eip+0x2d5>$/;"	l
f0105852	obj/kern/kernel.asm	/^f0105852:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f0105858	obj/kern/kernel.asm	/^f0105858:	8d 34 97             	lea    (%edi,%edx,4),%esi$/;"	l
f010585b	obj/kern/kernel.asm	/^f010585b:	0f b6 4e 04          	movzbl 0x4(%esi),%ecx$/;"	l
f010585f	obj/kern/kernel.asm	/^f010585f:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	74 46                	je     f01058aa <debuginfo_eip+0x2b8>$/;"	l
f0105864	obj/kern/kernel.asm	/^f0105864:	8d 54 40 fd          	lea    -0x3(%eax,%eax,2),%edx$/;"	l
f0105868	obj/kern/kernel.asm	/^f0105868:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f010586b	obj/kern/kernel.asm	/^f010586b:	89 c7                	mov    %eax,%edi$/;"	l
f010586d	obj/kern/kernel.asm	/^f010586d:	89 5d b4             	mov    %ebx,-0x4c(%ebp)$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	8b 5d c0             	mov    -0x40(%ebp),%ebx$/;"	l
f0105873	obj/kern/kernel.asm	/^f0105873:	eb 1f                	jmp    f0105894 <debuginfo_eip+0x2a2>$/;"	l
f0105875	obj/kern/kernel.asm	/^f0105875:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105878	obj/kern/kernel.asm	/^f0105878:	39 c3                	cmp    %eax,%ebx$/;"	l
f010587a	obj/kern/kernel.asm	/^f010587a:	7f 48                	jg     f01058c4 <debuginfo_eip+0x2d2>$/;"	l
f010587c	obj/kern/kernel.asm	/^f010587c:	89 d6                	mov    %edx,%esi$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105881	obj/kern/kernel.asm	/^f0105881:	0f b6 4a 10          	movzbl 0x10(%edx),%ecx$/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f0105888	obj/kern/kernel.asm	/^f0105888:	75 08                	jne    f0105892 <debuginfo_eip+0x2a0>$/;"	l
f010588a	obj/kern/kernel.asm	/^f010588a:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f010588d	obj/kern/kernel.asm	/^f010588d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	eb 18                	jmp    f01058aa <debuginfo_eip+0x2b8>$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	89 c7                	mov    %eax,%edi$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	75 dc                	jne    f0105875 <debuginfo_eip+0x283>$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	83 7e 08 00          	cmpl   $0x0,0x8(%esi)$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	74 d6                	je     f0105875 <debuginfo_eip+0x283>$/;"	l
f010589f	obj/kern/kernel.asm	/^f010589f:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f01058a2	obj/kern/kernel.asm	/^f01058a2:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f01058a5	obj/kern/kernel.asm	/^f01058a5:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	7c 1d                	jl     f01058c7 <debuginfo_eip+0x2d5>$/;"	l
f01058aa	obj/kern/kernel.asm	/^f01058aa:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f01058ad	obj/kern/kernel.asm	/^f01058ad:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01058b0	obj/kern/kernel.asm	/^f01058b0:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f01058b3	obj/kern/kernel.asm	/^f01058b3:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f01058b6	obj/kern/kernel.asm	/^f01058b6:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	39 d0                	cmp    %edx,%eax$/;"	l
f01058bb	obj/kern/kernel.asm	/^f01058bb:	73 0a                	jae    f01058c7 <debuginfo_eip+0x2d5>$/;"	l
f01058bd	obj/kern/kernel.asm	/^f01058bd:	03 45 b8             	add    -0x48(%ebp),%eax$/;"	l
f01058c0	obj/kern/kernel.asm	/^f01058c0:	89 03                	mov    %eax,(%ebx)$/;"	l
f01058c2	obj/kern/kernel.asm	/^f01058c2:	eb 03                	jmp    f01058c7 <debuginfo_eip+0x2d5>$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	8b 5d b4             	mov    -0x4c(%ebp),%ebx$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01058cd	obj/kern/kernel.asm	/^f01058cd:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01058d5	obj/kern/kernel.asm	/^f01058d5:	3b 7d bc             	cmp    -0x44(%ebp),%edi$/;"	l
f01058d8	obj/kern/kernel.asm	/^f01058d8:	7d 49                	jge    f0105923 <debuginfo_eip+0x331>$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	8d 57 01             	lea    0x1(%edi),%edx$/;"	l
f01058dd	obj/kern/kernel.asm	/^f01058dd:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01058e0	obj/kern/kernel.asm	/^f01058e0:	39 55 bc             	cmp    %edx,-0x44(%ebp)$/;"	l
f01058e3	obj/kern/kernel.asm	/^f01058e3:	7e 3e                	jle    f0105923 <debuginfo_eip+0x331>$/;"	l
f01058e5	obj/kern/kernel.asm	/^f01058e5:	8d 0c 52             	lea    (%edx,%edx,2),%ecx$/;"	l
f01058e8	obj/kern/kernel.asm	/^f01058e8:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01058eb	obj/kern/kernel.asm	/^f01058eb:	80 7c 8e 04 a0       	cmpb   $0xa0,0x4(%esi,%ecx,4)$/;"	l
f01058f0	obj/kern/kernel.asm	/^f01058f0:	75 31                	jne    f0105923 <debuginfo_eip+0x331>$/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f01058f5	obj/kern/kernel.asm	/^f01058f5:	8d 44 86 1c          	lea    0x1c(%esi,%eax,4),%eax$/;"	l
f01058f9	obj/kern/kernel.asm	/^f01058f9:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f01058fc	obj/kern/kernel.asm	/^f01058fc:	83 43 14 01          	addl   $0x1,0x14(%ebx)$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	39 d1                	cmp    %edx,%ecx$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	7e 17                	jle    f010591e <debuginfo_eip+0x32c>$/;"	l
f0105907	obj/kern/kernel.asm	/^f0105907:	83 c0 0c             	add    $0xc,%eax$/;"	l
f010590a	obj/kern/kernel.asm	/^f010590a:	80 78 f4 a0          	cmpb   $0xa0,-0xc(%eax)$/;"	l
f010590e	obj/kern/kernel.asm	/^f010590e:	74 ec                	je     f01058fc <debuginfo_eip+0x30a>$/;"	l
f0105910	obj/kern/kernel.asm	/^f0105910:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	eb 0c                	jmp    f0105923 <debuginfo_eip+0x331>$/;"	l
f0105917	obj/kern/kernel.asm	/^f0105917:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010591c	obj/kern/kernel.asm	/^f010591c:	eb 05                	jmp    f0105923 <debuginfo_eip+0x331>$/;"	l
f010591e	obj/kern/kernel.asm	/^f010591e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	5b                   	pop    %ebx$/;"	l
f0105927	obj/kern/kernel.asm	/^f0105927:	5e                   	pop    %esi$/;"	l
f0105928	obj/kern/kernel.asm	/^f0105928:	5f                   	pop    %edi$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	5d                   	pop    %ebp$/;"	l
f010592a	obj/kern/kernel.asm	/^f010592a:	c3                   	ret    $/;"	l
f010592b	obj/kern/kernel.asm	/^f010592b:	00 00                	add    %al,(%eax)$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	00 00                	add    %al,(%eax)$/;"	l
f0105930	obj/kern/kernel.asm	/^f0105930 <printnum>:$/;"	l
f0105930	obj/kern/kernel.asm	/^f0105930:	55                   	push   %ebp$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	89 e5                	mov    %esp,%ebp$/;"	l
f0105933	obj/kern/kernel.asm	/^f0105933:	57                   	push   %edi$/;"	l
f0105934	obj/kern/kernel.asm	/^f0105934:	56                   	push   %esi$/;"	l
f0105935	obj/kern/kernel.asm	/^f0105935:	53                   	push   %ebx$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0105939	obj/kern/kernel.asm	/^f0105939:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010593c	obj/kern/kernel.asm	/^f010593c:	89 d7                	mov    %edx,%edi$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105944	obj/kern/kernel.asm	/^f0105944:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010594a	obj/kern/kernel.asm	/^f010594a:	8b 5d 14             	mov    0x14(%ebp),%ebx$/;"	l
f010594d	obj/kern/kernel.asm	/^f010594d:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0105958	obj/kern/kernel.asm	/^f0105958:	72 11                	jb     f010596b <printnum+0x3b>$/;"	l
f010595a	obj/kern/kernel.asm	/^f010595a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010595d	obj/kern/kernel.asm	/^f010595d:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	76 09                	jbe    f010596b <printnum+0x3b>$/;"	l
f0105962	obj/kern/kernel.asm	/^f0105962:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105965	obj/kern/kernel.asm	/^f0105965:	85 db                	test   %ebx,%ebx$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	7f 51                	jg     f01059ba <printnum+0x8a>$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	eb 5e                	jmp    f01059c9 <printnum+0x99>$/;"	l
f010596b	obj/kern/kernel.asm	/^f010596b:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f010596f	obj/kern/kernel.asm	/^f010596f:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0105972	obj/kern/kernel.asm	/^f0105972:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f0105976	obj/kern/kernel.asm	/^f0105976:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010597d	obj/kern/kernel.asm	/^f010597d:	8b 5c 24 08          	mov    0x8(%esp),%ebx$/;"	l
f0105981	obj/kern/kernel.asm	/^f0105981:	8b 74 24 0c          	mov    0xc(%esp),%esi$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	00 $/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105990	obj/kern/kernel.asm	/^f0105990:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105993	obj/kern/kernel.asm	/^f0105993:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105996	obj/kern/kernel.asm	/^f0105996:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010599a	obj/kern/kernel.asm	/^f010599a:	e8 11 13 00 00       	call   f0106cb0 <__udivdi3>$/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01059a3	obj/kern/kernel.asm	/^f01059a3:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01059a7	obj/kern/kernel.asm	/^f01059a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059aa	obj/kern/kernel.asm	/^f01059aa:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01059ae	obj/kern/kernel.asm	/^f01059ae:	89 fa                	mov    %edi,%edx$/;"	l
f01059b0	obj/kern/kernel.asm	/^f01059b0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01059b3	obj/kern/kernel.asm	/^f01059b3:	e8 78 ff ff ff       	call   f0105930 <printnum>$/;"	l
f01059b8	obj/kern/kernel.asm	/^f01059b8:	eb 0f                	jmp    f01059c9 <printnum+0x99>$/;"	l
f01059ba	obj/kern/kernel.asm	/^f01059ba:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01059be	obj/kern/kernel.asm	/^f01059be:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01059c1	obj/kern/kernel.asm	/^f01059c1:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f01059c4	obj/kern/kernel.asm	/^f01059c4:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01059c7	obj/kern/kernel.asm	/^f01059c7:	75 f1                	jne    f01059ba <printnum+0x8a>$/;"	l
f01059c9	obj/kern/kernel.asm	/^f01059c9:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01059d4	obj/kern/kernel.asm	/^f01059d4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01059df	obj/kern/kernel.asm	/^f01059df:	00 $/;"	l
f01059e0	obj/kern/kernel.asm	/^f01059e0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01059e3	obj/kern/kernel.asm	/^f01059e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01059ed	obj/kern/kernel.asm	/^f01059ed:	e8 ee 13 00 00       	call   f0106de0 <__umoddi3>$/;"	l
f01059f2	obj/kern/kernel.asm	/^f01059f2:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01059f6	obj/kern/kernel.asm	/^f01059f6:	0f be 80 d6 89 10 f0 	movsbl -0xfef762a(%eax),%eax$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a00	obj/kern/kernel.asm	/^f0105a00:	ff 55 e4             	call   *-0x1c(%ebp)$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0105a06	obj/kern/kernel.asm	/^f0105a06:	5b                   	pop    %ebx$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	5e                   	pop    %esi$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	5f                   	pop    %edi$/;"	l
f0105a09	obj/kern/kernel.asm	/^f0105a09:	5d                   	pop    %ebp$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	c3                   	ret    $/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b <getuint>:$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	55                   	push   %ebp$/;"	l
f0105a0c	obj/kern/kernel.asm	/^f0105a0c:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a0e	obj/kern/kernel.asm	/^f0105a0e:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	7e 0e                	jle    f0105a21 <getuint+0x16>$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	8b 10                	mov    (%eax),%edx$/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f0105a18	obj/kern/kernel.asm	/^f0105a18:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105a1a	obj/kern/kernel.asm	/^f0105a1a:	8b 02                	mov    (%edx),%eax$/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0105a1f	obj/kern/kernel.asm	/^f0105a1f:	eb 22                	jmp    f0105a43 <getuint+0x38>$/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	85 d2                	test   %edx,%edx$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	74 10                	je     f0105a35 <getuint+0x2a>$/;"	l
f0105a25	obj/kern/kernel.asm	/^f0105a25:	8b 10                	mov    (%eax),%edx$/;"	l
f0105a27	obj/kern/kernel.asm	/^f0105a27:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105a2a	obj/kern/kernel.asm	/^f0105a2a:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	8b 02                	mov    (%edx),%eax$/;"	l
f0105a2e	obj/kern/kernel.asm	/^f0105a2e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a33	obj/kern/kernel.asm	/^f0105a33:	eb 0e                	jmp    f0105a43 <getuint+0x38>$/;"	l
f0105a35	obj/kern/kernel.asm	/^f0105a35:	8b 10                	mov    (%eax),%edx$/;"	l
f0105a37	obj/kern/kernel.asm	/^f0105a37:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f0105a3a	obj/kern/kernel.asm	/^f0105a3a:	89 08                	mov    %ecx,(%eax)$/;"	l
f0105a3c	obj/kern/kernel.asm	/^f0105a3c:	8b 02                	mov    (%edx),%eax$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a43	obj/kern/kernel.asm	/^f0105a43:	5d                   	pop    %ebp$/;"	l
f0105a44	obj/kern/kernel.asm	/^f0105a44:	c3                   	ret    $/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45 <sprintputch>:$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	55                   	push   %ebp$/;"	l
f0105a46	obj/kern/kernel.asm	/^f0105a46:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a48	obj/kern/kernel.asm	/^f0105a48:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105a4b	obj/kern/kernel.asm	/^f0105a4b:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	8b 10                	mov    (%eax),%edx$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0105a54	obj/kern/kernel.asm	/^f0105a54:	73 0a                	jae    f0105a60 <sprintputch+0x1b>$/;"	l
f0105a56	obj/kern/kernel.asm	/^f0105a56:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105a59	obj/kern/kernel.asm	/^f0105a59:	88 0a                	mov    %cl,(%edx)$/;"	l
f0105a5b	obj/kern/kernel.asm	/^f0105a5b:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105a5e	obj/kern/kernel.asm	/^f0105a5e:	89 10                	mov    %edx,(%eax)$/;"	l
f0105a60	obj/kern/kernel.asm	/^f0105a60:	5d                   	pop    %ebp$/;"	l
f0105a61	obj/kern/kernel.asm	/^f0105a61:	c3                   	ret    $/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62 <printfmt>:$/;"	l
f0105a62	obj/kern/kernel.asm	/^f0105a62:	55                   	push   %ebp$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a65	obj/kern/kernel.asm	/^f0105a65:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105a68	obj/kern/kernel.asm	/^f0105a68:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105a6b	obj/kern/kernel.asm	/^f0105a6b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105a6f	obj/kern/kernel.asm	/^f0105a6f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105a72	obj/kern/kernel.asm	/^f0105a72:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105a79	obj/kern/kernel.asm	/^f0105a79:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a80	obj/kern/kernel.asm	/^f0105a80:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a83	obj/kern/kernel.asm	/^f0105a83:	e8 02 00 00 00       	call   f0105a8a <vprintfmt>$/;"	l
f0105a88	obj/kern/kernel.asm	/^f0105a88:	c9                   	leave  $/;"	l
f0105a89	obj/kern/kernel.asm	/^f0105a89:	c3                   	ret    $/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a <vprintfmt>:$/;"	l
f0105a8a	obj/kern/kernel.asm	/^f0105a8a:	55                   	push   %ebp$/;"	l
f0105a8b	obj/kern/kernel.asm	/^f0105a8b:	89 e5                	mov    %esp,%ebp$/;"	l
f0105a8d	obj/kern/kernel.asm	/^f0105a8d:	57                   	push   %edi$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	56                   	push   %esi$/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	53                   	push   %ebx$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105a93	obj/kern/kernel.asm	/^f0105a93:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105a99	obj/kern/kernel.asm	/^f0105a99:	eb 12                	jmp    f0105aad <vprintfmt+0x23>$/;"	l
f0105a9b	obj/kern/kernel.asm	/^f0105a9b:	85 c0                	test   %eax,%eax$/;"	l
f0105a9d	obj/kern/kernel.asm	/^f0105a9d:	0f 84 a9 03 00 00    	je     f0105e4c <vprintfmt+0x3c2>$/;"	l
f0105aa3	obj/kern/kernel.asm	/^f0105aa3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105aaa	obj/kern/kernel.asm	/^f0105aaa:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105aad	obj/kern/kernel.asm	/^f0105aad:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105ab0	obj/kern/kernel.asm	/^f0105ab0:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105ab3	obj/kern/kernel.asm	/^f0105ab3:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	75 e3                	jne    f0105a9b <vprintfmt+0x11>$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0105ac3	obj/kern/kernel.asm	/^f0105ac3:	bf ff ff ff ff       	mov    $0xffffffff,%edi$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0105acf	obj/kern/kernel.asm	/^f0105acf:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105ad4	obj/kern/kernel.asm	/^f0105ad4:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0105ad7	obj/kern/kernel.asm	/^f0105ad7:	eb 2b                	jmp    f0105b04 <vprintfmt+0x7a>$/;"	l
f0105ad9	obj/kern/kernel.asm	/^f0105ad9:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0105ae0	obj/kern/kernel.asm	/^f0105ae0:	eb 22                	jmp    f0105b04 <vprintfmt+0x7a>$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f0105ae9	obj/kern/kernel.asm	/^f0105ae9:	eb 19                	jmp    f0105b04 <vprintfmt+0x7a>$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105aee	obj/kern/kernel.asm	/^f0105aee:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105af5	obj/kern/kernel.asm	/^f0105af5:	eb 0d                	jmp    f0105b04 <vprintfmt+0x7a>$/;"	l
f0105af7	obj/kern/kernel.asm	/^f0105af7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0105afa	obj/kern/kernel.asm	/^f0105afa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105afd	obj/kern/kernel.asm	/^f0105afd:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0105b04	obj/kern/kernel.asm	/^f0105b04:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f0105b07	obj/kern/kernel.asm	/^f0105b07:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0105b0a	obj/kern/kernel.asm	/^f0105b0a:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	89 7d e0             	mov    %edi,-0x20(%ebp)$/;"	l
f0105b10	obj/kern/kernel.asm	/^f0105b10:	83 e8 23             	sub    $0x23,%eax$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	3c 55                	cmp    $0x55,%al$/;"	l
f0105b15	obj/kern/kernel.asm	/^f0105b15:	0f 87 0b 03 00 00    	ja     f0105e26 <vprintfmt+0x39c>$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0105b1e	obj/kern/kernel.asm	/^f0105b1e:	ff 24 85 80 8a 10 f0 	jmp    *-0xfef7580(,%eax,4)$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	83 ea 30             	sub    $0x30,%edx$/;"	l
f0105b28	obj/kern/kernel.asm	/^f0105b28:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f0105b2b	obj/kern/kernel.asm	/^f0105b2b:	0f be 46 01          	movsbl 0x1(%esi),%eax$/;"	l
f0105b2f	obj/kern/kernel.asm	/^f0105b2f:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0105b32	obj/kern/kernel.asm	/^f0105b32:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0105b38	obj/kern/kernel.asm	/^f0105b38:	77 4a                	ja     f0105b84 <vprintfmt+0xfa>$/;"	l
f0105b3a	obj/kern/kernel.asm	/^f0105b3a:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0105b3d	obj/kern/kernel.asm	/^f0105b3d:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105b40	obj/kern/kernel.asm	/^f0105b40:	8d 14 bf             	lea    (%edi,%edi,4),%edx$/;"	l
f0105b43	obj/kern/kernel.asm	/^f0105b43:	8d 7c 50 d0          	lea    -0x30(%eax,%edx,2),%edi$/;"	l
f0105b47	obj/kern/kernel.asm	/^f0105b47:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0105b4a	obj/kern/kernel.asm	/^f0105b4a:	8d 50 d0             	lea    -0x30(%eax),%edx$/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	83 fa 09             	cmp    $0x9,%edx$/;"	l
f0105b50	obj/kern/kernel.asm	/^f0105b50:	76 eb                	jbe    f0105b3d <vprintfmt+0xb3>$/;"	l
f0105b52	obj/kern/kernel.asm	/^f0105b52:	89 7d d4             	mov    %edi,-0x2c(%ebp)$/;"	l
f0105b55	obj/kern/kernel.asm	/^f0105b55:	eb 2d                	jmp    f0105b84 <vprintfmt+0xfa>$/;"	l
f0105b57	obj/kern/kernel.asm	/^f0105b57:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105b5d	obj/kern/kernel.asm	/^f0105b5d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105b60	obj/kern/kernel.asm	/^f0105b60:	8b 00                	mov    (%eax),%eax$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105b65	obj/kern/kernel.asm	/^f0105b65:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	eb 1a                	jmp    f0105b84 <vprintfmt+0xfa>$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105b6d	obj/kern/kernel.asm	/^f0105b6d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105b71	obj/kern/kernel.asm	/^f0105b71:	79 91                	jns    f0105b04 <vprintfmt+0x7a>$/;"	l
f0105b73	obj/kern/kernel.asm	/^f0105b73:	e9 73 ff ff ff       	jmp    f0105aeb <vprintfmt+0x61>$/;"	l
f0105b78	obj/kern/kernel.asm	/^f0105b78:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105b7b	obj/kern/kernel.asm	/^f0105b7b:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82:	eb 80                	jmp    f0105b04 <vprintfmt+0x7a>$/;"	l
f0105b84	obj/kern/kernel.asm	/^f0105b84:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88:	0f 89 76 ff ff ff    	jns    f0105b04 <vprintfmt+0x7a>$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e:	e9 64 ff ff ff       	jmp    f0105af7 <vprintfmt+0x6d>$/;"	l
f0105b93	obj/kern/kernel.asm	/^f0105b93:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	e9 66 ff ff ff       	jmp    f0105b04 <vprintfmt+0x7a>$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105ba1	obj/kern/kernel.asm	/^f0105ba1:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105ba7	obj/kern/kernel.asm	/^f0105ba7:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab:	8b 00                	mov    (%eax),%eax$/;"	l
f0105bad	obj/kern/kernel.asm	/^f0105bad:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105bb3	obj/kern/kernel.asm	/^f0105bb3:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6:	e9 f2 fe ff ff       	jmp    f0105aad <vprintfmt+0x23>$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105bbe	obj/kern/kernel.asm	/^f0105bbe:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	8b 00                	mov    (%eax),%eax$/;"	l
f0105bc6	obj/kern/kernel.asm	/^f0105bc6:	89 c2                	mov    %eax,%edx$/;"	l
f0105bc8	obj/kern/kernel.asm	/^f0105bc8:	c1 fa 1f             	sar    $0x1f,%edx$/;"	l
f0105bcb	obj/kern/kernel.asm	/^f0105bcb:	31 d0                	xor    %edx,%eax$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	29 d0                	sub    %edx,%eax$/;"	l
f0105bcf	obj/kern/kernel.asm	/^f0105bcf:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	7f 0b                	jg     f0105bdf <vprintfmt+0x155>$/;"	l
f0105bd4	obj/kern/kernel.asm	/^f0105bd4:	8b 14 85 e0 8b 10 f0 	mov    -0xfef7420(,%eax,4),%edx$/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	85 d2                	test   %edx,%edx$/;"	l
f0105bdd	obj/kern/kernel.asm	/^f0105bdd:	75 23                	jne    f0105c02 <vprintfmt+0x178>$/;"	l
f0105bdf	obj/kern/kernel.asm	/^f0105bdf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105be3	obj/kern/kernel.asm	/^f0105be3:	c7 44 24 08 ee 89 10 	movl   $0xf01089ee,0x8(%esp)$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	f0 $/;"	l
f0105beb	obj/kern/kernel.asm	/^f0105beb:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105bef	obj/kern/kernel.asm	/^f0105bef:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	e8 68 fe ff ff       	call   f0105a62 <printfmt>$/;"	l
f0105bfa	obj/kern/kernel.asm	/^f0105bfa:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105bfd	obj/kern/kernel.asm	/^f0105bfd:	e9 ab fe ff ff       	jmp    f0105aad <vprintfmt+0x23>$/;"	l
f0105c02	obj/kern/kernel.asm	/^f0105c02:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105c06	obj/kern/kernel.asm	/^f0105c06:	c7 44 24 08 f5 81 10 	movl   $0xf01081f5,0x8(%esp)$/;"	l
f0105c0d	obj/kern/kernel.asm	/^f0105c0d:	f0 $/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105c12	obj/kern/kernel.asm	/^f0105c12:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105c15	obj/kern/kernel.asm	/^f0105c15:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105c18	obj/kern/kernel.asm	/^f0105c18:	e8 45 fe ff ff       	call   f0105a62 <printfmt>$/;"	l
f0105c1d	obj/kern/kernel.asm	/^f0105c1d:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	e9 88 fe ff ff       	jmp    f0105aad <vprintfmt+0x23>$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105c2b	obj/kern/kernel.asm	/^f0105c2b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0105c2e	obj/kern/kernel.asm	/^f0105c2e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105c34	obj/kern/kernel.asm	/^f0105c34:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105c37	obj/kern/kernel.asm	/^f0105c37:	8b 30                	mov    (%eax),%esi$/;"	l
f0105c39	obj/kern/kernel.asm	/^f0105c39:	85 f6                	test   %esi,%esi$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	ba e7 89 10 f0       	mov    $0xf01089e7,%edx$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	0f 44 f2             	cmove  %edx,%esi$/;"	l
f0105c43	obj/kern/kernel.asm	/^f0105c43:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	7e 06                	jle    f0105c4f <vprintfmt+0x1c5>$/;"	l
f0105c49	obj/kern/kernel.asm	/^f0105c49:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	75 10                	jne    f0105c5f <vprintfmt+0x1d5>$/;"	l
f0105c4f	obj/kern/kernel.asm	/^f0105c4f:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0105c52	obj/kern/kernel.asm	/^f0105c52:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105c55	obj/kern/kernel.asm	/^f0105c55:	85 c0                	test   %eax,%eax$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	0f 85 86 00 00 00    	jne    f0105ce3 <vprintfmt+0x259>$/;"	l
f0105c5d	obj/kern/kernel.asm	/^f0105c5d:	eb 76                	jmp    f0105cd5 <vprintfmt+0x24b>$/;"	l
f0105c5f	obj/kern/kernel.asm	/^f0105c5f:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105c63	obj/kern/kernel.asm	/^f0105c63:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105c66	obj/kern/kernel.asm	/^f0105c66:	e8 60 03 00 00       	call   f0105fcb <strnlen>$/;"	l
f0105c6b	obj/kern/kernel.asm	/^f0105c6b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	29 c2                	sub    %eax,%edx$/;"	l
f0105c70	obj/kern/kernel.asm	/^f0105c70:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73:	85 d2                	test   %edx,%edx$/;"	l
f0105c75	obj/kern/kernel.asm	/^f0105c75:	7e d8                	jle    f0105c4f <vprintfmt+0x1c5>$/;"	l
f0105c77	obj/kern/kernel.asm	/^f0105c77:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	89 75 d4             	mov    %esi,-0x2c(%ebp)$/;"	l
f0105c7e	obj/kern/kernel.asm	/^f0105c7e:	89 d6                	mov    %edx,%esi$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	89 7d d0             	mov    %edi,-0x30(%ebp)$/;"	l
f0105c83	obj/kern/kernel.asm	/^f0105c83:	89 c7                	mov    %eax,%edi$/;"	l
f0105c85	obj/kern/kernel.asm	/^f0105c85:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105c89	obj/kern/kernel.asm	/^f0105c89:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0105c8c	obj/kern/kernel.asm	/^f0105c8c:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105c8f	obj/kern/kernel.asm	/^f0105c8f:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105c92	obj/kern/kernel.asm	/^f0105c92:	75 f1                	jne    f0105c85 <vprintfmt+0x1fb>$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	89 75 e4             	mov    %esi,-0x1c(%ebp)$/;"	l
f0105c97	obj/kern/kernel.asm	/^f0105c97:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0105c9a	obj/kern/kernel.asm	/^f0105c9a:	8b 7d d0             	mov    -0x30(%ebp),%edi$/;"	l
f0105c9d	obj/kern/kernel.asm	/^f0105c9d:	eb b0                	jmp    f0105c4f <vprintfmt+0x1c5>$/;"	l
f0105c9f	obj/kern/kernel.asm	/^f0105c9f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	74 18                	je     f0105cbd <vprintfmt+0x233>$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f0105cab	obj/kern/kernel.asm	/^f0105cab:	76 10                	jbe    f0105cbd <vprintfmt+0x233>$/;"	l
f0105cad	obj/kern/kernel.asm	/^f0105cad:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f0105cb8	obj/kern/kernel.asm	/^f0105cb8:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105cbb	obj/kern/kernel.asm	/^f0105cbb:	eb 0a                	jmp    f0105cc7 <vprintfmt+0x23d>$/;"	l
f0105cbd	obj/kern/kernel.asm	/^f0105cbd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105cc1	obj/kern/kernel.asm	/^f0105cc1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105cc4	obj/kern/kernel.asm	/^f0105cc4:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105cc7	obj/kern/kernel.asm	/^f0105cc7:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
f0105ccb	obj/kern/kernel.asm	/^f0105ccb:	0f be 06             	movsbl (%esi),%eax$/;"	l
f0105cce	obj/kern/kernel.asm	/^f0105cce:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	85 c0                	test   %eax,%eax$/;"	l
f0105cd3	obj/kern/kernel.asm	/^f0105cd3:	75 0e                	jne    f0105ce3 <vprintfmt+0x259>$/;"	l
f0105cd5	obj/kern/kernel.asm	/^f0105cd5:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105cd8	obj/kern/kernel.asm	/^f0105cd8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105cdc	obj/kern/kernel.asm	/^f0105cdc:	7f 16                	jg     f0105cf4 <vprintfmt+0x26a>$/;"	l
f0105cde	obj/kern/kernel.asm	/^f0105cde:	e9 ca fd ff ff       	jmp    f0105aad <vprintfmt+0x23>$/;"	l
f0105ce3	obj/kern/kernel.asm	/^f0105ce3:	85 ff                	test   %edi,%edi$/;"	l
f0105ce5	obj/kern/kernel.asm	/^f0105ce5:	78 b8                	js     f0105c9f <vprintfmt+0x215>$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0105cea	obj/kern/kernel.asm	/^f0105cea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0105cf0	obj/kern/kernel.asm	/^f0105cf0:	79 ad                	jns    f0105c9f <vprintfmt+0x215>$/;"	l
f0105cf2	obj/kern/kernel.asm	/^f0105cf2:	eb e1                	jmp    f0105cd5 <vprintfmt+0x24b>$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
f0105cf7	obj/kern/kernel.asm	/^f0105cf7:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105cfe	obj/kern/kernel.asm	/^f0105cfe:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0105d05	obj/kern/kernel.asm	/^f0105d05:	ff d7                	call   *%edi$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105d0a	obj/kern/kernel.asm	/^f0105d0a:	75 ee                	jne    f0105cfa <vprintfmt+0x270>$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	e9 99 fd ff ff       	jmp    f0105aad <vprintfmt+0x23>$/;"	l
f0105d14	obj/kern/kernel.asm	/^f0105d14:	83 f9 01             	cmp    $0x1,%ecx$/;"	l
f0105d17	obj/kern/kernel.asm	/^f0105d17:	7e 10                	jle    f0105d29 <vprintfmt+0x29f>$/;"	l
f0105d19	obj/kern/kernel.asm	/^f0105d19:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105d1c	obj/kern/kernel.asm	/^f0105d1c:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f0105d1f	obj/kern/kernel.asm	/^f0105d1f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105d22	obj/kern/kernel.asm	/^f0105d22:	8b 30                	mov    (%eax),%esi$/;"	l
f0105d24	obj/kern/kernel.asm	/^f0105d24:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0105d27	obj/kern/kernel.asm	/^f0105d27:	eb 26                	jmp    f0105d4f <vprintfmt+0x2c5>$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	85 c9                	test   %ecx,%ecx$/;"	l
f0105d2b	obj/kern/kernel.asm	/^f0105d2b:	74 12                	je     f0105d3f <vprintfmt+0x2b5>$/;"	l
f0105d2d	obj/kern/kernel.asm	/^f0105d2d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105d30	obj/kern/kernel.asm	/^f0105d30:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105d36	obj/kern/kernel.asm	/^f0105d36:	8b 30                	mov    (%eax),%esi$/;"	l
f0105d38	obj/kern/kernel.asm	/^f0105d38:	89 f7                	mov    %esi,%edi$/;"	l
f0105d3a	obj/kern/kernel.asm	/^f0105d3a:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0105d3d	obj/kern/kernel.asm	/^f0105d3d:	eb 10                	jmp    f0105d4f <vprintfmt+0x2c5>$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105d42	obj/kern/kernel.asm	/^f0105d42:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105d45	obj/kern/kernel.asm	/^f0105d45:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105d48	obj/kern/kernel.asm	/^f0105d48:	8b 30                	mov    (%eax),%esi$/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	89 f7                	mov    %esi,%edi$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	c1 ff 1f             	sar    $0x1f,%edi$/;"	l
f0105d4f	obj/kern/kernel.asm	/^f0105d4f:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105d54	obj/kern/kernel.asm	/^f0105d54:	85 ff                	test   %edi,%edi$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	0f 89 8c 00 00 00    	jns    f0105de8 <vprintfmt+0x35e>$/;"	l
f0105d5c	obj/kern/kernel.asm	/^f0105d5c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	f7 de                	neg    %esi$/;"	l
f0105d6c	obj/kern/kernel.asm	/^f0105d6c:	83 d7 00             	adc    $0x0,%edi$/;"	l
f0105d6f	obj/kern/kernel.asm	/^f0105d6f:	f7 df                	neg    %edi$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105d76	obj/kern/kernel.asm	/^f0105d76:	eb 70                	jmp    f0105de8 <vprintfmt+0x35e>$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	89 ca                	mov    %ecx,%edx$/;"	l
f0105d7a	obj/kern/kernel.asm	/^f0105d7a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	e8 89 fc ff ff       	call   f0105a0b <getuint>$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	89 c6                	mov    %eax,%esi$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	89 d7                	mov    %edx,%edi$/;"	l
f0105d86	obj/kern/kernel.asm	/^f0105d86:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	eb 5b                	jmp    f0105de8 <vprintfmt+0x35e>$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	89 ca                	mov    %ecx,%edx$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105d92	obj/kern/kernel.asm	/^f0105d92:	e8 74 fc ff ff       	call   f0105a0b <getuint>$/;"	l
f0105d97	obj/kern/kernel.asm	/^f0105d97:	89 c6                	mov    %eax,%esi$/;"	l
f0105d99	obj/kern/kernel.asm	/^f0105d99:	89 d7                	mov    %edx,%edi$/;"	l
f0105d9b	obj/kern/kernel.asm	/^f0105d9b:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0105da0	obj/kern/kernel.asm	/^f0105da0:	eb 46                	jmp    f0105de8 <vprintfmt+0x35e>$/;"	l
f0105da2	obj/kern/kernel.asm	/^f0105da2:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f0105dad	obj/kern/kernel.asm	/^f0105dad:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105db0	obj/kern/kernel.asm	/^f0105db0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f0105dbb	obj/kern/kernel.asm	/^f0105dbb:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105dc1	obj/kern/kernel.asm	/^f0105dc1:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0105dc4	obj/kern/kernel.asm	/^f0105dc4:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0105dc7	obj/kern/kernel.asm	/^f0105dc7:	8b 30                	mov    (%eax),%esi$/;"	l
f0105dc9	obj/kern/kernel.asm	/^f0105dc9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105dce	obj/kern/kernel.asm	/^f0105dce:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105dd3	obj/kern/kernel.asm	/^f0105dd3:	eb 13                	jmp    f0105de8 <vprintfmt+0x35e>$/;"	l
f0105dd5	obj/kern/kernel.asm	/^f0105dd5:	89 ca                	mov    %ecx,%edx$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105dda	obj/kern/kernel.asm	/^f0105dda:	e8 2c fc ff ff       	call   f0105a0b <getuint>$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	89 c6                	mov    %eax,%esi$/;"	l
f0105de1	obj/kern/kernel.asm	/^f0105de1:	89 d7                	mov    %edx,%edi$/;"	l
f0105de3	obj/kern/kernel.asm	/^f0105de3:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105de8	obj/kern/kernel.asm	/^f0105de8:	0f be 55 d8          	movsbl -0x28(%ebp),%edx$/;"	l
f0105dec	obj/kern/kernel.asm	/^f0105dec:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0105df0	obj/kern/kernel.asm	/^f0105df0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0105df7	obj/kern/kernel.asm	/^f0105df7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105dfb	obj/kern/kernel.asm	/^f0105dfb:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0105dfe	obj/kern/kernel.asm	/^f0105dfe:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0105e02	obj/kern/kernel.asm	/^f0105e02:	89 da                	mov    %ebx,%edx$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	e8 24 fb ff ff       	call   f0105930 <printnum>$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105e0f	obj/kern/kernel.asm	/^f0105e0f:	e9 99 fc ff ff       	jmp    f0105aad <vprintfmt+0x23>$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105e18	obj/kern/kernel.asm	/^f0105e18:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0105e1b	obj/kern/kernel.asm	/^f0105e1b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e1e	obj/kern/kernel.asm	/^f0105e1e:	8b 75 e0             	mov    -0x20(%ebp),%esi$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	e9 87 fc ff ff       	jmp    f0105aad <vprintfmt+0x23>$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105e2a	obj/kern/kernel.asm	/^f0105e2a:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0105e31	obj/kern/kernel.asm	/^f0105e31:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0105e34	obj/kern/kernel.asm	/^f0105e34:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0105e38	obj/kern/kernel.asm	/^f0105e38:	0f 84 6f fc ff ff    	je     f0105aad <vprintfmt+0x23>$/;"	l
f0105e3e	obj/kern/kernel.asm	/^f0105e3e:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	80 7e ff 25          	cmpb   $0x25,-0x1(%esi)$/;"	l
f0105e45	obj/kern/kernel.asm	/^f0105e45:	75 f7                	jne    f0105e3e <vprintfmt+0x3b4>$/;"	l
f0105e47	obj/kern/kernel.asm	/^f0105e47:	e9 61 fc ff ff       	jmp    f0105aad <vprintfmt+0x23>$/;"	l
f0105e4c	obj/kern/kernel.asm	/^f0105e4c:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0105e4f	obj/kern/kernel.asm	/^f0105e4f:	5b                   	pop    %ebx$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	5e                   	pop    %esi$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	5f                   	pop    %edi$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	5d                   	pop    %ebp$/;"	l
f0105e53	obj/kern/kernel.asm	/^f0105e53:	c3                   	ret    $/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54 <vsnprintf>:$/;"	l
f0105e54	obj/kern/kernel.asm	/^f0105e54:	55                   	push   %ebp$/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0105e5a	obj/kern/kernel.asm	/^f0105e5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0105e60	obj/kern/kernel.asm	/^f0105e60:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f0105e67	obj/kern/kernel.asm	/^f0105e67:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105e71	obj/kern/kernel.asm	/^f0105e71:	85 c0                	test   %eax,%eax$/;"	l
f0105e73	obj/kern/kernel.asm	/^f0105e73:	74 30                	je     f0105ea5 <vsnprintf+0x51>$/;"	l
f0105e75	obj/kern/kernel.asm	/^f0105e75:	85 d2                	test   %edx,%edx$/;"	l
f0105e77	obj/kern/kernel.asm	/^f0105e77:	7e 2c                	jle    f0105ea5 <vsnprintf+0x51>$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0105e7c	obj/kern/kernel.asm	/^f0105e7c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105e80	obj/kern/kernel.asm	/^f0105e80:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105e83	obj/kern/kernel.asm	/^f0105e83:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105e8e	obj/kern/kernel.asm	/^f0105e8e:	c7 04 24 45 5a 10 f0 	movl   $0xf0105a45,(%esp)$/;"	l
f0105e95	obj/kern/kernel.asm	/^f0105e95:	e8 f0 fb ff ff       	call   f0105a8a <vprintfmt>$/;"	l
f0105e9a	obj/kern/kernel.asm	/^f0105e9a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105e9d	obj/kern/kernel.asm	/^f0105e9d:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105ea3	obj/kern/kernel.asm	/^f0105ea3:	eb 05                	jmp    f0105eaa <vsnprintf+0x56>$/;"	l
f0105ea5	obj/kern/kernel.asm	/^f0105ea5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105eaa	obj/kern/kernel.asm	/^f0105eaa:	c9                   	leave  $/;"	l
f0105eab	obj/kern/kernel.asm	/^f0105eab:	c3                   	ret    $/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac <snprintf>:$/;"	l
f0105eac	obj/kern/kernel.asm	/^f0105eac:	55                   	push   %ebp$/;"	l
f0105ead	obj/kern/kernel.asm	/^f0105ead:	89 e5                	mov    %esp,%ebp$/;"	l
f0105eaf	obj/kern/kernel.asm	/^f0105eaf:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105eb2	obj/kern/kernel.asm	/^f0105eb2:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0105eb5	obj/kern/kernel.asm	/^f0105eb5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0105eb9	obj/kern/kernel.asm	/^f0105eb9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105ebc	obj/kern/kernel.asm	/^f0105ebc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ec7	obj/kern/kernel.asm	/^f0105ec7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105eca	obj/kern/kernel.asm	/^f0105eca:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	e8 82 ff ff ff       	call   f0105e54 <vsnprintf>$/;"	l
f0105ed2	obj/kern/kernel.asm	/^f0105ed2:	c9                   	leave  $/;"	l
f0105ed3	obj/kern/kernel.asm	/^f0105ed3:	c3                   	ret    $/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0 <readline>:$/;"	l
f0105ee0	obj/kern/kernel.asm	/^f0105ee0:	55                   	push   %ebp$/;"	l
f0105ee1	obj/kern/kernel.asm	/^f0105ee1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ee3	obj/kern/kernel.asm	/^f0105ee3:	57                   	push   %edi$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	56                   	push   %esi$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	53                   	push   %ebx$/;"	l
f0105ee6	obj/kern/kernel.asm	/^f0105ee6:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105ee9	obj/kern/kernel.asm	/^f0105ee9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	85 c0                	test   %eax,%eax$/;"	l
f0105eee	obj/kern/kernel.asm	/^f0105eee:	74 10                	je     f0105f00 <readline+0x20>$/;"	l
f0105ef0	obj/kern/kernel.asm	/^f0105ef0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	c7 04 24 f5 81 10 f0 	movl   $0xf01081f5,(%esp)$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	e8 b2 e8 ff ff       	call   f01047b2 <cprintf>$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	e8 b7 a8 ff ff       	call   f01007c3 <iscons>$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	89 c7                	mov    %eax,%edi$/;"	l
f0105f0e	obj/kern/kernel.asm	/^f0105f0e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105f13	obj/kern/kernel.asm	/^f0105f13:	e8 9a a8 ff ff       	call   f01007b2 <getchar>$/;"	l
f0105f18	obj/kern/kernel.asm	/^f0105f18:	89 c3                	mov    %eax,%ebx$/;"	l
f0105f1a	obj/kern/kernel.asm	/^f0105f1a:	85 c0                	test   %eax,%eax$/;"	l
f0105f1c	obj/kern/kernel.asm	/^f0105f1c:	79 17                	jns    f0105f35 <readline+0x55>$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105f22	obj/kern/kernel.asm	/^f0105f22:	c7 04 24 04 8c 10 f0 	movl   $0xf0108c04,(%esp)$/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	e8 84 e8 ff ff       	call   f01047b2 <cprintf>$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f33	obj/kern/kernel.asm	/^f0105f33:	eb 6d                	jmp    f0105fa2 <readline+0xc2>$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0105f38	obj/kern/kernel.asm	/^f0105f38:	74 05                	je     f0105f3f <readline+0x5f>$/;"	l
f0105f3a	obj/kern/kernel.asm	/^f0105f3a:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0105f3d	obj/kern/kernel.asm	/^f0105f3d:	75 19                	jne    f0105f58 <readline+0x78>$/;"	l
f0105f3f	obj/kern/kernel.asm	/^f0105f3f:	85 f6                	test   %esi,%esi$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	7e 15                	jle    f0105f58 <readline+0x78>$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	85 ff                	test   %edi,%edi$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	74 0c                	je     f0105f53 <readline+0x73>$/;"	l
f0105f47	obj/kern/kernel.asm	/^f0105f47:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	e8 4f a8 ff ff       	call   f01007a2 <cputchar>$/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0105f56	obj/kern/kernel.asm	/^f0105f56:	eb bb                	jmp    f0105f13 <readline+0x33>$/;"	l
f0105f58	obj/kern/kernel.asm	/^f0105f58:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	7e 1f                	jle    f0105f7c <readline+0x9c>$/;"	l
f0105f5d	obj/kern/kernel.asm	/^f0105f5d:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f0105f63	obj/kern/kernel.asm	/^f0105f63:	7f 17                	jg     f0105f7c <readline+0x9c>$/;"	l
f0105f65	obj/kern/kernel.asm	/^f0105f65:	85 ff                	test   %edi,%edi$/;"	l
f0105f67	obj/kern/kernel.asm	/^f0105f67:	74 08                	je     f0105f71 <readline+0x91>$/;"	l
f0105f69	obj/kern/kernel.asm	/^f0105f69:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105f6c	obj/kern/kernel.asm	/^f0105f6c:	e8 31 a8 ff ff       	call   f01007a2 <cputchar>$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	88 9e 80 4a 22 f0    	mov    %bl,-0xfddb580(%esi)$/;"	l
f0105f77	obj/kern/kernel.asm	/^f0105f77:	83 c6 01             	add    $0x1,%esi$/;"	l
f0105f7a	obj/kern/kernel.asm	/^f0105f7a:	eb 97                	jmp    f0105f13 <readline+0x33>$/;"	l
f0105f7c	obj/kern/kernel.asm	/^f0105f7c:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	74 05                	je     f0105f86 <readline+0xa6>$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f0105f84	obj/kern/kernel.asm	/^f0105f84:	75 8d                	jne    f0105f13 <readline+0x33>$/;"	l
f0105f86	obj/kern/kernel.asm	/^f0105f86:	85 ff                	test   %edi,%edi$/;"	l
f0105f88	obj/kern/kernel.asm	/^f0105f88:	74 0c                	je     f0105f96 <readline+0xb6>$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f0105f91	obj/kern/kernel.asm	/^f0105f91:	e8 0c a8 ff ff       	call   f01007a2 <cputchar>$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	c6 86 80 4a 22 f0 00 	movb   $0x0,-0xfddb580(%esi)$/;"	l
f0105f9d	obj/kern/kernel.asm	/^f0105f9d:	b8 80 4a 22 f0       	mov    $0xf0224a80,%eax$/;"	l
f0105fa2	obj/kern/kernel.asm	/^f0105fa2:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0105fa5	obj/kern/kernel.asm	/^f0105fa5:	5b                   	pop    %ebx$/;"	l
f0105fa6	obj/kern/kernel.asm	/^f0105fa6:	5e                   	pop    %esi$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	5f                   	pop    %edi$/;"	l
f0105fa8	obj/kern/kernel.asm	/^f0105fa8:	5d                   	pop    %ebp$/;"	l
f0105fa9	obj/kern/kernel.asm	/^f0105fa9:	c3                   	ret    $/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	00 00                	add    %al,(%eax)$/;"	l
f0105fac	obj/kern/kernel.asm	/^f0105fac:	00 00                	add    %al,(%eax)$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0 <strlen>:$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0:	55                   	push   %ebp$/;"	l
f0105fb1	obj/kern/kernel.asm	/^f0105fb1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105fb6	obj/kern/kernel.asm	/^f0105fb6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105fbb	obj/kern/kernel.asm	/^f0105fbb:	80 3a 00             	cmpb   $0x0,(%edx)$/;"	l
f0105fbe	obj/kern/kernel.asm	/^f0105fbe:	74 09                	je     f0105fc9 <strlen+0x19>$/;"	l
f0105fc0	obj/kern/kernel.asm	/^f0105fc0:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105fc3	obj/kern/kernel.asm	/^f0105fc3:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0105fc7	obj/kern/kernel.asm	/^f0105fc7:	75 f7                	jne    f0105fc0 <strlen+0x10>$/;"	l
f0105fc9	obj/kern/kernel.asm	/^f0105fc9:	5d                   	pop    %ebp$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	c3                   	ret    $/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb <strnlen>:$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	55                   	push   %ebp$/;"	l
f0105fcc	obj/kern/kernel.asm	/^f0105fcc:	89 e5                	mov    %esp,%ebp$/;"	l
f0105fce	obj/kern/kernel.asm	/^f0105fce:	53                   	push   %ebx$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0105fd2	obj/kern/kernel.asm	/^f0105fd2:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105fd5	obj/kern/kernel.asm	/^f0105fd5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105fda	obj/kern/kernel.asm	/^f0105fda:	85 c9                	test   %ecx,%ecx$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	74 1a                	je     f0105ff8 <strnlen+0x2d>$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0105fe1	obj/kern/kernel.asm	/^f0105fe1:	74 15                	je     f0105ff8 <strnlen+0x2d>$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0105fe8	obj/kern/kernel.asm	/^f0105fe8:	89 d0                	mov    %edx,%eax$/;"	l
f0105fea	obj/kern/kernel.asm	/^f0105fea:	39 ca                	cmp    %ecx,%edx$/;"	l
f0105fec	obj/kern/kernel.asm	/^f0105fec:	74 0a                	je     f0105ff8 <strnlen+0x2d>$/;"	l
f0105fee	obj/kern/kernel.asm	/^f0105fee:	83 c2 01             	add    $0x1,%edx$/;"	l
f0105ff1	obj/kern/kernel.asm	/^f0105ff1:	80 7c 13 ff 00       	cmpb   $0x0,-0x1(%ebx,%edx,1)$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	75 f0                	jne    f0105fe8 <strnlen+0x1d>$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	5b                   	pop    %ebx$/;"	l
f0105ff9	obj/kern/kernel.asm	/^f0105ff9:	5d                   	pop    %ebp$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	c3                   	ret    $/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb <strcpy>:$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	55                   	push   %ebp$/;"	l
f0105ffc	obj/kern/kernel.asm	/^f0105ffc:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	53                   	push   %ebx$/;"	l
f0105fff	obj/kern/kernel.asm	/^f0105fff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106002	obj/kern/kernel.asm	/^f0106002:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106005	obj/kern/kernel.asm	/^f0106005:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010600a	obj/kern/kernel.asm	/^f010600a:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f010600e	obj/kern/kernel.asm	/^f010600e:	88 0c 10             	mov    %cl,(%eax,%edx,1)$/;"	l
f0106011	obj/kern/kernel.asm	/^f0106011:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106014	obj/kern/kernel.asm	/^f0106014:	84 c9                	test   %cl,%cl$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	75 f2                	jne    f010600a <strcpy+0xf>$/;"	l
f0106018	obj/kern/kernel.asm	/^f0106018:	5b                   	pop    %ebx$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	5d                   	pop    %ebp$/;"	l
f010601a	obj/kern/kernel.asm	/^f010601a:	c3                   	ret    $/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b <strcat>:$/;"	l
f010601b	obj/kern/kernel.asm	/^f010601b:	55                   	push   %ebp$/;"	l
f010601c	obj/kern/kernel.asm	/^f010601c:	89 e5                	mov    %esp,%ebp$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	53                   	push   %ebx$/;"	l
f010601f	obj/kern/kernel.asm	/^f010601f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106022	obj/kern/kernel.asm	/^f0106022:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106028	obj/kern/kernel.asm	/^f0106028:	e8 83 ff ff ff       	call   f0105fb0 <strlen>$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106030	obj/kern/kernel.asm	/^f0106030:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106034	obj/kern/kernel.asm	/^f0106034:	01 d8                	add    %ebx,%eax$/;"	l
f0106036	obj/kern/kernel.asm	/^f0106036:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106039	obj/kern/kernel.asm	/^f0106039:	e8 bd ff ff ff       	call   f0105ffb <strcpy>$/;"	l
f010603e	obj/kern/kernel.asm	/^f010603e:	89 d8                	mov    %ebx,%eax$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	83 c4 08             	add    $0x8,%esp$/;"	l
f0106043	obj/kern/kernel.asm	/^f0106043:	5b                   	pop    %ebx$/;"	l
f0106044	obj/kern/kernel.asm	/^f0106044:	5d                   	pop    %ebp$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	c3                   	ret    $/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046 <strncpy>:$/;"	l
f0106046	obj/kern/kernel.asm	/^f0106046:	55                   	push   %ebp$/;"	l
f0106047	obj/kern/kernel.asm	/^f0106047:	89 e5                	mov    %esp,%ebp$/;"	l
f0106049	obj/kern/kernel.asm	/^f0106049:	56                   	push   %esi$/;"	l
f010604a	obj/kern/kernel.asm	/^f010604a:	53                   	push   %ebx$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010604e	obj/kern/kernel.asm	/^f010604e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0106054	obj/kern/kernel.asm	/^f0106054:	85 f6                	test   %esi,%esi$/;"	l
f0106056	obj/kern/kernel.asm	/^f0106056:	74 18                	je     f0106070 <strncpy+0x2a>$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	0f b6 1a             	movzbl (%edx),%ebx$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	88 1c 08             	mov    %bl,(%eax,%ecx,1)$/;"	l
f0106063	obj/kern/kernel.asm	/^f0106063:	80 3a 01             	cmpb   $0x1,(%edx)$/;"	l
f0106066	obj/kern/kernel.asm	/^f0106066:	83 da ff             	sbb    $0xffffffff,%edx$/;"	l
f0106069	obj/kern/kernel.asm	/^f0106069:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010606c	obj/kern/kernel.asm	/^f010606c:	39 f1                	cmp    %esi,%ecx$/;"	l
f010606e	obj/kern/kernel.asm	/^f010606e:	75 ed                	jne    f010605d <strncpy+0x17>$/;"	l
f0106070	obj/kern/kernel.asm	/^f0106070:	5b                   	pop    %ebx$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	5e                   	pop    %esi$/;"	l
f0106072	obj/kern/kernel.asm	/^f0106072:	5d                   	pop    %ebp$/;"	l
f0106073	obj/kern/kernel.asm	/^f0106073:	c3                   	ret    $/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074 <strlcpy>:$/;"	l
f0106074	obj/kern/kernel.asm	/^f0106074:	55                   	push   %ebp$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	89 e5                	mov    %esp,%ebp$/;"	l
f0106077	obj/kern/kernel.asm	/^f0106077:	57                   	push   %edi$/;"	l
f0106078	obj/kern/kernel.asm	/^f0106078:	56                   	push   %esi$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	53                   	push   %ebx$/;"	l
f010607a	obj/kern/kernel.asm	/^f010607a:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0106080	obj/kern/kernel.asm	/^f0106080:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0106083	obj/kern/kernel.asm	/^f0106083:	89 f8                	mov    %edi,%eax$/;"	l
f0106085	obj/kern/kernel.asm	/^f0106085:	85 f6                	test   %esi,%esi$/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	74 2b                	je     f01060b4 <strlcpy+0x40>$/;"	l
f0106089	obj/kern/kernel.asm	/^f0106089:	83 fe 01             	cmp    $0x1,%esi$/;"	l
f010608c	obj/kern/kernel.asm	/^f010608c:	74 23                	je     f01060b1 <strlcpy+0x3d>$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	0f b6 0b             	movzbl (%ebx),%ecx$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	84 c9                	test   %cl,%cl$/;"	l
f0106093	obj/kern/kernel.asm	/^f0106093:	74 1c                	je     f01060b1 <strlcpy+0x3d>$/;"	l
f0106095	obj/kern/kernel.asm	/^f0106095:	83 ee 02             	sub    $0x2,%esi$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010609d	obj/kern/kernel.asm	/^f010609d:	88 08                	mov    %cl,(%eax)$/;"	l
f010609f	obj/kern/kernel.asm	/^f010609f:	83 c0 01             	add    $0x1,%eax$/;"	l
f01060a2	obj/kern/kernel.asm	/^f01060a2:	39 f2                	cmp    %esi,%edx$/;"	l
f01060a4	obj/kern/kernel.asm	/^f01060a4:	74 0b                	je     f01060b1 <strlcpy+0x3d>$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f01060ad	obj/kern/kernel.asm	/^f01060ad:	84 c9                	test   %cl,%cl$/;"	l
f01060af	obj/kern/kernel.asm	/^f01060af:	75 ec                	jne    f010609d <strlcpy+0x29>$/;"	l
f01060b1	obj/kern/kernel.asm	/^f01060b1:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01060b4	obj/kern/kernel.asm	/^f01060b4:	29 f8                	sub    %edi,%eax$/;"	l
f01060b6	obj/kern/kernel.asm	/^f01060b6:	5b                   	pop    %ebx$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	5e                   	pop    %esi$/;"	l
f01060b8	obj/kern/kernel.asm	/^f01060b8:	5f                   	pop    %edi$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	5d                   	pop    %ebp$/;"	l
f01060ba	obj/kern/kernel.asm	/^f01060ba:	c3                   	ret    $/;"	l
f01060bb	obj/kern/kernel.asm	/^f01060bb <strcmp>:$/;"	l
f01060bb	obj/kern/kernel.asm	/^f01060bb:	55                   	push   %ebp$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01060be	obj/kern/kernel.asm	/^f01060be:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01060c1	obj/kern/kernel.asm	/^f01060c1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01060c4	obj/kern/kernel.asm	/^f01060c4:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01060c7	obj/kern/kernel.asm	/^f01060c7:	84 c0                	test   %al,%al$/;"	l
f01060c9	obj/kern/kernel.asm	/^f01060c9:	74 16                	je     f01060e1 <strcmp+0x26>$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	3a 02                	cmp    (%edx),%al$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	75 12                	jne    f01060e1 <strcmp+0x26>$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	83 c2 01             	add    $0x1,%edx$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	0f b6 41 01          	movzbl 0x1(%ecx),%eax$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	84 c0                	test   %al,%al$/;"	l
f01060d8	obj/kern/kernel.asm	/^f01060d8:	74 07                	je     f01060e1 <strcmp+0x26>$/;"	l
f01060da	obj/kern/kernel.asm	/^f01060da:	83 c1 01             	add    $0x1,%ecx$/;"	l
f01060dd	obj/kern/kernel.asm	/^f01060dd:	3a 02                	cmp    (%edx),%al$/;"	l
f01060df	obj/kern/kernel.asm	/^f01060df:	74 ee                	je     f01060cf <strcmp+0x14>$/;"	l
f01060e1	obj/kern/kernel.asm	/^f01060e1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01060e7	obj/kern/kernel.asm	/^f01060e7:	29 d0                	sub    %edx,%eax$/;"	l
f01060e9	obj/kern/kernel.asm	/^f01060e9:	5d                   	pop    %ebp$/;"	l
f01060ea	obj/kern/kernel.asm	/^f01060ea:	c3                   	ret    $/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb <strncmp>:$/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	55                   	push   %ebp$/;"	l
f01060ec	obj/kern/kernel.asm	/^f01060ec:	89 e5                	mov    %esp,%ebp$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	53                   	push   %ebx$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01060f2	obj/kern/kernel.asm	/^f01060f2:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01060f8	obj/kern/kernel.asm	/^f01060f8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01060fd	obj/kern/kernel.asm	/^f01060fd:	85 d2                	test   %edx,%edx$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	74 28                	je     f0106129 <strncmp+0x3e>$/;"	l
f0106101	obj/kern/kernel.asm	/^f0106101:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106104	obj/kern/kernel.asm	/^f0106104:	84 c0                	test   %al,%al$/;"	l
f0106106	obj/kern/kernel.asm	/^f0106106:	74 24                	je     f010612c <strncmp+0x41>$/;"	l
f0106108	obj/kern/kernel.asm	/^f0106108:	3a 03                	cmp    (%ebx),%al$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	75 20                	jne    f010612c <strncmp+0x41>$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c:	83 ea 01             	sub    $0x1,%edx$/;"	l
f010610f	obj/kern/kernel.asm	/^f010610f:	74 13                	je     f0106124 <strncmp+0x39>$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106114	obj/kern/kernel.asm	/^f0106114:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106117	obj/kern/kernel.asm	/^f0106117:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010611a	obj/kern/kernel.asm	/^f010611a:	84 c0                	test   %al,%al$/;"	l
f010611c	obj/kern/kernel.asm	/^f010611c:	74 0e                	je     f010612c <strncmp+0x41>$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	3a 03                	cmp    (%ebx),%al$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	74 ea                	je     f010610c <strncmp+0x21>$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	eb 08                	jmp    f010612c <strncmp+0x41>$/;"	l
f0106124	obj/kern/kernel.asm	/^f0106124:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106129	obj/kern/kernel.asm	/^f0106129:	5b                   	pop    %ebx$/;"	l
f010612a	obj/kern/kernel.asm	/^f010612a:	5d                   	pop    %ebp$/;"	l
f010612b	obj/kern/kernel.asm	/^f010612b:	c3                   	ret    $/;"	l
f010612c	obj/kern/kernel.asm	/^f010612c:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f010612f	obj/kern/kernel.asm	/^f010612f:	0f b6 13             	movzbl (%ebx),%edx$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	29 d0                	sub    %edx,%eax$/;"	l
f0106134	obj/kern/kernel.asm	/^f0106134:	eb f3                	jmp    f0106129 <strncmp+0x3e>$/;"	l
f0106136	obj/kern/kernel.asm	/^f0106136 <strchr>:$/;"	l
f0106136	obj/kern/kernel.asm	/^f0106136:	55                   	push   %ebp$/;"	l
f0106137	obj/kern/kernel.asm	/^f0106137:	89 e5                	mov    %esp,%ebp$/;"	l
f0106139	obj/kern/kernel.asm	/^f0106139:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010613c	obj/kern/kernel.asm	/^f010613c:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106140	obj/kern/kernel.asm	/^f0106140:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106143	obj/kern/kernel.asm	/^f0106143:	84 d2                	test   %dl,%dl$/;"	l
f0106145	obj/kern/kernel.asm	/^f0106145:	74 1c                	je     f0106163 <strchr+0x2d>$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	38 ca                	cmp    %cl,%dl$/;"	l
f0106149	obj/kern/kernel.asm	/^f0106149:	75 09                	jne    f0106154 <strchr+0x1e>$/;"	l
f010614b	obj/kern/kernel.asm	/^f010614b:	eb 1b                	jmp    f0106168 <strchr+0x32>$/;"	l
f010614d	obj/kern/kernel.asm	/^f010614d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106150	obj/kern/kernel.asm	/^f0106150:	38 ca                	cmp    %cl,%dl$/;"	l
f0106152	obj/kern/kernel.asm	/^f0106152:	74 14                	je     f0106168 <strchr+0x32>$/;"	l
f0106154	obj/kern/kernel.asm	/^f0106154:	0f b6 50 01          	movzbl 0x1(%eax),%edx$/;"	l
f0106158	obj/kern/kernel.asm	/^f0106158:	84 d2                	test   %dl,%dl$/;"	l
f010615a	obj/kern/kernel.asm	/^f010615a:	75 f1                	jne    f010614d <strchr+0x17>$/;"	l
f010615c	obj/kern/kernel.asm	/^f010615c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	eb 05                	jmp    f0106168 <strchr+0x32>$/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106168	obj/kern/kernel.asm	/^f0106168:	5d                   	pop    %ebp$/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	c3                   	ret    $/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a <strfind>:$/;"	l
f010616a	obj/kern/kernel.asm	/^f010616a:	55                   	push   %ebp$/;"	l
f010616b	obj/kern/kernel.asm	/^f010616b:	89 e5                	mov    %esp,%ebp$/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106170	obj/kern/kernel.asm	/^f0106170:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106177	obj/kern/kernel.asm	/^f0106177:	84 d2                	test   %dl,%dl$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	74 14                	je     f010618f <strfind+0x25>$/;"	l
f010617b	obj/kern/kernel.asm	/^f010617b:	38 ca                	cmp    %cl,%dl$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	75 06                	jne    f0106185 <strfind+0x1b>$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	eb 0e                	jmp    f010618f <strfind+0x25>$/;"	l
f0106181	obj/kern/kernel.asm	/^f0106181:	38 ca                	cmp    %cl,%dl$/;"	l
f0106183	obj/kern/kernel.asm	/^f0106183:	74 0a                	je     f010618f <strfind+0x25>$/;"	l
f0106185	obj/kern/kernel.asm	/^f0106185:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106188	obj/kern/kernel.asm	/^f0106188:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f010618b	obj/kern/kernel.asm	/^f010618b:	84 d2                	test   %dl,%dl$/;"	l
f010618d	obj/kern/kernel.asm	/^f010618d:	75 f2                	jne    f0106181 <strfind+0x17>$/;"	l
f010618f	obj/kern/kernel.asm	/^f010618f:	5d                   	pop    %ebp$/;"	l
f0106190	obj/kern/kernel.asm	/^f0106190:	c3                   	ret    $/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191 <memset>:$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	55                   	push   %ebp$/;"	l
f0106192	obj/kern/kernel.asm	/^f0106192:	89 e5                	mov    %esp,%ebp$/;"	l
f0106194	obj/kern/kernel.asm	/^f0106194:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106197	obj/kern/kernel.asm	/^f0106197:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f010619a	obj/kern/kernel.asm	/^f010619a:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01061a0	obj/kern/kernel.asm	/^f01061a0:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01061a3	obj/kern/kernel.asm	/^f01061a3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01061a6	obj/kern/kernel.asm	/^f01061a6:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01061a9	obj/kern/kernel.asm	/^f01061a9:	85 c9                	test   %ecx,%ecx$/;"	l
f01061ab	obj/kern/kernel.asm	/^f01061ab:	74 30                	je     f01061dd <memset+0x4c>$/;"	l
f01061ad	obj/kern/kernel.asm	/^f01061ad:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01061b3	obj/kern/kernel.asm	/^f01061b3:	75 25                	jne    f01061da <memset+0x49>$/;"	l
f01061b5	obj/kern/kernel.asm	/^f01061b5:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01061b8	obj/kern/kernel.asm	/^f01061b8:	75 20                	jne    f01061da <memset+0x49>$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01061bd	obj/kern/kernel.asm	/^f01061bd:	89 d3                	mov    %edx,%ebx$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01061c2	obj/kern/kernel.asm	/^f01061c2:	89 d6                	mov    %edx,%esi$/;"	l
f01061c4	obj/kern/kernel.asm	/^f01061c4:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01061c7	obj/kern/kernel.asm	/^f01061c7:	89 d0                	mov    %edx,%eax$/;"	l
f01061c9	obj/kern/kernel.asm	/^f01061c9:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01061cc	obj/kern/kernel.asm	/^f01061cc:	09 f0                	or     %esi,%eax$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	09 d0                	or     %edx,%eax$/;"	l
f01061d0	obj/kern/kernel.asm	/^f01061d0:	09 d8                	or     %ebx,%eax$/;"	l
f01061d2	obj/kern/kernel.asm	/^f01061d2:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01061d5	obj/kern/kernel.asm	/^f01061d5:	fc                   	cld    $/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01061d8	obj/kern/kernel.asm	/^f01061d8:	eb 03                	jmp    f01061dd <memset+0x4c>$/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da:	fc                   	cld    $/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	89 f8                	mov    %edi,%eax$/;"	l
f01061df	obj/kern/kernel.asm	/^f01061df:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f01061e2	obj/kern/kernel.asm	/^f01061e2:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f01061e8	obj/kern/kernel.asm	/^f01061e8:	89 ec                	mov    %ebp,%esp$/;"	l
f01061ea	obj/kern/kernel.asm	/^f01061ea:	5d                   	pop    %ebp$/;"	l
f01061eb	obj/kern/kernel.asm	/^f01061eb:	c3                   	ret    $/;"	l
f01061ec	obj/kern/kernel.asm	/^f01061ec <memmove>:$/;"	l
f01061ec	obj/kern/kernel.asm	/^f01061ec:	55                   	push   %ebp$/;"	l
f01061ed	obj/kern/kernel.asm	/^f01061ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01061ef	obj/kern/kernel.asm	/^f01061ef:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01061f2	obj/kern/kernel.asm	/^f01061f2:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f01061f5	obj/kern/kernel.asm	/^f01061f5:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01061fb	obj/kern/kernel.asm	/^f01061fb:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01061fe	obj/kern/kernel.asm	/^f01061fe:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0106201	obj/kern/kernel.asm	/^f0106201:	39 c6                	cmp    %eax,%esi$/;"	l
f0106203	obj/kern/kernel.asm	/^f0106203:	73 36                	jae    f010623b <memmove+0x4f>$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f0106208	obj/kern/kernel.asm	/^f0106208:	39 d0                	cmp    %edx,%eax$/;"	l
f010620a	obj/kern/kernel.asm	/^f010620a:	73 2f                	jae    f010623b <memmove+0x4f>$/;"	l
f010620c	obj/kern/kernel.asm	/^f010620c:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f010620f	obj/kern/kernel.asm	/^f010620f:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0106212	obj/kern/kernel.asm	/^f0106212:	75 1b                	jne    f010622f <memmove+0x43>$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f010621a	obj/kern/kernel.asm	/^f010621a:	75 13                	jne    f010622f <memmove+0x43>$/;"	l
f010621c	obj/kern/kernel.asm	/^f010621c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010621f	obj/kern/kernel.asm	/^f010621f:	75 0e                	jne    f010622f <memmove+0x43>$/;"	l
f0106221	obj/kern/kernel.asm	/^f0106221:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0106224	obj/kern/kernel.asm	/^f0106224:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0106227	obj/kern/kernel.asm	/^f0106227:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	fd                   	std    $/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010622d	obj/kern/kernel.asm	/^f010622d:	eb 09                	jmp    f0106238 <memmove+0x4c>$/;"	l
f010622f	obj/kern/kernel.asm	/^f010622f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106232	obj/kern/kernel.asm	/^f0106232:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106235	obj/kern/kernel.asm	/^f0106235:	fd                   	std    $/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106238	obj/kern/kernel.asm	/^f0106238:	fc                   	cld    $/;"	l
f0106239	obj/kern/kernel.asm	/^f0106239:	eb 20                	jmp    f010625b <memmove+0x6f>$/;"	l
f010623b	obj/kern/kernel.asm	/^f010623b:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0106241	obj/kern/kernel.asm	/^f0106241:	75 13                	jne    f0106256 <memmove+0x6a>$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	a8 03                	test   $0x3,%al$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	75 0f                	jne    f0106256 <memmove+0x6a>$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	f6 c1 03             	test   $0x3,%cl$/;"	l
f010624a	obj/kern/kernel.asm	/^f010624a:	75 0a                	jne    f0106256 <memmove+0x6a>$/;"	l
f010624c	obj/kern/kernel.asm	/^f010624c:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	89 c7                	mov    %eax,%edi$/;"	l
f0106251	obj/kern/kernel.asm	/^f0106251:	fc                   	cld    $/;"	l
f0106252	obj/kern/kernel.asm	/^f0106252:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106254	obj/kern/kernel.asm	/^f0106254:	eb 05                	jmp    f010625b <memmove+0x6f>$/;"	l
f0106256	obj/kern/kernel.asm	/^f0106256:	89 c7                	mov    %eax,%edi$/;"	l
f0106258	obj/kern/kernel.asm	/^f0106258:	fc                   	cld    $/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f010625b	obj/kern/kernel.asm	/^f010625b:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f010625e	obj/kern/kernel.asm	/^f010625e:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0106261	obj/kern/kernel.asm	/^f0106261:	89 ec                	mov    %ebp,%esp$/;"	l
f0106263	obj/kern/kernel.asm	/^f0106263:	5d                   	pop    %ebp$/;"	l
f0106264	obj/kern/kernel.asm	/^f0106264:	c3                   	ret    $/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265 <memcpy>:$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	55                   	push   %ebp$/;"	l
f0106266	obj/kern/kernel.asm	/^f0106266:	89 e5                	mov    %esp,%ebp$/;"	l
f0106268	obj/kern/kernel.asm	/^f0106268:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010626e	obj/kern/kernel.asm	/^f010626e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106275	obj/kern/kernel.asm	/^f0106275:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010627f	obj/kern/kernel.asm	/^f010627f:	e8 68 ff ff ff       	call   f01061ec <memmove>$/;"	l
f0106284	obj/kern/kernel.asm	/^f0106284:	c9                   	leave  $/;"	l
f0106285	obj/kern/kernel.asm	/^f0106285:	c3                   	ret    $/;"	l
f0106286	obj/kern/kernel.asm	/^f0106286 <memcmp>:$/;"	l
f0106286	obj/kern/kernel.asm	/^f0106286:	55                   	push   %ebp$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	89 e5                	mov    %esp,%ebp$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	57                   	push   %edi$/;"	l
f010628a	obj/kern/kernel.asm	/^f010628a:	56                   	push   %esi$/;"	l
f010628b	obj/kern/kernel.asm	/^f010628b:	53                   	push   %ebx$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106292	obj/kern/kernel.asm	/^f0106292:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	85 ff                	test   %edi,%edi$/;"	l
f010629c	obj/kern/kernel.asm	/^f010629c:	74 37                	je     f01062d5 <memcmp+0x4f>$/;"	l
f010629e	obj/kern/kernel.asm	/^f010629e:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01062a1	obj/kern/kernel.asm	/^f01062a1:	0f b6 0e             	movzbl (%esi),%ecx$/;"	l
f01062a4	obj/kern/kernel.asm	/^f01062a4:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac:	38 c8                	cmp    %cl,%al$/;"	l
f01062ae	obj/kern/kernel.asm	/^f01062ae:	74 1c                	je     f01062cc <memcmp+0x46>$/;"	l
f01062b0	obj/kern/kernel.asm	/^f01062b0:	eb 10                	jmp    f01062c2 <memcmp+0x3c>$/;"	l
f01062b2	obj/kern/kernel.asm	/^f01062b2:	0f b6 44 13 01       	movzbl 0x1(%ebx,%edx,1),%eax$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01062ba	obj/kern/kernel.asm	/^f01062ba:	0f b6 0c 16          	movzbl (%esi,%edx,1),%ecx$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	38 c8                	cmp    %cl,%al$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	74 0a                	je     f01062cc <memcmp+0x46>$/;"	l
f01062c2	obj/kern/kernel.asm	/^f01062c2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f01062c8	obj/kern/kernel.asm	/^f01062c8:	29 c8                	sub    %ecx,%eax$/;"	l
f01062ca	obj/kern/kernel.asm	/^f01062ca:	eb 09                	jmp    f01062d5 <memcmp+0x4f>$/;"	l
f01062cc	obj/kern/kernel.asm	/^f01062cc:	39 fa                	cmp    %edi,%edx$/;"	l
f01062ce	obj/kern/kernel.asm	/^f01062ce:	75 e2                	jne    f01062b2 <memcmp+0x2c>$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062d5	obj/kern/kernel.asm	/^f01062d5:	5b                   	pop    %ebx$/;"	l
f01062d6	obj/kern/kernel.asm	/^f01062d6:	5e                   	pop    %esi$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	5f                   	pop    %edi$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	5d                   	pop    %ebp$/;"	l
f01062d9	obj/kern/kernel.asm	/^f01062d9:	c3                   	ret    $/;"	l
f01062da	obj/kern/kernel.asm	/^f01062da <memfind>:$/;"	l
f01062da	obj/kern/kernel.asm	/^f01062da:	55                   	push   %ebp$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	89 e5                	mov    %esp,%ebp$/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062e0	obj/kern/kernel.asm	/^f01062e0:	89 c2                	mov    %eax,%edx$/;"	l
f01062e2	obj/kern/kernel.asm	/^f01062e2:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f01062e5	obj/kern/kernel.asm	/^f01062e5:	39 d0                	cmp    %edx,%eax$/;"	l
f01062e7	obj/kern/kernel.asm	/^f01062e7:	73 19                	jae    f0106302 <memfind+0x28>$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f01062ed	obj/kern/kernel.asm	/^f01062ed:	38 08                	cmp    %cl,(%eax)$/;"	l
f01062ef	obj/kern/kernel.asm	/^f01062ef:	75 06                	jne    f01062f7 <memfind+0x1d>$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	eb 0f                	jmp    f0106302 <memfind+0x28>$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	38 08                	cmp    %cl,(%eax)$/;"	l
f01062f5	obj/kern/kernel.asm	/^f01062f5:	74 0b                	je     f0106302 <memfind+0x28>$/;"	l
f01062f7	obj/kern/kernel.asm	/^f01062f7:	83 c0 01             	add    $0x1,%eax$/;"	l
f01062fa	obj/kern/kernel.asm	/^f01062fa:	39 d0                	cmp    %edx,%eax$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106300	obj/kern/kernel.asm	/^f0106300:	75 f1                	jne    f01062f3 <memfind+0x19>$/;"	l
f0106302	obj/kern/kernel.asm	/^f0106302:	5d                   	pop    %ebp$/;"	l
f0106303	obj/kern/kernel.asm	/^f0106303:	c3                   	ret    $/;"	l
f0106304	obj/kern/kernel.asm	/^f0106304 <strtol>:$/;"	l
f0106304	obj/kern/kernel.asm	/^f0106304:	55                   	push   %ebp$/;"	l
f0106305	obj/kern/kernel.asm	/^f0106305:	89 e5                	mov    %esp,%ebp$/;"	l
f0106307	obj/kern/kernel.asm	/^f0106307:	57                   	push   %edi$/;"	l
f0106308	obj/kern/kernel.asm	/^f0106308:	56                   	push   %esi$/;"	l
f0106309	obj/kern/kernel.asm	/^f0106309:	53                   	push   %ebx$/;"	l
f010630a	obj/kern/kernel.asm	/^f010630a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010630d	obj/kern/kernel.asm	/^f010630d:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106313	obj/kern/kernel.asm	/^f0106313:	3c 20                	cmp    $0x20,%al$/;"	l
f0106315	obj/kern/kernel.asm	/^f0106315:	74 04                	je     f010631b <strtol+0x17>$/;"	l
f0106317	obj/kern/kernel.asm	/^f0106317:	3c 09                	cmp    $0x9,%al$/;"	l
f0106319	obj/kern/kernel.asm	/^f0106319:	75 0e                	jne    f0106329 <strtol+0x25>$/;"	l
f010631b	obj/kern/kernel.asm	/^f010631b:	83 c2 01             	add    $0x1,%edx$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	3c 20                	cmp    $0x20,%al$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	74 f6                	je     f010631b <strtol+0x17>$/;"	l
f0106325	obj/kern/kernel.asm	/^f0106325:	3c 09                	cmp    $0x9,%al$/;"	l
f0106327	obj/kern/kernel.asm	/^f0106327:	74 f2                	je     f010631b <strtol+0x17>$/;"	l
f0106329	obj/kern/kernel.asm	/^f0106329:	3c 2b                	cmp    $0x2b,%al$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	75 0a                	jne    f0106337 <strtol+0x33>$/;"	l
f010632d	obj/kern/kernel.asm	/^f010632d:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	eb 10                	jmp    f0106347 <strtol+0x43>$/;"	l
f0106337	obj/kern/kernel.asm	/^f0106337:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010633c	obj/kern/kernel.asm	/^f010633c:	3c 2d                	cmp    $0x2d,%al$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	75 07                	jne    f0106347 <strtol+0x43>$/;"	l
f0106340	obj/kern/kernel.asm	/^f0106340:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106343	obj/kern/kernel.asm	/^f0106343:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0106347	obj/kern/kernel.asm	/^f0106347:	85 db                	test   %ebx,%ebx$/;"	l
f0106349	obj/kern/kernel.asm	/^f0106349:	0f 94 c0             	sete   %al$/;"	l
f010634c	obj/kern/kernel.asm	/^f010634c:	74 05                	je     f0106353 <strtol+0x4f>$/;"	l
f010634e	obj/kern/kernel.asm	/^f010634e:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f0106351	obj/kern/kernel.asm	/^f0106351:	75 15                	jne    f0106368 <strtol+0x64>$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106356	obj/kern/kernel.asm	/^f0106356:	75 10                	jne    f0106368 <strtol+0x64>$/;"	l
f0106358	obj/kern/kernel.asm	/^f0106358:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f010635c	obj/kern/kernel.asm	/^f010635c:	75 0a                	jne    f0106368 <strtol+0x64>$/;"	l
f010635e	obj/kern/kernel.asm	/^f010635e:	83 c2 02             	add    $0x2,%edx$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	bb 10 00 00 00       	mov    $0x10,%ebx$/;"	l
f0106366	obj/kern/kernel.asm	/^f0106366:	eb 13                	jmp    f010637b <strtol+0x77>$/;"	l
f0106368	obj/kern/kernel.asm	/^f0106368:	84 c0                	test   %al,%al$/;"	l
f010636a	obj/kern/kernel.asm	/^f010636a:	74 0f                	je     f010637b <strtol+0x77>$/;"	l
f010636c	obj/kern/kernel.asm	/^f010636c:	bb 0a 00 00 00       	mov    $0xa,%ebx$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106374	obj/kern/kernel.asm	/^f0106374:	75 05                	jne    f010637b <strtol+0x77>$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106379	obj/kern/kernel.asm	/^f0106379:	b3 08                	mov    $0x8,%bl$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	89 de                	mov    %ebx,%esi$/;"	l
f0106382	obj/kern/kernel.asm	/^f0106382:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106385	obj/kern/kernel.asm	/^f0106385:	8d 59 d0             	lea    -0x30(%ecx),%ebx$/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388:	80 fb 09             	cmp    $0x9,%bl$/;"	l
f010638b	obj/kern/kernel.asm	/^f010638b:	77 08                	ja     f0106395 <strtol+0x91>$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106390	obj/kern/kernel.asm	/^f0106390:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0106393	obj/kern/kernel.asm	/^f0106393:	eb 1e                	jmp    f01063b3 <strtol+0xaf>$/;"	l
f0106395	obj/kern/kernel.asm	/^f0106395:	8d 59 9f             	lea    -0x61(%ecx),%ebx$/;"	l
f0106398	obj/kern/kernel.asm	/^f0106398:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	77 08                	ja     f01063a5 <strtol+0xa1>$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f01063a3	obj/kern/kernel.asm	/^f01063a3:	eb 0e                	jmp    f01063b3 <strtol+0xaf>$/;"	l
f01063a5	obj/kern/kernel.asm	/^f01063a5:	8d 59 bf             	lea    -0x41(%ecx),%ebx$/;"	l
f01063a8	obj/kern/kernel.asm	/^f01063a8:	80 fb 19             	cmp    $0x19,%bl$/;"	l
f01063ab	obj/kern/kernel.asm	/^f01063ab:	77 14                	ja     f01063c1 <strtol+0xbd>$/;"	l
f01063ad	obj/kern/kernel.asm	/^f01063ad:	0f be c9             	movsbl %cl,%ecx$/;"	l
f01063b0	obj/kern/kernel.asm	/^f01063b0:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	39 f1                	cmp    %esi,%ecx$/;"	l
f01063b5	obj/kern/kernel.asm	/^f01063b5:	7d 0e                	jge    f01063c5 <strtol+0xc1>$/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01063ba	obj/kern/kernel.asm	/^f01063ba:	0f af c6             	imul   %esi,%eax$/;"	l
f01063bd	obj/kern/kernel.asm	/^f01063bd:	01 c8                	add    %ecx,%eax$/;"	l
f01063bf	obj/kern/kernel.asm	/^f01063bf:	eb c1                	jmp    f0106382 <strtol+0x7e>$/;"	l
f01063c1	obj/kern/kernel.asm	/^f01063c1:	89 c1                	mov    %eax,%ecx$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	eb 02                	jmp    f01063c7 <strtol+0xc3>$/;"	l
f01063c5	obj/kern/kernel.asm	/^f01063c5:	89 c1                	mov    %eax,%ecx$/;"	l
f01063c7	obj/kern/kernel.asm	/^f01063c7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01063cb	obj/kern/kernel.asm	/^f01063cb:	74 05                	je     f01063d2 <strtol+0xce>$/;"	l
f01063cd	obj/kern/kernel.asm	/^f01063cd:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	89 13                	mov    %edx,(%ebx)$/;"	l
f01063d2	obj/kern/kernel.asm	/^f01063d2:	89 ca                	mov    %ecx,%edx$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	f7 da                	neg    %edx$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	85 ff                	test   %edi,%edi$/;"	l
f01063d8	obj/kern/kernel.asm	/^f01063d8:	0f 45 c2             	cmovne %edx,%eax$/;"	l
f01063db	obj/kern/kernel.asm	/^f01063db:	5b                   	pop    %ebx$/;"	l
f01063dc	obj/kern/kernel.asm	/^f01063dc:	5e                   	pop    %esi$/;"	l
f01063dd	obj/kern/kernel.asm	/^f01063dd:	5f                   	pop    %edi$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	5d                   	pop    %ebp$/;"	l
f01063df	obj/kern/kernel.asm	/^f01063df:	c3                   	ret    $/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0 <mpentry_start>:$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	fa                   	cli    $/;"	l
f01063e1	obj/kern/kernel.asm	/^f01063e1:	31 c0                	xor    %eax,%eax$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	8e d8                	mov    %eax,%ds$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	8e c0                	mov    %eax,%es$/;"	l
f01063e7	obj/kern/kernel.asm	/^f01063e7:	8e d0                	mov    %eax,%ss$/;"	l
f01063e9	obj/kern/kernel.asm	/^f01063e9:	0f 01 16             	lgdtl  (%esi)$/;"	l
f01063ec	obj/kern/kernel.asm	/^f01063ec:	74 70                	je     f010645e <mpentry_end+0x4>$/;"	l
f01063ee	obj/kern/kernel.asm	/^f01063ee:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01063f1	obj/kern/kernel.asm	/^f01063f1:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f01063f5	obj/kern/kernel.asm	/^f01063f5:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01063f8	obj/kern/kernel.asm	/^f01063f8:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f01063fe	obj/kern/kernel.asm	/^f01063fe:	08 00                	or     %al,(%eax)$/;"	l
f0106400	obj/kern/kernel.asm	/^f0106400 <start32>:$/;"	l
f0106400	obj/kern/kernel.asm	/^f0106400:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	8e d8                	mov    %eax,%ds$/;"	l
f0106406	obj/kern/kernel.asm	/^f0106406:	8e c0                	mov    %eax,%es$/;"	l
f0106408	obj/kern/kernel.asm	/^f0106408:	8e d0                	mov    %eax,%ss$/;"	l
f010640a	obj/kern/kernel.asm	/^f010640a:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f010640e	obj/kern/kernel.asm	/^f010640e:	8e e0                	mov    %eax,%fs$/;"	l
f0106410	obj/kern/kernel.asm	/^f0106410:	8e e8                	mov    %eax,%gs$/;"	l
f0106412	obj/kern/kernel.asm	/^f0106412:	b8 00 00 12 00       	mov    $0x120000,%eax$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010641a	obj/kern/kernel.asm	/^f010641a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f010641d	obj/kern/kernel.asm	/^f010641d:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106425	obj/kern/kernel.asm	/^f0106425:	8b 25 84 4e 22 f0    	mov    0xf0224e84,%esp$/;"	l
f010642b	obj/kern/kernel.asm	/^f010642b:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106430	obj/kern/kernel.asm	/^f0106430:	b8 a8 00 10 f0       	mov    $0xf01000a8,%eax$/;"	l
f0106435	obj/kern/kernel.asm	/^f0106435:	ff d0                	call   *%eax$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437 <spin>:$/;"	l
f0106437	obj/kern/kernel.asm	/^f0106437:	eb fe                	jmp    f0106437 <spin>$/;"	l
f0106439	obj/kern/kernel.asm	/^f0106439:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f010643c	obj/kern/kernel.asm	/^f010643c <gdt>:$/;"	l
f0106444	obj/kern/kernel.asm	/^f0106444:	ff                   	(bad)  $/;"	l
f0106445	obj/kern/kernel.asm	/^f0106445:	ff 00                	incl   (%eax)$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	00 00                	add    %al,(%eax)$/;"	l
f0106449	obj/kern/kernel.asm	/^f0106449:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106450	obj/kern/kernel.asm	/^f0106450:	00 92 cf 00 17 00    	add    %dl,0x1700cf(%edx)$/;"	l
f0106454	obj/kern/kernel.asm	/^f0106454 <gdtdesc>:$/;"	l
f0106454	obj/kern/kernel.asm	/^f0106454:	17                   	pop    %ss$/;"	l
f0106455	obj/kern/kernel.asm	/^f0106455:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f010645a	obj/kern/kernel.asm	/^f010645a <mpentry_end>:$/;"	l
f010645a	obj/kern/kernel.asm	/^f010645a:	90                   	nop$/;"	l
f010645b	obj/kern/kernel.asm	/^f010645b:	00 00                	add    %al,(%eax)$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	00 00                	add    %al,(%eax)$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460 <sum>:$/;"	l
f0106460	obj/kern/kernel.asm	/^f0106460:	55                   	push   %ebp$/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	89 e5                	mov    %esp,%ebp$/;"	l
f0106463	obj/kern/kernel.asm	/^f0106463:	56                   	push   %esi$/;"	l
f0106464	obj/kern/kernel.asm	/^f0106464:	53                   	push   %ebx$/;"	l
f0106465	obj/kern/kernel.asm	/^f0106465:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f010646a	obj/kern/kernel.asm	/^f010646a:	85 d2                	test   %edx,%edx$/;"	l
f010646c	obj/kern/kernel.asm	/^f010646c:	7e 12                	jle    f0106480 <sum+0x20>$/;"	l
f010646e	obj/kern/kernel.asm	/^f010646e:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0106473	obj/kern/kernel.asm	/^f0106473:	0f b6 34 08          	movzbl (%eax,%ecx,1),%esi$/;"	l
f0106477	obj/kern/kernel.asm	/^f0106477:	01 f3                	add    %esi,%ebx$/;"	l
f0106479	obj/kern/kernel.asm	/^f0106479:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010647c	obj/kern/kernel.asm	/^f010647c:	39 d1                	cmp    %edx,%ecx$/;"	l
f010647e	obj/kern/kernel.asm	/^f010647e:	75 f3                	jne    f0106473 <sum+0x13>$/;"	l
f0106480	obj/kern/kernel.asm	/^f0106480:	89 d8                	mov    %ebx,%eax$/;"	l
f0106482	obj/kern/kernel.asm	/^f0106482:	5b                   	pop    %ebx$/;"	l
f0106483	obj/kern/kernel.asm	/^f0106483:	5e                   	pop    %esi$/;"	l
f0106484	obj/kern/kernel.asm	/^f0106484:	5d                   	pop    %ebp$/;"	l
f0106485	obj/kern/kernel.asm	/^f0106485:	c3                   	ret    $/;"	l
f0106486	obj/kern/kernel.asm	/^f0106486 <mpsearch1>:$/;"	l
f0106486	obj/kern/kernel.asm	/^f0106486:	55                   	push   %ebp$/;"	l
f0106487	obj/kern/kernel.asm	/^f0106487:	89 e5                	mov    %esp,%ebp$/;"	l
f0106489	obj/kern/kernel.asm	/^f0106489:	56                   	push   %esi$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	53                   	push   %ebx$/;"	l
f010648b	obj/kern/kernel.asm	/^f010648b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010648e	obj/kern/kernel.asm	/^f010648e:	8b 0d 88 4e 22 f0    	mov    0xf0224e88,%ecx$/;"	l
f0106494	obj/kern/kernel.asm	/^f0106494:	89 c3                	mov    %eax,%ebx$/;"	l
f0106496	obj/kern/kernel.asm	/^f0106496:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0106499	obj/kern/kernel.asm	/^f0106499:	39 cb                	cmp    %ecx,%ebx$/;"	l
f010649b	obj/kern/kernel.asm	/^f010649b:	72 20                	jb     f01064bd <mpsearch1+0x37>$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01064a1	obj/kern/kernel.asm	/^f01064a1:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f01064a8	obj/kern/kernel.asm	/^f01064a8:	f0 $/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01064b0	obj/kern/kernel.asm	/^f01064b0:	00 $/;"	l
f01064b1	obj/kern/kernel.asm	/^f01064b1:	c7 04 24 a1 8d 10 f0 	movl   $0xf0108da1,(%esp)$/;"	l
f01064b8	obj/kern/kernel.asm	/^f01064b8:	e8 83 9b ff ff       	call   f0100040 <_panic>$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	8d 34 02             	lea    (%edx,%eax,1),%esi$/;"	l
f01064c0	obj/kern/kernel.asm	/^f01064c0:	89 f2                	mov    %esi,%edx$/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01064c5	obj/kern/kernel.asm	/^f01064c5:	39 d1                	cmp    %edx,%ecx$/;"	l
f01064c7	obj/kern/kernel.asm	/^f01064c7:	77 20                	ja     f01064e9 <mpsearch1+0x63>$/;"	l
f01064c9	obj/kern/kernel.asm	/^f01064c9:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f01064d4	obj/kern/kernel.asm	/^f01064d4:	f0 $/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	00 $/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	c7 04 24 a1 8d 10 f0 	movl   $0xf0108da1,(%esp)$/;"	l
f01064e4	obj/kern/kernel.asm	/^f01064e4:	e8 57 9b ff ff       	call   f0100040 <_panic>$/;"	l
f01064e9	obj/kern/kernel.asm	/^f01064e9:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f01064ef	obj/kern/kernel.asm	/^f01064ef:	81 ee 00 00 00 10    	sub    $0x10000000,%esi$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	39 f3                	cmp    %esi,%ebx$/;"	l
f01064f7	obj/kern/kernel.asm	/^f01064f7:	73 3a                	jae    f0106533 <mpsearch1+0xad>$/;"	l
f01064f9	obj/kern/kernel.asm	/^f01064f9:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	00 $/;"	l
f0106501	obj/kern/kernel.asm	/^f0106501:	c7 44 24 04 b1 8d 10 	movl   $0xf0108db1,0x4(%esp)$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	f0 $/;"	l
f0106509	obj/kern/kernel.asm	/^f0106509:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010650c	obj/kern/kernel.asm	/^f010650c:	e8 75 fd ff ff       	call   f0106286 <memcmp>$/;"	l
f0106511	obj/kern/kernel.asm	/^f0106511:	85 c0                	test   %eax,%eax$/;"	l
f0106513	obj/kern/kernel.asm	/^f0106513:	75 10                	jne    f0106525 <mpsearch1+0x9f>$/;"	l
f0106515	obj/kern/kernel.asm	/^f0106515:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	89 d8                	mov    %ebx,%eax$/;"	l
f010651c	obj/kern/kernel.asm	/^f010651c:	e8 3f ff ff ff       	call   f0106460 <sum>$/;"	l
f0106521	obj/kern/kernel.asm	/^f0106521:	84 c0                	test   %al,%al$/;"	l
f0106523	obj/kern/kernel.asm	/^f0106523:	74 13                	je     f0106538 <mpsearch1+0xb2>$/;"	l
f0106525	obj/kern/kernel.asm	/^f0106525:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106528	obj/kern/kernel.asm	/^f0106528:	39 f3                	cmp    %esi,%ebx$/;"	l
f010652a	obj/kern/kernel.asm	/^f010652a:	72 cd                	jb     f01064f9 <mpsearch1+0x73>$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106531	obj/kern/kernel.asm	/^f0106531:	eb 05                	jmp    f0106538 <mpsearch1+0xb2>$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106538	obj/kern/kernel.asm	/^f0106538:	89 d8                	mov    %ebx,%eax$/;"	l
f010653a	obj/kern/kernel.asm	/^f010653a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010653d	obj/kern/kernel.asm	/^f010653d:	5b                   	pop    %ebx$/;"	l
f010653e	obj/kern/kernel.asm	/^f010653e:	5e                   	pop    %esi$/;"	l
f010653f	obj/kern/kernel.asm	/^f010653f:	5d                   	pop    %ebp$/;"	l
f0106540	obj/kern/kernel.asm	/^f0106540:	c3                   	ret    $/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541 <mp_init>:$/;"	l
f0106541	obj/kern/kernel.asm	/^f0106541:	55                   	push   %ebp$/;"	l
f0106542	obj/kern/kernel.asm	/^f0106542:	89 e5                	mov    %esp,%ebp$/;"	l
f0106544	obj/kern/kernel.asm	/^f0106544:	57                   	push   %edi$/;"	l
f0106545	obj/kern/kernel.asm	/^f0106545:	56                   	push   %esi$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	53                   	push   %ebx$/;"	l
f0106547	obj/kern/kernel.asm	/^f0106547:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f010654a	obj/kern/kernel.asm	/^f010654a:	c7 05 c0 53 22 f0 20 	movl   $0xf0225020,0xf02253c0$/;"	l
f0106551	obj/kern/kernel.asm	/^f0106551:	50 22 f0 $/;"	l
f0106554	obj/kern/kernel.asm	/^f0106554:	83 3d 88 4e 22 f0 00 	cmpl   $0x0,0xf0224e88$/;"	l
f010655b	obj/kern/kernel.asm	/^f010655b:	75 24                	jne    f0106581 <mp_init+0x40>$/;"	l
f010655d	obj/kern/kernel.asm	/^f010655d:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0106564	obj/kern/kernel.asm	/^f0106564:	00 $/;"	l
f0106565	obj/kern/kernel.asm	/^f0106565:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f010656c	obj/kern/kernel.asm	/^f010656c:	f0 $/;"	l
f010656d	obj/kern/kernel.asm	/^f010656d:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0106574	obj/kern/kernel.asm	/^f0106574:	00 $/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	c7 04 24 a1 8d 10 f0 	movl   $0xf0108da1,(%esp)$/;"	l
f010657c	obj/kern/kernel.asm	/^f010657c:	e8 bf 9a ff ff       	call   f0100040 <_panic>$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106588	obj/kern/kernel.asm	/^f0106588:	85 c0                	test   %eax,%eax$/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a:	74 16                	je     f01065a2 <mp_init+0x61>$/;"	l
f010658c	obj/kern/kernel.asm	/^f010658c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010658f	obj/kern/kernel.asm	/^f010658f:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106594	obj/kern/kernel.asm	/^f0106594:	e8 ed fe ff ff       	call   f0106486 <mpsearch1>$/;"	l
f0106599	obj/kern/kernel.asm	/^f0106599:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010659c	obj/kern/kernel.asm	/^f010659c:	85 c0                	test   %eax,%eax$/;"	l
f010659e	obj/kern/kernel.asm	/^f010659e:	75 3c                	jne    f01065dc <mp_init+0x9b>$/;"	l
f01065a0	obj/kern/kernel.asm	/^f01065a0:	eb 20                	jmp    f01065c2 <mp_init+0x81>$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f01065a9	obj/kern/kernel.asm	/^f01065a9:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01065ac	obj/kern/kernel.asm	/^f01065ac:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f01065b6	obj/kern/kernel.asm	/^f01065b6:	e8 cb fe ff ff       	call   f0106486 <mpsearch1>$/;"	l
f01065bb	obj/kern/kernel.asm	/^f01065bb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01065be	obj/kern/kernel.asm	/^f01065be:	85 c0                	test   %eax,%eax$/;"	l
f01065c0	obj/kern/kernel.asm	/^f01065c0:	75 1a                	jne    f01065dc <mp_init+0x9b>$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01065c7	obj/kern/kernel.asm	/^f01065c7:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f01065cc	obj/kern/kernel.asm	/^f01065cc:	e8 b5 fe ff ff       	call   f0106486 <mpsearch1>$/;"	l
f01065d1	obj/kern/kernel.asm	/^f01065d1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01065d4	obj/kern/kernel.asm	/^f01065d4:	85 c0                	test   %eax,%eax$/;"	l
f01065d6	obj/kern/kernel.asm	/^f01065d6:	0f 84 24 02 00 00    	je     f0106800 <mp_init+0x2bf>$/;"	l
f01065dc	obj/kern/kernel.asm	/^f01065dc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01065df	obj/kern/kernel.asm	/^f01065df:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	85 ff                	test   %edi,%edi$/;"	l
f01065e4	obj/kern/kernel.asm	/^f01065e4:	74 06                	je     f01065ec <mp_init+0xab>$/;"	l
f01065e6	obj/kern/kernel.asm	/^f01065e6:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f01065ea	obj/kern/kernel.asm	/^f01065ea:	74 11                	je     f01065fd <mp_init+0xbc>$/;"	l
f01065ec	obj/kern/kernel.asm	/^f01065ec:	c7 04 24 14 8c 10 f0 	movl   $0xf0108c14,(%esp)$/;"	l
f01065f3	obj/kern/kernel.asm	/^f01065f3:	e8 ba e1 ff ff       	call   f01047b2 <cprintf>$/;"	l
f01065f8	obj/kern/kernel.asm	/^f01065f8:	e9 03 02 00 00       	jmp    f0106800 <mp_init+0x2bf>$/;"	l
f01065fd	obj/kern/kernel.asm	/^f01065fd:	89 f8                	mov    %edi,%eax$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0106602	obj/kern/kernel.asm	/^f0106602:	3b 05 88 4e 22 f0    	cmp    0xf0224e88,%eax$/;"	l
f0106608	obj/kern/kernel.asm	/^f0106608:	72 20                	jb     f010662a <mp_init+0xe9>$/;"	l
f010660a	obj/kern/kernel.asm	/^f010660a:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010660e	obj/kern/kernel.asm	/^f010660e:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f0106615	obj/kern/kernel.asm	/^f0106615:	f0 $/;"	l
f0106616	obj/kern/kernel.asm	/^f0106616:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f010661d	obj/kern/kernel.asm	/^f010661d:	00 $/;"	l
f010661e	obj/kern/kernel.asm	/^f010661e:	c7 04 24 a1 8d 10 f0 	movl   $0xf0108da1,(%esp)$/;"	l
f0106625	obj/kern/kernel.asm	/^f0106625:	e8 16 9a ff ff       	call   f0100040 <_panic>$/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	81 ef 00 00 00 10    	sub    $0x10000000,%edi$/;"	l
f0106630	obj/kern/kernel.asm	/^f0106630:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106637	obj/kern/kernel.asm	/^f0106637:	00 $/;"	l
f0106638	obj/kern/kernel.asm	/^f0106638:	c7 44 24 04 b6 8d 10 	movl   $0xf0108db6,0x4(%esp)$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	f0 $/;"	l
f0106640	obj/kern/kernel.asm	/^f0106640:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0106643	obj/kern/kernel.asm	/^f0106643:	e8 3e fc ff ff       	call   f0106286 <memcmp>$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648:	85 c0                	test   %eax,%eax$/;"	l
f010664a	obj/kern/kernel.asm	/^f010664a:	74 11                	je     f010665d <mp_init+0x11c>$/;"	l
f010664c	obj/kern/kernel.asm	/^f010664c:	c7 04 24 44 8c 10 f0 	movl   $0xf0108c44,(%esp)$/;"	l
f0106653	obj/kern/kernel.asm	/^f0106653:	e8 5a e1 ff ff       	call   f01047b2 <cprintf>$/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658:	e9 a3 01 00 00       	jmp    f0106800 <mp_init+0x2bf>$/;"	l
f010665d	obj/kern/kernel.asm	/^f010665d:	0f b7 5f 04          	movzwl 0x4(%edi),%ebx$/;"	l
f0106661	obj/kern/kernel.asm	/^f0106661:	0f b7 d3             	movzwl %bx,%edx$/;"	l
f0106664	obj/kern/kernel.asm	/^f0106664:	89 f8                	mov    %edi,%eax$/;"	l
f0106666	obj/kern/kernel.asm	/^f0106666:	e8 f5 fd ff ff       	call   f0106460 <sum>$/;"	l
f010666b	obj/kern/kernel.asm	/^f010666b:	84 c0                	test   %al,%al$/;"	l
f010666d	obj/kern/kernel.asm	/^f010666d:	74 11                	je     f0106680 <mp_init+0x13f>$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	c7 04 24 78 8c 10 f0 	movl   $0xf0108c78,(%esp)$/;"	l
f0106676	obj/kern/kernel.asm	/^f0106676:	e8 37 e1 ff ff       	call   f01047b2 <cprintf>$/;"	l
f010667b	obj/kern/kernel.asm	/^f010667b:	e9 80 01 00 00       	jmp    f0106800 <mp_init+0x2bf>$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	0f b6 47 06          	movzbl 0x6(%edi),%eax$/;"	l
f0106684	obj/kern/kernel.asm	/^f0106684:	3c 01                	cmp    $0x1,%al$/;"	l
f0106686	obj/kern/kernel.asm	/^f0106686:	74 1c                	je     f01066a4 <mp_init+0x163>$/;"	l
f0106688	obj/kern/kernel.asm	/^f0106688:	3c 04                	cmp    $0x4,%al$/;"	l
f010668a	obj/kern/kernel.asm	/^f010668a:	74 18                	je     f01066a4 <mp_init+0x163>$/;"	l
f010668c	obj/kern/kernel.asm	/^f010668c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010668f	obj/kern/kernel.asm	/^f010668f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	c7 04 24 9c 8c 10 f0 	movl   $0xf0108c9c,(%esp)$/;"	l
f010669a	obj/kern/kernel.asm	/^f010669a:	e8 13 e1 ff ff       	call   f01047b2 <cprintf>$/;"	l
f010669f	obj/kern/kernel.asm	/^f010669f:	e9 5c 01 00 00       	jmp    f0106800 <mp_init+0x2bf>$/;"	l
f01066a4	obj/kern/kernel.asm	/^f01066a4:	0f b7 57 28          	movzwl 0x28(%edi),%edx$/;"	l
f01066a8	obj/kern/kernel.asm	/^f01066a8:	0f b7 db             	movzwl %bx,%ebx$/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	8d 04 1f             	lea    (%edi,%ebx,1),%eax$/;"	l
f01066ae	obj/kern/kernel.asm	/^f01066ae:	e8 ad fd ff ff       	call   f0106460 <sum>$/;"	l
f01066b3	obj/kern/kernel.asm	/^f01066b3:	3a 47 2a             	cmp    0x2a(%edi),%al$/;"	l
f01066b6	obj/kern/kernel.asm	/^f01066b6:	74 11                	je     f01066c9 <mp_init+0x188>$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	c7 04 24 bc 8c 10 f0 	movl   $0xf0108cbc,(%esp)$/;"	l
f01066bf	obj/kern/kernel.asm	/^f01066bf:	e8 ee e0 ff ff       	call   f01047b2 <cprintf>$/;"	l
f01066c4	obj/kern/kernel.asm	/^f01066c4:	e9 37 01 00 00       	jmp    f0106800 <mp_init+0x2bf>$/;"	l
f01066c9	obj/kern/kernel.asm	/^f01066c9:	85 ff                	test   %edi,%edi$/;"	l
f01066cb	obj/kern/kernel.asm	/^f01066cb:	0f 84 2f 01 00 00    	je     f0106800 <mp_init+0x2bf>$/;"	l
f01066d1	obj/kern/kernel.asm	/^f01066d1:	c7 05 00 50 22 f0 01 	movl   $0x1,0xf0225000$/;"	l
f01066d8	obj/kern/kernel.asm	/^f01066d8:	00 00 00 $/;"	l
f01066db	obj/kern/kernel.asm	/^f01066db:	8b 47 24             	mov    0x24(%edi),%eax$/;"	l
f01066de	obj/kern/kernel.asm	/^f01066de:	a3 00 60 26 f0       	mov    %eax,0xf0266000$/;"	l
f01066e3	obj/kern/kernel.asm	/^f01066e3:	66 83 7f 22 00       	cmpw   $0x0,0x22(%edi)$/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8:	0f 84 97 00 00 00    	je     f0106785 <mp_init+0x244>$/;"	l
f01066ee	obj/kern/kernel.asm	/^f01066ee:	8d 77 2c             	lea    0x2c(%edi),%esi$/;"	l
f01066f1	obj/kern/kernel.asm	/^f01066f1:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01066f6	obj/kern/kernel.asm	/^f01066f6:	0f b6 06             	movzbl (%esi),%eax$/;"	l
f01066f9	obj/kern/kernel.asm	/^f01066f9:	84 c0                	test   %al,%al$/;"	l
f01066fb	obj/kern/kernel.asm	/^f01066fb:	74 06                	je     f0106703 <mp_init+0x1c2>$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	3c 04                	cmp    $0x4,%al$/;"	l
f01066ff	obj/kern/kernel.asm	/^f01066ff:	77 54                	ja     f0106755 <mp_init+0x214>$/;"	l
f0106701	obj/kern/kernel.asm	/^f0106701:	eb 4d                	jmp    f0106750 <mp_init+0x20f>$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	f6 46 03 02          	testb  $0x2,0x3(%esi)$/;"	l
f0106707	obj/kern/kernel.asm	/^f0106707:	74 11                	je     f010671a <mp_init+0x1d9>$/;"	l
f0106709	obj/kern/kernel.asm	/^f0106709:	6b 05 c4 53 22 f0 74 	imul   $0x74,0xf02253c4,%eax$/;"	l
f0106710	obj/kern/kernel.asm	/^f0106710:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f0106715	obj/kern/kernel.asm	/^f0106715:	a3 c0 53 22 f0       	mov    %eax,0xf02253c0$/;"	l
f010671a	obj/kern/kernel.asm	/^f010671a:	a1 c4 53 22 f0       	mov    0xf02253c4,%eax$/;"	l
f010671f	obj/kern/kernel.asm	/^f010671f:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106722	obj/kern/kernel.asm	/^f0106722:	7f 13                	jg     f0106737 <mp_init+0x1f6>$/;"	l
f0106724	obj/kern/kernel.asm	/^f0106724:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0106727	obj/kern/kernel.asm	/^f0106727:	88 82 20 50 22 f0    	mov    %al,-0xfddafe0(%edx)$/;"	l
f010672d	obj/kern/kernel.asm	/^f010672d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	a3 c4 53 22 f0       	mov    %eax,0xf02253c4$/;"	l
f0106735	obj/kern/kernel.asm	/^f0106735:	eb 14                	jmp    f010674b <mp_init+0x20a>$/;"	l
f0106737	obj/kern/kernel.asm	/^f0106737:	0f b6 46 01          	movzbl 0x1(%esi),%eax$/;"	l
f010673b	obj/kern/kernel.asm	/^f010673b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010673f	obj/kern/kernel.asm	/^f010673f:	c7 04 24 ec 8c 10 f0 	movl   $0xf0108cec,(%esp)$/;"	l
f0106746	obj/kern/kernel.asm	/^f0106746:	e8 67 e0 ff ff       	call   f01047b2 <cprintf>$/;"	l
f010674b	obj/kern/kernel.asm	/^f010674b:	83 c6 14             	add    $0x14,%esi$/;"	l
f010674e	obj/kern/kernel.asm	/^f010674e:	eb 26                	jmp    f0106776 <mp_init+0x235>$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	83 c6 08             	add    $0x8,%esi$/;"	l
f0106753	obj/kern/kernel.asm	/^f0106753:	eb 21                	jmp    f0106776 <mp_init+0x235>$/;"	l
f0106755	obj/kern/kernel.asm	/^f0106755:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106758	obj/kern/kernel.asm	/^f0106758:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010675c	obj/kern/kernel.asm	/^f010675c:	c7 04 24 14 8d 10 f0 	movl   $0xf0108d14,(%esp)$/;"	l
f0106763	obj/kern/kernel.asm	/^f0106763:	e8 4a e0 ff ff       	call   f01047b2 <cprintf>$/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768:	c7 05 00 50 22 f0 00 	movl   $0x0,0xf0225000$/;"	l
f010676f	obj/kern/kernel.asm	/^f010676f:	00 00 00 $/;"	l
f0106772	obj/kern/kernel.asm	/^f0106772:	0f b7 5f 22          	movzwl 0x22(%edi),%ebx$/;"	l
f0106776	obj/kern/kernel.asm	/^f0106776:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0106779	obj/kern/kernel.asm	/^f0106779:	0f b7 47 22          	movzwl 0x22(%edi),%eax$/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	39 d8                	cmp    %ebx,%eax$/;"	l
f010677f	obj/kern/kernel.asm	/^f010677f:	0f 87 71 ff ff ff    	ja     f01066f6 <mp_init+0x1b5>$/;"	l
f0106785	obj/kern/kernel.asm	/^f0106785:	a1 c0 53 22 f0       	mov    0xf02253c0,%eax$/;"	l
f010678a	obj/kern/kernel.asm	/^f010678a:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106791	obj/kern/kernel.asm	/^f0106791:	83 3d 00 50 22 f0 00 	cmpl   $0x0,0xf0225000$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798:	75 22                	jne    f01067bc <mp_init+0x27b>$/;"	l
f010679a	obj/kern/kernel.asm	/^f010679a:	c7 05 c4 53 22 f0 01 	movl   $0x1,0xf02253c4$/;"	l
f01067a1	obj/kern/kernel.asm	/^f01067a1:	00 00 00 $/;"	l
f01067a4	obj/kern/kernel.asm	/^f01067a4:	c7 05 00 60 26 f0 00 	movl   $0x0,0xf0266000$/;"	l
f01067ab	obj/kern/kernel.asm	/^f01067ab:	00 00 00 $/;"	l
f01067ae	obj/kern/kernel.asm	/^f01067ae:	c7 04 24 34 8d 10 f0 	movl   $0xf0108d34,(%esp)$/;"	l
f01067b5	obj/kern/kernel.asm	/^f01067b5:	e8 f8 df ff ff       	call   f01047b2 <cprintf>$/;"	l
f01067ba	obj/kern/kernel.asm	/^f01067ba:	eb 44                	jmp    f0106800 <mp_init+0x2bf>$/;"	l
f01067bc	obj/kern/kernel.asm	/^f01067bc:	8b 15 c4 53 22 f0    	mov    0xf02253c4,%edx$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01067c6	obj/kern/kernel.asm	/^f01067c6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01067c9	obj/kern/kernel.asm	/^f01067c9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01067cd	obj/kern/kernel.asm	/^f01067cd:	c7 04 24 bb 8d 10 f0 	movl   $0xf0108dbb,(%esp)$/;"	l
f01067d4	obj/kern/kernel.asm	/^f01067d4:	e8 d9 df ff ff       	call   f01047b2 <cprintf>$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01067dc	obj/kern/kernel.asm	/^f01067dc:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f01067e0	obj/kern/kernel.asm	/^f01067e0:	74 1e                	je     f0106800 <mp_init+0x2bf>$/;"	l
f01067e2	obj/kern/kernel.asm	/^f01067e2:	c7 04 24 60 8d 10 f0 	movl   $0xf0108d60,(%esp)$/;"	l
f01067e9	obj/kern/kernel.asm	/^f01067e9:	e8 c4 df ff ff       	call   f01047b2 <cprintf>$/;"	l
f01067ee	obj/kern/kernel.asm	/^f01067ee:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f01067f3	obj/kern/kernel.asm	/^f01067f3:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f01067f8	obj/kern/kernel.asm	/^f01067f8:	ee                   	out    %al,(%dx)$/;"	l
f01067f9	obj/kern/kernel.asm	/^f01067f9:	b2 23                	mov    $0x23,%dl$/;"	l
f01067fb	obj/kern/kernel.asm	/^f01067fb:	ec                   	in     (%dx),%al$/;"	l
f01067fc	obj/kern/kernel.asm	/^f01067fc:	83 c8 01             	or     $0x1,%eax$/;"	l
f01067ff	obj/kern/kernel.asm	/^f01067ff:	ee                   	out    %al,(%dx)$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106803	obj/kern/kernel.asm	/^f0106803:	5b                   	pop    %ebx$/;"	l
f0106804	obj/kern/kernel.asm	/^f0106804:	5e                   	pop    %esi$/;"	l
f0106805	obj/kern/kernel.asm	/^f0106805:	5f                   	pop    %edi$/;"	l
f0106806	obj/kern/kernel.asm	/^f0106806:	5d                   	pop    %ebp$/;"	l
f0106807	obj/kern/kernel.asm	/^f0106807:	c3                   	ret    $/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808 <lapicw>:$/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808:	55                   	push   %ebp$/;"	l
f0106809	obj/kern/kernel.asm	/^f0106809:	89 e5                	mov    %esp,%ebp$/;"	l
f010680b	obj/kern/kernel.asm	/^f010680b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010680e	obj/kern/kernel.asm	/^f010680e:	03 05 04 60 26 f0    	add    0xf0266004,%eax$/;"	l
f0106814	obj/kern/kernel.asm	/^f0106814:	89 10                	mov    %edx,(%eax)$/;"	l
f0106816	obj/kern/kernel.asm	/^f0106816:	a1 04 60 26 f0       	mov    0xf0266004,%eax$/;"	l
f010681b	obj/kern/kernel.asm	/^f010681b:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f010681e	obj/kern/kernel.asm	/^f010681e:	5d                   	pop    %ebp$/;"	l
f010681f	obj/kern/kernel.asm	/^f010681f:	c3                   	ret    $/;"	l
f0106820	obj/kern/kernel.asm	/^f0106820 <cpunum>:$/;"	l
f0106820	obj/kern/kernel.asm	/^f0106820:	55                   	push   %ebp$/;"	l
f0106821	obj/kern/kernel.asm	/^f0106821:	89 e5                	mov    %esp,%ebp$/;"	l
f0106823	obj/kern/kernel.asm	/^f0106823:	8b 15 04 60 26 f0    	mov    0xf0266004,%edx$/;"	l
f0106829	obj/kern/kernel.asm	/^f0106829:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010682e	obj/kern/kernel.asm	/^f010682e:	85 d2                	test   %edx,%edx$/;"	l
f0106830	obj/kern/kernel.asm	/^f0106830:	74 06                	je     f0106838 <cpunum+0x18>$/;"	l
f0106832	obj/kern/kernel.asm	/^f0106832:	8b 42 20             	mov    0x20(%edx),%eax$/;"	l
f0106835	obj/kern/kernel.asm	/^f0106835:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	5d                   	pop    %ebp$/;"	l
f0106839	obj/kern/kernel.asm	/^f0106839:	c3                   	ret    $/;"	l
f010683a	obj/kern/kernel.asm	/^f010683a <lapic_init>:$/;"	l
f010683a	obj/kern/kernel.asm	/^f010683a:	55                   	push   %ebp$/;"	l
f010683b	obj/kern/kernel.asm	/^f010683b:	89 e5                	mov    %esp,%ebp$/;"	l
f010683d	obj/kern/kernel.asm	/^f010683d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106840	obj/kern/kernel.asm	/^f0106840:	a1 00 60 26 f0       	mov    0xf0266000,%eax$/;"	l
f0106845	obj/kern/kernel.asm	/^f0106845:	85 c0                	test   %eax,%eax$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	0f 84 1c 01 00 00    	je     f0106969 <lapic_init+0x12f>$/;"	l
f010684d	obj/kern/kernel.asm	/^f010684d:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0106854	obj/kern/kernel.asm	/^f0106854:	00 $/;"	l
f0106855	obj/kern/kernel.asm	/^f0106855:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106858	obj/kern/kernel.asm	/^f0106858:	e8 02 b4 ff ff       	call   f0101c5f <mmio_map_region>$/;"	l
f010685d	obj/kern/kernel.asm	/^f010685d:	a3 04 60 26 f0       	mov    %eax,0xf0266004$/;"	l
f0106862	obj/kern/kernel.asm	/^f0106862:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0106867	obj/kern/kernel.asm	/^f0106867:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f010686c	obj/kern/kernel.asm	/^f010686c:	e8 97 ff ff ff       	call   f0106808 <lapicw>$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0106876	obj/kern/kernel.asm	/^f0106876:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f010687b	obj/kern/kernel.asm	/^f010687b:	e8 88 ff ff ff       	call   f0106808 <lapicw>$/;"	l
f0106880	obj/kern/kernel.asm	/^f0106880:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0106885	obj/kern/kernel.asm	/^f0106885:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f010688a	obj/kern/kernel.asm	/^f010688a:	e8 79 ff ff ff       	call   f0106808 <lapicw>$/;"	l
f010688f	obj/kern/kernel.asm	/^f010688f:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0106894	obj/kern/kernel.asm	/^f0106894:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0106899	obj/kern/kernel.asm	/^f0106899:	e8 6a ff ff ff       	call   f0106808 <lapicw>$/;"	l
f010689e	obj/kern/kernel.asm	/^f010689e:	e8 7d ff ff ff       	call   f0106820 <cpunum>$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01068a6	obj/kern/kernel.asm	/^f01068a6:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f01068ab	obj/kern/kernel.asm	/^f01068ab:	39 05 c0 53 22 f0    	cmp    %eax,0xf02253c0$/;"	l
f01068b1	obj/kern/kernel.asm	/^f01068b1:	74 0f                	je     f01068c2 <lapic_init+0x88>$/;"	l
f01068b3	obj/kern/kernel.asm	/^f01068b3:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01068b8	obj/kern/kernel.asm	/^f01068b8:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f01068bd	obj/kern/kernel.asm	/^f01068bd:	e8 46 ff ff ff       	call   f0106808 <lapicw>$/;"	l
f01068c2	obj/kern/kernel.asm	/^f01068c2:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01068c7	obj/kern/kernel.asm	/^f01068c7:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f01068cc	obj/kern/kernel.asm	/^f01068cc:	e8 37 ff ff ff       	call   f0106808 <lapicw>$/;"	l
f01068d1	obj/kern/kernel.asm	/^f01068d1:	a1 04 60 26 f0       	mov    0xf0266004,%eax$/;"	l
f01068d6	obj/kern/kernel.asm	/^f01068d6:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f01068d9	obj/kern/kernel.asm	/^f01068d9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01068dc	obj/kern/kernel.asm	/^f01068dc:	3c 03                	cmp    $0x3,%al$/;"	l
f01068de	obj/kern/kernel.asm	/^f01068de:	76 0f                	jbe    f01068ef <lapic_init+0xb5>$/;"	l
f01068e0	obj/kern/kernel.asm	/^f01068e0:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01068e5	obj/kern/kernel.asm	/^f01068e5:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f01068ea	obj/kern/kernel.asm	/^f01068ea:	e8 19 ff ff ff       	call   f0106808 <lapicw>$/;"	l
f01068ef	obj/kern/kernel.asm	/^f01068ef:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f01068f4	obj/kern/kernel.asm	/^f01068f4:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f01068f9	obj/kern/kernel.asm	/^f01068f9:	e8 0a ff ff ff       	call   f0106808 <lapicw>$/;"	l
f01068fe	obj/kern/kernel.asm	/^f01068fe:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106903	obj/kern/kernel.asm	/^f0106903:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106908	obj/kern/kernel.asm	/^f0106908:	e8 fb fe ff ff       	call   f0106808 <lapicw>$/;"	l
f010690d	obj/kern/kernel.asm	/^f010690d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106912	obj/kern/kernel.asm	/^f0106912:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f0106917	obj/kern/kernel.asm	/^f0106917:	e8 ec fe ff ff       	call   f0106808 <lapicw>$/;"	l
f010691c	obj/kern/kernel.asm	/^f010691c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106921	obj/kern/kernel.asm	/^f0106921:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106926	obj/kern/kernel.asm	/^f0106926:	e8 dd fe ff ff       	call   f0106808 <lapicw>$/;"	l
f010692b	obj/kern/kernel.asm	/^f010692b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106930	obj/kern/kernel.asm	/^f0106930:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106935	obj/kern/kernel.asm	/^f0106935:	e8 ce fe ff ff       	call   f0106808 <lapicw>$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f010693f	obj/kern/kernel.asm	/^f010693f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106944	obj/kern/kernel.asm	/^f0106944:	e8 bf fe ff ff       	call   f0106808 <lapicw>$/;"	l
f0106949	obj/kern/kernel.asm	/^f0106949:	8b 15 04 60 26 f0    	mov    0xf0266004,%edx$/;"	l
f010694f	obj/kern/kernel.asm	/^f010694f:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106955	obj/kern/kernel.asm	/^f0106955:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106958	obj/kern/kernel.asm	/^f0106958:	75 f5                	jne    f010694f <lapic_init+0x115>$/;"	l
f010695a	obj/kern/kernel.asm	/^f010695a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010695f	obj/kern/kernel.asm	/^f010695f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964:	e8 9f fe ff ff       	call   f0106808 <lapicw>$/;"	l
f0106969	obj/kern/kernel.asm	/^f0106969:	c9                   	leave  $/;"	l
f010696a	obj/kern/kernel.asm	/^f010696a:	c3                   	ret    $/;"	l
f010696b	obj/kern/kernel.asm	/^f010696b <lapic_eoi>:$/;"	l
f010696b	obj/kern/kernel.asm	/^f010696b:	55                   	push   %ebp$/;"	l
f010696c	obj/kern/kernel.asm	/^f010696c:	89 e5                	mov    %esp,%ebp$/;"	l
f010696e	obj/kern/kernel.asm	/^f010696e:	83 3d 04 60 26 f0 00 	cmpl   $0x0,0xf0266004$/;"	l
f0106975	obj/kern/kernel.asm	/^f0106975:	74 0f                	je     f0106986 <lapic_eoi+0x1b>$/;"	l
f0106977	obj/kern/kernel.asm	/^f0106977:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010697c	obj/kern/kernel.asm	/^f010697c:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f0106981	obj/kern/kernel.asm	/^f0106981:	e8 82 fe ff ff       	call   f0106808 <lapicw>$/;"	l
f0106986	obj/kern/kernel.asm	/^f0106986:	5d                   	pop    %ebp$/;"	l
f0106987	obj/kern/kernel.asm	/^f0106987:	c3                   	ret    $/;"	l
f0106988	obj/kern/kernel.asm	/^f0106988 <lapic_startap>:$/;"	l
f0106988	obj/kern/kernel.asm	/^f0106988:	55                   	push   %ebp$/;"	l
f0106989	obj/kern/kernel.asm	/^f0106989:	89 e5                	mov    %esp,%ebp$/;"	l
f010698b	obj/kern/kernel.asm	/^f010698b:	56                   	push   %esi$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c:	53                   	push   %ebx$/;"	l
f010698d	obj/kern/kernel.asm	/^f010698d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106990	obj/kern/kernel.asm	/^f0106990:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106993	obj/kern/kernel.asm	/^f0106993:	0f b6 5d 08          	movzbl 0x8(%ebp),%ebx$/;"	l
f0106997	obj/kern/kernel.asm	/^f0106997:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01069a1	obj/kern/kernel.asm	/^f01069a1:	ee                   	out    %al,(%dx)$/;"	l
f01069a2	obj/kern/kernel.asm	/^f01069a2:	b2 71                	mov    $0x71,%dl$/;"	l
f01069a4	obj/kern/kernel.asm	/^f01069a4:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f01069a9	obj/kern/kernel.asm	/^f01069a9:	ee                   	out    %al,(%dx)$/;"	l
f01069aa	obj/kern/kernel.asm	/^f01069aa:	83 3d 88 4e 22 f0 00 	cmpl   $0x0,0xf0224e88$/;"	l
f01069b1	obj/kern/kernel.asm	/^f01069b1:	75 24                	jne    f01069d7 <lapic_startap+0x4f>$/;"	l
f01069b3	obj/kern/kernel.asm	/^f01069b3:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f01069ba	obj/kern/kernel.asm	/^f01069ba:	00 $/;"	l
f01069bb	obj/kern/kernel.asm	/^f01069bb:	c7 44 24 08 a8 6f 10 	movl   $0xf0106fa8,0x8(%esp)$/;"	l
f01069c2	obj/kern/kernel.asm	/^f01069c2:	f0 $/;"	l
f01069c3	obj/kern/kernel.asm	/^f01069c3:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f01069ca	obj/kern/kernel.asm	/^f01069ca:	00 $/;"	l
f01069cb	obj/kern/kernel.asm	/^f01069cb:	c7 04 24 d8 8d 10 f0 	movl   $0xf0108dd8,(%esp)$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	e8 69 96 ff ff       	call   f0100040 <_panic>$/;"	l
f01069d7	obj/kern/kernel.asm	/^f01069d7:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f01069de	obj/kern/kernel.asm	/^f01069de:	00 00 $/;"	l
f01069e0	obj/kern/kernel.asm	/^f01069e0:	89 f0                	mov    %esi,%eax$/;"	l
f01069e2	obj/kern/kernel.asm	/^f01069e2:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f01069e5	obj/kern/kernel.asm	/^f01069e5:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f01069eb	obj/kern/kernel.asm	/^f01069eb:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f01069ee	obj/kern/kernel.asm	/^f01069ee:	89 da                	mov    %ebx,%edx$/;"	l
f01069f0	obj/kern/kernel.asm	/^f01069f0:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01069f5	obj/kern/kernel.asm	/^f01069f5:	e8 0e fe ff ff       	call   f0106808 <lapicw>$/;"	l
f01069fa	obj/kern/kernel.asm	/^f01069fa:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f01069ff	obj/kern/kernel.asm	/^f01069ff:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106a04	obj/kern/kernel.asm	/^f0106a04:	e8 ff fd ff ff       	call   f0106808 <lapicw>$/;"	l
f0106a09	obj/kern/kernel.asm	/^f0106a09:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f0106a0e	obj/kern/kernel.asm	/^f0106a0e:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106a13	obj/kern/kernel.asm	/^f0106a13:	e8 f0 fd ff ff       	call   f0106808 <lapicw>$/;"	l
f0106a18	obj/kern/kernel.asm	/^f0106a18:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f0106a21	obj/kern/kernel.asm	/^f0106a21:	89 da                	mov    %ebx,%edx$/;"	l
f0106a23	obj/kern/kernel.asm	/^f0106a23:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106a28	obj/kern/kernel.asm	/^f0106a28:	e8 db fd ff ff       	call   f0106808 <lapicw>$/;"	l
f0106a2d	obj/kern/kernel.asm	/^f0106a2d:	89 f2                	mov    %esi,%edx$/;"	l
f0106a2f	obj/kern/kernel.asm	/^f0106a2f:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106a34	obj/kern/kernel.asm	/^f0106a34:	e8 cf fd ff ff       	call   f0106808 <lapicw>$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	89 da                	mov    %ebx,%edx$/;"	l
f0106a3b	obj/kern/kernel.asm	/^f0106a3b:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0106a40	obj/kern/kernel.asm	/^f0106a40:	e8 c3 fd ff ff       	call   f0106808 <lapicw>$/;"	l
f0106a45	obj/kern/kernel.asm	/^f0106a45:	89 f2                	mov    %esi,%edx$/;"	l
f0106a47	obj/kern/kernel.asm	/^f0106a47:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106a4c	obj/kern/kernel.asm	/^f0106a4c:	e8 b7 fd ff ff       	call   f0106808 <lapicw>$/;"	l
f0106a51	obj/kern/kernel.asm	/^f0106a51:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106a54	obj/kern/kernel.asm	/^f0106a54:	5b                   	pop    %ebx$/;"	l
f0106a55	obj/kern/kernel.asm	/^f0106a55:	5e                   	pop    %esi$/;"	l
f0106a56	obj/kern/kernel.asm	/^f0106a56:	5d                   	pop    %ebp$/;"	l
f0106a57	obj/kern/kernel.asm	/^f0106a57:	c3                   	ret    $/;"	l
f0106a58	obj/kern/kernel.asm	/^f0106a58 <lapic_ipi>:$/;"	l
f0106a58	obj/kern/kernel.asm	/^f0106a58:	55                   	push   %ebp$/;"	l
f0106a59	obj/kern/kernel.asm	/^f0106a59:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a5b	obj/kern/kernel.asm	/^f0106a5b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106a5e	obj/kern/kernel.asm	/^f0106a5e:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0106a64	obj/kern/kernel.asm	/^f0106a64:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0106a69	obj/kern/kernel.asm	/^f0106a69:	e8 9a fd ff ff       	call   f0106808 <lapicw>$/;"	l
f0106a6e	obj/kern/kernel.asm	/^f0106a6e:	8b 15 04 60 26 f0    	mov    0xf0266004,%edx$/;"	l
f0106a74	obj/kern/kernel.asm	/^f0106a74:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0106a7a	obj/kern/kernel.asm	/^f0106a7a:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0106a7d	obj/kern/kernel.asm	/^f0106a7d:	75 f5                	jne    f0106a74 <lapic_ipi+0x1c>$/;"	l
f0106a7f	obj/kern/kernel.asm	/^f0106a7f:	5d                   	pop    %ebp$/;"	l
f0106a80	obj/kern/kernel.asm	/^f0106a80:	c3                   	ret    $/;"	l
f0106a81	obj/kern/kernel.asm	/^f0106a81:	00 00                	add    %al,(%eax)$/;"	l
f0106a84	obj/kern/kernel.asm	/^f0106a84 <holding>:$/;"	l
f0106a84	obj/kern/kernel.asm	/^f0106a84:	55                   	push   %ebp$/;"	l
f0106a85	obj/kern/kernel.asm	/^f0106a85:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a87	obj/kern/kernel.asm	/^f0106a87:	53                   	push   %ebx$/;"	l
f0106a88	obj/kern/kernel.asm	/^f0106a88:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a90	obj/kern/kernel.asm	/^f0106a90:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f0106a93	obj/kern/kernel.asm	/^f0106a93:	74 18                	je     f0106aad <holding+0x29>$/;"	l
f0106a95	obj/kern/kernel.asm	/^f0106a95:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
f0106a98	obj/kern/kernel.asm	/^f0106a98:	e8 83 fd ff ff       	call   f0106820 <cpunum>$/;"	l
f0106a9d	obj/kern/kernel.asm	/^f0106a9d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106aa0	obj/kern/kernel.asm	/^f0106aa0:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f0106aa5	obj/kern/kernel.asm	/^f0106aa5:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106aa7	obj/kern/kernel.asm	/^f0106aa7:	0f 94 c2             	sete   %dl$/;"	l
f0106aaa	obj/kern/kernel.asm	/^f0106aaa:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0106aad	obj/kern/kernel.asm	/^f0106aad:	89 d0                	mov    %edx,%eax$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	83 c4 04             	add    $0x4,%esp$/;"	l
f0106ab2	obj/kern/kernel.asm	/^f0106ab2:	5b                   	pop    %ebx$/;"	l
f0106ab3	obj/kern/kernel.asm	/^f0106ab3:	5d                   	pop    %ebp$/;"	l
f0106ab4	obj/kern/kernel.asm	/^f0106ab4:	c3                   	ret    $/;"	l
f0106ab5	obj/kern/kernel.asm	/^f0106ab5 <__spin_initlock>:$/;"	l
f0106ab5	obj/kern/kernel.asm	/^f0106ab5:	55                   	push   %ebp$/;"	l
f0106ab6	obj/kern/kernel.asm	/^f0106ab6:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ab8	obj/kern/kernel.asm	/^f0106ab8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106abb	obj/kern/kernel.asm	/^f0106abb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0106ac1	obj/kern/kernel.asm	/^f0106ac1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106ac4	obj/kern/kernel.asm	/^f0106ac4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106ac7	obj/kern/kernel.asm	/^f0106ac7:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0106ace	obj/kern/kernel.asm	/^f0106ace:	5d                   	pop    %ebp$/;"	l
f0106acf	obj/kern/kernel.asm	/^f0106acf:	c3                   	ret    $/;"	l
f0106ad0	obj/kern/kernel.asm	/^f0106ad0 <spin_lock>:$/;"	l
f0106ad0	obj/kern/kernel.asm	/^f0106ad0:	55                   	push   %ebp$/;"	l
f0106ad1	obj/kern/kernel.asm	/^f0106ad1:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ad3	obj/kern/kernel.asm	/^f0106ad3:	53                   	push   %ebx$/;"	l
f0106ad4	obj/kern/kernel.asm	/^f0106ad4:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0106ad7	obj/kern/kernel.asm	/^f0106ad7:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106ada	obj/kern/kernel.asm	/^f0106ada:	89 d8                	mov    %ebx,%eax$/;"	l
f0106adc	obj/kern/kernel.asm	/^f0106adc:	e8 a3 ff ff ff       	call   f0106a84 <holding>$/;"	l
f0106ae1	obj/kern/kernel.asm	/^f0106ae1:	85 c0                	test   %eax,%eax$/;"	l
f0106ae3	obj/kern/kernel.asm	/^f0106ae3:	75 12                	jne    f0106af7 <spin_lock+0x27>$/;"	l
f0106ae5	obj/kern/kernel.asm	/^f0106ae5:	89 da                	mov    %ebx,%edx$/;"	l
f0106ae7	obj/kern/kernel.asm	/^f0106ae7:	b0 01                	mov    $0x1,%al$/;"	l
f0106ae9	obj/kern/kernel.asm	/^f0106ae9:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106aec	obj/kern/kernel.asm	/^f0106aec:	b9 01 00 00 00       	mov    $0x1,%ecx$/;"	l
f0106af1	obj/kern/kernel.asm	/^f0106af1:	85 c0                	test   %eax,%eax$/;"	l
f0106af3	obj/kern/kernel.asm	/^f0106af3:	75 2e                	jne    f0106b23 <spin_lock+0x53>$/;"	l
f0106af5	obj/kern/kernel.asm	/^f0106af5:	eb 37                	jmp    f0106b2e <spin_lock+0x5e>$/;"	l
f0106af7	obj/kern/kernel.asm	/^f0106af7:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106afa	obj/kern/kernel.asm	/^f0106afa:	e8 21 fd ff ff       	call   f0106820 <cpunum>$/;"	l
f0106aff	obj/kern/kernel.asm	/^f0106aff:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f0106b03	obj/kern/kernel.asm	/^f0106b03:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106b07	obj/kern/kernel.asm	/^f0106b07:	c7 44 24 08 e8 8d 10 	movl   $0xf0108de8,0x8(%esp)$/;"	l
f0106b0e	obj/kern/kernel.asm	/^f0106b0e:	f0 $/;"	l
f0106b0f	obj/kern/kernel.asm	/^f0106b0f:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f0106b16	obj/kern/kernel.asm	/^f0106b16:	00 $/;"	l
f0106b17	obj/kern/kernel.asm	/^f0106b17:	c7 04 24 4c 8e 10 f0 	movl   $0xf0108e4c,(%esp)$/;"	l
f0106b1e	obj/kern/kernel.asm	/^f0106b1e:	e8 1d 95 ff ff       	call   f0100040 <_panic>$/;"	l
f0106b23	obj/kern/kernel.asm	/^f0106b23:	f3 90                	pause  $/;"	l
f0106b25	obj/kern/kernel.asm	/^f0106b25:	89 c8                	mov    %ecx,%eax$/;"	l
f0106b27	obj/kern/kernel.asm	/^f0106b27:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0106b2a	obj/kern/kernel.asm	/^f0106b2a:	85 c0                	test   %eax,%eax$/;"	l
f0106b2c	obj/kern/kernel.asm	/^f0106b2c:	75 f5                	jne    f0106b23 <spin_lock+0x53>$/;"	l
f0106b2e	obj/kern/kernel.asm	/^f0106b2e:	e8 ed fc ff ff       	call   f0106820 <cpunum>$/;"	l
f0106b33	obj/kern/kernel.asm	/^f0106b33:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106b36	obj/kern/kernel.asm	/^f0106b36:	05 20 50 22 f0       	add    $0xf0225020,%eax$/;"	l
f0106b3b	obj/kern/kernel.asm	/^f0106b3b:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f0106b3e	obj/kern/kernel.asm	/^f0106b3e:	8d 4b 0c             	lea    0xc(%ebx),%ecx$/;"	l
f0106b41	obj/kern/kernel.asm	/^f0106b41:	89 e8                	mov    %ebp,%eax$/;"	l
f0106b43	obj/kern/kernel.asm	/^f0106b43:	3d ff ff 7f ef       	cmp    $0xef7fffff,%eax$/;"	l
f0106b48	obj/kern/kernel.asm	/^f0106b48:	77 34                	ja     f0106b7e <spin_lock+0xae>$/;"	l
f0106b4a	obj/kern/kernel.asm	/^f0106b4a:	eb 2b                	jmp    f0106b77 <spin_lock+0xa7>$/;"	l
f0106b4c	obj/kern/kernel.asm	/^f0106b4c:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f0106b52	obj/kern/kernel.asm	/^f0106b52:	76 12                	jbe    f0106b66 <spin_lock+0x96>$/;"	l
f0106b54	obj/kern/kernel.asm	/^f0106b54:	8b 5a 04             	mov    0x4(%edx),%ebx$/;"	l
f0106b57	obj/kern/kernel.asm	/^f0106b57:	89 1c 81             	mov    %ebx,(%ecx,%eax,4)$/;"	l
f0106b5a	obj/kern/kernel.asm	/^f0106b5a:	8b 12                	mov    (%edx),%edx$/;"	l
f0106b5c	obj/kern/kernel.asm	/^f0106b5c:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106b5f	obj/kern/kernel.asm	/^f0106b5f:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0106b62	obj/kern/kernel.asm	/^f0106b62:	75 e8                	jne    f0106b4c <spin_lock+0x7c>$/;"	l
f0106b64	obj/kern/kernel.asm	/^f0106b64:	eb 27                	jmp    f0106b8d <spin_lock+0xbd>$/;"	l
f0106b66	obj/kern/kernel.asm	/^f0106b66:	c7 04 81 00 00 00 00 	movl   $0x0,(%ecx,%eax,4)$/;"	l
f0106b6d	obj/kern/kernel.asm	/^f0106b6d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106b70	obj/kern/kernel.asm	/^f0106b70:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0106b73	obj/kern/kernel.asm	/^f0106b73:	7e f1                	jle    f0106b66 <spin_lock+0x96>$/;"	l
f0106b75	obj/kern/kernel.asm	/^f0106b75:	eb 16                	jmp    f0106b8d <spin_lock+0xbd>$/;"	l
f0106b77	obj/kern/kernel.asm	/^f0106b77:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106b7c	obj/kern/kernel.asm	/^f0106b7c:	eb e8                	jmp    f0106b66 <spin_lock+0x96>$/;"	l
f0106b7e	obj/kern/kernel.asm	/^f0106b7e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0106b81	obj/kern/kernel.asm	/^f0106b81:	89 53 0c             	mov    %edx,0xc(%ebx)$/;"	l
f0106b84	obj/kern/kernel.asm	/^f0106b84:	8b 10                	mov    (%eax),%edx$/;"	l
f0106b86	obj/kern/kernel.asm	/^f0106b86:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106b8b	obj/kern/kernel.asm	/^f0106b8b:	eb bf                	jmp    f0106b4c <spin_lock+0x7c>$/;"	l
f0106b8d	obj/kern/kernel.asm	/^f0106b8d:	83 c4 24             	add    $0x24,%esp$/;"	l
f0106b90	obj/kern/kernel.asm	/^f0106b90:	5b                   	pop    %ebx$/;"	l
f0106b91	obj/kern/kernel.asm	/^f0106b91:	5d                   	pop    %ebp$/;"	l
f0106b92	obj/kern/kernel.asm	/^f0106b92:	c3                   	ret    $/;"	l
f0106b93	obj/kern/kernel.asm	/^f0106b93 <spin_unlock>:$/;"	l
f0106b93	obj/kern/kernel.asm	/^f0106b93:	55                   	push   %ebp$/;"	l
f0106b94	obj/kern/kernel.asm	/^f0106b94:	89 e5                	mov    %esp,%ebp$/;"	l
f0106b96	obj/kern/kernel.asm	/^f0106b96:	83 ec 78             	sub    $0x78,%esp$/;"	l
f0106b99	obj/kern/kernel.asm	/^f0106b99:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
f0106b9c	obj/kern/kernel.asm	/^f0106b9c:	89 75 f8             	mov    %esi,-0x8(%ebp)$/;"	l
f0106b9f	obj/kern/kernel.asm	/^f0106b9f:	89 7d fc             	mov    %edi,-0x4(%ebp)$/;"	l
f0106ba2	obj/kern/kernel.asm	/^f0106ba2:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106ba5	obj/kern/kernel.asm	/^f0106ba5:	89 d8                	mov    %ebx,%eax$/;"	l
f0106ba7	obj/kern/kernel.asm	/^f0106ba7:	e8 d8 fe ff ff       	call   f0106a84 <holding>$/;"	l
f0106bac	obj/kern/kernel.asm	/^f0106bac:	85 c0                	test   %eax,%eax$/;"	l
f0106bae	obj/kern/kernel.asm	/^f0106bae:	0f 85 d4 00 00 00    	jne    f0106c88 <spin_unlock+0xf5>$/;"	l
f0106bb4	obj/kern/kernel.asm	/^f0106bb4:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0106bbb	obj/kern/kernel.asm	/^f0106bbb:	00 $/;"	l
f0106bbc	obj/kern/kernel.asm	/^f0106bbc:	8d 43 0c             	lea    0xc(%ebx),%eax$/;"	l
f0106bbf	obj/kern/kernel.asm	/^f0106bbf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106bc3	obj/kern/kernel.asm	/^f0106bc3:	8d 45 a8             	lea    -0x58(%ebp),%eax$/;"	l
f0106bc6	obj/kern/kernel.asm	/^f0106bc6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106bc9	obj/kern/kernel.asm	/^f0106bc9:	e8 1e f6 ff ff       	call   f01061ec <memmove>$/;"	l
f0106bce	obj/kern/kernel.asm	/^f0106bce:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0106bd1	obj/kern/kernel.asm	/^f0106bd1:	0f b6 30             	movzbl (%eax),%esi$/;"	l
f0106bd4	obj/kern/kernel.asm	/^f0106bd4:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0106bd7	obj/kern/kernel.asm	/^f0106bd7:	e8 44 fc ff ff       	call   f0106820 <cpunum>$/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106be0	obj/kern/kernel.asm	/^f0106be0:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0106be4	obj/kern/kernel.asm	/^f0106be4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106be8	obj/kern/kernel.asm	/^f0106be8:	c7 04 24 14 8e 10 f0 	movl   $0xf0108e14,(%esp)$/;"	l
f0106bef	obj/kern/kernel.asm	/^f0106bef:	e8 be db ff ff       	call   f01047b2 <cprintf>$/;"	l
f0106bf4	obj/kern/kernel.asm	/^f0106bf4:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0106bf7	obj/kern/kernel.asm	/^f0106bf7:	85 c0                	test   %eax,%eax$/;"	l
f0106bf9	obj/kern/kernel.asm	/^f0106bf9:	74 71                	je     f0106c6c <spin_unlock+0xd9>$/;"	l
f0106bfb	obj/kern/kernel.asm	/^f0106bfb:	8d 5d a8             	lea    -0x58(%ebp),%ebx$/;"	l
f0106bfe	obj/kern/kernel.asm	/^f0106bfe:	8d 7d cc             	lea    -0x34(%ebp),%edi$/;"	l
f0106c01	obj/kern/kernel.asm	/^f0106c01:	8d 75 d0             	lea    -0x30(%ebp),%esi$/;"	l
f0106c04	obj/kern/kernel.asm	/^f0106c04:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0106c08	obj/kern/kernel.asm	/^f0106c08:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106c0b	obj/kern/kernel.asm	/^f0106c0b:	e8 e2 e9 ff ff       	call   f01055f2 <debuginfo_eip>$/;"	l
f0106c10	obj/kern/kernel.asm	/^f0106c10:	85 c0                	test   %eax,%eax$/;"	l
f0106c12	obj/kern/kernel.asm	/^f0106c12:	78 39                	js     f0106c4d <spin_unlock+0xba>$/;"	l
f0106c14	obj/kern/kernel.asm	/^f0106c14:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106c16	obj/kern/kernel.asm	/^f0106c16:	89 c2                	mov    %eax,%edx$/;"	l
f0106c18	obj/kern/kernel.asm	/^f0106c18:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
f0106c1b	obj/kern/kernel.asm	/^f0106c1b:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f0106c1f	obj/kern/kernel.asm	/^f0106c1f:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0106c22	obj/kern/kernel.asm	/^f0106c22:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f0106c26	obj/kern/kernel.asm	/^f0106c26:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0106c29	obj/kern/kernel.asm	/^f0106c29:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f0106c2d	obj/kern/kernel.asm	/^f0106c2d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0106c30	obj/kern/kernel.asm	/^f0106c30:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106c34	obj/kern/kernel.asm	/^f0106c34:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0106c37	obj/kern/kernel.asm	/^f0106c37:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106c3b	obj/kern/kernel.asm	/^f0106c3b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106c3f	obj/kern/kernel.asm	/^f0106c3f:	c7 04 24 5c 8e 10 f0 	movl   $0xf0108e5c,(%esp)$/;"	l
f0106c46	obj/kern/kernel.asm	/^f0106c46:	e8 67 db ff ff       	call   f01047b2 <cprintf>$/;"	l
f0106c4b	obj/kern/kernel.asm	/^f0106c4b:	eb 12                	jmp    f0106c5f <spin_unlock+0xcc>$/;"	l
f0106c4d	obj/kern/kernel.asm	/^f0106c4d:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106c4f	obj/kern/kernel.asm	/^f0106c4f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106c53	obj/kern/kernel.asm	/^f0106c53:	c7 04 24 73 8e 10 f0 	movl   $0xf0108e73,(%esp)$/;"	l
f0106c5a	obj/kern/kernel.asm	/^f0106c5a:	e8 53 db ff ff       	call   f01047b2 <cprintf>$/;"	l
f0106c5f	obj/kern/kernel.asm	/^f0106c5f:	39 fb                	cmp    %edi,%ebx$/;"	l
f0106c61	obj/kern/kernel.asm	/^f0106c61:	74 09                	je     f0106c6c <spin_unlock+0xd9>$/;"	l
f0106c63	obj/kern/kernel.asm	/^f0106c63:	83 c3 04             	add    $0x4,%ebx$/;"	l
f0106c66	obj/kern/kernel.asm	/^f0106c66:	8b 03                	mov    (%ebx),%eax$/;"	l
f0106c68	obj/kern/kernel.asm	/^f0106c68:	85 c0                	test   %eax,%eax$/;"	l
f0106c6a	obj/kern/kernel.asm	/^f0106c6a:	75 98                	jne    f0106c04 <spin_unlock+0x71>$/;"	l
f0106c6c	obj/kern/kernel.asm	/^f0106c6c:	c7 44 24 08 7b 8e 10 	movl   $0xf0108e7b,0x8(%esp)$/;"	l
f0106c73	obj/kern/kernel.asm	/^f0106c73:	f0 $/;"	l
f0106c74	obj/kern/kernel.asm	/^f0106c74:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f0106c7b	obj/kern/kernel.asm	/^f0106c7b:	00 $/;"	l
f0106c7c	obj/kern/kernel.asm	/^f0106c7c:	c7 04 24 4c 8e 10 f0 	movl   $0xf0108e4c,(%esp)$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	e8 b8 93 ff ff       	call   f0100040 <_panic>$/;"	l
f0106c88	obj/kern/kernel.asm	/^f0106c88:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)$/;"	l
f0106c8f	obj/kern/kernel.asm	/^f0106c8f:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)$/;"	l
f0106c96	obj/kern/kernel.asm	/^f0106c96:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106c9b	obj/kern/kernel.asm	/^f0106c9b:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f0106c9e	obj/kern/kernel.asm	/^f0106c9e:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0106ca1	obj/kern/kernel.asm	/^f0106ca1:	8b 75 f8             	mov    -0x8(%ebp),%esi$/;"	l
f0106ca4	obj/kern/kernel.asm	/^f0106ca4:	8b 7d fc             	mov    -0x4(%ebp),%edi$/;"	l
f0106ca7	obj/kern/kernel.asm	/^f0106ca7:	89 ec                	mov    %ebp,%esp$/;"	l
f0106ca9	obj/kern/kernel.asm	/^f0106ca9:	5d                   	pop    %ebp$/;"	l
f0106caa	obj/kern/kernel.asm	/^f0106caa:	c3                   	ret    $/;"	l
f0106cab	obj/kern/kernel.asm	/^f0106cab:	00 00                	add    %al,(%eax)$/;"	l
f0106cad	obj/kern/kernel.asm	/^f0106cad:	00 00                	add    %al,(%eax)$/;"	l
f0106cb0	obj/kern/kernel.asm	/^f0106cb0 <__udivdi3>:$/;"	l
f0106cb0	obj/kern/kernel.asm	/^f0106cb0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106cb3	obj/kern/kernel.asm	/^f0106cb3:	89 7c 24 14          	mov    %edi,0x14(%esp)$/;"	l
f0106cb7	obj/kern/kernel.asm	/^f0106cb7:	8b 7c 24 2c          	mov    0x2c(%esp),%edi$/;"	l
f0106cbb	obj/kern/kernel.asm	/^f0106cbb:	8b 44 24 20          	mov    0x20(%esp),%eax$/;"	l
f0106cbf	obj/kern/kernel.asm	/^f0106cbf:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f0106cc3	obj/kern/kernel.asm	/^f0106cc3:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0106cc7	obj/kern/kernel.asm	/^f0106cc7:	8b 74 24 24          	mov    0x24(%esp),%esi$/;"	l
f0106ccb	obj/kern/kernel.asm	/^f0106ccb:	85 ff                	test   %edi,%edi$/;"	l
f0106ccd	obj/kern/kernel.asm	/^f0106ccd:	89 6c 24 18          	mov    %ebp,0x18(%esp)$/;"	l
f0106cd1	obj/kern/kernel.asm	/^f0106cd1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106cd5	obj/kern/kernel.asm	/^f0106cd5:	89 cd                	mov    %ecx,%ebp$/;"	l
f0106cd7	obj/kern/kernel.asm	/^f0106cd7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106cdb	obj/kern/kernel.asm	/^f0106cdb:	75 33                	jne    f0106d10 <__udivdi3+0x60>$/;"	l
f0106cdd	obj/kern/kernel.asm	/^f0106cdd:	39 f1                	cmp    %esi,%ecx$/;"	l
f0106cdf	obj/kern/kernel.asm	/^f0106cdf:	77 57                	ja     f0106d38 <__udivdi3+0x88>$/;"	l
f0106ce1	obj/kern/kernel.asm	/^f0106ce1:	85 c9                	test   %ecx,%ecx$/;"	l
f0106ce3	obj/kern/kernel.asm	/^f0106ce3:	75 0b                	jne    f0106cf0 <__udivdi3+0x40>$/;"	l
f0106ce5	obj/kern/kernel.asm	/^f0106ce5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106cea	obj/kern/kernel.asm	/^f0106cea:	31 d2                	xor    %edx,%edx$/;"	l
f0106cec	obj/kern/kernel.asm	/^f0106cec:	f7 f1                	div    %ecx$/;"	l
f0106cee	obj/kern/kernel.asm	/^f0106cee:	89 c1                	mov    %eax,%ecx$/;"	l
f0106cf0	obj/kern/kernel.asm	/^f0106cf0:	89 f0                	mov    %esi,%eax$/;"	l
f0106cf2	obj/kern/kernel.asm	/^f0106cf2:	31 d2                	xor    %edx,%edx$/;"	l
f0106cf4	obj/kern/kernel.asm	/^f0106cf4:	f7 f1                	div    %ecx$/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	89 c6                	mov    %eax,%esi$/;"	l
f0106cf8	obj/kern/kernel.asm	/^f0106cf8:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f0106cfc	obj/kern/kernel.asm	/^f0106cfc:	f7 f1                	div    %ecx$/;"	l
f0106cfe	obj/kern/kernel.asm	/^f0106cfe:	89 f2                	mov    %esi,%edx$/;"	l
f0106d00	obj/kern/kernel.asm	/^f0106d00:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0106d04	obj/kern/kernel.asm	/^f0106d04:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0106d08	obj/kern/kernel.asm	/^f0106d08:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0106d0c	obj/kern/kernel.asm	/^f0106d0c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106d0f	obj/kern/kernel.asm	/^f0106d0f:	c3                   	ret    $/;"	l
f0106d10	obj/kern/kernel.asm	/^f0106d10:	31 d2                	xor    %edx,%edx$/;"	l
f0106d12	obj/kern/kernel.asm	/^f0106d12:	31 c0                	xor    %eax,%eax$/;"	l
f0106d14	obj/kern/kernel.asm	/^f0106d14:	39 f7                	cmp    %esi,%edi$/;"	l
f0106d16	obj/kern/kernel.asm	/^f0106d16:	77 e8                	ja     f0106d00 <__udivdi3+0x50>$/;"	l
f0106d18	obj/kern/kernel.asm	/^f0106d18:	0f bd cf             	bsr    %edi,%ecx$/;"	l
f0106d1b	obj/kern/kernel.asm	/^f0106d1b:	83 f1 1f             	xor    $0x1f,%ecx$/;"	l
f0106d1e	obj/kern/kernel.asm	/^f0106d1e:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0106d22	obj/kern/kernel.asm	/^f0106d22:	75 2c                	jne    f0106d50 <__udivdi3+0xa0>$/;"	l
f0106d24	obj/kern/kernel.asm	/^f0106d24:	3b 6c 24 08          	cmp    0x8(%esp),%ebp$/;"	l
f0106d28	obj/kern/kernel.asm	/^f0106d28:	76 04                	jbe    f0106d2e <__udivdi3+0x7e>$/;"	l
f0106d2a	obj/kern/kernel.asm	/^f0106d2a:	39 f7                	cmp    %esi,%edi$/;"	l
f0106d2c	obj/kern/kernel.asm	/^f0106d2c:	73 d2                	jae    f0106d00 <__udivdi3+0x50>$/;"	l
f0106d2e	obj/kern/kernel.asm	/^f0106d2e:	31 d2                	xor    %edx,%edx$/;"	l
f0106d30	obj/kern/kernel.asm	/^f0106d30:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106d35	obj/kern/kernel.asm	/^f0106d35:	eb c9                	jmp    f0106d00 <__udivdi3+0x50>$/;"	l
f0106d37	obj/kern/kernel.asm	/^f0106d37:	90                   	nop$/;"	l
f0106d38	obj/kern/kernel.asm	/^f0106d38:	89 f2                	mov    %esi,%edx$/;"	l
f0106d3a	obj/kern/kernel.asm	/^f0106d3a:	f7 f1                	div    %ecx$/;"	l
f0106d3c	obj/kern/kernel.asm	/^f0106d3c:	31 d2                	xor    %edx,%edx$/;"	l
f0106d3e	obj/kern/kernel.asm	/^f0106d3e:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0106d42	obj/kern/kernel.asm	/^f0106d42:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0106d46	obj/kern/kernel.asm	/^f0106d46:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0106d4a	obj/kern/kernel.asm	/^f0106d4a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106d4d	obj/kern/kernel.asm	/^f0106d4d:	c3                   	ret    $/;"	l
f0106d4e	obj/kern/kernel.asm	/^f0106d4e:	66 90                	xchg   %ax,%ax$/;"	l
f0106d50	obj/kern/kernel.asm	/^f0106d50:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0106d55	obj/kern/kernel.asm	/^f0106d55:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0106d5a	obj/kern/kernel.asm	/^f0106d5a:	89 ea                	mov    %ebp,%edx$/;"	l
f0106d5c	obj/kern/kernel.asm	/^f0106d5c:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f0106d60	obj/kern/kernel.asm	/^f0106d60:	d3 e7                	shl    %cl,%edi$/;"	d
f0106d62	obj/kern/kernel.asm	/^f0106d62:	89 c1                	mov    %eax,%ecx$/;"	l
f0106d64	obj/kern/kernel.asm	/^f0106d64:	d3 ea                	shr    %cl,%edx$/;"	d
f0106d66	obj/kern/kernel.asm	/^f0106d66:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0106d6b	obj/kern/kernel.asm	/^f0106d6b:	09 fa                	or     %edi,%edx$/;"	l
f0106d6d	obj/kern/kernel.asm	/^f0106d6d:	89 f7                	mov    %esi,%edi$/;"	l
f0106d6f	obj/kern/kernel.asm	/^f0106d6f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106d73	obj/kern/kernel.asm	/^f0106d73:	89 f2                	mov    %esi,%edx$/;"	l
f0106d75	obj/kern/kernel.asm	/^f0106d75:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0106d79	obj/kern/kernel.asm	/^f0106d79:	d3 e5                	shl    %cl,%ebp$/;"	d
f0106d7b	obj/kern/kernel.asm	/^f0106d7b:	89 c1                	mov    %eax,%ecx$/;"	l
f0106d7d	obj/kern/kernel.asm	/^f0106d7d:	d3 ef                	shr    %cl,%edi$/;"	d
f0106d7f	obj/kern/kernel.asm	/^f0106d7f:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0106d84	obj/kern/kernel.asm	/^f0106d84:	d3 e2                	shl    %cl,%edx$/;"	d
f0106d86	obj/kern/kernel.asm	/^f0106d86:	89 c1                	mov    %eax,%ecx$/;"	l
f0106d88	obj/kern/kernel.asm	/^f0106d88:	d3 ee                	shr    %cl,%esi$/;"	d
f0106d8a	obj/kern/kernel.asm	/^f0106d8a:	09 d6                	or     %edx,%esi$/;"	l
f0106d8c	obj/kern/kernel.asm	/^f0106d8c:	89 fa                	mov    %edi,%edx$/;"	l
f0106d8e	obj/kern/kernel.asm	/^f0106d8e:	89 f0                	mov    %esi,%eax$/;"	l
f0106d90	obj/kern/kernel.asm	/^f0106d90:	f7 74 24 0c          	divl   0xc(%esp)$/;"	l
f0106d94	obj/kern/kernel.asm	/^f0106d94:	89 d7                	mov    %edx,%edi$/;"	l
f0106d96	obj/kern/kernel.asm	/^f0106d96:	89 c6                	mov    %eax,%esi$/;"	l
f0106d98	obj/kern/kernel.asm	/^f0106d98:	f7 e5                	mul    %ebp$/;"	l
f0106d9a	obj/kern/kernel.asm	/^f0106d9a:	39 d7                	cmp    %edx,%edi$/;"	l
f0106d9c	obj/kern/kernel.asm	/^f0106d9c:	72 22                	jb     f0106dc0 <__udivdi3+0x110>$/;"	l
f0106d9e	obj/kern/kernel.asm	/^f0106d9e:	8b 6c 24 08          	mov    0x8(%esp),%ebp$/;"	l
f0106da2	obj/kern/kernel.asm	/^f0106da2:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0106da7	obj/kern/kernel.asm	/^f0106da7:	d3 e5                	shl    %cl,%ebp$/;"	d
f0106da9	obj/kern/kernel.asm	/^f0106da9:	39 c5                	cmp    %eax,%ebp$/;"	l
f0106dab	obj/kern/kernel.asm	/^f0106dab:	73 04                	jae    f0106db1 <__udivdi3+0x101>$/;"	l
f0106dad	obj/kern/kernel.asm	/^f0106dad:	39 d7                	cmp    %edx,%edi$/;"	l
f0106daf	obj/kern/kernel.asm	/^f0106daf:	74 0f                	je     f0106dc0 <__udivdi3+0x110>$/;"	l
f0106db1	obj/kern/kernel.asm	/^f0106db1:	89 f0                	mov    %esi,%eax$/;"	l
f0106db3	obj/kern/kernel.asm	/^f0106db3:	31 d2                	xor    %edx,%edx$/;"	l
f0106db5	obj/kern/kernel.asm	/^f0106db5:	e9 46 ff ff ff       	jmp    f0106d00 <__udivdi3+0x50>$/;"	l
f0106dba	obj/kern/kernel.asm	/^f0106dba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106dc0	obj/kern/kernel.asm	/^f0106dc0:	8d 46 ff             	lea    -0x1(%esi),%eax$/;"	l
f0106dc3	obj/kern/kernel.asm	/^f0106dc3:	31 d2                	xor    %edx,%edx$/;"	l
f0106dc5	obj/kern/kernel.asm	/^f0106dc5:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0106dc9	obj/kern/kernel.asm	/^f0106dc9:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0106dcd	obj/kern/kernel.asm	/^f0106dcd:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0106dd1	obj/kern/kernel.asm	/^f0106dd1:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106dd4	obj/kern/kernel.asm	/^f0106dd4:	c3                   	ret    $/;"	l
f0106de0	obj/kern/kernel.asm	/^f0106de0 <__umoddi3>:$/;"	l
f0106de0	obj/kern/kernel.asm	/^f0106de0:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106de3	obj/kern/kernel.asm	/^f0106de3:	89 6c 24 18          	mov    %ebp,0x18(%esp)$/;"	l
f0106de7	obj/kern/kernel.asm	/^f0106de7:	8b 6c 24 2c          	mov    0x2c(%esp),%ebp$/;"	l
f0106deb	obj/kern/kernel.asm	/^f0106deb:	8b 44 24 20          	mov    0x20(%esp),%eax$/;"	l
f0106def	obj/kern/kernel.asm	/^f0106def:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f0106df3	obj/kern/kernel.asm	/^f0106df3:	8b 4c 24 28          	mov    0x28(%esp),%ecx$/;"	l
f0106df7	obj/kern/kernel.asm	/^f0106df7:	8b 74 24 24          	mov    0x24(%esp),%esi$/;"	l
f0106dfb	obj/kern/kernel.asm	/^f0106dfb:	85 ed                	test   %ebp,%ebp$/;"	l
f0106dfd	obj/kern/kernel.asm	/^f0106dfd:	89 7c 24 14          	mov    %edi,0x14(%esp)$/;"	l
f0106e01	obj/kern/kernel.asm	/^f0106e01:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106e05	obj/kern/kernel.asm	/^f0106e05:	89 cf                	mov    %ecx,%edi$/;"	l
f0106e07	obj/kern/kernel.asm	/^f0106e07:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106e0a	obj/kern/kernel.asm	/^f0106e0a:	89 f2                	mov    %esi,%edx$/;"	l
f0106e0c	obj/kern/kernel.asm	/^f0106e0c:	75 1a                	jne    f0106e28 <__umoddi3+0x48>$/;"	l
f0106e0e	obj/kern/kernel.asm	/^f0106e0e:	39 f1                	cmp    %esi,%ecx$/;"	l
f0106e10	obj/kern/kernel.asm	/^f0106e10:	76 4e                	jbe    f0106e60 <__umoddi3+0x80>$/;"	l
f0106e12	obj/kern/kernel.asm	/^f0106e12:	f7 f1                	div    %ecx$/;"	l
f0106e14	obj/kern/kernel.asm	/^f0106e14:	89 d0                	mov    %edx,%eax$/;"	l
f0106e16	obj/kern/kernel.asm	/^f0106e16:	31 d2                	xor    %edx,%edx$/;"	l
f0106e18	obj/kern/kernel.asm	/^f0106e18:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0106e1c	obj/kern/kernel.asm	/^f0106e1c:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0106e20	obj/kern/kernel.asm	/^f0106e20:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0106e24	obj/kern/kernel.asm	/^f0106e24:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106e27	obj/kern/kernel.asm	/^f0106e27:	c3                   	ret    $/;"	l
f0106e28	obj/kern/kernel.asm	/^f0106e28:	39 f5                	cmp    %esi,%ebp$/;"	l
f0106e2a	obj/kern/kernel.asm	/^f0106e2a:	77 54                	ja     f0106e80 <__umoddi3+0xa0>$/;"	l
f0106e2c	obj/kern/kernel.asm	/^f0106e2c:	0f bd c5             	bsr    %ebp,%eax$/;"	l
f0106e2f	obj/kern/kernel.asm	/^f0106e2f:	83 f0 1f             	xor    $0x1f,%eax$/;"	l
f0106e32	obj/kern/kernel.asm	/^f0106e32:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106e36	obj/kern/kernel.asm	/^f0106e36:	75 60                	jne    f0106e98 <__umoddi3+0xb8>$/;"	l
f0106e38	obj/kern/kernel.asm	/^f0106e38:	3b 0c 24             	cmp    (%esp),%ecx$/;"	l
f0106e3b	obj/kern/kernel.asm	/^f0106e3b:	0f 87 07 01 00 00    	ja     f0106f48 <__umoddi3+0x168>$/;"	l
f0106e41	obj/kern/kernel.asm	/^f0106e41:	89 f2                	mov    %esi,%edx$/;"	l
f0106e43	obj/kern/kernel.asm	/^f0106e43:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0106e46	obj/kern/kernel.asm	/^f0106e46:	29 ce                	sub    %ecx,%esi$/;"	l
f0106e48	obj/kern/kernel.asm	/^f0106e48:	19 ea                	sbb    %ebp,%edx$/;"	l
f0106e4a	obj/kern/kernel.asm	/^f0106e4a:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0106e4d	obj/kern/kernel.asm	/^f0106e4d:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0106e50	obj/kern/kernel.asm	/^f0106e50:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0106e54	obj/kern/kernel.asm	/^f0106e54:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0106e58	obj/kern/kernel.asm	/^f0106e58:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0106e5c	obj/kern/kernel.asm	/^f0106e5c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106e5f	obj/kern/kernel.asm	/^f0106e5f:	c3                   	ret    $/;"	l
f0106e60	obj/kern/kernel.asm	/^f0106e60:	85 c9                	test   %ecx,%ecx$/;"	l
f0106e62	obj/kern/kernel.asm	/^f0106e62:	75 0b                	jne    f0106e6f <__umoddi3+0x8f>$/;"	l
f0106e64	obj/kern/kernel.asm	/^f0106e64:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0106e69	obj/kern/kernel.asm	/^f0106e69:	31 d2                	xor    %edx,%edx$/;"	l
f0106e6b	obj/kern/kernel.asm	/^f0106e6b:	f7 f1                	div    %ecx$/;"	l
f0106e6d	obj/kern/kernel.asm	/^f0106e6d:	89 c1                	mov    %eax,%ecx$/;"	l
f0106e6f	obj/kern/kernel.asm	/^f0106e6f:	89 f0                	mov    %esi,%eax$/;"	l
f0106e71	obj/kern/kernel.asm	/^f0106e71:	31 d2                	xor    %edx,%edx$/;"	l
f0106e73	obj/kern/kernel.asm	/^f0106e73:	f7 f1                	div    %ecx$/;"	l
f0106e75	obj/kern/kernel.asm	/^f0106e75:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0106e78	obj/kern/kernel.asm	/^f0106e78:	f7 f1                	div    %ecx$/;"	l
f0106e7a	obj/kern/kernel.asm	/^f0106e7a:	eb 98                	jmp    f0106e14 <__umoddi3+0x34>$/;"	l
f0106e7c	obj/kern/kernel.asm	/^f0106e7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106e80	obj/kern/kernel.asm	/^f0106e80:	89 f2                	mov    %esi,%edx$/;"	l
f0106e82	obj/kern/kernel.asm	/^f0106e82:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0106e86	obj/kern/kernel.asm	/^f0106e86:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0106e8a	obj/kern/kernel.asm	/^f0106e8a:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0106e8e	obj/kern/kernel.asm	/^f0106e8e:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106e91	obj/kern/kernel.asm	/^f0106e91:	c3                   	ret    $/;"	l
f0106e92	obj/kern/kernel.asm	/^f0106e92:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0106e98	obj/kern/kernel.asm	/^f0106e98:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0106e9d	obj/kern/kernel.asm	/^f0106e9d:	89 e8                	mov    %ebp,%eax$/;"	l
f0106e9f	obj/kern/kernel.asm	/^f0106e9f:	bd 20 00 00 00       	mov    $0x20,%ebp$/;"	l
f0106ea4	obj/kern/kernel.asm	/^f0106ea4:	2b 6c 24 04          	sub    0x4(%esp),%ebp$/;"	l
f0106ea8	obj/kern/kernel.asm	/^f0106ea8:	89 fa                	mov    %edi,%edx$/;"	l
f0106eaa	obj/kern/kernel.asm	/^f0106eaa:	d3 e0                	shl    %cl,%eax$/;"	d
f0106eac	obj/kern/kernel.asm	/^f0106eac:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106eae	obj/kern/kernel.asm	/^f0106eae:	d3 ea                	shr    %cl,%edx$/;"	d
f0106eb0	obj/kern/kernel.asm	/^f0106eb0:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0106eb5	obj/kern/kernel.asm	/^f0106eb5:	09 c2                	or     %eax,%edx$/;"	l
f0106eb7	obj/kern/kernel.asm	/^f0106eb7:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106ebb	obj/kern/kernel.asm	/^f0106ebb:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0106ebe	obj/kern/kernel.asm	/^f0106ebe:	89 f2                	mov    %esi,%edx$/;"	l
f0106ec0	obj/kern/kernel.asm	/^f0106ec0:	d3 e7                	shl    %cl,%edi$/;"	d
f0106ec2	obj/kern/kernel.asm	/^f0106ec2:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106ec4	obj/kern/kernel.asm	/^f0106ec4:	d3 ea                	shr    %cl,%edx$/;"	d
f0106ec6	obj/kern/kernel.asm	/^f0106ec6:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0106ecb	obj/kern/kernel.asm	/^f0106ecb:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0106ecf	obj/kern/kernel.asm	/^f0106ecf:	d3 e6                	shl    %cl,%esi$/;"	d
f0106ed1	obj/kern/kernel.asm	/^f0106ed1:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106ed3	obj/kern/kernel.asm	/^f0106ed3:	d3 e8                	shr    %cl,%eax$/;"	d
f0106ed5	obj/kern/kernel.asm	/^f0106ed5:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0106eda	obj/kern/kernel.asm	/^f0106eda:	09 f0                	or     %esi,%eax$/;"	l
f0106edc	obj/kern/kernel.asm	/^f0106edc:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0106ee0	obj/kern/kernel.asm	/^f0106ee0:	f7 34 24             	divl   (%esp)$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	d3 e6                	shl    %cl,%esi$/;"	d
f0106ee5	obj/kern/kernel.asm	/^f0106ee5:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0106ee9	obj/kern/kernel.asm	/^f0106ee9:	89 d6                	mov    %edx,%esi$/;"	l
f0106eeb	obj/kern/kernel.asm	/^f0106eeb:	f7 e7                	mul    %edi$/;"	l
f0106eed	obj/kern/kernel.asm	/^f0106eed:	39 d6                	cmp    %edx,%esi$/;"	l
f0106eef	obj/kern/kernel.asm	/^f0106eef:	89 c1                	mov    %eax,%ecx$/;"	l
f0106ef1	obj/kern/kernel.asm	/^f0106ef1:	89 d7                	mov    %edx,%edi$/;"	l
f0106ef3	obj/kern/kernel.asm	/^f0106ef3:	72 3f                	jb     f0106f34 <__umoddi3+0x154>$/;"	l
f0106ef5	obj/kern/kernel.asm	/^f0106ef5:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f0106ef9	obj/kern/kernel.asm	/^f0106ef9:	72 35                	jb     f0106f30 <__umoddi3+0x150>$/;"	l
f0106efb	obj/kern/kernel.asm	/^f0106efb:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0106eff	obj/kern/kernel.asm	/^f0106eff:	29 c8                	sub    %ecx,%eax$/;"	l
f0106f01	obj/kern/kernel.asm	/^f0106f01:	19 fe                	sbb    %edi,%esi$/;"	l
f0106f03	obj/kern/kernel.asm	/^f0106f03:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0106f08	obj/kern/kernel.asm	/^f0106f08:	89 f2                	mov    %esi,%edx$/;"	l
f0106f0a	obj/kern/kernel.asm	/^f0106f0a:	d3 e8                	shr    %cl,%eax$/;"	d
f0106f0c	obj/kern/kernel.asm	/^f0106f0c:	89 e9                	mov    %ebp,%ecx$/;"	l
f0106f0e	obj/kern/kernel.asm	/^f0106f0e:	d3 e2                	shl    %cl,%edx$/;"	d
f0106f10	obj/kern/kernel.asm	/^f0106f10:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecx$/;"	l
f0106f15	obj/kern/kernel.asm	/^f0106f15:	09 d0                	or     %edx,%eax$/;"	l
f0106f17	obj/kern/kernel.asm	/^f0106f17:	89 f2                	mov    %esi,%edx$/;"	l
f0106f19	obj/kern/kernel.asm	/^f0106f19:	d3 ea                	shr    %cl,%edx$/;"	d
f0106f1b	obj/kern/kernel.asm	/^f0106f1b:	8b 74 24 10          	mov    0x10(%esp),%esi$/;"	l
f0106f1f	obj/kern/kernel.asm	/^f0106f1f:	8b 7c 24 14          	mov    0x14(%esp),%edi$/;"	l
f0106f23	obj/kern/kernel.asm	/^f0106f23:	8b 6c 24 18          	mov    0x18(%esp),%ebp$/;"	l
f0106f27	obj/kern/kernel.asm	/^f0106f27:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106f2a	obj/kern/kernel.asm	/^f0106f2a:	c3                   	ret    $/;"	l
f0106f2b	obj/kern/kernel.asm	/^f0106f2b:	90                   	nop$/;"	l
f0106f2c	obj/kern/kernel.asm	/^f0106f2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106f30	obj/kern/kernel.asm	/^f0106f30:	39 d6                	cmp    %edx,%esi$/;"	l
f0106f32	obj/kern/kernel.asm	/^f0106f32:	75 c7                	jne    f0106efb <__umoddi3+0x11b>$/;"	l
f0106f34	obj/kern/kernel.asm	/^f0106f34:	89 d7                	mov    %edx,%edi$/;"	l
f0106f36	obj/kern/kernel.asm	/^f0106f36:	89 c1                	mov    %eax,%ecx$/;"	l
f0106f38	obj/kern/kernel.asm	/^f0106f38:	2b 4c 24 0c          	sub    0xc(%esp),%ecx$/;"	l
f0106f3c	obj/kern/kernel.asm	/^f0106f3c:	1b 3c 24             	sbb    (%esp),%edi$/;"	l
f0106f3f	obj/kern/kernel.asm	/^f0106f3f:	eb ba                	jmp    f0106efb <__umoddi3+0x11b>$/;"	l
f0106f41	obj/kern/kernel.asm	/^f0106f41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0106f48	obj/kern/kernel.asm	/^f0106f48:	39 f5                	cmp    %esi,%ebp$/;"	l
f0106f4a	obj/kern/kernel.asm	/^f0106f4a:	0f 82 f1 fe ff ff    	jb     f0106e41 <__umoddi3+0x61>$/;"	l
f0106f50	obj/kern/kernel.asm	/^f0106f50:	e9 f8 fe ff ff       	jmp    f0106e4d <__umoddi3+0x6d>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	f	access:public
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient	access:public
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
fork	inc/lib.h	/^envid_t	fork(void);$/;"	p	signature:(void)
fork	lib/fork.c	/^fork(void)$/;"	f	signature:(void)
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f	signature:(const char *cur, char branch)
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f	signature:(const char *cur)
forktree	user/forktree.c	/^void forktree(const char *cur);$/;"	p	file:	signature:(const char *cur)
fprintf	inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:	access:public
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:	signature:(uint32_t pcs[])
get_current_test	gradelib.py	/^def get_current_test():$/;"	f	access:public
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f	access:public
getchar	inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	kern/console.c	/^getchar(void)$/;"	f	signature:(void)
getchar	lib/console.c	/^getchar(void)$/;"	f	signature:(void)
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:	signature:(va_list *ap, int lflag)
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f	access:public
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient	access:public
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f	signature:(struct UTrapframe *utf)
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:	signature:(struct spinlock *lock)
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/kern/kernel.asm	/^	i = page_lookup(e1->env_pgdir, e1, &pte);$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:	signature:(void)
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f	signature:(void)
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
inb	inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inl	inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int	obj/kern/kernel.asm	/^int mon_changePermission(int argc, char **argv, struct Trapframe *tf) $/;"	l
int	obj/kern/kernel.asm	/^int mon_continue(int argc, char **argv, struct Trapframe *tf)$/;"	l
int	obj/kern/kernel.asm	/^int mon_dump(int argc, char **argv, struct Trapframe *tf) {$/;"	l
int	obj/kern/kernel.asm	/^int mon_setcolor(int argc, char **argv, struct Trapframe *tf) {$/;"	l
int	obj/kern/kernel.asm	/^int mon_showPT(int argc, char **argv, struct Trapframe *tf) {$/;"	l
int	obj/kern/kernel.asm	/^int mon_showmapping(int argc, char **argv, struct Trapframe *tf) $/;"	l
int	obj/kern/kernel.asm	/^int mon_si(int argc, char **argv, struct Trapframe *tf) {$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
ipc_find_env	inc/lib.h	/^envid_t	ipc_find_env(enum EnvType type);$/;"	p	signature:(enum EnvType type)
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f	signature:(enum EnvType type)
ipc_recv	inc/lib.h	/^int32_t ipc_recv(envid_t *from_env_store, void *pg, int *perm_store);$/;"	p	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_send	inc/lib.h	/^void	ipc_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f	signature:(envid_t to_env, uint32_t val, void *pg, int perm)
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f	signature:(uint16_t mask)
irq_setmask_8259A	kern/picirq.h	/^void irq_setmask_8259A(uint16_t mask);$/;"	p	signature:(uint16_t mask)
iscons	inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f	signature:(int fdnum)
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:	signature:(void)
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f	signature:(void)
kbd_intr	kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:	signature:(void)
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	m	class:GDBClient	access:public
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
l	obj/kern/kernel.asm	/^		l = 0;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/cpu.h	/^void lapic_eoi(void);$/;"	p	signature:(void)
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f	signature:(void)
lapic_init	kern/cpu.h	/^void lapic_init(void);$/;"	p	signature:(void)
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f	signature:(void)
lapic_ipi	kern/cpu.h	/^void lapic_ipi(int vector);$/;"	p	signature:(int vector)
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f	signature:(int vector)
lapic_startap	kern/cpu.h	/^void lapic_startap(uint8_t apicid, uint32_t addr);$/;"	p	signature:(uint8_t apicid, uint32_t addr)
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f	signature:(uint8_t apicid, uint32_t addr)
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:	signature:(int index, int value)
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
lidt	inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:	signature:(struct Env *e, uint8_t *binary, size_t size)
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f	signature:(void)
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:	signature:(int c)
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
make	gradelib.py	/^def make(*target):$/;"	f	access:public
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner	access:public
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f	access:public
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f	signature:(unsigned reg)
mc146818_read	kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f	signature:(unsigned reg, unsigned datum)
mc146818_write	kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f	signature:(void)
mem_init	kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:	signature:(void)
mem_init_mp	kern/pmap.c	/^static void mem_init_mp(void);$/;"	p	file:	signature:(void)
memcmp	inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f	signature:(const void *v1, const void *v2, size_t n)
memcpy	inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memfind	inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f	signature:(const void *s, int c, size_t n)
memmove	inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f	signature:(void *dst, const void *src, size_t n)
memset	inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f	signature:(void *v, int c, size_t n)
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:	signature:(int us)
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f	signature:(physaddr_t pa, size_t size)
mmio_map_region	kern/pmap.h	/^void *	mmio_map_region(physaddr_t pa, size_t size);$/;"	p	signature:(physaddr_t pa, size_t size)
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_backtrace	kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_changePermission	kern/monitor.c	/^int mon_changePermission(int argc, char **argv, struct Trapframe *tf) $/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_changePermission	kern/monitor.h	/^int mon_changePermission(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_continue	kern/monitor.c	/^int mon_continue(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_continue	kern/monitor.h	/^int mon_continue(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_dump	kern/monitor.c	/^int mon_dump(int argc, char **argv, struct Trapframe *tf) {$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_dump	kern/monitor.h	/^int mon_dump(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_setcolor	kern/monitor.c	/^int mon_setcolor(int argc, char **argv, struct Trapframe *tf) {$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_setcolor	kern/monitor.h	/^int mon_setcolor(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_showPT	kern/monitor.c	/^int mon_showPT(int argc, char **argv, struct Trapframe *tf) {$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_showPT	kern/monitor.h	/^int mon_showPT(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_showmapping	kern/monitor.c	/^int mon_showmapping(int argc, char **argv, struct Trapframe *tf) $/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_showmapping	kern/monitor.h	/^int mon_showmapping(int argc, char **argv, struct Trapframe *tf); $/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_si	kern/monitor.c	/^int mon_si(int argc, char **argv, struct Trapframe *tf) {$/;"	f	signature:(int argc, char **argv, struct Trapframe *tf)
mon_si	kern/monitor.h	/^int mon_si(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
monitor	kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:	access:public
mp::imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:	access:public
mp::length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:	access:public
mp::physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
mp::reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
mp::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
mp::specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
mp::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
mp_init	kern/cpu.h	/^void mp_init(void);$/;"	p	signature:(void)
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f	signature:(void)
mp_main	kern/init.c	/^mp_main(void)$/;"	f	signature:(void)
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconf::checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:	access:public
mpconf::entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:	access:public
mpconf::entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:	access:public
mpconf::lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:	access:public
mpconf::length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
mpconf::oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
mpconf::product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
mpconf::reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
mpconf::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
mpconf::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
mpconf::xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
mpconf::xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:	signature:(struct mp **pmp)
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpproc::apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:	access:public
mpproc::feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:	access:public
mpproc::flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:	access:public
mpproc::reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
mpproc::signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
mpproc::type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
mpproc::version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:	signature:(void)
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:	signature:(physaddr_t a, int len)
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:	access:public
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP(nextfree, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/kern/kernel.asm	/^		now = (ENVX(curenv->env_id) + 1)% NENV;$/;"	d
now	obj/kern/kernel.asm	/^		now = 0;$/;"	d
now	obj/kern/kernel.asm	/^		now = pgdir_walk(env->env_pgdir, (void*)begin, 0);$/;"	d
now	obj/kern/kernel.asm	/^		now = pgdir_walk(pgdir, (void*)va, 1);$/;"	d
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:	signature:(int r)
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:	access:public
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:	access:public
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	71;"	d
os	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f	signature:(int alloc_flags)
page_alloc	kern/pmap.h	/^struct PageInfo *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f	signature:(struct PageInfo* pp)
page_decref	kern/pmap.h	/^void	page_decref(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
page_fault_handler	kern/trap.h	/^void page_fault_handler(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_free	kern/pmap.h	/^void	page_free(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f	signature:(void)
page_init	kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_insert	kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_lookup	kern/pmap.h	/^struct PageInfo *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
page_remove	kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo*) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f	signature:(pde_t *pgdir, const void *va, int create)
pgdir_walk	kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:	signature:(struct UTrapframe *utf)
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((uint8_t *) now + now->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:	access:public
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f	signature:(void)
pic_init	kern/picirq.h	/^void pic_init(void);$/;"	p	signature:(void)
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f	access:public
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f	access:public
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f	signature:(void)
printPermission	kern/monitor.c	/^void printPermission(pte_t now) {$/;"	f	signature:(pte_t now)
print_function	gradelib.py	/^from __future__ import print_function$/;"	i
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f	signature:(struct PushRegs *regs)
print_regs	kern/trap.h	/^void print_regs(struct PushRegs *regs);$/;"	p	signature:(struct PushRegs *regs)
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
print_trapframe	kern/trap.h	/^void print_trapframe(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printbuf::buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:	access:public
printbuf::cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:	access:public
printbuf::idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:	access:public
printf	inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printfmt	lib/printfmt.c	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	file:	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:	signature:(void (*putch)(int, void*), void *putdat, unsigned long long num, unsigned base, int width, int padc)
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:	access:public
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
ptdir	obj/kern/kernel.asm	/^			ptdir = (pte_t*) KADDR(page2pa(temp));$/;"	d
ptdir	obj/kern/kernel.asm	/^		ptdir = (pte_t*) KADDR(PTE_ADDR(pgdir[PDX(va)]));$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:	signature:(int ch, int *cnt)
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:	signature:(int ch, struct printbuf *b)
pxtoi	kern/monitor.c	/^bool pxtoi(uint32_t *va, char *origin) {$/;"	f	signature:(uint32_t *va, char *origin)
quote	gradelib.py	/^    from pipes import quote$/;"	i
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/kern/kernel.asm	/^			r = syscall(tf->tf_regs.reg_eax, tf->tf_regs.reg_edx, tf->tf_regs.reg_ecx, tf->tf_regs.reg_ebx, tf->tf_regs.reg_edi, tf->tf_regs.reg_esi);$/;"	d
r	obj/kern/kernel.asm	/^	r = envid2env(dstenvid , &e2 , 1);$/;"	d
r	obj/kern/kernel.asm	/^	r = envid2env(srcenvid, &e1, 1);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
re	grade-lab1	/^import re$/;"	i
re	grade-lab4	/^import re$/;"	i
re	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	inc/lib.h	/^char*	readline(const char *buf);$/;"	p	signature:(const char *buf)
readline	inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f	signature:(const char *prompt)
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f	signature:(void *dst, uint32_t offset)
readsect	boot/main.c	/^void readsect(void*, uint32_t);$/;"	p	file:	signature:(void*, uint32_t)
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f	signature:(uint32_t pa, uint32_t count, uint32_t offset)
readseg	boot/main.c	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	p	file:
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:	signature:(struct Env *e, void *va, size_t len)
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test	access:public
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
regs	user/faultregs.c	/^struct regs$/;"	s	file:
regs::eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:	access:public
regs::eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:	access:public
regs::esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:	access:public
regs::regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:	access:public
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:	access:public
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:	access:public
reset_fs	gradelib.py	/^def reset_fs():$/;"	f	access:public
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon5	file:	access:public
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner	access:public
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu	access:public
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test	access:public
run_tests	gradelib.py	/^def run_tests():$/;"	f	access:public
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:	signature:(char *buf, struct Trapframe *tf)
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f	access:public
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save	access:public
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f	signature:(void)
sched_halt	kern/sched.c	/^void sched_halt(void);$/;"	p	file:	signature:(void)
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f	signature:(void)
sched_yield	kern/sched.h	/^void sched_yield(void) __attribute__((noreturn));$/;"	p	signature:(void)
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
select	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:	signature:(void)
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f	signature:(void)
serial_intr	kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:	signature:(void)
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:	signature:(int c)
set_attribute_color	kern/console.c	/^void set_attribute_color(uint16_t back, uint16_t fore) {$/;"	f	signature:(uint16_t back, uint16_t fore)
set_attribute_color	kern/console.h	/^void set_attribute_color(uint16_t back, uint16_t fore);$/;"	p	signature:(uint16_t back, uint16_t fore)
set_pgfault_handler	inc/lib.h	/^void	set_pgfault_handler(void (*handler)(struct UTrapframe *utf));$/;"	p	signature:(void (*handler)(struct UTrapframe *utf))
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f	signature:(void (*handler)(struct UTrapframe *utf))
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint	access:public
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line	access:public
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save	access:public
sfork	inc/lib.h	/^envid_t	sfork(void);	\/\/ Challenge!$/;"	p	signature:(void)
sfork	lib/fork.c	/^sfork(void)$/;"	f	signature:(void)
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f	access:public
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part	access:public
shutil	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:	access:public
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:	access:public
size	obj/kern/kernel.asm	/^	size = ROUNDUP(pa+size, PGSIZE);$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f	signature:(char *buf, int n, const char *fmt, ...)
socket	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:	access:public
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_lock	kern/spinlock.h	/^void spin_lock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f	signature:(struct spinlock *lk)
spin_unlock	kern/spinlock.h	/^void spin_unlock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock::cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
spinlock::locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
spinlock::name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
spinlock::pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintbuf::buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:	access:public
sprintbuf::ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:	access:public
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:	signature:(int ch, struct sprintbuf *b)
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:	signature:(const struct Stab *stabs, int *region_left, int *region_right, int type, uintptr_t addr)
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:	access:public
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:	access:public
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:	access:public
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line	access:public
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f	access:public
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f	access:public
strcat	inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strchr	inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strcmp	inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f	signature:(const char *p, const char *q)
strcpy	inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f	signature:(char *dst, const char *src)
strfind	inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f	signature:(const char *s, char c)
strlcpy	inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f	signature:(char *dst, const char *src, size_t size)
strlen	inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strlen	lib/string.c	/^strlen(const char *s)$/;"	f	signature:(const char *s)
strncmp	inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f	signature:(const char *p, const char *q, size_t n)
strncpy	inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f	signature:(char *dst, const char *src, size_t size)
strnlen	inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f	signature:(const char *s, size_t size)
strtol	inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f	signature:(const char *s, char **endptr, int base)
subprocess	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:	signature:(void *addr, int len)
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sys_cgetc	inc/lib.h	/^int	sys_cgetc(void);$/;"	p	signature:(void)
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:	signature:(void)
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f	signature:(void)
sys_cputs	inc/lib.h	/^void	sys_cputs(const char *string, size_t len);$/;"	p	signature:(const char *string, size_t len)
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:	signature:(const char *s, size_t len)
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	signature:(const char *s, size_t len)
sys_env_destroy	inc/lib.h	/^int	sys_env_destroy(envid_t);$/;"	p	signature:(envid_t)
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:	signature:(envid_t envid)
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	signature:(envid_t envid)
sys_env_set_pgfault_upcall	inc/lib.h	/^int	sys_env_set_pgfault_upcall(envid_t env, void *upcall);$/;"	p	signature:(envid_t env, void *upcall)
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:	signature:(envid_t envid, void *func)
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f	signature:(envid_t envid, void *upcall)
sys_env_set_status	inc/lib.h	/^int	sys_env_set_status(envid_t env, int status);$/;"	p	signature:(envid_t env, int status)
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:	signature:(envid_t envid, int status)
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	signature:(envid_t envid, int status)
sys_exofork	inc/lib.h	/^static envid_t sys_exofork(void);$/;"	p	signature:(void)
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f	signature:(void)
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:	signature:(void)
sys_getenvid	inc/lib.h	/^envid_t	sys_getenvid(void);$/;"	p	signature:(void)
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:	signature:(void)
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f	signature:(void)
sys_ipc_recv	inc/lib.h	/^int	sys_ipc_recv(void *rcv_pg);$/;"	p	signature:(void *rcv_pg)
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:	signature:(void *dstva)
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	signature:(void *dstva)
sys_ipc_try_send	inc/lib.h	/^int	sys_ipc_try_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:	signature:(envid_t envid, uint32_t value, void *srcva, unsigned perm)
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f	signature:(envid_t envid, uint32_t value, void *srcva, int perm)
sys_page_alloc	inc/lib.h	/^int	sys_page_alloc(envid_t env, void *pg, int perm);$/;"	p	signature:(envid_t env, void *pg, int perm)
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:	signature:(envid_t envid, void *va, int perm)
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	signature:(envid_t envid, void *va, int perm)
sys_page_map	inc/lib.h	/^int	sys_page_map(envid_t src_env, void *src_pg,$/;"	p	signature:(envid_t src_env, void *src_pg, envid_t dst_env, void *dst_pg, int perm)
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:	signature:(envid_t srcenvid, void *srcva, envid_t dstenvid, void *dstva, int perm)
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f	signature:(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)
sys_page_unmap	inc/lib.h	/^int	sys_page_unmap(envid_t env, void *pg);$/;"	p	signature:(envid_t env, void *pg)
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:	signature:(envid_t envid, void *va)
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	signature:(envid_t envid, void *va)
sys_yield	inc/lib.h	/^void	sys_yield(void);$/;"	p	signature:(void)
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:	signature:(void)
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f	signature:(void)
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	signature:(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	kern/syscall.h	/^int32_t syscall(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5);$/;"	p	signature:(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:	signature:(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f	access:public
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f	access:public
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f	access:public
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f	access:public
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f	access:public
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f	access:public
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f	access:public
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f	access:public
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f	access:public
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f	access:public
test_check_page	grade-lab2	/^def test_check_page():$/;"	f	access:public
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f	access:public
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f	access:public
test_divzero	grade-lab3	/^def test_divzero():$/;"	f	access:public
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f	access:public
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f	access:public
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f	access:public
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f	access:public
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f	access:public
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f	access:public
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f	access:public
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f	access:public
test_faultread	grade-lab3	/^def test_faultread():$/;"	f	access:public
test_faultread	grade-lab4	/^def test_faultread():$/;"	f	access:public
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f	access:public
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f	access:public
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f	access:public
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f	access:public
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f	access:public
test_forktree	grade-lab4	/^def test_forktree():$/;"	f	access:public
test_hello	grade-lab3	/^def test_hello():$/;"	f	access:public
test_jos	grade-lab1	/^def test_jos():$/;"	f	access:public
test_jos	grade-lab2	/^def test_jos():$/;"	f	access:public
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f	access:public
test_primes	grade-lab4	/^def test_primes():$/;"	f	access:public
test_printf	grade-lab1	/^def test_printf():$/;"	f	access:public
test_softint	grade-lab3	/^def test_softint():$/;"	f	access:public
test_spin	grade-lab4	/^def test_spin():$/;"	f	access:public
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f	access:public
test_testbss	grade-lab3	/^def test_testbss():$/;"	f	access:public
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = envs + ENVX(sys_getenvid());$/;"	d
time	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f	signature:(pde_t *pgdir, void *va)
tlb_invalidate	kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f	signature:(struct Trapframe *tf)
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:	signature:(struct Trapframe *tf)
trap_init	kern/trap.c	/^trap_init(void)$/;"	f	signature:(void)
trap_init	kern/trap.h	/^void trap_init(void);$/;"	p	signature:(void)
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f	signature:(void)
trap_init_percpu	kern/trap.h	/^void trap_init_percpu(void);$/;"	p	signature:(void)
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:	signature:(int trapno)
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:	access:public
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:	access:public
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/kern/kernel.asm	/^uint32_t xtoi(char* origin, bool* check) {$/;"	l
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	inc/lib.h	/^void	umain(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
umain	lib/libmain.c	/^extern void umain(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f	signature:(void)
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_assert	kern/pmap.h	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	kern/pmap.h	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = begin; return -E_FAULT;$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = begin;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner	access:public
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f	signature:(const char *fmt, va_list ap)
vectors	kern/trapentry.S	/^vectors:$/;"	l
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:	access:public
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:	access:public
vfprintf	inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printPermission(pte_t now) {$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void set_attribute_color(uint16_t back, uint16_t fore) {$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)
vsnprintf	inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f	signature:(char *buf, int n, const char *fmt, va_list ap)
wait	gradelib.py	/^    def wait(self):$/;"	f	access:public
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f	signature:(void)
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon5	file:	access:public
write_eflags	inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:	access:public
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:	access:public
xtoi	kern/monitor.c	/^uint32_t xtoi(char* origin, bool* check) {$/;"	f	signature:(char* origin, bool* check)
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
